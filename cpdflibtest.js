cpdf = require('./cpdf');
cpdfjs = require('./cpdflibwrapper');

/* CHAPTER 0. Preliminaries */
console.log("***** CHAPTER 0. Preliminaries");
console.log("---cpdf_startup()");
console.log("---cpdf_version()");
console.log("version = %s", cpdfjs.version());
console.log("---cpdf_setFast()");
cpdfjs.setFast();
console.log("---cpdf_setSlow()");
cpdfjs.setSlow();
console.log("---cpdf_clearError()");

/* CHAPTER 1. Basics */
console.log("***** CHAPTER 1. Basics");
console.log("---cpdf_fromFile()");
var pdf = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
console.log("---cpdf_fromFileLazy()");
var pdf2 = cpdfjs.fromFileLazy("testinputs/cpdflibmanual.pdf", "");
console.log("---cpdf_toMemory()");
var mempdf = cpdfjs.toMemory(pdf, false, false);
/*console.log("---cpdf_fromMemory()");
var frommem = cpdfjs.fromMemory(mempdf, "");
cpdfjs.toFile(frommem, "testoutputs/01fromMemory.pdf", false, false);
console.log("---cpdf_fromMemoryLazy()");
var frommemlazy = cpdfjs.fromMemoryLazy(mempdf, "");
cpdfjs.toFile(frommemlazy, "testoutputs/01fromMemoryLazy.pdf", false, false);*/
var pdf3 = cpdfjs.blankDocument(153.5, 234.2, 50);
var pdf4 = cpdfjs.blankDocumentPaper(cpdfjs.a4landscape, 50);
console.log("---cpdf: enumerate PDFs");
var n = cpdfjs.startEnumeratePDFs();
for (x = 0; x < n; x++)
{
    var key = cpdfjs.enumeratePDFsKey(x);
    var info = cpdfjs.enumeratePDFsInfo(x);
}
cpdfjs.endEnumeratePDFs();
console.log("---cpdf_ptOfIn()");
console.log("One inch is %f points", cpdfjs.ptOfIn(1.0));
console.log("---cpdf_ptOfCm()");
console.log("One centimetre is %f points", cpdfjs.ptOfCm(1.0));
console.log("---cpdf_ptOfMm()");
console.log("One millimetre is %f points", cpdfjs.ptOfMm(1.0));
console.log("---cpdf_inOfPt()");
console.log("One point is %f inches", cpdfjs.inOfPt(1.0));
console.log("---cpdf_cmOfPt()");
console.log("One point is %f centimetres", cpdfjs.cmOfPt(1.0));
console.log("---cpdf_mmOfPt()");
console.log("One point is %f millimetres", cpdfjs.mmOfPt(1.0));
console.log("---cpdf_range()");
var range = cpdfjs.range(1, 10);
console.log("---cpdf_all()");
var all = cpdfjs.all(pdf3);
console.log("---cpdf_even()");
var even = cpdfjs.even(all);
console.log("---cpdf_odd()");
var odd = cpdfjs.odd(all);
console.log("---cpdf_rangeUnion()");
var union = cpdfjs.rangeUnion(even, odd);
console.log("---cpdf_difference()");
var diff = cpdfjs.difference(even, odd);
console.log("---cpdf_removeDuplicates()");
var revdup = cpdfjs.removeDuplicates(even);
console.log("---cpdf_rangeLength()");
var length = cpdfjs.rangeLength(even);
console.log("---cpdf_rangeGet()");
var rangeget = cpdfjs.rangeGet(even, 1);
console.log("---cpdf_rangeAdd()");
var rangeadd = cpdfjs.rangeAdd(even, 20);
console.log("---cpdf_isInRange()");
var isin = cpdfjs.isInRange(even, 2);
console.log("---cpdf_parsePagespec()");
var r = cpdfjs.parsePagespec(pdf3, "1-5");
console.log("---cpdf_validatePagespec()");
var valid = cpdfjs.validatePagespec("1-4,5,6");
console.log("Validating pagespec gives %d", valid ? 1 : 0);
console.log("---cpdf_stringOfPagespec()");
var ps = cpdfjs.stringOfPagespec(pdf3, r);
console.log("String of pagespec is %s", ps);
console.log("---cpdf_blankRange()");
var b = cpdfjs.blankRange();
pdf10 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
console.log("---cpdf_pages()");
var pages = cpdfjs.pages(pdf10);
console.log("Pages = %i", pages);
console.log("---cpdf_pagesFast()");
var pagesfast = cpdfjs.pagesFast("", "testinputs/cpdflibmanual.pdf");
console.log("Pages = %i", pagesfast);
console.log("---cpdf_toFile()");
cpdfjs.toFile(pdf10, "testoutputs/01tofile.pdf", false, false);
console.log("---cpdf_toFileExt()");
cpdfjs.toFileExt(pdf10, "testoutputs/01tofileext.pdf", false, true, true, true, true);
console.log("---cpdf_isEncrypted()");
var isenc = cpdfjs.isEncrypted(pdf10);
console.log("isencrypted:%i", isenc ? 1 : 0);
console.log("---cpdf_isLinearized()");
var lin = cpdfjs.isLinearized("testinputs/cpdfmanual.pdf");
console.log("islinearized:%i", lin ? 1 : 0);
var pdf400 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var pdf401 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var permissions = [cpdfjs.noEdit];
console.log(permissions.length);
console.log("---cpdf_toFileEncrypted()");
cpdfjs.toFileEncrypted(pdf400, cpdfjs.pdf40bit, permissions, "owner", "user", false, false, "testoutputs/01encrypted.pdf");
console.log("---cpdf_toFileEncryptedExt()");
cpdfjs.toFileEncryptedExt(pdf401, cpdfjs.pdf40bit, permissions, "owner", "user", false, false, true, true, true, "testoutputs/01encryptedext.pdf");
console.log("---cpdf_hasPermission()");
var pdfenc = cpdfjs.fromFile("testoutputs/01encrypted.pdf", "user");
var hasnoedit = cpdfjs.hasPermission(pdfenc, cpdfjs.noEdit);
var hasnocopy = cpdfjs.hasPermission(pdfenc, cpdfjs.noCopy);
console.log("Haspermission %d, %d", hasnoedit ? 1 : 0, hasnocopy ? 1 : 0);
console.log("---cpdf_encryptionKind()");
var enckind = cpdfjs.encryptionKind(pdfenc);
console.log("encryption kind is %d", enckind);
console.log("---cpdf_decryptPdf()");
cpdfjs.decryptPdf(pdf10, "");
console.log("---cpdf_decryptPdfOwner()");
cpdfjs.decryptPdfOwner(pdf10, "");

/* CHAPTER 2. Merging and Splitting */
console.log("***** CHAPTER 2. Merging and Splitting");
var pdf11 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var selectrange = cpdfjs.range(1, 3);
console.log("---cpdf_mergeSimple()");
var arr = [pdf11, pdf11, pdf11];
var merged = cpdfjs.mergeSimple(arr);
cpdfjs.toFile(merged, "testoutputs/02merged.pdf", false, true);
console.log("---cpdf_merge()");
var merged2 = cpdfjs.merge(arr, false, false);
cpdfjs.toFile(merged2, "testoutputs/02merged2.pdf", false, true);
console.log("---cpdf_mergeSame()");
var all = cpdfjs.all(pdf11);
var ranges = [all, all, all];
var merged3 = cpdfjs.mergeSame(arr, false, false, ranges);
cpdfjs.toFile(merged3, "testoutputs/02merged3.pdf", false, false);
console.log("---cpdf_selectPages()");
var pdf12 = cpdfjs.selectPages(pdf11, selectrange);
cpdfjs.toFile(pdf12, "testoutputs/02selected.pdf", false, false);

/* CHAPTER 3. Pages */
console.log("***** CHAPTER 3. Pages");
var pagespdf1 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var r1 = cpdfjs.all(pagespdf1);
var pagespdf2 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var r2 = cpdfjs.all(pagespdf2);
var pagespdf3 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var r3 = cpdfjs.all(pagespdf3);
var pagespdf4 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var r4 = cpdfjs.all(pagespdf4);
var pagespdf5 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var r5 = cpdfjs.all(pagespdf5);
var pagespdf6 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var r6 = cpdfjs.all(pagespdf6);
var pagespdf7 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var r7 = cpdfjs.all(pagespdf7);
var pagespdf8 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var r8 = cpdfjs.all(pagespdf8);
var pagespdf9 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var r9 = cpdfjs.all(pagespdf9);
var pagespdf10 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var r10 = cpdfjs.all(pagespdf10);
var pagespdf11 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var r11 = cpdfjs.all(pagespdf11);
var pagespdf12 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var r12 = cpdfjs.all(pagespdf12);
var pagespdf13 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var r13 = cpdfjs.all(pagespdf13);
var pagespdf14 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var r14 = cpdfjs.all(pagespdf14);
var pagespdf15 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var r15 = cpdfjs.all(pagespdf15);
var pagespdf16 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var r16 = cpdfjs.all(pagespdf16);
var pagespdf17 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var r17 = cpdfjs.all(pagespdf17);
var pagespdf18 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var r18 = cpdfjs.all(pagespdf18);
var pagespdf19 = cpdfjs.fromFile("testinputs/cpdflibmanual.pdf", "");
var r19 = cpdfjs.all(pagespdf19);
console.log("---cpdf_scalePages()");
cpdfjs.scalePages(pagespdf1, r1, 1.5, 1.8);
cpdfjs.toFile(pagespdf1, "testoutputs/03scalepages.pdf", false, false);
console.log("---cpdf_scaleToFit()");
cpdfjs.scaleToFit(pagespdf2, r2, 1.5, 1.8, 0.9);
cpdfjs.toFile(pagespdf2, "testoutputs/03scaletofit.pdf", false, false);
console.log("---cpdf_scaleToFitPaper()");
cpdfjs.scaleToFitPaper(pagespdf3, r3, cpdfjs.a4portrait, 0.8);
cpdfjs.toFile(pagespdf3, "testoutputs/03scaletofitpaper.pdf", false, false);
console.log("---cpdf_scaleContents()");
cpdfjs.scaleContents(pagespdf4, r4, cpdfjs.topLeft, 20.0, 20.0, 2.0);
cpdfjs.toFile(pagespdf4, "testoutputs/03scalecontents.pdf", false, false);
console.log("---cpdf_shiftContents()");
cpdfjs.shiftContents(pagespdf5, r5, 1.5, 1.25);
cpdfjs.toFile(pagespdf5, "testoutputs/03shiftcontents.pdf", false, false);
console.log("---cpdf_rotate()");
cpdfjs.rotate(pagespdf6, r6, 90);
cpdfjs.toFile(pagespdf6, "testoutputs/03rotate.pdf", false, false);
console.log("---cpdf_rotateBy()");
cpdfjs.rotateBy(pagespdf7, r7, 90);
cpdfjs.toFile(pagespdf7, "testoutputs/03rotateby.pdf", false, false);
console.log("---cpdf_rotateContents()");
cpdfjs.rotateContents(pagespdf8, r8, 35.0);
cpdfjs.toFile(pagespdf8, "testoutputs/03rotatecontents.pdf", false, false);
console.log("---cpdf_upright()");
cpdfjs.upright(pagespdf9, r9);
cpdfjs.toFile(pagespdf9, "testoutputs/03upright.pdf", false, false);
console.log("---cpdf_hFlip()");
cpdfjs.hFlip(pagespdf10, r10);
cpdfjs.toFile(pagespdf10, "testoutputs/03hflip.pdf", false, false);
console.log("---cpdf_vFlip()");
cpdfjs.vFlip(pagespdf11, r11);
cpdfjs.toFile(pagespdf11, "testoutputs/03vflip.pdf", false, false);
console.log("---cpdf_crop()");
cpdfjs.crop(pagespdf12, r12, 0.0, 0.0, 400.0, 500.0);
cpdfjs.toFile(pagespdf12, "testoutputs/03crop.pdf", false, false);
console.log("---cpdf_trimMarks()");
cpdfjs.trimMarks(pagespdf13, r13);
cpdfjs.toFile(pagespdf13, "testoutputs/03trim_marks.pdf", false, false);
console.log("---cpdf_showBoxes()");
cpdfjs.showBoxes(pagespdf14, r14);
cpdfjs.toFile(pagespdf14, "testoutputs/03show_boxes.pdf", false, false);
console.log("---cpdf_hardBox()");
cpdfjs.hardBox(pagespdf15, r15, "/MediaBox");
cpdfjs.toFile(pagespdf15, "testoutputs/03hard_box.pdf", false, false);
console.log("---cpdf_removeCrop()");
cpdfjs.removeCrop(pagespdf16, r16);
cpdfjs.toFile(pagespdf16, "testoutputs/03remove_crop.pdf", false, false);
console.log("---cpdf_removeTrim()");
cpdfjs.removeTrim(pagespdf17, r17);
cpdfjs.toFile(pagespdf17, "testoutputs/03remove_trim.pdf", false, false);
console.log("---cpdf_removeArt()");
cpdfjs.removeArt(pagespdf18, r18);
cpdfjs.toFile(pagespdf18, "testoutputs/03remove_art.pdf", false, false);
console.log("---cpdf_removeBleed()");
cpdfjs.removeBleed(pagespdf19, r19);
cpdfjs.toFile(pagespdf19, "testoutputs/03remove_bleed.pdf", false, false);
