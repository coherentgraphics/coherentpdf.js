(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.coherentpdf = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
(function (Buffer){(function (){
// Generated by js_of_ocaml 4.0.0
(function(a){typeof
globalThis!=="object"&&(this?b():(a.defineProperty(a.prototype,"_T_",{configurable:true,get:b}),_T_));function
b(){var
b=this||self;b.globalThis=b;delete
a.prototype._T_}}(Object));(function(b){var
a=b;a.cpdf_zlib=require("zlib");a.cpdf_crypto=require("crypto");a.cpdf_sjcl=require("./sjcl.js")}(globalThis));(function(W){"use strict";var
a8$=typeof
module==="object"&&module.exports||W,At=83809507,Ll="/RunLengthDecode",pv="/Oslash",yR="addContent",c3=192,NA=319,yQ="add",Lk=289,dQ=365180284,PL="/scaron",IV="EMFILE",Nz="noHqPrint",yP="textToPDFMemory",IU="leftJustify",qr="/h",Lj="cpdfutil.ml",pu="/asciicircum",eK=72.,PJ=2147483645,ru="sc",PK="setAuthorXMP",eP=163,Li="Pdfflate.Error",Lh="title",dy="/Encrypt",pt="/numbersign",b5=122,oD="PMAXY",As="upright",Ny=299,PI=2304,IT="/AHx",gS=181,ps="/bullet",Nx="EACCES",Ar="endstream",Lg=305,rt="Tm",N=128,Aq="difference",Ap="/twosuperior",qq="/z",d8="/U",Lf=45.,Nw="<hov2>",vL="stampExtended",Le="timesBold",yO="ptOfIn",iy=146,hP=719944127,lz=">",Nv=148.,Ao="squeezeInMemory",j5=153,PH=1027,w8=297,jG="/OCGs",qp="/acute",Nu="EINPROGRESS",lJ="BDC",PG="/ViewerPreferences",vK="/Ucircumflex",vJ="combinePages",Nt="/Flags",pr="/daggerdbl",An="fromJSON",vI="enumeratePDFsInfo",w7=1536,PF=295,ix="/Trapped",Ns="/Gamma",ly="DP",yN="/Ecircumflex",PE="/Ascent",Am="e",vH="N",Ld=313,Nq=896,Nr="/FontFile",Al="False",IS="endGetOCGList",PD="Q Deficit was nonzero. Fixing. %i\n%!",rs="/yen",IQ="numberFonts",IR="/Scaron",Np="UseThumbs",PC="\nendobj\n",dr="/A",Ak="/Agrave",vG=-43,IO="squeeze_form_xobject",IP=612,Lc="Bad Op_gs",w6="getProducerXMP",PB="EROFS",Lb="getPageLabelStyle",yM="setMetadataFromByteArray",No="/yacute",PA="twoPageRight",vF="getCropBox",yL="a3landscape",rr="/AE",yK="attachFileToPageFromMemory",Nn="EPIPE",IN=306,ea="/Contents",rq=100.,dq=111,d7=180,pq="setAuthor",qo="/B",IL="Keywords",IM="/CPDFJSONmajorpdfversion",Nm=269,IK="ENOLCK",IJ=-100.,oC="/questiondown",gR=229,II="ERANGE",Pz="/FontMatrix",d_="@])",Aj="scaleToFit",qn="b*",vE="\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\0\0\xff\xff\x03\0\0\0\x86\0\xff\xff\x03\0\xff\xff\x86\0E\x01\x92\x019\0\xff\xffE\x01\x92\x01\xff\xff\xff\xff\xff\xff\xff\xff}\0\x8a\0\xff\xff\0\0\xff\xff\0\0\x03\0\xa9\0\x86\0\xae\0\xff\xff\0\0\n\x01E\x01\x92\x01\f\x01\0\0\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x05\0s\0\0\0}\0\x81\0\x05\0\xec\x01\x88\0\xff\x01&\0\xff\xff\n\0\x88\0f\0:\0\0\0k\0f\0\xff\xff\x0b\0\0\0\x0b\0\x0b\0\x0b\0\x0b\0\x0b\0\x0b\0\x0b\0\x0b\0\x0b\0\x0b\0\x1d\0&\0\0\0o\0\xd0\0\xe9\0\xff\0\f\x01\x0f\0\x11\0<\0\x0b\0\n\0\0\0\x14\0\x18\0\x1f\0 \0\"\0\x16\0\x1a\0\0\0\x0e\0\x1b\0!\0\x12\0\x17\0\0\0\x10\0\x13\0#\0(\0$\0&\0\0\0)\0*\0+\0,\0-\0.\0:\0R\0\x0b\0\r\0\r\0\r\0\r\0\r\0\r\0\r\0\r\0\r\0\r\0'\0?\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0U\0\x8c\0<\0\r\0\x8f\0\x90\0\x91\x000\0\x93\x000\0\x94\0'\x000\x000\x000\x000\x000\x000\x000\x000\x000\x000\x001\x001\x001\x001\x001\x001\x001\x001\x001\x001\x002\x002\x002\x002\x002\x002\x002\x002\x002\x002\0A\0'\0\x95\0\x96\0\x9c\0?\0\x9d\x003\0\x9e\x003\0\x9f\x002\x003\x003\x003\x003\x003\x003\x003\x003\x003\x003\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\x005\x005\x005\x005\x005\x005\x005\x005\x005\x005\0\x9b\x002\x006\x006\x006\x006\x006\x006\x006\x006\x006\x006\0\xa1\0\xa2\0\x9b\0[\0A\0\0\x007\x007\x007\x007\x007\x007\x007\x007\x007\x007\x009\0D\0f\0k\0s\0\x83\0\x85\0\x85\0}\0\x8a\0\x85\0\xa3\0^\0\xa5\0D\0\xa6\0\xa7\0\xa8\0\xab\0o\0\xac\0\xad\0\xce\0\xcb\0\xcf\0\xd2\0\xd3\0:\0R\0\x85\0\xd4\0\xd5\0\xd6\0\xd7\0\xd9\0\x8c\0\xda\0a\0\xdb\0\xdc\0w\0\xdd\0\xde\0\xdf\0\x85\0[\0\xcb\0\"\x01>\x01\xe9\0\x98\0\x01\x01P\x01\xf7\0<\0\xfb\x006\x01:\x01Q\x01D\0)\x01R\x01S\x01\x06\x01\x1a\x01D\0w\0\x1e\x01\x0f\x01D\0^\0\x0f\x01T\x01U\x01V\x01G\x01X\x01D\0\xcb\x002\x01G\x01D\0Y\x01D\0D\0G\0G\0G\0G\0G\0G\0G\0G\0G\0G\0a\0L\x01w\0Z\x01?\0\x01\x01\\\x01G\0G\0G\0G\0G\0G\0N\0N\0N\0N\0N\0N\0N\0N\0N\0N\0\x98\0L\x01]\x01_\x01a\x01b\x01-\x01N\0N\0N\0N\0N\0N\0c\x01\x98\0d\x01G\0G\0G\0G\0G\0G\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\xb4\0\x14\x01L\x01A\0\x14\x01e\x01f\x01h\x01N\0N\0N\0N\0N\0N\0O\0O\0O\0O\0O\0O\0O\0O\0O\0O\0i\x01j\x01-\x01$\x01k\x01l\x01m\x01O\0O\0O\0O\0O\0O\0P\0P\0P\0P\0P\0P\0P\0P\0P\0P\0n\x01\x1a\x01y\x01\x9d\x01\x1e\x01\x9e\x01\x14\x01P\0P\0P\0P\0P\0P\0[\0\x9f\x01>\x01O\0O\0O\0O\0O\0O\0\xf7\0\xa0\x01\xfb\0\xa1\x01:\x01D\0V\0V\0V\0V\0V\0V\0V\0V\0V\0V\0^\0P\0P\0P\0P\0P\0P\0V\0V\0V\0V\0V\0V\0W\0W\0W\0W\0W\0W\0W\0W\0W\0W\0$\x01)\x01a\0\xa2\x01\xa3\x01w\0\x01\x01W\0W\0W\0W\0W\0W\0\xa5\x016\x01\x98\0V\0V\0V\0V\0V\0V\0\x06\x01\xa6\x01\xa7\x01\xa8\x01\x0f\x01\xa9\x01X\0X\0X\0X\0X\0X\0X\0X\0X\0X\x002\x01W\0W\0W\0W\0W\0W\0X\0X\0X\0X\0X\0X\0Y\0Y\0Y\0Y\0Y\0Y\0Y\0Y\0Y\0Y\0_\0\x85\x01\xaa\x01\xab\x01\x9a\x01\x85\x01\xac\x01Y\0Y\0Y\0Y\0Y\0Y\0_\0\xb0\0\xad\x01X\0X\0X\0X\0X\0X\0-\x01\xae\x01\xaf\x01\xb0\0\xb0\x01\x9a\x01\xb0\0\xb0\0\xb0\0\xb0\0\xb0\0\xb0\0\xb0\0\xb0\0\xb0\0\xb0\0z\x01Y\0Y\0Y\0Y\0Y\0Y\0\x94\x01\xb1\x01\x14\x01\xb2\x01b\0\x94\x01\xb3\x01\xb4\x01\xb5\x01\xb6\x01\xb7\x01\xd8\x01\xc1\x01_\0\x9a\x01\xd8\x01\xcd\x01b\0\xde\x01_\0\xcd\x01\xe5\x01\x01\x02_\0\xda\x01$\x01\xd7\x01\xd7\x01\x02\x02\xda\x01\xd7\x01_\0\x04\x02\x05\x02\xd8\x01_\0\x06\x02_\0_\0`\0`\0`\0`\0`\0`\0`\0`\0`\0`\0\xd7\x01\x07\x02z\x01\b\x02\t\x02\n\x02\x0b\x02`\0`\0`\0`\0`\0`\0b\0\f\x02\xd7\x01\xf7\x01\r\x02\x0e\x02b\0\x0f\x02}\x01\x80\x01b\0\x10\x02\xdc\x01\x11\x02\xfb\x01\x12\x02\x13\x02\x14\x02b\0y\x01\x15\x02\xc2\x01b\0\x16\x02b\0b\0`\0`\0`\0`\0`\0`\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0\xe7\x01\x17\x02\xee\x01\x18\x02\xfb\x01\xee\x01\x19\x02c\0c\0c\0c\0c\0c\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0\xf3\x01}\x01\x80\x01\xe0\x01\x1a\x02\xc5\x01\x1b\x02d\0d\0d\0d\0d\0d\0\x1c\x02\xc2\x01\x1d\x02c\0c\0c\0c\0c\0c\0\x1e\x02\x1f\x02 \x02\xc8\x01\xe7\x01\x85\x01e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0\xff\xffd\0d\0d\0d\0d\0d\0e\0e\0e\0e\0e\0e\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xff\xff\xff\xff\xc5\x01\xb0\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb9\0\xff\xffe\0e\0e\0e\0e\0e\0\xc8\x01\xe0\x01\xff\xff\xb9\0\xcd\x01z\x01\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xb9\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbf\0\xbf\0\xbf\0\xbf\0\xbf\0\xbf\0\xbf\0\xbf\0\xbf\0\xbf\0\xc0\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc0\0\xc1\x01\xf7\x01\xc0\0\xc0\0\xc0\0\xc0\0\xc0\0\xc0\0\xc0\0\xc0\0\xc0\0\xc0\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc6\0\xc7\0\xe2\0\xe2\0\xe2\0\xe2\0\xe2\0\xe2\0\xe2\0\xe2\0\xe2\0\xe2\0\xc7\0}\x01\x80\x01\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xc7\0\xcc\0\xc2\x01\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xe7\x01\xff\xff\xff\xff\xc7\0\xdc\x01\xee\x01\xfb\x01\xff\xff\xc7\0\xf3\x01\xff\xff\xcc\0\xcd\0\xcd\0\xcd\0\xcd\0\xcd\0\xcd\0\xcd\0\xcd\0\xcd\0\xcd\0\xe1\0\xff\xff\xe1\0\xff\xff\xe0\x01\xe1\0\xe1\0\xe1\0\xe1\0\xe1\0\xe1\0\xe1\0\xe1\0\xe1\0\xe1\0\xcd\0\xc5\x01\xff\xff\xff\xff\xff\xff\xff\xff\xcc\0\xe3\0\xe3\0\xe3\0\xe3\0\xe3\0\xe3\0\xe3\0\xe3\0\xe3\0\xe3\0\xff\xff\xff\xff\xff\xff\xff\xff\xc8\x01\xff\xff\xff\xff\xe4\0\xff\xff\xe4\0\xff\xff\xe3\0\xe4\0\xe4\0\xe4\0\xe4\0\xe4\0\xe4\0\xe4\0\xe4\0\xe4\0\xe4\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe6\0\xe6\0\xe6\0\xe6\0\xe6\0\xe6\0\xe6\0\xe6\0\xe6\0\xe6\0\xff\xff\xe3\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xb9\0\xe8\0\xe8\0\xe8\0\xe8\0\xe8\0\xe8\0\xe8\0\xe8\0\xe8\0\xe8\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xed\0\xff\xffM\x01\xff\xffM\x01M\x01M\x01M\x01M\x01M\x01M\x01M\x01M\x01M\x01q\x01q\x01q\x01q\x01q\x01q\x01q\x01q\x01q\x01q\x01\xff\xffM\x01\xff\xff\xff\xff\xc0\0\xff\xff\xff\xff\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0M\x01\xff\xff\xff\xff\xff\xff\xed\0\xc7\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xed\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xff\xff\xf2\0\xff\xff\xff\xff\xf0\0\xff\xff\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xff\xff\xff\xff\xff\xff\xff\xff\xf2\0\xff\xff\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xf2\0\xed\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xff\xff\xff\xff\xff\xff\xff\xff\xf5\0\xff\xff\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0B\x01B\x01\xff\xff\xff\xffB\x01O\x01O\x01O\x01O\x01O\x01O\x01O\x01O\x01O\x01O\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffB\x01\xff\xffB\x01\xff\xff\xff\xff\xff\xff\xff\xffO\x01B\x01\xff\xff\xff\xff\xff\xff\xff\xffB\x01\xff\xffB\x01B\x01B\x01B\x01B\x01B\x01B\x01B\x01B\x01B\x01B\x01\xff\xff\xff\xffB\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xf2\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffB\x01p\x01\xff\xffp\x01\xff\xffB\x01p\x01p\x01p\x01p\x01p\x01p\x01p\x01p\x01p\x01p\x01\xff\xff\xff\xffB\x01r\x01r\x01r\x01r\x01r\x01r\x01r\x01r\x01r\x01r\x01B\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffB\x01\xff\xff\xff\xffr\x01\xff\xff\xff\xffB\x01\xff\xff\xff\xffs\x01\xff\xffs\x01\xff\xffB\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01s\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01\xff\xffr\x01u\x01u\x01u\x01u\x01u\x01u\x01u\x01u\x01u\x01u\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01w\x01w\x01w\x01w\x01w\x01w\x01w\x01w\x01w\x01w\x01\xff\xff~\x01\x7f\x01\x7f\x01\x7f\x01\x7f\x01\x7f\x01\x7f\x01\x7f\x01\x7f\x01\x7f\x01\x7f\x01\xff\xff\xff\xff~\x01\xff\xff\xff\xff\xff\xff\x81\x01\x7f\x01\x7f\x01\x7f\x01\x7f\x01\x7f\x01\x7f\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x81\x01\xff\xff\xff\xff\x9b\x01\xff\xff\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x7f\x01\x7f\x01\x7f\x01\x7f\x01\x7f\x01\x7f\x01\x9b\x01\xff\xff~\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff~\x01\xff\xff\xff\xff\xff\xff~\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x81\x01~\x01\xff\xff\xff\xffB\x01~\x01\x81\x01~\x01~\x01\xff\xff\x81\x01\xff\xff\xff\xff\x9b\x01\xff\xff\xff\xff\xff\xff\xff\xff\x81\x01\xff\xff\xff\xff\xff\xff\x81\x01\xff\xff\x81\x01\x81\x01\x82\x01\x82\x01\x82\x01\x82\x01\x82\x01\x82\x01\x82\x01\x82\x01\x82\x01\x82\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x82\x01\x82\x01\x82\x01\x82\x01\x82\x01\x82\x01\x83\x01\x83\x01\x83\x01\x83\x01\x83\x01\x83\x01\x83\x01\x83\x01\x83\x01\x83\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x83\x01\x83\x01\x83\x01\x83\x01\x83\x01\x83\x01\xff\xff\xff\xff\xff\xff\x82\x01\x82\x01\x82\x01\x82\x01\x82\x01\x82\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x84\x01\x84\x01\x84\x01\x84\x01\x84\x01\x84\x01\x84\x01\x84\x01\x84\x01\x84\x01\xff\xff\x83\x01\x83\x01\x83\x01\x83\x01\x83\x01\x83\x01\x84\x01\x84\x01\x84\x01\x84\x01\x84\x01\x84\x01\xb8\x01\x8a\x01\xb8\x01\xff\xff\xff\xff\xb8\x01\xb8\x01\xb8\x01\xb8\x01\xb8\x01\xb8\x01\xb8\x01\xb8\x01\xb8\x01\xb8\x01\xb9\x01\xb9\x01\xb9\x01\xb9\x01\xb9\x01\xb9\x01\xb9\x01\xb9\x01\xb9\x01\xb9\x01\xff\xff\x84\x01\x84\x01\x84\x01\x84\x01\x84\x01\x84\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\xff\xff\xff\xff\xff\xff\xff\xff\x8a\x01\xff\xff\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8a\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\xff\xff\xff\xff\xff\xff\xff\xff\x8d\x01\xff\xff\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8f\x01\x8f\x01\xff\xff\xff\xff\x8f\x01\x9c\x01\x9c\x01\x9c\x01\x9c\x01\x9c\x01\x9c\x01\x9c\x01\x9c\x01\x9c\x01\x9c\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xc6\x01\x8f\x01\xff\xff\x8f\x01\xff\xff\xff\xff\xff\xff\xff\xff\x9c\x01\x8f\x01\xff\xff\xff\xff\xff\xff\xc6\x01\x8f\x01\xff\xff\x8f\x01\x8f\x01\x8f\x01\x8f\x01\x8f\x01\x8f\x01\x8f\x01\x8f\x01\x8f\x01\x8f\x01\x8f\x01\xff\xff\xff\xff\x8f\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x8a\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x8f\x01\xff\xff\xff\xff\xff\xff\xff\xff\x8f\x01\xba\x01\xba\x01\xba\x01\xba\x01\xba\x01\xba\x01\xba\x01\xba\x01\xba\x01\xba\x01\xc6\x01\xff\xff\x8f\x01\xff\xff\xff\xff\xff\xff\xc6\x01\xff\xff\xff\xff\xff\xff\xc6\x01\xba\x01\xff\xff\x8f\x01\xff\xff\xff\xff\xff\xff\xff\xff\xc6\x01\xff\xff\xff\xff\x8f\x01\xc6\x01\xff\xff\xc6\x01\xc6\x01\xff\xff\x8f\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x8f\x01\xff\xff\xff\xff\xff\xff\xff\xff\xbb\x01\xff\xff\xbb\x01\xff\xff\xba\x01\xbb\x01\xbb\x01\xbb\x01\xbb\x01\xbb\x01\xbb\x01\xbb\x01\xbb\x01\xbb\x01\xbb\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbd\x01\xbd\x01\xbd\x01\xbd\x01\xbd\x01\xbd\x01\xbd\x01\xbd\x01\xbd\x01\xbd\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbf\x01\xbf\x01\xbf\x01\xbf\x01\xbf\x01\xbf\x01\xbf\x01\xbf\x01\xbf\x01\xbf\x01\xc7\x01\xc7\x01\xc7\x01\xc7\x01\xc7\x01\xc7\x01\xc7\x01\xc7\x01\xc7\x01\xc7\x01\xc9\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xc7\x01\xc7\x01\xc7\x01\xc7\x01\xc7\x01\xc7\x01\xc9\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xc7\x01\xc7\x01\xc7\x01\xc7\x01\xc7\x01\xc7\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xc9\x01\xff\xff\xff\xff\xff\xff\xff\xff\x8f\x01\xc9\x01\xff\xff\xff\xff\xff\xff\xc9\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xc9\x01\xff\xff\xff\xff\xff\xff\xc9\x01\xff\xff\xc9\x01\xc9\x01\xca\x01\xca\x01\xca\x01\xca\x01\xca\x01\xca\x01\xca\x01\xca\x01\xca\x01\xca\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xca\x01\xca\x01\xca\x01\xca\x01\xca\x01\xca\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xff\xff\xff\xff\xff\xff\xca\x01\xca\x01\xca\x01\xca\x01\xca\x01\xca\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xff\xff\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xff\xff\xd2\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xff\xff\xff\xff\xff\xff\xff\xff\xd2\x01\xff\xff\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd2\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xff\xff\xff\xff\xff\xff\xff\xff\xd5\x01\xff\xff\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xd2\x01\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff",pp="pdfread.ml",Py="infinity",La="getPageLabelPrefix",Ai="removeId",Nl=278,l_="/ArtBox",Ah="/Odieresis",w5="sub",Nk=318,Px="helveticaBold",IH="\\t",Pw="onexit",ij=211,Ag="/Link",oB="/five",rp="/slash",vD="getAttachmentPage",qm="/fi",ec=112,w4="fromFileLazy",Af="/agrave",vC="/Iacute",w3="/ring",c9="/XObject",pn="k",po="/asciitilde",ql="/backslash",oA="/section",pm="/Domain",Ae="/atilde",IF="topLeft",IG="diagonal",w2="/onequarter",Pv="ESOCKTNOSUPPORT",aY=110,Nj=297.,Pu="FullScreen",Ni="Pdfgraphics: Op_c",yJ="outputJSONMemory",IE=352,ID=265,w1="/StmF",oz=-32,Nh="Z",Ng="bottomRight",ro="/germandbls",lx=1023,pl="PMINY",qk="/greater",IC=323,Ad="open",IB="/Extend",eD=241,pk="/fraction",Ac=2.54,Pt="../",dn=117,K$="UseOutlines",Ps="Assert_failure",pj="/Q",Ab="/CalRGB",K_=308,w0="getMediaBox",Pr="bad tounicode (",rn="/ampersand",vB="hideToolbar",gF=185,IA="ENOTCONN",gQ=219,Ne=1664,Nf="Pdfutil.take",K9="malformed kid\n",l9="/Dests",vA="/Limits",qj=0.001,jU=",",wZ="ptOfMm",Nc="Subject",Nd="Pdfgraphics: Op_v",K8="Fatal error: exception %s\n",rm="/Image",Iz=" 2>",Aa="startGetBookmarkInfo",Pq="\rendstream",rl="/nine",ak=256,Pp="pdfmerge.ml",Iy="singlePage",Ix="ENOSPC",cC="/Pages",yI="/Eacute",vz="/degree",yH="/Ocircumflex",jx="/OE",K7=2368,rk="/underscore",Nb="extract_fontbbox",rj="ENOENT",Po=384,Iw=288,wY="/ASCII85Decode",pi="/CFM",Iv=315,dm=200,bh="/F",wX="endSetBookmarkInfo",Na=259,z$="/OpenAction",Pn="endobj",Pm="EOVERFLOW",z_="/ugrave",z9="ENOTEMPTY",fX=162,Iu="<\/",fx=172,wW="setMetadataDate",M$="page",ri="mm",qi="/emdash",l8="/Shading",qh="Q",lI="%d",Pk=314,Pl="/brokenbar",Pj=262,z8="getPageRotation",Pi=1900,Is=285,It="[",K6="Cygwin",M_="buffer.ml",yF="getImageResolutionXRes",yG="mergeSimple",vy="pdfcrypt.ml",K5="noForms",jF="/DeviceCMYK",M9=-37,M8="<hv>",Ph=-6915192,M7="ENOBUFS",K4=272,yE=832,jT="/L",z7="fromFile",K3="top",gP=113,Ir="/V2",vx="ptOfCm",K2="right",vw="hFlip",Pg="SinglePage",K1="<!D",wV="/Idieresis",M6="/FitR",Iq="No /Kids in page tree",vv="setVersion",aQ=100,Io="D:%Y%m%d%H%M%S",Ip="Malformed /Root entry",K0="startSetBookmarkInfo",Pf=300,z6="padAfter",gE=230,Pe=-33,vu="/WhitePoint",In="twoPageLeft",iw="/r",ii="/Keywords",qg="/paragraph",KZ="centreJustify",wU="/Aring",yD="/ccedilla",Im=2048,vt="/plusminus",fW=107,qe="/DCTDecode",qf="BMC",fV=161,oy="/braceleft",Ik="/Root entry is incorrect",Il="pdf128bit",vs="isInRange",KY=263,l7="Unix.Unix_error",ow="CMINX",ox="/Properties",M5=284,rh="CS",Ij=1088,z5=1.57079632679489656,Ii="Stack_overflow",Ih=1472,KX="markTrappedXMP",jS="SCN",yC="getMajorVersion",M4="/static/",z4="getProducer",ov="/CPDFSTAMP",KW=-94,fU=253,wT="/trademark",KV="Not_found",vr="\x01\0\0\0\0\0\xff\xff\0\0\xff\xff\0\0\0\0\0\0\0\0\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\0\0\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\x009\0<\0\0\0<\0\0\0\0\0A\0\0\0A\0\0\0\0\0F\0\0\0\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0\0\0\xff\xff\xff\xff\xff\xff\0\0T\0\0\0\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0^\0\0\0\0\0a\0\xff\xff\xff\xffa\0\xff\xff\xff\xff\xff\xff\xff\xffh\0\0\0\0\0\0\0\0\0m\0\0\0\0\0\0\0q\0\0\0\0\0\0\0u\0\0\0\0\0\0\0y\0\0\0\0\0\0\0\0\0\0\0~\0\0\0\0\0\0\0\xff\xff\0\0\xff\xff\0\0\xff\xff\xff\xff\0\0\xff\xff\0\0\x8a\0\0\0\x8e\0\0\0\0\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\0\0\x9a\0\0\0\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xb2\0\0\0\0\0\0\0\xff\xff\0\0\xff\xff\0\0\xff\xff\xbb\0\0\0\0\0\0\0\0\0\xff\xff\xff\xff\xc2\0\0\0\0\0\0\0\0\0\xff\xff\xff\xff\xc9\0\0\0\0\0\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xeb\0\0\0\0\0\0\0\xef\0\0\0\0\0\xff\xff\0\0\xf4\0\0\0\0\0\xff\xff\0\0\xf9\0\0\0\0\0\0\0\xfd\0\0\0\0\0\0\0\xff\xff\0\0\x03\x01\0\0\0\0\0\0\0\0\b\x01\0\0\0\0\0\0\xff\xff\0\0\xff\xff\0\0\0\0\x11\x01\0\0\0\0\0\0\0\0\x16\x01\0\0\0\0\0\0\0\0\0\0\x1c\x01\0\0\0\0\0\0 \x01\0\0\0\0\0\0\xff\xff\0\0&\x01\0\0\0\0\0\0\0\0+\x01\0\0\0\0\0\0/\x01\0\0\0\0\0\0\0\x004\x01\0\0\0\0\0\x008\x01\0\0\0\0\0\0<\x01\0\0\0\0\0\0@\x01\0\0\0\0\0\0C\x01\0\0\0\0\xff\xff\0\0\xff\xff\0\0\0\0\0\0\0\0\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\0\0\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0y\x01}\x01\0\0\0\0\x80\x01\xff\xff\xff\xff\x80\x01\xff\xff\xff\xff\xff\xff\xff\xff\x87\x01\0\0\0\0\0\0\0\0\x8c\x01\0\0\0\0\xff\xff\0\0\x90\x01\0\0\0\0\xff\xff\0\0\xff\xff\0\0\0\0\0\0\0\0\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xc1\x01\xc5\x01\0\0\0\0\xc8\x01\xff\xff\xff\xff\xc8\x01\xff\xff\xff\xff\xff\xff\xff\xff\xcf\x01\0\0\0\0\0\0\0\0\xd4\x01\0\0\0\0\xff\xff\0\0\xff\xff\xff\xff\0\0\xff\xff\0\0\xdc\x01\0\0\xff\xff\0\0\xe2\x01\0\0\0\0\0\0\0\0\xff\xff\0\0\xe9\x01\0\0\0\0\0\0\0\0\xff\xff\0\0\xf0\x01\0\0\0\0\0\0\0\0\xf5\x01\0\0\0\0\0\0\xf9\x01\0\0\0\0\0\0\xfc\x01\0\0\0\0\0\0\xff\xff\0\0\x02\x02\x04\x02\0\0\x05\x02\x06\x02\x07\x02\b\x02\t\x02\n\x02\x0b\x02\f\x02\r\x02\x0e\x02\x0f\x02\x10\x02\x11\x02\x12\x02\x13\x02\x14\x02\x15\x02\x16\x02\x17\x02\x18\x02\x19\x02\x1a\x02\x1b\x02\x1c\x02\x1d\x02\x1e\x02\x1f\x02 \x02!\x02\x03\x02",fw=235,eC="/G",lH="/BleedBox",KU="/Lslash",KT="addTextSimple",M3="/QuadPoints",rg="/m",gO="S",Pd="/MacRomanEncoding",z3="/threesuperior",KS="courierOblique",f7=174,KR="./",y=848054398,vq=260,rf="n",Pc="aes256bitfalse",vp="mergeSame",lV=1000.,eB="<hv2>",ou="/bracketright",ha="F",hb=243,Pb=37.,vo="rmdir",z2="inOfPt",Pa="posLeft",vn="isEncrypted",ot="/asterisk",O$=32752,Ig="lt",h7="/Metadata",O_="ELOOP",wR="getFontEncoding",wS="setBookmarkOpenStatus",KQ=280,If=1026,jE=149,yB="parsePagespec",j4="/Standard",jw="scn",yA="getTrimBox",h6=202,yz="displayDocTitle",os="false",re="PMAXX",ph="pt",qd="/florin",fT=106,hO=186,dN=0x80,wQ="Fatal error: exception ",wO="getImageResolutionYPixels",wP="mmOfPt",yy="showBoxes",fI=234,KP=303,M2=594.,KO="/LW",yx="setMetadataFromFile",dx="/Pattern",vm="getSubjectXMP",wN="pages",O9="_",or=1728,yv="rotateBy",yw="compare: functional value",M1="/Differences",bF=114,jD="all",vl="/Aacute",KN="/Predictor",M0="noEdit",yu="usletterportrait",O8="Pdfgraphics: Op_y",oq="sh",Ie="Invalid_argument",yt="/CalGray",MZ=823,lU="/period",KM=1600,ys=891487781,rd="/question",gD=249,Id="%ni",O7="aes256bitisotrue",KL=324,wM="setBleedBox",KK="Recompressing document\n",MY="bad URL syntax in text",qc="/eight",iv="/OCProperties",O6="/FitB",h5=238,lT="h",MX="setSubjectXMP",rc="EMC",Ic="cpdfjson.ml",KI="Found a /ToUnicode table here.\n",KJ="ENOMEM",Ib="@[<hv2>",lw="even",eO="/V",KG=86585632,KH="]",Ia="stampUnder",pg=290,yr="getCreationDate",op="/cent",oo="/Nums",vk="copyId",MW="could not retreive attachment data",H$="EPROTONOSUPPORT",bM="0",vj="textToPDFPaperMemory",H_="ENETRESET",KE="UseOC",KF="Bad /Bounds",O5="EINVAL",O4="EDOM",O3="EFBIG",l6="/EmbeddedFiles",yq="getAttachmentName",Q=248,wL="a0landscape",yp="@,]@]",MV="missing kid\n",O2=322,qb="Do",H9="/OFF",MU=301,g2="/Creator",g3=226,O1="bottomLeft",z1="getDictEntries",MT="/FitBH",qa="Tj",pf="/zero",rb="/dieresis",h4="/DeviceGray",on="y",H8="useOC",yo="/Acircumflex",h3="/Type1",H7="Empty or malformed graphics operation %s.\n%!",yn="thinLines",O0="/thorn",yl="padEvery",ym="/ydieresis",b7=1024,iu="/Producer",ra="Tz",h2=198,jR=133,yk="/Edieresis",z0="/udieresis",KD="endGetImageResolution",wK="/XYZ",yi="textToPDFPaper",yj="/caron",KC="/Configs",wJ="setArtBox",gN=255.,KB="left",q$="PW",it=184,fS=0xffffff,KA="EISCONN",cD="/Names",H6=286,wI="@;<1 -2>",Kz="setFast",zZ="blackText",yh="setTrimBox",p$="/two",q_="/four",ih="/I",om="ET",wH="replaceDictEntrySearch",q9="BT",vi="/EF",wG="/onesuperior",fR=244,fH=2147483647,pe="CMAXX",yg=3.14159265358979312,zY="getBookmarkOpenStatus",eN=208,pd="in",yf=719894387,H5=", characters ",wF=10.,MS="Bad bookmark file (References non-existant pages or is malformed)",OZ=210.,q8="/ae",Ky="ESHUTDOWN",MR=".0",OY="pdf40bit",ol="d1",ye="/Egrave",ok="setPageMode",OX="/FlateDecode",Kx="{",yd="getBookmarkPage",MQ="courier",OW="Q Deficit was nonzero. Fixing. ",q7="/bracketleft",dT=224,fv=223,lS="/semicolon",ig=140,yc="getDateComponents",H4="empty PDF",Kw=448,vh="/egrave",zX="validatePagespec",H3="oneColumn",yb="getImageResolutionYRes",OV="rangeUnion",pc="MP",MP="Pdfgraphics: Op_f",zW="scaleContents",pb="@,",wE="addPageLabels",zV="attachFileToPage",eA=187,pa="/l",lG="/hyphen",vg="encryptionKind",Kv=304,wD="/DocOpen",lR="bad root",oj="/ordmasculine",oi="/fl",ya="getModificationDate",jQ=65536,g1="/DeviceRGB",zU="setFullVersion",ie=")",zT=".notdef",f6=138,x$="nan",x_="a3portrait",o_="B*",o$="/six",eM="/Page",wC="/icircumflex",MO="ECHILD",OU=0xdfff,oh="/seven",bb="/",MN="ETOOMANYREFS",zR="startEnumeratePDFs",zS="crop",vf="getCreatorXMP",p_="/guillemotright",OT="Blank input data",q6="ENOTDIR",H2="ETIMEDOUT",l5=1073741823,q5="/macron",H1=273,MM="\\r",zQ=271,OS="subject",h1=154,zP=513,gC=206,o9="/y",HZ="/Thorn",H0="EWOULDBLOCK",Ku=311,aq=255,Kt="/eth",zO="a5portrait",HY="Pdfspace: bad table",Ks="/ca",fu="/ID",lv="/Dest",ML="End_of_file",ve="..",p9="TD",x9="Failure",HX="helvetica",gB=218,HW=1856,o8="/ordfeminine",MK="aes128bitfalse",f5=247,vd="/threequarters",wB="attachFileFromMemory",Kr="ENETDOWN",zK="twoUpStack",zL="fromJSONMemory",zM="toFile",zN="getMetadata",vc="removeMetadata",vb="/Udieresis",x8="scaleToFitPaper",va=-261531242,x7="\xff\xff\xff\xff\xff\xff\x11\0\xff\xff\x13\0\xff\xff\xff\xff\xff\xff\xff\xff\x07\0\x07\0\xff\xff\x13\0\x13\0\x13\0\x13\0\x13\0\x13\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\b\0\b\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\t\0\xff\xff\t\0\xff\xff\t\0\xff\xff\xff\xff\x0e\0\xff\xff\xff\xff\x02\0\xff\xff\xff\xff\xff\xff\xff\xff\x02\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x07\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\0\x01\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x03\0\xff\xff\x01\0\xff\xff\x04\0\x03\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\0\xff\xff\xff\xff\xff\xff\x01\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x04\0\x04\0\x04\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x03\0\xff\xff\0\0\xff\xff\x01\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\x02\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\x02\0\xff\xff\xff\xff\xff\xff\xff\xff\x03\0\x03\0\x05\0\x05\0\x05\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x03\0\xff\xff\x03\0\xff\xff\x03\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\0\xff\xff\xff\xff\xff\xff\xff\xff\x01\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\0\xff\xff\x02\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\0\xff\xff\x12\0\xff\xff\xff\xff\xff\xff\xff\xff\x07\0\x07\0\xff\xff\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\b\0\xff\xff\b\0\xff\xff\b\0\xff\xff\xff\xff\r\0\xff\xff\xff\xff\xff\xff\x01\0\x01\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\0\xff\xff\xff\xff\xff\xff\xff\xff\t\0\xff\xff\x0b\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\0\0\x0b\0\x0b\0\x0b\0\x0b\0\x0b\0\x0b\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\xff\xff\0\0\xff\xff\0\0\xff\xff\xff\xff\x06\0\xff\xff\xff\xff\xff\xff\x01\0\x01\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\0\xff\xff\x04\0\x03\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x03\0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff",MJ=0xdc00,a$="/Filter",wA="getCreator",OR=438,zJ="/AuthEvent",MI="/AESV2",OQ="Sys_error",Kq=32768.,OP=2112,j3=130,Kp=275,OO="TwoPageRight",o7="Td",wz="getFontPage",h0="/ModDate",Ko="Printexc.handle_uncaught_exception",HU="setKeywordsXMP",HV=105.,HT="setCreatorXMP",og="int_of_string",ON=65533,MH=" 2>&1",HS="Malformed file",c8=103,jC=55296,is=257,MG="endEnumeratePDFs",c7="/ColorSpace",lF=132,MF="removeDuplicates",x6="/ntilde",gM=758940234,o6="@]",x5="setCropBox",Kn="%s%!",p8="Tr",OM="useNone",p7="B",HQ=325,HR="Pdfgraphics: Op_S",Km="ENODEV",x4="end",p6="Tw",cj="/D",OL="%Li",o4="RG",o5=65535,HP=302,gA=205,ME=960,HO="scnName",x3="@;<1 0>",jP="/space",Kl="getPageLabelOffset",x2="/TrueType",OK="/Height",eH="/W",Kk="setCreationDateXMP",x1=" objects\n",o3="TJ",OI="UseNone",OJ=2000,x0="toFileMemory",lE="pdfcodec.ml",hZ=136,xZ="merge",u$="/Function",xY="attachFile",q4="/dollar",hY=137,HN="courierBoldOblique",g$=227,o2="C",wy="/igrave",of="%a",fQ=", ",ft=199,q3="/less",Kj=-65,xX="/FirstChar",HM=1920,oe="/at",xW="padBefore",l4="/First",MD="useAttachments",Ki="Found charcode %i\n\n",xV="shiftContents",MC="lowercaseLetters",OH="EADDRINUSE",xU="decryptPdfOwner",HL="ENOSYS",wx=870828711,Kh="SCNName",MB="Empty or malformed graphics operation ",xT=2047,HK=1216,od=359,MA="op reading failed",p5="/percent",f4=251,oc=258,by=" ",ob="EX",Kf="Title",Kg="Undefined_recursive_module",zI="getBookmarkText",Ke="endGetFontInfo",OG="uppercaseRoman",ww="centerWindow",zH="cmOfPt",u=-976970511,HJ="%.16g",zG="/BlackPoint",g_=189,Mz="%i",zF="usletterlandscape",OF="endGetBookmarkInfo",p4="/CF",zE="scalePages",HI="ModifyDate",q2="q",oa="i",u_="/eacute",Kd="getPageLabelRange",q1="/plus",u9="fromMemory",o1="f*",zD="/onehalf",q0="/braceright",Kc=640,OE="bottom",xS="getAuthorXMP",dt=123,lQ=152,p3="/sterling",wv=768,jO=159,o0="j",d9="/DP",id=4096,hX=183,zC="/adieresis",Kb="no transform",My="toMemory",HG=55295,HH="Pdfgraphics: Op_B*",n$="/quotesingle",fs=0xff,hW=139,Mx="malformed file",p2="/v",wu="@[<2>[",Mw=704,p1="/bar",qZ="/s",ds=191,b6=3654863,xR="/PageLabels",zB="getFontName",HF="Pdfgraphics: Op_f*",fG=175,j2=145,Mv="/CalCMYK",OC="/GA6",OD="parse_dictionary",HE="fd ",p0="w",Mu="target",zA="ocgCoalesce",HD="0o",oZ="/quotedblbase",OB=1792,qY="/circumflex",Ka=1.3,OA=338,xQ="mul",zz="compress",lu=57343,pZ=")\n",xP="isLinearizedMemory",zy="%B",u8="numberGetAttachments",n_="/q",Mt="/ograve",Ms="/Eth",HC=">>",J_="/LC",J$="toMemoryEncryptedExt",pY="BX",cP=108,n9="setCreationDate",oY="CMINY",Mr=1984,u7=-2147483648,oX="d",u6="hardBox",zx="setBookmarkPage",HB="gt",wt="getImageResolutionPageNumber",Oz=1073741824.,HA="EAGAIN",oW="/M",ws=": Not a directory",fr="b",xO="dateStringOfComponents",qX="/oe",u5=1.001,Oy="useOutlines",zw="toFileEncryptedExt",qW="/quotesinglbase",Hz="EDESTADDRREQ",J9=287,zv="startGetAttachments",n8="cpdfsqueeze.ml",J8="Out_of_memory",pX="/dagger",zu="index out of bounds",u4="getTitle",g9="/CS",qV="_bigarr02",J7="Producer",eG="/MediaBox",J5=-1.,J6="}",wr="rotateContents",u3=292,wq="/Ugrave",u2="/StrF",ez=0xffff,Mp="/Crypt",Mq="EBUSY",Hy="ENETUNREACH",g0=222,Ox="%.17g",Hx=400,Mo="find_pages: Not a page tree node or page object",Ow=18.,n7="/tilde",Ov="decrypt: no key C",jB="/EncryptMetadata",hV=143,pW="TL",Hw="setSlow",zt="rotate",b4=963043957,xN="setBookmarksJSON",co=126,jM="now",jN=142,J4=420.,Ou="Bad coordinate specification ",f3=207,oV="/three",J3=264,wp="a1landscape",zs="/Otilde",Ot="Malformed trailer",eL=124,n6=65279,J2=282,eJ=169,j1=150,Hv="Unbalanced q/Q ops",Mn="/DeviceN",l3="/comma",jL=135,J1="InlineImage",oU="/u",Hu="noAssemble",dM=252,Ht="setTitleXMP",Os="EPROTOTYPE",dP=".",Hs="EINTR",ir=147,J0=0xf0,Or="No or malformed /Pages",n5="/cedilla",xM="removeAllText",Oq="UseAttachments",Hr=276,gZ=171,bX=116,lt=102400,JZ=576,Mm="EALREADY",u1=56320,Ml="aes256bitisofalse",ic=213,cN="/Annots",qU=294,JY=8.5,Mk="noExtract",aJ="/Root",pV="hasPermission",jv="I",zr="getModificationDateXMP",xL=500,Oo=291,Op="EAFNOSUPPORT",xK="/FileAttachment",zq="hideMenubar",hU="/CreationDate",n4="W*",xJ="/FontBBox",On="ENFILE",Hq=-32768.,gL=221,JX="SetCreator",Om=2176,zp="/Fit",oT="lib/read.mll",xI="getBookmarksJSON",pU="setSubject",qT="Tc",ls="null",Mj="make_num",gY="/ExtGState",Ol="reversediagonal",JW="/Lab",dl='"',Mi="(@[",l2="G",hN=231,fF=170,Ok="<",Hp="\r\nendstream",JV="toFileEncryptedInner",wo="vFlip",fP=196,Mh=0x800,JU="EPERM",wn="fromMemoryLazy",Ho="/CPDFJSONstreamdataincluded",fq=182,Oj=1152,ci="/Resources",JT="removeFonts",Mg="copyFont",JS="True",xH="/acircumflex",JR=52.,Me="Pdfgraphics: Op_B",Mf="/Encode",hM=156,u0="createMetadata",iq=209,ju=131,l1="/CMYK",uZ="removeDictEntry",hL=204,uY="removeBleed",jt=726928360,Hn="/UE",Hm="([^/]+)",fO=165,zo="removeArt",zn=0xf,n3="/b",Md="CreationDate",zm="stampAsXObject",c5=125,pT="/BBox",xG="decompress",qS="ri",Mc="/FontFile2",fN="/BaseFont",pS="/quoteleft",Hl="noAnnot",Mb="Division_by_zero",xF="getKeywordsXMP",ib=3407540,Ma="/Fields",Hk="/CPDFJSONminorpdfversion",Hj="Author",uX="getImageResolutionImageName",JQ="/A85",qR="W",js=708012133,Oi="twoColumnLeft",L$=-60,cB="/CropBox",pR=": ",n2="setKeywords",JP="Pdfgraphics: Op_l",zl="openAtPage",pQ="/Prev",JO="Found charcode ",qQ="/w",fp=118,pP="m",qP="/Y",L9="/GoTo",lP="'",L_="EADDRNOTAVAIL",Oh="stampOn",L8=0.999,g8=119,Og=74.,JN="/Coords",dp=104,Hh="/URI",Hi="noCopy",JM=321,Oe=279,Of="noPrint",JL="Malformed /Kids in page tree node",bE=102,lO="/Rect",xE="textToPDF",Hg="/Euro",JK="/AcroForm",jK="/TrimBox",pO="/guilsinglleft",qO="SC",Od="/dev/null",zk="removeDictEntrySearch",JJ="blankRange",xD=";@ ",zj="/aring",Hf="level",bW=101,gK="pdfdate.ml",pN="/p",uW="a4portrait",xC="isLinearized",zi="/ASCIIHexDecode",L7=" >",zh="\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x04\0\0\0\x03\0\x03\0\x86\0\0\0\x03\0\0\0\x86\0E\x01\x92\x01\xff\xff\0\0E\x01\x92\x01\0\0\0\0\0\0\0\0\x7f\0\x8b\0\0\0\x03\0\0\0\f\0\x03\0\xaa\0\x86\0\xaf\0\0\0\x07\0\x0b\x01E\x01\x92\x01\x0e\x01\r\x001\0\x05\0\n\0\x0b\0\x0b\0\x0b\0\x0b\0\x0b\0\x0b\0\x0b\0\x0b\0\x0b\x008\0v\0\x06\0\x81\0\x82\x009\0\xed\x01\x89\0\0\x021\0\0\x000\0\x8a\0j\0>\0\x0e\0n\0i\0\0\x001\0\x0f\0\x0b\0\x0b\0\x0b\0\x0b\0\x0b\0\x0b\0\x0b\0\x0b\0\x0b\0\x0b\0\x1e\x000\0\b\0r\0\xd1\0\xec\0\0\x01\r\x01\x1d\0\x16\0\xff\xff0\x000\0\x11\0\x15\0\x19\0 \0!\0#\0\x17\0\x1b\0\x10\0\x1f\0\x1c\0\"\0\x13\0\x18\0\x12\0\x1a\0\x14\0$\0)\0%\x000\0\t\0*\0+\0,\0-\0.\0/\0=\0U\x000\0&\0'\0'\0'\0'\0'\0'\0'\0'\0'\x001\0C\0'\0'\0'\0'\0'\0'\0'\0'\0'\0'\0V\0\x8f\0\xff\xff(\0\x90\0\x91\0\x92\x007\0\x94\x007\0\x95\x000\x006\x006\x006\x006\x006\x006\x006\x006\x006\x006\x002\x002\x002\x002\x002\x002\x002\x002\x002\x002\x002\x002\x002\x002\x002\x002\x002\x002\x002\x002\0\xff\xff0\0\x96\0\x97\0\xa1\0B\0\x9e\x005\0\x9f\x005\0\xa0\x003\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\x004\0\xa5\x003\x006\x006\x006\x006\x006\x006\x006\x006\x006\x006\0\xa2\0\xa3\0\xa6\0]\0\xff\xff\x02\x006\x006\x006\x006\x006\x006\x006\x006\x006\x006\0\xff\xffM\0g\0l\0t\0\x84\0\x86\0\x87\0\x80\0\x8b\0\x86\0\xa4\0]\0\xab\0M\0\xa7\0\xa8\0\xa9\0\xac\0p\0\xad\0\xae\0\xd2\0\xe2\0\xd0\0\xd3\0\xd4\0;\0S\0\x86\0\xd5\0\xd6\0\xd7\0\xd8\0\xda\0\x8d\0\xdb\0]\0\xdc\0\xdd\0{\0\xde\0\xdf\0\xe0\0\x88\0_\0\xe1\0#\x01A\x01\xea\0\x9b\0\x05\x01a\x01\xfa\0\xff\xff\xfe\x009\x01=\x01_\x01M\0,\x01\\\x01X\x01\t\x01\x1d\x01L\0|\0!\x01\x12\x01K\0b\0\x13\x01U\x01V\x01W\x01x\x01Y\x01J\0\xe1\x005\x01y\x01I\0Z\x01H\0G\0N\0N\0N\0N\0N\0N\0N\0N\0N\0N\0b\0q\x01z\0[\x01@\0\x04\x01]\x01N\0N\0N\0N\0N\0N\0O\0O\0O\0O\0O\0O\0O\0O\0O\0O\0\x9c\0p\x01^\x01`\x01b\x01c\x011\x01O\0O\0O\0O\0O\0O\0d\x01\x9d\0e\x01N\0N\0N\0N\0N\0N\0\xb7\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\x18\x01p\x01\xff\xff\x19\x01f\x01g\x01i\x01O\0O\0O\0O\0O\0O\0P\0P\0P\0P\0P\0P\0P\0P\0P\0P\0j\x01k\x010\x01(\x01l\x01m\x01n\x01P\0P\0P\0P\0P\0P\0Q\0Q\0Q\0Q\0Q\0Q\0Q\0Q\0Q\0Q\0o\x01\x1b\x01\xff\xff\xab\x01\x1f\x01\xaa\x01\x17\x01Q\0Q\0Q\0Q\0Q\0Q\0\\\0\xa8\x01?\x01P\0P\0P\0P\0P\0P\0\xf8\0\xa5\x01\xfc\0\xa2\x01;\x01E\0W\0W\0W\0W\0W\0W\0W\0W\0W\0W\0\xff\xffQ\0Q\0Q\0Q\0Q\0Q\0W\0W\0W\0W\0W\0W\0X\0X\0X\0X\0X\0X\0X\0X\0X\0X\0'\x01*\x01\xff\xff\xa3\x01\xa4\x01x\0\x02\x01X\0X\0X\0X\0X\0X\0\xa6\x017\x01\x99\0W\0W\0W\0W\0W\0W\0\x07\x01\xa7\x01\xa4\x01\xa9\x01\x10\x01\xa4\x01Y\0Y\0Y\0Y\0Y\0Y\0Y\0Y\0Y\0Y\x003\x01X\0X\0X\0X\0X\0X\0Y\0Y\0Y\0Y\0Y\0Y\0Z\0Z\0Z\0Z\0Z\0Z\0Z\0Z\0Z\0Z\0a\0\x89\x01\xa4\x01\xac\x01\xb9\x01\x88\x01\xad\x01Z\0Z\0Z\0Z\0Z\0Z\0a\0\xb3\0\xae\x01Y\0Y\0Y\0Y\0Y\0Y\0.\x01\xaf\x01\xb0\x01\xb4\0\xa4\x01\xb8\x01\xb5\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0|\x01Z\0Z\0Z\0Z\0Z\0Z\0\xc0\x01\xb2\x01\x15\x01\xb3\x01a\0\xc1\x01\xb4\x01\xb5\x01\xb6\x01\xb7\x01\xa4\x01\xd8\x01\xff\xffa\0\xb8\x01\xd8\x01\xd1\x01a\0\xdf\x01a\0\xd0\x01\xe6\x01\x03\x02a\0\xdb\x01%\x01\xd8\x01\xd9\x01\x03\x02\xdc\x01\xd8\x01a\0\x03\x02\x03\x02\xd8\x01a\0\x03\x02a\0`\0c\0c\0c\0c\0c\0c\0c\0c\0c\0c\0\xd8\x01\x03\x02~\x01\x03\x02\x03\x02\x03\x02\x03\x02c\0c\0c\0c\0c\0c\0a\0\x03\x02\xda\x01\xfa\x01\x03\x02\x03\x02a\0\x03\x02|\x01|\x01a\0\x03\x02\xdd\x01\x03\x02\xfd\x01\x03\x02\x03\x02\x03\x02a\0\xff\xff\x03\x02\xc4\x01a\0\x03\x02a\0`\0c\0c\0c\0c\0c\0c\0d\0d\0d\0d\0d\0d\0d\0d\0d\0d\0\xeb\x01\x03\x02\xf1\x01\x03\x02\xff\x01\xf2\x01\x03\x02d\0d\0d\0d\0d\0d\0e\0e\0e\0e\0e\0e\0e\0e\0e\0e\0\xf6\x01\x81\x01\x81\x01\xe4\x01\x03\x02\xc4\x01\x03\x02e\0e\0e\0e\0e\0e\0\x03\x02\xc6\x01\x03\x02d\0d\0d\0d\0d\0d\0\x03\x02\x03\x02\x03\x02\xc4\x01\xea\x01\x86\x01a\0a\0a\0a\0a\0a\0a\0a\0a\0a\0\0\0e\0e\0e\0e\0e\0e\0a\0a\0a\0a\0a\0a\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\xb6\0\0\0\0\0\xc9\x01\xb1\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xb8\0\xbc\0\0\0a\0a\0a\0a\0a\0a\0\xc9\x01\xe3\x01\0\0\xbf\0\xce\x01{\x01\xbd\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbd\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xbe\0\xc3\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc6\0\xff\xff\xf8\x01\xc4\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc4\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xc5\0\xca\0\xe3\0\xe3\0\xe3\0\xe3\0\xe3\0\xe3\0\xe3\0\xe3\0\xe3\0\xe3\0\xcd\0\xff\xff\xff\xff\xcb\0\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xe2\0\xc3\x01\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xe8\x01\0\0\0\0\xce\0\xdd\x01\xef\x01\xfe\x01\0\0\xcf\0\xf4\x01\0\0\xe1\0\xcb\0\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xcc\0\xe8\0\0\0\xe8\0\0\0\xe1\x01\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xd9\0\xff\xff\0\0\0\0\0\0\0\0\xe1\0\xe3\0\xe3\0\xe3\0\xe3\0\xe3\0\xe3\0\xe3\0\xe3\0\xe3\0\xe3\0\0\0\0\0\0\0\0\0\xff\xff\0\0\0\0\xe6\0\0\0\xe6\0\0\0\xe4\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\xe5\0\0\0\xe4\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xba\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\xe7\0\0\0\0\0\0\0\0\0\0\0\xf1\0\0\0q\x01\0\0M\x01M\x01M\x01M\x01M\x01M\x01M\x01M\x01M\x01M\x01r\x01r\x01r\x01r\x01r\x01r\x01r\x01r\x01r\x01r\x01\0\0p\x01\0\0\0\0\xc1\0\0\0\0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0p\x01\0\0\0\0\0\0\xf0\0\xc8\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\0\0\xf6\0\0\0\0\0\xf0\0\0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf0\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\0\0\0\0\0\0\0\0\xf5\0\0\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xee\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\0\0\0\0\0\0\0\0\xf5\0\0\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0\xf5\0E\x01F\x01\0\0\0\0E\x01L\x01M\x01M\x01M\x01M\x01M\x01M\x01M\x01M\x01M\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0E\x01\0\0N\x01\0\0\0\0\0\0\0\0h\x01I\x01\0\0\0\0\0\0\0\0O\x01\0\0G\x01L\x01M\x01M\x01M\x01M\x01M\x01M\x01M\x01M\x01M\x01\0\0\0\0H\x01\0\0\0\0\0\0\0\0\0\0\xf3\0\0\0\0\0\0\0\0\0\0\0\0\0P\x01w\x01\0\0w\x01\0\0Q\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01\0\0\0\0J\x01r\x01r\x01r\x01r\x01r\x01r\x01r\x01r\x01r\x01r\x01S\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0R\x01\0\0\0\0s\x01\0\0\0\0T\x01\0\0\0\0u\x01\0\0u\x01\0\0K\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01\0\0s\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01t\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01v\x01\0\0\x80\x01\x82\x01\x82\x01\x82\x01\x82\x01\x82\x01\x82\x01\x82\x01\x82\x01\x82\x01\x82\x01\0\0\0\0\x80\x01\0\0\0\0\0\0\x80\x01\x82\x01\x82\x01\x82\x01\x82\x01\x82\x01\x82\x01\0\0\0\0\0\0\0\0\0\0\0\0\x80\x01\0\0\0\0\xb9\x01\0\0\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\0\0\0\0\0\0\0\0\0\0\x82\x01\x82\x01\x82\x01\x82\x01\x82\x01\x82\x01\xb8\x01\0\0\x80\x01\0\0\0\0\0\0\0\0\0\0\x80\x01\0\0\0\0\0\0\x80\x01\0\0\0\0\0\0\0\0\0\0\0\0\x80\x01\x80\x01\0\0\0\0D\x01\x80\x01\x80\x01\x80\x01\x7f\x01\0\0\x80\x01\0\0\0\0\xb8\x01\0\0\0\0\0\0\0\0\x80\x01\0\0\0\0\0\0\x80\x01\0\0\x80\x01\x7f\x01\x83\x01\x83\x01\x83\x01\x83\x01\x83\x01\x83\x01\x83\x01\x83\x01\x83\x01\x83\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x83\x01\x83\x01\x83\x01\x83\x01\x83\x01\x83\x01\x84\x01\x84\x01\x84\x01\x84\x01\x84\x01\x84\x01\x84\x01\x84\x01\x84\x01\x84\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x84\x01\x84\x01\x84\x01\x84\x01\x84\x01\x84\x01\0\0\0\0\0\0\x83\x01\x83\x01\x83\x01\x83\x01\x83\x01\x83\x01\0\0\0\0\0\0\0\0\0\0\0\0\x80\x01\x80\x01\x80\x01\x80\x01\x80\x01\x80\x01\x80\x01\x80\x01\x80\x01\x80\x01\0\0\x84\x01\x84\x01\x84\x01\x84\x01\x84\x01\x84\x01\x80\x01\x80\x01\x80\x01\x80\x01\x80\x01\x80\x01\xbf\x01\x8e\x01\xbf\x01\0\0\0\0\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xba\x01\xba\x01\xba\x01\xba\x01\xba\x01\xba\x01\xba\x01\xba\x01\xba\x01\xba\x01\0\0\x80\x01\x80\x01\x80\x01\x80\x01\x80\x01\x80\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\0\0\0\0\0\0\0\0\x8d\x01\0\0\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\0\0\0\0\0\0\0\0\x8d\x01\0\0\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x8d\x01\x92\x01\x93\x01\0\0\0\0\x92\x01\x9a\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc8\x01\x92\x01\0\0\x99\x01\0\0\0\0\0\0\0\0\xb1\x01\x96\x01\0\0\0\0\0\0\xc8\x01\x9c\x01\0\0\x94\x01\x9a\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\x9b\x01\0\0\0\0\x95\x01\0\0\0\0\0\0\0\0\0\0\0\0\x8b\x01\0\0\0\0\0\0\0\0\0\0\x9d\x01\0\0\0\0\0\0\0\0\x9e\x01\xba\x01\xba\x01\xba\x01\xba\x01\xba\x01\xba\x01\xba\x01\xba\x01\xba\x01\xba\x01\xc8\x01\0\0\x97\x01\0\0\0\0\0\0\xc8\x01\0\0\0\0\0\0\xc8\x01\xbb\x01\0\0\xa0\x01\0\0\0\0\0\0\0\0\xc8\x01\0\0\0\0\x9f\x01\xc8\x01\0\0\xc8\x01\xc7\x01\0\0\xa1\x01\0\0\0\0\0\0\0\0\0\0\0\0\x98\x01\0\0\0\0\0\0\0\0\xbd\x01\0\0\xbd\x01\0\0\xbb\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbc\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xbe\x01\xca\x01\xca\x01\xca\x01\xca\x01\xca\x01\xca\x01\xca\x01\xca\x01\xca\x01\xca\x01\xc8\x01\0\0\0\0\0\0\0\0\0\0\0\0\xca\x01\xca\x01\xca\x01\xca\x01\xca\x01\xca\x01\xc8\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xca\x01\xca\x01\xca\x01\xca\x01\xca\x01\xca\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc8\x01\0\0\0\0\0\0\0\0\x91\x01\xc8\x01\0\0\0\0\0\0\xc8\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc8\x01\0\0\0\0\0\0\xc8\x01\0\0\xc8\x01\xc7\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\0\0\0\0\0\0\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\xcb\x01\0\0\0\0\0\0\0\0\0\0\0\0\xc8\x01\xc8\x01\xc8\x01\xc8\x01\xc8\x01\xc8\x01\xc8\x01\xc8\x01\xc8\x01\xc8\x01\0\0\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xcc\x01\xc8\x01\xc8\x01\xc8\x01\xc8\x01\xc8\x01\xc8\x01\0\0\xd6\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc8\x01\xc8\x01\xc8\x01\xc8\x01\xc8\x01\xc8\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\0\0\0\0\0\0\0\0\xd5\x01\0\0\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\0\0\0\0\0\0\0\0\xd5\x01\0\0\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\xd5\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd3\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0",V=254,wm="/ecircumflex",zg="a1portrait",JG="pagesFast",JH="ECONNABORTED",JI="EFAULT",pM="setProducer",Oc=" : flags Open_text and Open_binary are not compatible",He="EDEADLK",pL="/d",Ob="EIO",Hd="CreatorTool",fE=164,qN="rg",f2="/N",Hc="\\\\",L5="endGetAttachments",L6="courierBold",Hb="/XRefStm",JF="There are ",Oa="/FontFile3",fM=188,qM="/e",ip=160,pK=270,dS="/R",uV="/uacute",zf="removeAttachedFiles",JE="/Zcaron",Ha="pagesFastMemory",JC="posRight",JD="EHOSTDOWN",xA="getAuthor",xB="\0\0\xec\xff\xed\xff\x03\0\xef\xff\x10\0\xf2\xff\xf3\xff\xf4\xff\xf5\xff\0\0\x1f\0\xf9\xffU\0\x01\0\0\0\0\0\x01\0\0\0\x01\0\x02\0\xff\xff\0\0\0\0\x03\0\xfe\xff\x01\0\x04\0\xfd\xff\x0b\0\xfc\xff\x03\0\x01\0\x03\0\x02\0\x03\0\0\0\xfb\xff\x15\0a\0\n\0\x16\0\x14\0\x10\0\x16\0\f\0\b\0\xfa\xffw\0\x81\0\x8b\0\xa1\0\xab\0\xb5\0\xc1\0\xd1\0\xf0\xff\x0b\0&\0\xfc\xffA\0\xfe\xff\xff\xffn\0\xfc\xff\xa3\0\xfe\xff\xff\xff\xea\0\xf7\xff\xf8\xff0\x01\xfa\xff\xfb\xff\xfc\xff\xfd\xff\xfe\xff\xff\xffG\x01~\x01\x95\x01\xf9\xff'\0\xfd\xff\xfe\xff&\0\xbb\x01\xd2\x01\xf8\x01\x0f\x02\xff\xff\xdc\0\xfd\xff\xff\xff\xf5\0'\x02m\x02\x0e\x01X\x02\xa4\x02\xbb\x02\xe1\x02\r\0\xfc\xff\xfd\xff\xfe\xff\xff\xff\x0e\0\xfd\xff\xfe\xff\xff\xff\x1e\0\xfd\xff\xfe\xff\xff\xff\x0f\0\xfd\xff\xfe\xff\xff\xff\x11\x01\xfb\xff\xfc\xff\xfd\xff\xfe\xff\xff\xff\x13\0\xfc\xff\xfd\xff\xfe\xff\x0f\0\xff\xff\x10\0\xff\xff\b\x01\x05\0\xfd\xff\x17\0\xfe\xff\x14\0\xff\xff.\0\xfd\xff\xfe\xff*\x004\x005\0\xff\xff5\x000\0[\0\\\0\xff\xff\x1b\x01\xfa\xff\xfb\xff\x89\0h\0Y\0X\0j\0\xff\xff\x8f\0\x89\0\xb1\0\xfe\xff\xb7\0\xa8\0\xa6\0\xb7\0\x02\0\xfd\xff\xb1\0\xac\0\xbb\0\x04\0\xfc\xff5\x02\xfb\xff\xfc\xff\xfd\xffg\x01\xff\xff\xf8\x02\xfe\xff\x06\x03\x1e\x03\xfc\xff\xfd\xff\xfe\xff\xff\xff(\x032\x03J\x03\xfc\xff\xfd\xff\xfe\xff\xff\xff=\x03T\x03l\x03\xf9\xff\xfa\xff\xfb\xff\xf4\0x\x03\x8e\x03\xb3\0\xc2\0\x0f\0\xff\xff\xbe\0\xbc\0\xbb\0\xc1\0\xb7\0\xb3\0\xfe\xff\xbf\0\xc9\0\xc8\0\xc4\0\xcb\0\xc1\0\xbd\0\xfd\xff\x9d\x03_\x03\xae\x03\xc4\x03\xce\x03\xd8\x03\xe4\x03\xef\x03<\0\xfd\xff\xfe\xff\xff\xff\f\x04\xfc\xff\xfd\xffW\x04\xff\xff\x91\x04\xfc\xff\xfd\xff\xdd\x04\xff\xff\xe5\0\xfd\xff\xfe\xff\xff\xff\xe7\0\xfd\xff\xfe\xff\xff\xff\x02\0\xff\xff\x12\x01\xfc\xff\xfd\xff\xfe\xff\xff\xff\"\x01\xfd\xff\xfe\xff\xff\xff\0\0\xff\xff\x03\0\xfe\xff\xff\xff&\x01\xfc\xff\xfd\xff\xfe\xff\xff\xffx\x01\xfb\xff\xfc\xff\xfd\xff\xfe\xff\xff\xff\xd0\0\xfd\xff\xfe\xff\xff\xff\xd3\0\xfd\xff\xfe\xff\xff\xff\xbd\0\xff\xff\x8f\x01\xfc\xff\xfd\xff\xfe\xff\xff\xff\r\x01\xfd\xff\xfe\xff\xff\xff_\x01\xfc\xff\xfd\xff\xfe\xff\xff\xff2\x01\xfd\xff\xfe\xff\xff\xff\x1a\x01\xfd\xff\xfe\xff\xff\xff\xe9\0\xfd\xff\xfe\xff\xff\xff\xde\0\xfd\xff\xfe\xff\xff\xffO\x05\xed\xff\xee\xff\n\0\xf0\xff,\x01\xf3\xff\xf4\xff\xf5\xff\xf6\xff=\x01\x02\x04\xf9\xff-\x05\xd1\0\xe4\0\xd3\0\xe8\0\xe1\0\xdf\0\xf0\0\xff\xff\xeb\0\xea\0\b\x01\xfe\xff\x04\x01\x17\x01\xfd\xff6\x01\xfc\xff\x1f\x01\x1d\x01 \x01'\x011\x01-\x01\xfb\xff9\x01R\x01P\x01N\x01T\x01J\x01V\x01\xfa\xffn\x05\f\x04{\x05\x9b\x05\xa5\x05\xb1\x05\xbb\x05\xc5\x05\xf1\xff\xc7\x01M\x02\xfd\xff\xff\xff\x9a\x02\xde\x05\xd1\x05\x9b\x02\xef\x055\x06L\x06r\x06\x10\x02\xfc\xff\xfd\xff\xfe\xff\xff\xff\x98\x06\xfc\xff\xfd\xff\xe3\x06\xff\xffU\x07\xf4\xff\xf5\xff\x0b\0\xf7\xffL\x02\xfa\xff\xfb\xff\xfc\xff\xfd\xff\xfe\xff\x1f\x02\xf3\x053\x07d\x01s\x01h\x01\x85\x01v\x01\x9a\x01\xab\x01\xff\xff\xad\x01\xb0\x01\xbf\x01\xb9\x01\xbb\x01\xfd\x01\xe6\x01\xe6\x01\xea\x01\xf7\x01\xed\x01\xea\x01\t\x02\x13\x02\x13\x02\x0f\x02\x15\x02\x0b\x02\x07\x02\x8e\x06\x98\x06t\x07\xaa\x07\xb4\x07\xbe\x07\xc8\x07\xd2\x07\xf8\xffx\x02\xa7\x02\xfd\xff\xff\xff\xd8\x02R\x07\xdc\x07\xec\x02\xf4\x07:\bQ\bw\bL\x02\xfc\xff\xfd\xff\xfe\xff\xff\xff\x9d\b\xfc\xff\xfd\xff\xe8\b\xff\xff\x87\x02x\x02\xfd\xffd\x02\xfe\xff\xb6\x02\xff\xff\x0b\x02\xff\xff\xcc\x02\xfc\xff\xfd\xff\xfe\xff\xff\xff.\x02\xff\xff\xb2\x02\xfc\xff\xfd\xff\xfe\xff\xff\xff\x17\0\xff\xff\xb7\x02\xfc\xff\xfd\xff\xfe\xff\xff\xff\xbb\x02\xfd\xff\xfe\xff\xff\xffy\x02\xfd\xff\xfe\xff\xff\xff\xb8\x02\xfc\xff\xfd\xff\xfe\xff\x13\0\xff\xff\x8c\x01\x92\x01\xff\xff\x96\x01\x97\x01\x9a\x01\xa8\x01\xaa\x01\xab\x01\xac\x01\xad\x01\xb5\x01\xb8\x01\xb9\x01\xbb\x01\xbf\x01\xc1\x01\xc3\x01\xc4\x01\xc5\x01\xc8\x01\xcb\x01\xdf\x01\xe1\x01\xe4\x01\xf9\x01\xfb\x01\x02\x02\x04\x02\x0b\x02\f\x02\r\x02\0\0",L4="/Last",dw=109,j0="/K",JB="ENOTSOCK",zd="getImageResolutionXPixels",ze="getBleedBox",JA=326,n1="/o",jr="@ ",uU="stringOfPagespec",Jz=261,lN=-97,L3="/Title not a string or not present in document outline entry. Using the empty string.\n",N$="helveticaOblique",jJ=281,qL="/ellipsis",zc="/dotaccent",hT=195,hS="/Subject",L2="aes256bittrue",wl="/idieresis",Jy="EOPNOTSUPP",L1="rangeGet",xz="/Adieresis",pJ="/Order",G_="Malformed /QuadPoints format: must be a multiple of 8 entries\n",G$="/CharProcs",xy="getSubject",N_="rightJustify",xx="replaceDictEntry",N9="ECONNRESET",l0="f",lD=141,N8="/FunctionType",zb="\n\n",G9="ESPIPE",xw=9999,uT="Cpdf.js does not currently support inline images compressed with zlib. Contact the author if this is a problem.",lM="/RGB",pI="/k",Jx="/Index",wk="removeText",uS="/Igrave",gJ=232,xv="getBookmarkLevel",Jw="E2BIG",ia=155,N7="/dotlessi",G7=316,G8="/BitsPerComponent",Jv="/hungarumlaut",uR=296,Ju="%f",wj="/Ograve",za="hideWindowUi",uQ="Bad /W array",lr=":",oS="/n",L0="/AESV3",oR="/Z",pH="/equal",io=215,gX=201,xu="removeTrim",y$="toFileEncrypted",d6="/O",wi="version",oQ="/parenright",xt="outputJSON",N6="/FS",LZ="<<",jq="true",xs="/Columns",y_="/Ydieresis",qJ="/quotedblleft",qK="/quotedbl",uO="blackFills",uP="padMultiple",oP="/quotedblright",xr="getFontType",G6="CapHeight",fD=214,LY="recrypt_pdf: bad /oe",hK="pdfpage.ml",n0="Map.bal",G5="@[",Jt="OneColumn",lC="/Rotate",Js="/St",LX="toMemoryEncrypted",pG="/c",N4="TwoColumnLeft",N5="topRight",nZ="l",wh="ocgOrderAll",fC=233,y9="decryptPdf",Jr=268,fo=239,wg="startGetFontInfo",lB=173,N3="malformed 'd' op",qI="/guillemotleft",G4=307,c6="/S",G3="removePageLabels",LW=309,g7=242,G2=" \n",jA=-752863768,Jq=360,LV="/CA",LU="timesBoldItalic",fB=167,LT="setModificationDateXMP",N2=274,hJ=212,xq="getTitleXMP",h$=197,Jp=" <",oO="/exclam",Jo="Sys_blocked_io",oN="/grave",hR="/Author",Jn="setProducerXMP",y8="toFileExt",uN="a5landscape",G1="EXDEV",wd="/MMType1",we="enumeratePDFsKey",wf="/edieresis",uM="pdftext.ml",N1=2240,nY=-16,G0="Disallowed base colourspace in index colourspace",Jm="creator",wc="impose",y7="/ocircumflex",xp="getAttachmentData",bT="<hov>",LS="nolog",fL=193,N0="\n%%EOF\n",d5=246,uL="%u",nX="/J",a6="/Length",GZ=298,jp="%S",LR="EHOSTUNREACH",NZ="text",y6="/mu",d4="Unexpected end of input",nW="/periodcentered",dL=127,Jl="uppercaseLetters",wb="/Uacute",LQ="@{",GY="/Yacute",LP=" : flags Open_rdonly and Open_wronly are not compatible",NY="rangeLength",y5="/divide",Jk="/FitH",wa="X",v$="/Outlines",Jj="xref",pF="cs",d$=240,dR="-",pE="K",qH="/Widths",v_="/Oacute",xo="textWidth",NX="aes128bittrue",GX=438511779,fn=216,LO=" : file already exists",GW="startGetImageResolution",oM="/E",xn="removeClipping",pD="PH",xm="/Ntilde",LN="/MacExpertEncoding",y4="blankDocumentPaper",gI=190,oL="/j",xl="\nendstream",LM="ENOEXEC",jz="/FontDescriptor",v9="hasBox",xk="getArtBox",gW=168,xj="channel",GV="\\b",LL="/lslash",jZ="/Matrix",LK="EPFNOSUPPORT",nV="setModificationDate",im="/Size",qG="setTitle",GU=12520,Ji="ENOTTY",GS="codepoint_of_pdfdocencoding: bad text string (char %i)\n%!",GT="ENXIO",xi="/Info",uK="setBookmarkText",lL="/WinAnsiEncoding",LJ="/ICCBased",v8="getKeywords",oK="/x",LI=1408,dv=1000,hQ=236,LH="Squeezing page data and xobjects\n",xh="/odieresis",NW="lowercaseRoman",nU="/f",pC="c",LG="setMediabox",k="",a_="/Subtype",Jh="^",eb=737456202,oJ="markTrapped",v7="/ogonek",g6=210,jo=0x3f,qF="CMAXY",Jg="Unknown",xg="%s\n%!",Jf="pdffun.ml",f1=166,GR=277,LF="Match_failure",lZ="/H",du="/Font",NV="/Indexed",dK="/P",v6="getCreationDateXMP",xf="a2portrait",ey="/Parent",jY="/Name",il="+",GQ="getPageLabelStringForPage",Je="ESRCH",NU=16711680,f0=179,v5="getVersion",NT="%li",h_="a",fK=237,gV=178,lY="gs",qE="/guilsinglright",xe="a0portrait",nT="re",fm="/Encoding",GP="/Width",GO=267,y3="/Atilde",NS=1344,LE=0xe0,uJ="a2landscape",v4="div",nS="s",GN="No /Root entry",Jd="ENAMETOOLONG",NR="R",NP=-0.001,NQ="posCentre",LD="twoColumnRight",fl=225,cM=250,Jc="EMSGSIZE",y1="twoUp",y2="startGetOCGList",GM="bad tounicode (%s)\n%!",xd="setBookmarkLevel",qD="markUntrapped",Jb="ECONNREFUSED",LC=";",dO=115,v3="fitWindow",LB="/FitBV",xc="trimMarks",nR="/i",v1=".\n",v2=1255,qC="d0",lA="odd",eF=0x8000,xb="range",fJ=245,qB="/T",y0="jsError",v0="removeCrop",NO="/multiply",LA=2432,NN="recrypt_pdf: bad /ue",vZ="/Perms",fZ=-372779099,uH="blankDocument",uI="ocgListEntry",GL="/Next",Ja="Pdfutil.drop",pB=320,vY="draft",jy=129,Lz="\n",GK="/ON",oI="/parenleft",fk=194,Ly=310,vX=56319,pA="Tf",fA=-48,Lx="codepoint_of_pdfdocencoding: bad text string (char ",yZ="uslegalportrait",Lw="EBADF",vW="/copyright",lq="/colon",bU="camlinternalFormat.ml",uG=65280,I$=312,eE=203,g5="cm",qA="setPageLayout",hI=-95440847,dk="/DecodeParms",Lv="EMLINK",lX=148,oH="J",vV=1114111,uF="a4landscape",NM=317,nQ="g",uE="uslegallandscape",nP="/perthousand",vT="padMultipleBefore",vU="/iacute",xa="deletePdf",I9="TwoColumnRight",I_="rangeAdd",w$="EEXIST",NL=293,yY="/aacute",GJ="hd",GI=2560,lp="/Type3",gU=121,NK=-26,I8="\\n",bV=120,gH=512,qz="/one",NJ=1280,nO="/C",oG="M",vS="annotationsJSON",w_="/Ccedilla",Lu=0x7ff0,uD=-90,fz=177,jn=144,gT=228,Lt="endGetPageLabels",jI="0x",I7="/Descent",h9="\n",Ls="pdf_of_pages",vR="/breve",Lr="timesItalic",cO=105,yX="/Range",qy="/oslash",vQ="tableOfContents",oF="Ts",fy="/Count",nN="CH",GH="obj",I6="CreateDate",jX=158,yW="/LastChar",NI=841.,GG=-108708553,Lp="pagesfast",Lq="/Separation",NG="timesRoman",NH="numberBookmarks",pz="T*",lK=157,NF=2147483646,uC="/ucircumflex",vP="blackLines",I3=283,I4="startGetPageLabels",I5="setCreator",w9="mkdir",GF="recrypt_pdf: no saved encryption",vO="/otilde",NE="helveticaBoldOblique",nM="/exclamdown",Lo="%02i",yV="selectPages",qx="/currency",qw=-174483606,qv=": No such file or directory",uB=266,GE="Creator",jH="<2>",h8=151,py="CW",jW="/a",I2=",@ ",gG=220,Ln="win32",qu="/t",oE="/quoteright",I1="useThumbs",jV="cpdfxmlm.ml",ND="ENOPROTOOPT",eI="/StdCF",GD="/FitV",I0="cpdfimage.ml",qt="/X",GB=-40,GC="markUntrappedXMP",IZ="?>",Lm=" 0 obj\n",NC=2496,fY="/Title",Gz="TwoPageLeft",GA="decimalArabic",IY=-34,vN="addText",IX="toMemoryExt",nL="PMINX",Gx="Pervasives.do_at_exit",Gy="utf8",vM="/Icircumflex",Gw="''",Gv=1001,px="/endash",aF="/Type",yU="ocgRename",NB="/zcaron",Gu="EISDIR",c4="/Kids",ex=217,yT="/registered",uA="/logicalnot",g4="/Form",lo="v",pw="/g",lW=134,IW="Unsupported base colourspace in index colourspace",qs="/DCT",yS="/oacute",ik=176;function
a7X(d,b,e,c,f){if(c<=b)for(var
a=1;a<=f;a++)e[c+a]=d[b+a];else
for(var
a=f;a>=1;a--)e[c+a]=d[b+a];return 0}function
a7Y(b,d,c,e){for(var
a=0;a<c;a++)b[d+a+1]=e;return 0}function
a8R(b,a){throw[0,b,a]}function
ka(b,a){if(b==0)return k;if(a.repeat)return a.repeat(b);var
d=k,c=0;for(;;){if(b&1)d+=a;b>>=1;if(b==0)return d;a+=a;c++;if(c==9)a.slice(0,1)}}function
rL(c,b,a){var
d=String.fromCharCode;if(b==0&&a<=id&&a==c.length)return d.apply(null,c);var
e=k;for(;0<a;b+=b7,a-=b7)e+=d.apply(null,c.slice(b,b+Math.min(a,b7)));return e}function
iA(a){if(a.t==2)a.c+=ka(a.l-a.c.length,"\0");else
a.c=rL(a.c,0,a.c.length);a.t=0}function
Qp(a){if(a.length<24){for(var
b=0;b<a.length;b++)if(a.charCodeAt(b)>dL)return false;return true}else
return!/[^\x00-\x7f]/.test(a)}function
AK(e){for(var
j=k,c=k,g,f,h,a,b=0,i=e.length;b<i;b++){f=e.charCodeAt(b);if(f<dN){for(var
d=b+1;d<i&&(f=e.charCodeAt(d))<dN;d++);if(d-b>gH){c.substr(0,1);j+=c;c=k;j+=e.slice(b,d)}else
c+=e.slice(b,d);if(d==i)break;b=d}a=1;if(++b<i&&((h=e.charCodeAt(b))&-64)==N){g=h+(f<<6);if(f<LE){a=g-0x3080;if(a<dN)a=1}else{a=2;if(++b<i&&((h=e.charCodeAt(b))&-64)==N){g=h+(g<<6);if(f<J0){a=g-0xe2080;if(a<Mh||a>=0xd7ff&&a<0xe000)a=2}else{a=3;if(++b<i&&((h=e.charCodeAt(b))&-64)==N&&f<0xf5){a=h-0x3c82080+(g<<6);if(a<0x10000||a>0x10ffff)a=3}}}}}if(a<4){b-=a;c+="\ufffd"}else
if(a>ez)c+=String.fromCharCode(0xd7c0+(a>>10),MJ+(a&0x3FF));else
c+=String.fromCharCode(a);if(c.length>b7){c.substr(0,1);j+=c;c=k}}return j+c}function
eQ(c,a,b){this.t=c;this.c=a;this.l=b}eQ.prototype.toString=function(){switch(this.t){case
9:return this.c;default:iA(this);case
0:if(Qp(this.c)){this.t=9;return this.c}this.t=8;case
8:return this.c}};eQ.prototype.toUtf16=function(){var
a=this.toString();if(this.t==9)return a;return AK(a)};eQ.prototype.slice=function(){var
a=this.t==4?this.c.slice():this.c;return new
eQ(this.t,a,this.l)};function
PW(a){return new
eQ(0,a,a.length)}function
a(a){return PW(a)}function
AI(c,b){a8R(c,a(b))}var
bc=[0];function
bz(a){AI(bc.Invalid_argument,a)}function
j7(){bz(zu)}function
a7Z(b,a){if(a<0||a>=b.length-1)j7();return b[a+1]}function
PN(e,f,d){var
a=new
Array(d+1);a[0]=0;for(var
b=1,c=f+1;b<=d;b++,c++)a[b]=e[c];return a}function
PR(a){switch(a){case
7:case
10:case
11:return 2;default:return 1}}function
PP(c,e){var
b=W,a;switch(c){case
0:a=b.Float32Array;break;case
1:a=b.Float64Array;break;case
2:a=b.Int8Array;break;case
3:a=b.Uint8Array;break;case
4:a=b.Int16Array;break;case
5:a=b.Uint16Array;break;case
6:a=b.Int32Array;break;case
7:a=b.Int32Array;break;case
8:a=b.Int32Array;break;case
9:a=b.Int32Array;break;case
10:a=b.Float32Array;break;case
11:a=b.Float64Array;break;case
12:a=b.Uint8Array;break}if(!a)bz("Bigarray.create: unsupported kind");var
d=new
a(e*PR(c));return d}function
rw(b){var
d=b.length,c=1;for(var
a=0;a<d;a++){if(b[a]<0)bz("Bigarray.create: negative dimension");c=c*b[a]}return c}var
P4=Math.pow(2,-24);function
AH(a){throw a}function
rJ(){AH(bc.Division_by_zero)}function
ag(b,c,a){this.lo=b&fS;this.mi=c&fS;this.hi=a&ez}ag.prototype.caml_custom="_j";ag.prototype.copy=function(){return new
ag(this.lo,this.mi,this.hi)};ag.prototype.ucompare=function(a){if(this.hi>a.hi)return 1;if(this.hi<a.hi)return-1;if(this.mi>a.mi)return 1;if(this.mi<a.mi)return-1;if(this.lo>a.lo)return 1;if(this.lo<a.lo)return-1;return 0};ag.prototype.compare=function(a){var
b=this.hi<<16,c=a.hi<<16;if(b>c)return 1;if(b<c)return-1;if(this.mi>a.mi)return 1;if(this.mi<a.mi)return-1;if(this.lo>a.lo)return 1;if(this.lo<a.lo)return-1;return 0};ag.prototype.neg=function(){var
a=-this.lo,b=-this.mi+(a>>24),c=-this.hi+(b>>24);return new
ag(a,b,c)};ag.prototype.add=function(a){var
b=this.lo+a.lo,c=this.mi+a.mi+(b>>24),d=this.hi+a.hi+(c>>24);return new
ag(b,c,d)};ag.prototype.sub=function(a){var
b=this.lo-a.lo,c=this.mi-a.mi+(b>>24),d=this.hi-a.hi+(c>>24);return new
ag(b,c,d)};ag.prototype.mul=function(a){var
b=this.lo*a.lo,c=(b*P4|0)+this.mi*a.lo+this.lo*a.mi,d=(c*P4|0)+this.hi*a.lo+this.mi*a.mi+this.lo*a.hi;return new
ag(b,c,d)};ag.prototype.isZero=function(){return(this.lo|this.mi|this.hi)==0};ag.prototype.isNeg=function(){return this.hi<<16<0};ag.prototype.and=function(a){return new
ag(this.lo&a.lo,this.mi&a.mi,this.hi&a.hi)};ag.prototype.or=function(a){return new
ag(this.lo|a.lo,this.mi|a.mi,this.hi|a.hi)};ag.prototype.xor=function(a){return new
ag(this.lo^a.lo,this.mi^a.mi,this.hi^a.hi)};ag.prototype.shift_left=function(a){a=a&63;if(a==0)return this;if(a<24)return new
ag(this.lo<<a,this.mi<<a|this.lo>>24-a,this.hi<<a|this.mi>>24-a);if(a<48)return new
ag(0,this.lo<<a-24,this.mi<<a-24|this.lo>>48-a);return new
ag(0,0,this.lo<<a-48)};ag.prototype.shift_right_unsigned=function(a){a=a&63;if(a==0)return this;if(a<24)return new
ag(this.lo>>a|this.mi<<24-a,this.mi>>a|this.hi<<24-a,this.hi>>a);if(a<48)return new
ag(this.mi>>a-24|this.hi<<48-a,this.hi>>a-24,0);return new
ag(this.hi>>a-48,0,0)};ag.prototype.shift_right=function(a){a=a&63;if(a==0)return this;var
c=this.hi<<16>>16;if(a<24)return new
ag(this.lo>>a|this.mi<<24-a,this.mi>>a|c<<24-a,this.hi<<16>>a>>>16);var
b=this.hi<<16>>31;if(a<48)return new
ag(this.mi>>a-24|this.hi<<48-a,this.hi<<16>>a-24>>16,b&ez);return new
ag(this.hi<<16>>a-32,b,b)};ag.prototype.lsl1=function(){this.hi=this.hi<<1|this.mi>>23;this.mi=(this.mi<<1|this.lo>>23)&fS;this.lo=this.lo<<1&fS};ag.prototype.lsr1=function(){this.lo=(this.lo>>>1|this.mi<<23)&fS;this.mi=(this.mi>>>1|this.hi<<23)&fS;this.hi=this.hi>>>1};ag.prototype.udivmod=function(e){var
c=0,b=this.copy(),a=e.copy(),d=new
ag(0,0,0);while(b.ucompare(a)>0){c++;a.lsl1()}while(c>=0){c--;d.lsl1();if(b.ucompare(a)>=0){d.lo++;b=b.sub(a)}a.lsr1()}return{quotient:d,modulus:b}};ag.prototype.div=function(a){var
b=this;if(a.isZero())rJ();var
d=b.hi^a.hi;if(b.hi&eF)b=b.neg();if(a.hi&eF)a=a.neg();var
c=b.udivmod(a).quotient;if(d&eF)c=c.neg();return c};ag.prototype.mod=function(b){var
a=this;if(b.isZero())rJ();var
d=a.hi;if(a.hi&eF)a=a.neg();if(b.hi&eF)b=b.neg();var
c=a.udivmod(b).modulus;if(d&eF)c=c.neg();return c};ag.prototype.toInt=function(){return this.lo|this.mi<<24};ag.prototype.toFloat=function(){return(this.hi<<16)*Math.pow(2,32)+this.mi*Math.pow(2,24)+this.lo};ag.prototype.toArray=function(){return[this.hi>>8,this.hi&fs,this.mi>>16,this.mi>>8&fs,this.mi&fs,this.lo>>16,this.lo>>8&fs,this.lo&fs]};ag.prototype.lo32=function(){return this.lo|(this.mi&fs)<<24};ag.prototype.hi32=function(){return this.mi>>>8&ez|this.hi<<16};function
a8p(b,a){return new
ag(b&fS,b>>>24&fs|(a&ez)<<8,a>>>16&ez)}function
AC(a){return a.hi32()}function
AD(a){return a.lo32()}var
a72=qV;function
hc(c,d,b,a){this.kind=c;this.layout=d;this.dims=b;this.data=a}hc.prototype.caml_custom=a72;hc.prototype.offset=function(b){var
c=0;if(typeof
b==="number")b=[b];if(!(b
instanceof
Array))bz("bigarray.js: invalid offset");if(this.dims.length!=b.length)bz("Bigarray.get/set: bad number of dimensions");if(this.layout==0)for(var
a=0;a<this.dims.length;a++){if(b[a]<0||b[a]>=this.dims[a])j7();c=c*this.dims[a]+b[a]}else
for(var
a=this.dims.length-1;a>=0;a--){if(b[a]<1||b[a]>this.dims[a])j7();c=c*this.dims[a]+(b[a]-1)}return c};hc.prototype.get=function(a){switch(this.kind){case
7:var
d=this.data[a*2+0],b=this.data[a*2+1];return a8p(d,b);case
10:case
11:var
e=this.data[a*2+0],c=this.data[a*2+1];return[V,e,c];default:return this.data[a]}};hc.prototype.set=function(a,b){switch(this.kind){case
7:this.data[a*2+0]=AD(b);this.data[a*2+1]=AC(b);break;case
10:case
11:this.data[a*2+0]=b[1];this.data[a*2+1]=b[2];break;default:this.data[a]=b;break}return 0};hc.prototype.fill=function(b){switch(this.kind){case
7:var
c=AD(b),e=AC(b);if(c==e)this.data.fill(c);else
for(var
a=0;a<this.data.length;a++)this.data[a]=a%2==0?c:e;break;case
10:case
11:var
d=b[1],f=b[2];if(d==f)this.data.fill(d);else
for(var
a=0;a<this.data.length;a++)this.data[a]=a%2==0?d:f;break;default:this.data.fill(b);break}};hc.prototype.compare=function(b,g){if(this.layout!=b.layout||this.kind!=b.kind){var
e=this.kind|this.layout<<8,f=b.kind|b.layout<<8;return f-e}if(this.dims.length!=b.dims.length)return b.dims.length-this.dims.length;for(var
a=0;a<this.dims.length;a++)if(this.dims[a]!=b.dims[a])return this.dims[a]<b.dims[a]?-1:1;switch(this.kind){case
0:case
1:case
10:case
11:var
c,d;for(var
a=0;a<this.data.length;a++){c=this.data[a];d=b.data[a];if(c<d)return-1;if(c>d)return 1;if(c!=d){if(!g)return NaN;if(c==c)return 1;if(d==d)return-1}}break;case
7:for(var
a=0;a<this.data.length;a+=2){if(this.data[a+1]<b.data[a+1])return-1;if(this.data[a+1]>b.data[a+1])return 1;if(this.data[a]>>>0<b.data[a]>>>0)return-1;if(this.data[a]>>>0>b.data[a]>>>0)return 1}break;case
2:case
3:case
4:case
5:case
6:case
8:case
9:case
12:for(var
a=0;a<this.data.length;a++){if(this.data[a]<b.data[a])return-1;if(this.data[a]>b.data[a])return 1}break}return 0};function
j6(c,d,b,a){this.kind=c;this.layout=d;this.dims=b;this.data=a}j6.prototype=new
hc();j6.prototype.offset=function(a){if(typeof
a!=="number")if(a
instanceof
Array&&a.length==1)a=a[0];else
bz("Ml_Bigarray_c_1_1.offset");if(a<0||a>=this.dims[0])j7();return a};j6.prototype.get=function(a){return this.data[a]};j6.prototype.set=function(a,b){this.data[a]=b;return 0};j6.prototype.fill=function(a){this.data.fill(a);return 0};function
rv(c,d,a,b){var
e=PR(c);if(rw(a)*e!=b.length)bz("length doesn't match dims");if(d==0&&a.length==1&&e==1)return new
j6(c,d,a,b);return new
hc(c,d,a,b)}function
hg(a){return a.slice(1)}function
a71(b,e,d){var
a=hg(d),c=PP(b,rw(a));return rv(b,e,a,c)}function
a73(b,a){if(a<0||a>=b.dims.length)bz("Bigarray.dim");return b.dims[a]}function
a74(a){return a73(a,0)}function
a76(c){var
b=W,a;if(c
instanceof
b.Float32Array)a=0;else
if(c
instanceof
b.Float64Array)a=1;else
if(c
instanceof
b.Int8Array)a=2;else
if(c
instanceof
b.Uint8Array)a=3;else
if(c
instanceof
b.Int16Array)a=4;else
if(c
instanceof
b.Uint16Array)a=5;else
if(c
instanceof
b.Int32Array)a=6;else
if(c
instanceof
b.Uint32Array)a=6;else
bz("caml_ba_kind_of_typed_array: unsupported kind");return a}function
a75(a){var
b=a76(a);return rv(b,0,[a.length],a)}function
Au(a,b){return a.get(a.offset(b))}function
a77(a){return a.dims.length}function
rx(a,b,c){a.set(a.offset(b),c);return 0}function
eT(a){return a.data}function
rz(b){if(W.Uint8Array)var
c=new(W.Uint8Array)(b.l);else
var
c=new
Array(b.l);var
e=b.c,d=e.length,a=0;for(;a<d;a++)c[a]=e.charCodeAt(a);for(d=b.l;a<d;a++)c[a]=0;b.c=c;b.t=4;return c}function
hd(d,e,b,f,c){if(c==0)return 0;if(f==0&&(c>=b.l||b.t==2&&c>=b.c.length)){b.c=d.t==4?rL(d.c,e,c):e==0&&d.c.length==c?d.c:d.c.substr(e,c);b.t=b.c.length==b.l?0:2}else
if(b.t==2&&f==b.c.length){b.c+=d.t==4?rL(d.c,e,c):e==0&&d.c.length==c?d.c:d.c.substr(e,c);b.t=b.c.length==b.l?0:2}else{if(b.t!=4)rz(b);var
g=d.c,h=b.c;if(d.t==4)if(f<=e)for(var
a=0;a<c;a++)h[f+a]=g[e+a];else
for(var
a=c-1;a>=0;a--)h[f+a]=g[e+a];else{var
i=Math.min(c,g.length-e);for(var
a=0;a<i;a++)h[f+a]=g.charCodeAt(e+a);for(;a<c;a++)h[f+a]=0}}return 0}function
c_(a){return a}function
ed(a,b,c,d,e){hd(c_(a),b,c,d,e);return 0}function
PU(){bz(zu)}function
c$(a,b){switch(a.t&6){default:if(b>=a.c.length)return 0;case
0:return a.c.charCodeAt(b);case
4:return a.c[b]}}function
eU(b,a){if(a>>>0>=b.l)PU();return c$(b,a)}function
aZ(a,c,b){b&=fs;if(a.t!=4){if(c==a.c.length){a.c+=String.fromCharCode(b);if(c+1==a.l)a.t=0;return 0}rz(a)}a.c[c]=b;return 0}function
ee(b,a,c){if(a>>>0>=b.l)PU();return aZ(b,a,c)}function
dU(c,a){if(c.fun)return dU(c.fun,a);if(typeof
c!=="function")return c;var
b=c.length|0;if(b===0)return c.apply(null,a);var
e=a.length|0,d=b-e|0;if(d==0)return c.apply(null,a);else
if(d<0)return dU(c.apply(null,a.slice(0,b)),a.slice(b));else
return function(){var
e=arguments.length==0?1:arguments.length,d=new
Array(a.length+e);for(var
b=0;b<a.length;b++)d[b]=a[b];for(var
b=0;b<arguments.length;b++)d[a.length+b]=arguments[b];return dU(c,d)}}function
p(a,b){if(b>>>0>=a.length-1)j7();return a}function
ry(a){if(isFinite(a)){if(Math.abs(a)>=2.2250738585072014e-308)return 0;if(a!=0)return 1;return 2}return isNaN(a)?4:3}function
eg(a){a.t&6&&iA(a);return a.c}var
a9b=Math.log2&&Math.log2(1.1235582092889474E+307)==1020;function
a9a(a){if(a9b)return Math.floor(Math.log2(a));var
b=0;if(a==0)return-Infinity;if(a>=1)while(a>=2){a/=2;b++}else
while(a<1){a*=2;b--}return b}function
AA(c){var
a=new(W.Float32Array)(1);a[0]=c;var
b=new(W.Int32Array)(a.buffer);return b[0]|0}function
ef(b,c,a){return new
ag(b,c,a)}function
rD(a){if(!isFinite(a)){if(isNaN(a))return ef(1,0,Lu);return a>0?ef(0,0,Lu):ef(0,0,0xfff0)}var
f=a==0&&1/a==-Infinity?eF:a>=0?0:eF;if(f)a=-a;var
b=a9a(a)+lx;if(b<=0){b=0;a/=Math.pow(2,-If)}else{a/=Math.pow(2,b-PH);if(a<16){a*=2;b-=1}if(b==0)a/=2}var
d=Math.pow(2,24),c=a|0;a=(a-c)*d;var
e=a|0;a=(a-e)*d;var
g=a|0;c=c&zn|f|b<<4;return ef(g,e,c)}function
md(a){return a.toArray()}function
PT(c,b,g){c.write(32,b.dims.length);c.write(32,b.kind|b.layout<<8);if(b.caml_custom==qV)for(var
a=0;a<b.dims.length;a++)if(b.dims[a]<ez)c.write(16,b.dims[a]);else{c.write(16,ez);c.write(32,0);c.write(32,b.dims[a])}else
for(var
a=0;a<b.dims.length;a++)c.write(32,b.dims[a]);switch(b.kind){case
2:case
3:case
12:for(var
a=0;a<b.data.length;a++)c.write(8,b.data[a]);break;case
4:case
5:for(var
a=0;a<b.data.length;a++)c.write(16,b.data[a]);break;case
6:for(var
a=0;a<b.data.length;a++)c.write(32,b.data[a]);break;case
8:case
9:c.write(8,0);for(var
a=0;a<b.data.length;a++)c.write(32,b.data[a]);break;case
7:for(var
a=0;a<b.data.length/2;a++){var
e=md(b.get(a));for(var
d=0;d<8;d++)c.write(8,e[d])}break;case
1:for(var
a=0;a<b.data.length;a++){var
e=md(rD(b.get(a)));for(var
d=0;d<8;d++)c.write(8,e[d])}break;case
0:for(var
a=0;a<b.data.length;a++){var
e=AA(b.get(a));c.write(32,e)}break;case
10:for(var
a=0;a<b.data.length/2;a++){var
d=b.get(a);c.write(32,AA(d[1]));c.write(32,AA(d[2]))}break;case
11:for(var
a=0;a<b.data.length/2;a++){var
f=b.get(a),e=md(rD(f[1]));for(var
d=0;d<8;d++)c.write(8,e[d]);var
e=md(rD(f[2]));for(var
d=0;d<8;d++)c.write(8,e[d])}break}g[0]=(4+b.dims.length)*4;g[1]=(4+b.dims.length)*8}function
AB(c){var
a=new(W.Int32Array)(1);a[0]=c;var
b=new(W.Float32Array)(a.buffer);return b[0]}function
mc(a){return new
ag(a[7]<<0|a[6]<<8|a[5]<<16,a[4]<<0|a[3]<<8|a[2]<<16,a[1]<<0|a[0]<<8)}function
j9(d){var
f=d.lo,g=d.mi,b=d.hi,c=(b&0x7fff)>>4;if(c==xT)return(f|g|b&zn)==0?b&eF?-Infinity:Infinity:NaN;var
e=Math.pow(2,-24),a=(f*e+g)*e+(b&zn);if(c>0){a+=16;a*=Math.pow(2,c-PH)}else
a*=Math.pow(2,-If);if(b&eF)a=-a;return a}function
dz(b){if(!bc.Failure)bc.Failure=[Q,a(x9),-3];AI(bc.Failure,b)}function
PQ(b,v,r){var
i=b.read32s();if(i<0||i>16)dz("input_value: wrong number of bigarray dimensions");var
p=b.read32s(),j=p&fs,o=p>>8&1,h=[];if(r==qV)for(var
a=0;a<i;a++){var
n=b.read16u();if(n==ez){var
t=b.read32u(),u=b.read32u();if(t!=0)dz("input_value: bigarray dimension overflow in 32bit");n=u}h.push(n)}else
for(var
a=0;a<i;a++)h.push(b.read32u());var
d=rw(h),f=PP(j,d),g=rv(j,o,h,f);switch(j){case
2:for(var
a=0;a<d;a++)f[a]=b.read8s();break;case
3:case
12:for(var
a=0;a<d;a++)f[a]=b.read8u();break;case
4:for(var
a=0;a<d;a++)f[a]=b.read16s();break;case
5:for(var
a=0;a<d;a++)f[a]=b.read16u();break;case
6:for(var
a=0;a<d;a++)f[a]=b.read32s();break;case
8:case
9:var
s=b.read8u();if(s)dz("input_value: cannot read bigarray with 64-bit OCaml ints");for(var
a=0;a<d;a++)f[a]=b.read32s();break;case
7:var
e=new
Array(8);for(var
a=0;a<d;a++){for(var
c=0;c<8;c++)e[c]=b.read8u();var
q=mc(e);g.set(a,q)}break;case
1:var
e=new
Array(8);for(var
a=0;a<d;a++){for(var
c=0;c<8;c++)e[c]=b.read8u();var
k=j9(mc(e));g.set(a,k)}break;case
0:for(var
a=0;a<d;a++){var
k=AB(b.read32s());g.set(a,k)}break;case
10:for(var
a=0;a<d;a++){var
m=AB(b.read32s()),l=AB(b.read32s());g.set(a,[V,m,l])}break;case
11:var
e=new
Array(8);for(var
a=0;a<d;a++){for(var
c=0;c<8;c++)e[c]=b.read8u();var
m=j9(mc(e));for(var
c=0;c<8;c++)e[c]=b.read8u();var
l=j9(mc(e));g.set(a,[V,m,l])}break}v[0]=(4+i)*4;return rv(j,o,h,f)}function
PO(a,b,c){return a.compare(b,c)}function
bd(a,b){return Math.imul(a,b)}function
cp(b,a){a=bd(a,0xcc9e2d51|0);a=a<<15|a>>>32-15;a=bd(a,0x1b873593);b^=a;b=b<<13|b>>>32-13;return(b+(b<<2)|0)+(0xe6546b64|0)|0}function
a8j(a,b){a=cp(a,AD(b));a=cp(a,AC(b));return a}function
Ay(a,b){return a8j(a,rD(b))}function
PS(c){var
b=rw(c.dims),d=0;switch(c.kind){case
2:case
3:case
12:if(b>ak)b=ak;var
e=0,a=0;for(a=0;a+4<=c.data.length;a+=4){e=c.data[a+0]|c.data[a+1]<<8|c.data[a+2]<<16|c.data[a+3]<<24;d=cp(d,e)}e=0;switch(b&3){case
3:e=c.data[a+2]<<16;case
2:e|=c.data[a+1]<<8;case
1:e|=c.data[a+0];d=cp(d,e)}break;case
4:case
5:if(b>N)b=N;var
e=0,a=0;for(a=0;a+2<=c.data.length;a+=2){e=c.data[a+0]|c.data[a+1]<<16;d=cp(d,e)}if((b&1)!=0)d=cp(d,c.data[a]);break;case
6:if(b>64)b=64;for(var
a=0;a<b;a++)d=cp(d,c.data[a]);break;case
8:case
9:if(b>64)b=64;for(var
a=0;a<b;a++)d=cp(d,c.data[a]);break;case
7:if(b>32)b=32;b*=2;for(var
a=0;a<b;a++)d=cp(d,c.data[a]);break;case
10:b*=2;case
0:if(b>64)b=64;for(var
a=0;a<b;a++)d=Ay(d,c.data[a]);break;case
11:b*=2;case
1:if(b>32)b=32;for(var
a=0;a<b;a++)d=Ay(d,c.data[a]);break}return d}function
a8m(a,b){b[0]=4;return a.read32s()}function
a8L(a,b){switch(a.read8u()){case
1:b[0]=4;return a.read32s();case
2:dz("input_value: native integer value too large");default:dz("input_value: ill-formed native integer")}}function
a8z(c,d){var
b=new
Array(8);for(var
a=0;a<8;a++)b[a]=c.read8u();d[0]=8;return mc(b)}function
a8u(e,d,b){var
c=md(d);for(var
a=0;a<8;a++)e.write(8,c[a]);b[0]=8;b[1]=8}function
a8o(a,b,c){return a.compare(b)}function
a8r(a){return a.lo32()^a.hi32()}var
ma={"_j":{deserialize:a8z,serialize:a8u,fixed_length:8,compare:a8o,hash:a8r},"_i":{deserialize:a8m,fixed_length:4},"_n":{deserialize:a8L,fixed_length:4},"_bigarray":{deserialize:function(a,b){return PQ(a,b,"_bigarray")},serialize:PT,compare:PO,hash:PS},"_bigarr02":{deserialize:function(a,b){return PQ(a,b,qV)},serialize:PT,compare:PO,hash:PS}};function
Av(a){return ma[a.caml_custom]&&ma[a.caml_custom].compare}function
PX(f,c,d,e){var
b=Av(c);if(b){var
a=d>0?b(c,f,e):b(f,c,e);if(e&&a!=a)return d;if(+a!=+a)return+a;if((a|0)!=0)return a|0}return d}function
me(a){return a
instanceof
eQ}function
rG(a){return me(a)}function
PY(a){if(typeof
a==="number")return dv;else
if(me(a))return dM;else
if(rG(a))return 1252;else
if(a
instanceof
Array&&a[0]===a[0]>>>0&&a[0]<=aq){var
b=a[0]|0;return b==V?0:b}else
if(a
instanceof
String)return GU;else
if(typeof
a=="string")return GU;else
if(a
instanceof
Number)return dv;else
if(a&&a.caml_custom)return v2;else
if(a&&a.compare)return 1256;else
if(typeof
a=="function")return 1247;else
if(typeof
a=="symbol")return 1251;return Gv}function
hf(a,b){if(a<b)return-1;if(a==b)return 0;return 1}function
PV(a,b){a.t&6&&iA(a);b.t&6&&iA(b);return a.c<b.c?-1:a.c>b.c?1:0}function
a2(a,b){return PV(a,b)}function
j8(a,b,d){var
e=[];for(;;){if(!(d&&a===b)){var
f=PY(a);if(f==cM){a=a[1];continue}var
g=PY(b);if(g==cM){b=b[1];continue}if(f!==g){if(f==dv){if(g==v2)return PX(a,b,-1,d);return-1}if(g==dv){if(f==v2)return PX(b,a,1,d);return 1}return f<g?-1:1}switch(f){case
247:bz(yw);break;case
248:var
c=hf(a[2],b[2]);if(c!=0)return c|0;break;case
249:bz(yw);break;case
250:bz("equal: got Forward_tag, should not happen");break;case
251:bz("equal: abstract value");break;case
252:if(a!==b){var
c=PV(a,b);if(c!=0)return c|0}break;case
253:bz("equal: got Double_tag, should not happen");break;case
254:bz("equal: got Double_array_tag, should not happen");break;case
255:bz("equal: got Custom_tag, should not happen");break;case
1247:bz(yw);break;case
1255:var
i=Av(a);if(i!=Av(b))return a.caml_custom<b.caml_custom?-1:1;if(!i)bz("compare: abstract value");var
c=i(a,b,d);if(c!=c)return d?-1:c;if(c!==(c|0))return-1;if(c!=0)return c|0;break;case
1256:var
c=a.compare(b,d);if(c!=c)return d?-1:c;if(c!==(c|0))return-1;if(c!=0)return c|0;break;case
1000:a=+a;b=+b;if(a<b)return-1;if(a>b)return 1;if(a!=b){if(!d)return NaN;if(a==a)return 1;if(b==b)return-1}break;case
1001:if(a<b)return-1;if(a>b)return 1;if(a!=b){if(!d)return NaN;if(a==a)return 1;if(b==b)return-1}break;case
1251:if(a!==b){if(!d)return NaN;return 1}break;case
1252:var
a=eg(a),b=eg(b);if(a!==b){if(a<b)return-1;if(a>b)return 1}break;case
12520:var
a=a.toString(),b=b.toString();if(a!==b){if(a<b)return-1;if(a>b)return 1}break;case
246:case
254:default:if(a.length!=b.length)return a.length<b.length?-1:1;if(a.length>1)e.push(a,b,1);break}}if(e.length==0)return 0;var
h=e.pop();b=e.pop();a=e.pop();if(h+1<a.length)e.push(a,b,h+1);a=a[h];b=b[h]}}function
bY(a,b){return j8(a,b,true)}function
a7_(){return[0]}function
aG(a){if(a<0)bz("Bytes.create");return new
eQ(a?2:9,k,a)}function
rA(b,a){if(a==0)rJ();return b/a|0}function
aD(a,b){return+(j8(a,b,false)==0)}function
a8a(a,c,b,d){if(b>0)if(c==0&&(b>=a.l||a.t==2&&b>=a.c.length))if(d==0){a.c=k;a.t=2}else{a.c=ka(b,String.fromCharCode(d));a.t=b==a.l?0:2}else{if(a.t!=4)rz(a);for(b+=c;c<b;c++)a.c[c]=d}return 0}function
a8b(a,b){if(a===b)return 0;if(a<b)return-1;if(a>b)return 1;if(a===a)return 1;if(b===b)return-1;return 0}function
iB(a){var
b;a=eg(a);b=+a;if(a.length>0&&b===b)return b;a=a.replace(/_/g,k);b=+a;if(a.length>0&&b===b||/^[+-]?nan$/i.test(a))return b;var
c=/^ *([+-]?)0x([0-9a-f]+)\.?([0-9a-f]*)(p([+-]?[0-9]+))?/i.exec(a);if(c){var
d=c[3].replace(/0+$/,k),f=parseInt(c[1]+c[2]+d,16),e=(c[5]|0)-4*d.length;b=f*Math.pow(2,e);return b}if(/^\+?inf(inity)?$/i.test(a))return Infinity;if(/^-inf(inity)?$/i.test(a))return-Infinity;dz("float_of_string")}function
AG(d){d=eg(d);var
e=d.length;if(e>31)bz("format_int: format too long");var
a={justify:il,signstyle:dR,filler:by,alternate:false,base:0,signedconv:false,width:0,uppercase:false,sign:1,prec:-1,conv:l0};for(var
c=0;c<e;c++){var
b=d.charAt(c);switch(b){case"-":a.justify=dR;break;case"+":case" ":a.signstyle=b;break;case"0":a.filler=bM;break;case"#":a.alternate=true;break;case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":a.width=0;while(b=d.charCodeAt(c)-48,b>=0&&b<=9){a.width=a.width*10+b;c++}c--;break;case".":a.prec=0;c++;while(b=d.charCodeAt(c)-48,b>=0&&b<=9){a.prec=a.prec*10+b;c++}c--;case"d":case"i":a.signedconv=true;case"u":a.base=10;break;case"x":a.base=16;break;case"X":a.base=16;a.uppercase=true;break;case"o":a.base=8;break;case"e":case"f":case"g":a.signedconv=true;a.conv=b;break;case"E":case"F":case"G":a.signedconv=true;a.uppercase=true;a.conv=b.toLowerCase();break}}return a}function
Aw(b,f){if(b.uppercase)f=f.toUpperCase();var
e=f.length;if(b.signedconv&&(b.sign<0||b.signstyle!=dR))e++;if(b.alternate){if(b.base==8)e+=1;if(b.base==16)e+=2}var
c=k;if(b.justify==il&&b.filler==by)for(var
d=e;d<b.width;d++)c+=by;if(b.signedconv)if(b.sign<0)c+=dR;else
if(b.signstyle!=dR)c+=b.signstyle;if(b.alternate&&b.base==8)c+=bM;if(b.alternate&&b.base==16)c+=jI;if(b.justify==il&&b.filler==bM)for(var
d=e;d<b.width;d++)c+=bM;c+=f;if(b.justify==dR)for(var
d=e;d<b.width;d++)c+=by;return a(c)}function
Ax(i,c){function
j(a,b){if(Math.abs(a)<1.0)return a.toFixed(b);else{var
c=parseInt(a.toString().split(il)[1]);if(c>20){c-=20;a/=Math.pow(10,c);a+=new
Array(c+1).join(bM);if(b>0)a=a+dP+new
Array(b+1).join(bM);return a}else
return a.toFixed(b)}}var
a,e=AG(i),d=e.prec<0?6:e.prec;if(c<0||c==0&&1/c==-Infinity){e.sign=-1;c=-c}if(isNaN(c)){a=x$;e.filler=by}else
if(!isFinite(c)){a="inf";e.filler=by}else
switch(e.conv){case"e":var
a=c.toExponential(d),b=a.length;if(a.charAt(b-3)==Am)a=a.slice(0,b-1)+bM+a.slice(b-1);break;case"f":a=j(c,d);break;case"g":d=d?d:1;a=c.toExponential(d-1);var
h=a.indexOf(Am),g=+a.slice(h+1);if(g<-4||c>=1e21||c.toFixed(0).length>d){var
b=h-1;while(a.charAt(b)==bM)b--;if(a.charAt(b)==dP)b--;a=a.slice(0,b+1)+a.slice(h);b=a.length;if(a.charAt(b-3)==Am)a=a.slice(0,b-1)+bM+a.slice(b-1);break}else{var
f=d;if(g<0){f-=g+1;a=c.toFixed(f)}else
while(a=c.toFixed(f),a.length>d+1)f--;if(f){var
b=a.length-1;while(a.charAt(b)==bM)b--;if(a.charAt(b)==dP)b--;a=a.slice(0,b+1)}}break}return Aw(e,a)}function
rB(e,c){if(eg(e)==lI)return a(k+c);var
b=AG(e);if(c<0)if(b.signedconv){b.sign=-1;c=-c}else
c>>>=0;var
d=c.toString(b.base);if(b.prec>=0){b.filler=by;var
f=b.prec-d.length;if(f>0)d=ka(f,bM)+d}return Aw(b,d)}var
Qd=0;function
aL(){return Qd++}function
a0(a){return a.toUtf16()}function
mj(){return typeof
W.process!=="undefined"&&typeof
W.process.versions!=="undefined"&&typeof
W.process.versions.node!=="undefined"}function
a9c(){function
a(a){if(a.charAt(0)===bb)return[k,a.substring(1)];return}function
b(c){var
g=/^([a-zA-Z]:|[\\/]{2}[^\\/]+[\\/]+[^\\/]+)?([\\/])?([\s\S]*?)$/,a=g.exec(c),b=a[1]||k,e=Boolean(b&&b.charAt(1)!==lr);if(Boolean(a[2]||e)){var
d=a[1]||k,f=a[2]||k;return[d,c.substring(d.length+f.length)]}return}return mj()&&W.process&&W.process.platform?W.process.platform===Ln?b:a:a}var
AM=a9c();function
Qj(a){return a.slice(-1)!==bb?a+bb:a}if(mj()&&W.process&&W.process.cwd)var
l$=W.process.cwd().replace(/\\/g,bb);else
var
l$="/static";l$=Qj(l$);function
a8C(a){a=a0(a);if(!AM(a))a=l$+a;var
e=AM(a),d=e[1].split(bb),b=[];for(var
c=0;c<d.length;c++)switch(d[c]){case"..":if(b.length>1)b.pop();break;case".":break;default:b.push(d[c]);break}b.unshift(e[0]);b.orig=a;return b}function
a80(e){for(var
f=k,b=f,a,h,c=0,g=e.length;c<g;c++){a=e.charCodeAt(c);if(a<dN){for(var
d=c+1;d<g&&(a=e.charCodeAt(d))<dN;d++);if(d-c>gH){b.substr(0,1);f+=b;b=k;f+=e.slice(c,d)}else
b+=e.slice(c,d);if(d==g)break;c=d}if(a<Mh){b+=String.fromCharCode(0xc0|a>>6);b+=String.fromCharCode(dN|a&jo)}else
if(a<0xd800||a>=OU)b+=String.fromCharCode(LE|a>>12,dN|a>>6&jo,dN|a&jo);else
if(a>=0xdbff||c+1==g||(h=e.charCodeAt(c+1))<MJ||h>OU)b+="\xef\xbf\xbd";else{c++;a=(a<<10)+h-0x35fdc00;b+=String.fromCharCode(J0|a>>18,dN|a>>12&jo,dN|a>>6&jo,dN|a&jo)}if(b.length>b7){b.substr(0,1);f+=b;b=k}}return f+b}function
a79(a){var
b=9;if(!Qp(a))b=8,a=a80(a);return new
eQ(b,a,a.length)}function
E(a){return a79(a)}var
a9e=[Jw,Nx,HA,Lw,Mq,MO,He,O4,w$,JI,O3,Hs,O5,Ob,Gu,IV,Lv,Jd,On,Km,rj,LM,IK,KJ,Ix,HL,q6,z9,Ji,GT,JU,Nn,II,PB,G9,Je,G1,H0,Nu,Mm,JB,Hz,Jc,Os,ND,H$,Pv,Jy,LK,Op,OH,L_,Kr,Hy,H_,JH,N9,M7,KA,IA,Ky,MN,H2,Jb,JD,LR,O_,Pm];function
iG(d,f,e,a){var
b=a9e.indexOf(d);if(b<0){if(a==null)a=-xw;b=[0,a]}var
c=[b,E(f||k),E(e||k)];return c}var
Qb={};function
iE(a){return Qb[a]}function
iF(b,a){throw[0,b].concat(a)}function
iz(a){return new
eQ(4,a,a.length)}function
aT(a){AI(bc.Sys_error,a)}function
a8P(a){aT(a+qv)}function
a1(a){return a.l}function
PM(){}function
b8(a){this.data=a}b8.prototype=new
PM();b8.prototype.truncate=function(a){var
b=this.data;this.data=aG(a|0);hd(b,0,this.data,0,a)};b8.prototype.length=function(){return a1(this.data)};b8.prototype.write=function(b,d,g,a){var
c=this.length();if(b+a>=c){var
e=aG(b+a),f=this.data;this.data=e;hd(f,0,this.data,0,c)}ed(d,g,this.data,b,a);return 0};b8.prototype.read=function(c,a,d,b){var
e=this.length();hd(this.data,c,a,d,b);return 0};b8.prototype.read_one=function(a){return eU(this.data,a)};b8.prototype.close=function(){};b8.prototype.constructor=b8;function
cE(b,a){this.content={};this.root=b;this.lookupFun=a}cE.prototype.nm=function(a){return this.root+a};cE.prototype.create_dir_if_needed=function(d){var
c=d.split(bb),b=k;for(var
a=0;a<c.length-1;a++){b+=c[a]+bb;if(this.content[b])continue;this.content[b]=Symbol("directory")}};cE.prototype.slash=function(a){return/\/$/.test(a)?a:a+bb};cE.prototype.lookup=function(b){if(!this.content[b]&&this.lookupFun){var
c=this.lookupFun(a(this.root),a(b));if(c!==0){this.create_dir_if_needed(b);this.content[b]=new
b8(c_(c[1]))}}};cE.prototype.exists=function(a){if(a==k)return 1;var
b=this.slash(a);if(this.content[b])return 1;this.lookup(a);return this.content[a]?1:0};cE.prototype.mkdir=function(c,e,d){var
b=d&&iE(l7);if(this.exists(c))if(b)iF(b,iG(w$,w9,this.nm(c)));else
aT(c+": File exists");var
a=/^(.*)\/[^/]+/.exec(c);a=a&&a[1]||k;if(!this.exists(a))if(b)iF(b,iG(rj,w9,this.nm(a)));else
aT(a+qv);if(!this.is_dir(a))if(b)iF(b,iG(q6,w9,this.nm(a)));else
aT(a+ws);this.create_dir_if_needed(this.slash(c))};cE.prototype.rmdir=function(a,f){var
b=f&&iE(l7),c=a==k?k:this.slash(a),e=new
RegExp(Jh+c+Hm);if(!this.exists(a))if(b)iF(b,iG(rj,vo,this.nm(a)));else
aT(a+qv);if(!this.is_dir(a))if(b)iF(b,iG(q6,vo,this.nm(a)));else
aT(a+ws);for(var
d
in
this.content)if(d.match(e))if(b)iF(b,iG(z9,vo,this.nm(a)));else
aT(this.nm(a)+": Directory not empty");delete
this.content[c]};cE.prototype.readdir=function(a){var
f=a==k?k:this.slash(a);if(!this.exists(a))aT(a+qv);if(!this.is_dir(a))aT(a+ws);var
g=new
RegExp(Jh+f+Hm),d={},c=[];for(var
e
in
this.content){var
b=e.match(g);if(b&&!d[b[1]]){d[b[1]]=true;c.push(b[1])}}return c};cE.prototype.is_dir=function(a){if(a==k)return true;var
b=this.slash(a);return this.content[b]?1:0};cE.prototype.unlink=function(a){var
b=this.content[a]?true:false;delete
this.content[a];return b};cE.prototype.open=function(a,b){if(b.rdonly&&b.wronly)aT(this.nm(a)+LP);if(b.text&&b.binary)aT(this.nm(a)+Oc);this.lookup(a);if(this.content[a]){if(this.is_dir(a))aT(this.nm(a)+" : is a directory");if(b.create&&b.excl)aT(this.nm(a)+LO);var
c=this.content[a];if(b.truncate)c.truncate();return c}else
if(b.create){this.create_dir_if_needed(a);this.content[a]=new
b8(aG(0));return this.content[a]}else
a8P(this.nm(a))};cE.prototype.register=function(c,a){var
b;if(this.content[c])aT(this.nm(c)+LO);if(me(a))b=new
b8(a);if(rG(a))b=new
b8(c_(a));else
if(a
instanceof
Array)b=new
b8(iz(a));else
if(typeof
a==="string")b=new
b8(PW(a));else
if(a.toString){var
d=c_(E(a.toString()));b=new
b8(d)}if(b){this.create_dir_if_needed(c);this.content[c]=b}else
aT(this.nm(c)+" : registering file with invalid content type")};cE.prototype.constructor=cE;function
m(a){return a1(a)}function
aU(b,a){return c$(b,a)}function
a70(d){var
c=m(d),b=new
Array(c),a=0;for(;a<c;a++)b[a]=aU(d,a);return b}function
eS(a){if(a.t!=4)rz(a);return a.c}function
eR(a){this.fs=require("fs");this.fd=a}eR.prototype=new
PM();eR.prototype.truncate=function(a){try{this.fs.ftruncateSync(this.fd,a|0)}catch(a){aT(a.toString())}};eR.prototype.length=function(){try{return this.fs.fstatSync(this.fd).size}catch(a){aT(a.toString())}};eR.prototype.write=function(f,b,c,e){var
a=a70(b);if(!(a
instanceof
W.Uint8Array))a=new(W.Uint8Array)(a);var
d=W.Buffer.from(a);try{this.fs.writeSync(this.fd,d,c,e,f)}catch(a){aT(a.toString())}return 0};eR.prototype.read=function(g,d,c,f){var
a=eS(d);if(!(a
instanceof
W.Uint8Array))a=new(W.Uint8Array)(a);var
e=W.Buffer.from(a);try{this.fs.readSync(this.fd,e,c,f,g)}catch(a){aT(a.toString())}for(var
b=0;b<f;b++)ee(d,c+b,e[c+b]);return 0};eR.prototype.read_one=function(c){var
b=new(W.Uint8Array)(1),a=W.Buffer.from(b);try{this.fs.readSync(this.fd,a,0,1,c)}catch(a){aT(a.toString())}return a[0]};eR.prototype.close=function(){try{this.fs.closeSync(this.fd)}catch(a){aT(a.toString())}};eR.prototype.constructor=eR;function
b9(a){this.fs=require("fs");this.root=a}b9.prototype.nm=function(a){return this.root+a};b9.prototype.exists=function(a){try{return this.fs.existsSync(this.nm(a))?1:0}catch(a){return 0}};b9.prototype.mkdir=function(b,a,c){try{this.fs.mkdirSync(this.nm(b),{mode:a});return 0}catch(a){this.raise_nodejs_error(a,c)}};b9.prototype.rmdir=function(a,b){try{this.fs.rmdirSync(this.nm(a));return 0}catch(a){this.raise_nodejs_error(a,b)}};b9.prototype.readdir=function(a,b){try{return this.fs.readdirSync(this.nm(a))}catch(a){this.raise_nodejs_error(a,b)}};b9.prototype.is_dir=function(a){try{return this.fs.statSync(this.nm(a)).isDirectory()?1:0}catch(a){aT(a.toString())}};b9.prototype.unlink=function(a,c){try{var
b=this.fs.existsSync(this.nm(a))?1:0;this.fs.unlinkSync(this.nm(a));return b}catch(a){this.raise_nodejs_error(a,c)}};b9.prototype.open=function(f,c,g){var
a=require("constants"),b=0;for(var
e
in
c)switch(e){case"rdonly":b|=a.O_RDONLY;break;case"wronly":b|=a.O_WRONLY;break;case"append":b|=a.O_WRONLY|a.O_APPEND;break;case"create":b|=a.O_CREAT;break;case"truncate":b|=a.O_TRUNC;break;case"excl":b|=a.O_EXCL;break;case"binary":b|=a.O_BINARY;break;case"text":b|=a.O_TEXT;break;case"nonblock":b|=a.O_NONBLOCK;break}try{var
d=this.fs.openSync(this.nm(f),b);return new
eR(d)}catch(a){this.raise_nodejs_error(a,g)}};b9.prototype.rename=function(b,a,c){try{this.fs.renameSync(this.nm(b),this.nm(a))}catch(a){this.raise_nodejs_error(a,c)}};b9.prototype.stat=function(b,c){try{var
a=this.fs.statSync(this.nm(b));return this.stats_from_js(a)}catch(a){this.raise_nodejs_error(a,c)}};b9.prototype.lstat=function(b,c){try{var
a=this.fs.lstatSync(this.nm(b));return this.stats_from_js(a)}catch(a){this.raise_nodejs_error(a,c)}};b9.prototype.symlink=function(d,c,a,b){try{this.fs.symlinkSync(this.nm(c),this.nm(a),d?"dir":"file");return 0}catch(a){this.raise_nodejs_error(a,b)}};b9.prototype.readlink=function(b,c){try{var
a=this.fs.readlinkSync(this.nm(b),Gy);return E(a)}catch(a){this.raise_nodejs_error(a,c)}};b9.prototype.raise_nodejs_error=function(a,d){var
b=iE(l7);if(d&&b){var
c=iG(a.code,a.syscall,a.path,a.errno);iF(b,c)}else
aT(a.toString())};b9.prototype.stats_from_js=function(a){var
b;if(a.isFile())b=0;else
if(a.isDirectory())b=1;else
if(a.isCharacterDevice())b=2;else
if(a.isBlockDevice())b=3;else
if(a.isSymbolicLink())b=4;else
if(a.isFIFO())b=5;else
if(a.isSocket())b=6;return[0,a.dev,a.ino,b,a.mode,a.nlink,a.uid,a.gid,a.rdev,a.size,a.atimeMs,a.mtimeMs,a.ctimeMs]};b9.prototype.constructor=b9;function
P1(b){var
a=AM(b);if(!a)return;return a[0]+bb}var
rK=P1(l$)||dz("unable to compute caml_root"),kc=[];if(mj())kc.push({path:rK,device:new
b9(rK)});else
kc.push({path:rK,device:new
cE(rK)});kc.push({path:M4,device:new
cE(M4)});function
Qq(b){var
g=a8C(b),b=g.join(bb),f=Qj(b),c;for(var
e=0;e<kc.length;e++){var
a=kc[e];if(f.search(a.path)==0&&(!c||c.path.length<a.path.length))c={path:a.path,device:a.device,rest:b.substring(a.path.length,b.length)}}if(!c&&mj()){var
d=P1(b);if(d&&d.match(/^[a-zA-Z]:\/$/)){var
a={path:d,device:new
b9(d)};kc.push(a);c={path:a.path,device:a.device,rest:b.substring(a.path.length,b.length)}}}if(c)return c;aT("no device found for "+f)}function
a7$(c,b){var
a=Qq(c);if(!a.device.register)dz("cannot register file");a.device.register(a.rest,b);return 0}function
Qo(c,b){var
c=a(c),b=a(b);return a7$(c,b)}function
a8d(){var
b=W.caml_fs_tmp;if(b)for(var
a=0;a<b.length;a++)Qo(b[a].name,b[a].content);W.jsoo_create_file=Qo;W.caml_fs_tmp=[];return 0}function
P0(){return[0]}var
rH=[];function
rC(i,h,d){var
b=i[1],g=rH[d];if(g===undefined)for(var
f=rH.length;f<d;f++)rH[f]=0;else
if(b[g]===h)return b[g-1];var
a=3,e=b[1]*2+1,c;while(a<e){c=a+e>>1|1;if(h<b[c+1])e=c-2;else
a=c}rH[d]=a+1;return h==b[a+1]?b[a]:0}function
a8e(a,b){return+(j8(a,b,false)>=0)}function
a8f(a,b){return+(j8(a,b,false)>0)}function
Az(d,b){var
e=b.length,a,c;for(a=0;a+4<=e;a+=4){c=b.charCodeAt(a)|b.charCodeAt(a+1)<<8|b.charCodeAt(a+2)<<16|b.charCodeAt(a+3)<<24;d=cp(d,c)}c=0;switch(e&3){case
3:c=b.charCodeAt(a+2)<<16;case
2:c|=b.charCodeAt(a+1)<<8;case
1:c|=b.charCodeAt(a);d=cp(d,c)}d^=e;return d}function
a8k(a,b){return Az(a,eg(b))}function
a8h(d,b){var
e=b.length,a,c;for(a=0;a+4<=e;a+=4){c=b[a]|b[a+1]<<8|b[a+2]<<16|b[a+3]<<24;d=cp(d,c)}c=0;switch(e&3){case
3:c=b[a+2]<<16;case
2:c|=b[a+1]<<8;case
1:c|=b[a];d=cp(d,c)}d^=e;return d}function
P6(a){switch(a.t&6){default:iA(a);case
0:return a.c;case
4:return a.c}}function
a8g(b,c){var
a=P6(c);return typeof
a==="string"?Az(b,a):a8h(b,a)}function
a8i(a){a^=a>>>16;a=bd(a,0x85ebca6b|0);a^=a>>>13;a=bd(a,0xc2b2ae35|0);a^=a>>>16;return a}function
P2(j,l,n,m){var
f,g,h,d,c,b,a,e,i;d=l;if(d<0||d>ak)d=ak;c=j;b=n;f=[m];g=0;h=1;while(g<h&&c>0){a=f[g++];if(a&&a.caml_custom){if(ma[a.caml_custom]&&ma[a.caml_custom].hash){var
k=ma[a.caml_custom].hash(a);b=cp(b,k);c--}}else
if(a
instanceof
Array&&a[0]===(a[0]|0))switch(a[0]){case
248:b=cp(b,a[2]);c--;break;case
250:f[--g]=a[1];break;default:var
o=a.length-1<<10|a[0];b=cp(b,o);for(e=1,i=a.length;e<i;e++){if(h>=d)break;f[h++]=a[e]}break}else
if(me(a)){b=a8g(b,a);c--}else
if(rG(a)){b=a8k(b,a);c--}else
if(typeof
a==="string"){b=Az(b,a);c--}else
if(a===(a|0)){b=cp(b,a+a+1);c--}else
if(a===+a){b=Ay(b,a);c--}}b=a8i(b);return b&0x3FFFFFFF}function
a8l(a,c,l){if(!isFinite(a)){if(isNaN(a))return E(x$);return E(a>0?Py:"-infinity")}var
i=a==0&&1/a==-Infinity?1:a>=0?0:1;if(i)a=-a;var
d=0;if(a==0);else
if(a<1)while(a<1&&d>-1022){a*=2;d--}else
while(a>=2){a/=2;d++}var
j=d<0?k:il,e=k;if(i)e=dR;else
switch(l){case
43:e=il;break;case
32:e=by;break;default:break}if(c>=0&&c<13){var
g=Math.pow(2,c*4);a=Math.round(a*g)/g}var
b=a.toString(16);if(c>=0){var
h=b.indexOf(dP);if(h<0)b+=dP+ka(c,bM);else{var
f=h+1+c;if(b.length<f)b+=ka(f-b.length,bM);else
b=b.substr(0,f)}}return E(e+jI+b+"p"+j+d.toString(10))}function
a8n(a,b){return a.add(b)}function
P3(a,b){return a.and(b)}function
mb(a,b){return a.div(b)}function
a8t(a){return+a.isZero()}function
cQ(a){return new
ag(a&fS,a>>24&fS,a>>31&ez)}function
iC(a){return a.toInt()}function
a8s(a){return+a.isNeg()}function
a8v(a){return a.neg()}function
a8q(g,c){var
a=AG(g);if(a.signedconv&&a8s(c)){a.sign=-1;c=a8v(c)}var
b=k,h=cQ(a.base),f="0123456789abcdef";do{var
e=c.udivmod(h);c=e.quotient;b=f.charAt(iC(e.modulus))+b}while(!a8t(c));if(a.prec>=0){a.filler=by;var
d=a.prec-b.length;if(d>0)b=ka(d,bM)+b}return Aw(a,b)}function
he(a,b){return a.mod(b)}function
rE(a,b){return a.mul(b)}function
a8w(a,b){return a.or(b)}function
a8x(b,a){return b.shift_left(a)}function
a8y(b,a){return b.shift_right_unsigned(a)}function
rF(a,b){return a.sub(b)}function
a8N(c){var
a=0,e=m(c),b=10,d=1;if(e>0)switch(aU(c,a)){case
45:a++;d=-1;break;case
43:a++;d=1;break}if(a+1<e&&aU(c,a)==48)switch(aU(c,a+1)){case
120:case
88:b=16;a+=2;break;case
111:case
79:b=8;a+=2;break;case
98:case
66:b=2;a+=2;break;case
117:case
85:a+=2;break}return[a,d,b]}function
Qe(a){if(a>=48&&a<=57)return a-48;if(a>=65&&a<=90)return a-55;if(a>=97&&a<=b5)return a-87;return-1}function
aE(f){var
h=a8N(f),c=h[0],i=h[1],d=h[2],g=m(f),j=-1>>>0,e=c<g?aU(f,c):0,b=Qe(e);if(b<0||b>=d)dz(og);var
a=b;for(c++;c<g;c++){e=aU(f,c);if(e==95)continue;b=Qe(e);if(b<0||b>=d)break;a=d*a+b;if(a>j)dz(og)}if(c!=g)dz(og);a=i*a;if(d==10&&(a|0)!=a)dz(og);return a|0}function
f8(c){var
d=c.length,b=new
Array(d+1);b[0]=0;for(var
a=0;a<d;a++)b[a+1]=c[a];return b}function
a8B(d){return function(){var
b=arguments.length;if(b>0){var
c=new
Array(b);for(var
a=0;a<b;a++)c[a]=arguments[a];return dU(d,c)}else
return dU(d,[undefined])}}function
i(d){return function(){var
c=arguments.length,b=new
Array(c+1);b[0]=this;for(var
a=0;a<c;a++)b[a+1]=arguments[a];return dU(d,b)}}function
P5(a,b){return+(j8(a,b,false)<0)}function
mf(b){b=eg(b);var
d=b.length/2,c=new
Array(d);for(var
a=0;a<d;a++)c[a]=(b.charCodeAt(2*a)|b.charCodeAt(2*a+1)<<8)<<16>>16;return c}function
bZ(b,t,a){var
n=2,o=3,r=5,d=6,h=7,g=8,j=9,m=1,l=2,q=3,s=4,p=5;if(!b.lex_default){b.lex_base=mf(b[m]);b.lex_backtrk=mf(b[l]);b.lex_check=mf(b[p]);b.lex_trans=mf(b[s]);b.lex_default=mf(b[q])}var
e,c=t,k=eS(a[n]);if(c>=0){a[h]=a[r]=a[d];a[g]=-1}else
c=-c-1;for(;;){var
f=b.lex_base[c];if(f<0)return-f-1;var
i=b.lex_backtrk[c];if(i>=0){a[h]=a[d];a[g]=i}if(a[d]>=a[o])if(a[j]==0)return-c-1;else
e=ak;else{e=k[a[d]];a[d]++}if(b.lex_check[f+e]==c)c=b.lex_trans[f+e];else
c=b.lex_default[c];if(c<0){a[d]=a[h];if(a[g]==-1)dz("lexing: empty token");else
return a[g]}else
if(e==ak)a[j]=0}}function
j_(c){var
b=0;for(var
a=c.length-1;a>=0;a--){var
d=c[a];b=[0,d,b]}return b}function
aS(a,d){if(a<0)j7();var
a=a+1|0,b=new
Array(a);b[0]=0;for(var
c=1;c<a;c++)b[c]=d;return b}function
a8V(b){return a(rL(b,0,b.length))}var
a8D=function(){function
l(a,b){return a+b|0}function
a(d,a,c,f,b,e){a=l(l(a,d),l(f,e));return l(a<<b|a>>>32-b,c)}function
g(c,b,d,e,h,f,g){return a(b&d|~b&e,c,b,h,f,g)}function
h(d,b,e,c,h,f,g){return a(b&c|e&~c,d,b,h,f,g)}function
i(c,b,d,e,h,f,g){return a(b^d^e,c,b,h,f,g)}function
j(c,b,d,e,h,f,g){return a(d^(b|~e),c,b,h,f,g)}function
k(f,n){var
e=n;f[e>>2]|=dN<<8*(e&3);for(e=(e&~0x3)+8;(e&0x3F)<60;e+=4)f[(e>>2)-1]=0;f[(e>>2)-1]=n<<3;f[e>>2]=n>>29&0x1FFFFFFF;var
k=[0x67452301,0xEFCDAB89,0x98BADCFE,0x10325476];for(e=0;e<f.length;e+=16){var
a=k[0],b=k[1],c=k[2],d=k[3];a=g(a,b,c,d,f[e+0],7,0xD76AA478);d=g(d,a,b,c,f[e+1],12,0xE8C7B756);c=g(c,d,a,b,f[e+2],17,0x242070DB);b=g(b,c,d,a,f[e+3],22,0xC1BDCEEE);a=g(a,b,c,d,f[e+4],7,0xF57C0FAF);d=g(d,a,b,c,f[e+5],12,0x4787C62A);c=g(c,d,a,b,f[e+6],17,0xA8304613);b=g(b,c,d,a,f[e+7],22,0xFD469501);a=g(a,b,c,d,f[e+8],7,0x698098D8);d=g(d,a,b,c,f[e+9],12,0x8B44F7AF);c=g(c,d,a,b,f[e+10],17,0xFFFF5BB1);b=g(b,c,d,a,f[e+11],22,0x895CD7BE);a=g(a,b,c,d,f[e+12],7,0x6B901122);d=g(d,a,b,c,f[e+13],12,0xFD987193);c=g(c,d,a,b,f[e+14],17,0xA679438E);b=g(b,c,d,a,f[e+15],22,0x49B40821);a=h(a,b,c,d,f[e+1],5,0xF61E2562);d=h(d,a,b,c,f[e+6],9,0xC040B340);c=h(c,d,a,b,f[e+11],14,0x265E5A51);b=h(b,c,d,a,f[e+0],20,0xE9B6C7AA);a=h(a,b,c,d,f[e+5],5,0xD62F105D);d=h(d,a,b,c,f[e+10],9,0x02441453);c=h(c,d,a,b,f[e+15],14,0xD8A1E681);b=h(b,c,d,a,f[e+4],20,0xE7D3FBC8);a=h(a,b,c,d,f[e+9],5,0x21E1CDE6);d=h(d,a,b,c,f[e+14],9,0xC33707D6);c=h(c,d,a,b,f[e+3],14,0xF4D50D87);b=h(b,c,d,a,f[e+8],20,0x455A14ED);a=h(a,b,c,d,f[e+13],5,0xA9E3E905);d=h(d,a,b,c,f[e+2],9,0xFCEFA3F8);c=h(c,d,a,b,f[e+7],14,0x676F02D9);b=h(b,c,d,a,f[e+12],20,0x8D2A4C8A);a=i(a,b,c,d,f[e+5],4,0xFFFA3942);d=i(d,a,b,c,f[e+8],11,0x8771F681);c=i(c,d,a,b,f[e+11],16,0x6D9D6122);b=i(b,c,d,a,f[e+14],23,0xFDE5380C);a=i(a,b,c,d,f[e+1],4,0xA4BEEA44);d=i(d,a,b,c,f[e+4],11,0x4BDECFA9);c=i(c,d,a,b,f[e+7],16,0xF6BB4B60);b=i(b,c,d,a,f[e+10],23,0xBEBFBC70);a=i(a,b,c,d,f[e+13],4,0x289B7EC6);d=i(d,a,b,c,f[e+0],11,0xEAA127FA);c=i(c,d,a,b,f[e+3],16,0xD4EF3085);b=i(b,c,d,a,f[e+6],23,0x04881D05);a=i(a,b,c,d,f[e+9],4,0xD9D4D039);d=i(d,a,b,c,f[e+12],11,0xE6DB99E5);c=i(c,d,a,b,f[e+15],16,0x1FA27CF8);b=i(b,c,d,a,f[e+2],23,0xC4AC5665);a=j(a,b,c,d,f[e+0],6,0xF4292244);d=j(d,a,b,c,f[e+7],10,0x432AFF97);c=j(c,d,a,b,f[e+14],15,0xAB9423A7);b=j(b,c,d,a,f[e+5],21,0xFC93A039);a=j(a,b,c,d,f[e+12],6,0x655B59C3);d=j(d,a,b,c,f[e+3],10,0x8F0CCC92);c=j(c,d,a,b,f[e+10],15,0xFFEFF47D);b=j(b,c,d,a,f[e+1],21,0x85845DD1);a=j(a,b,c,d,f[e+8],6,0x6FA87E4F);d=j(d,a,b,c,f[e+15],10,0xFE2CE6E0);c=j(c,d,a,b,f[e+6],15,0xA3014314);b=j(b,c,d,a,f[e+13],21,0x4E0811A1);a=j(a,b,c,d,f[e+4],6,0xF7537E82);d=j(d,a,b,c,f[e+11],10,0xBD3AF235);c=j(c,d,a,b,f[e+2],15,0x2AD7D2BB);b=j(b,c,d,a,f[e+9],21,0xEB86D391);k[0]=l(a,k[0]);k[1]=l(b,k[1]);k[2]=l(c,k[2]);k[3]=l(d,k[3])}var
o=new
Array(16);for(var
e=0;e<4;e++)for(var
m=0;m<4;m++)o[e*4+m]=k[e]>>8*m&0xFF;return o}return function(i,g,f){var
e=[],h=P6(i);if(typeof
h==="string"){var
d=h;for(var
a=0;a<f;a+=4){var
b=a+g;e[a>>2]=d.charCodeAt(b)|d.charCodeAt(b+1)<<8|d.charCodeAt(b+2)<<16|d.charCodeAt(b+3)<<24}for(;a<f;a++)e[a>>2]|=d.charCodeAt(a+g)<<8*(a&3)}else{var
c=h;for(var
a=0;a<f;a+=4){var
b=a+g;e[a>>2]=c[b]|c[b+1]<<8|c[b+2]<<16|c[b+3]<<24}for(;a<f;a++)e[a>>2]|=c[a+g]<<8*(a&3)}return a8V(k(e,f))}}();function
a8E(c,b,a){return a8D(c_(c),b,a)}var
b_=new
Array();function
j$(b){var
a=b_[b];return a.file.length()}function
a8W(a){delete
bc.fds[a];return 0}function
cR(c){var
a=b_[c];if(!a.opened)aT("Cannot flush a closed channel");if(!a.buffer||a.buffer==k)return 0;if(a.fd&&bc.fds[a.fd]&&bc.fds[a.fd].output){var
b=bc.fds[a.fd].output;switch(b.length){case
2:b(c,a.buffer);break;default:b(a.buffer)}}a.buffer=k;return 0}function
dV(b){var
a=b_[b];cR(b);a.opened=false;a.file.close();a8W(a.fd);return 0}function
a8F(){return 0}function
P_(a){var
c=a.refill(),b=m(c);if(b==0)a.refill=null;a.file.write(a.file.length(),c,0,b);return b}function
P7(d,f,e,b){var
a=b_[d],c=a.file.length()-a.offset;if(c==0&&a.refill!=null)c=P_(a);if(c<b)b=c;a.file.read(a.offset,f,e,b);a.offset+=b;return b}function
a8G(b){var
a=b_[b];if(a.refill==null)return;if(a.file.length()!=a.offset)return;P_(a)}function
a8O(){AH(bc.End_of_file)}function
rI(b){var
a=b_[b];a8G(b);if(a.offset>=a.file.length())a8O();var
c=a.file.read_one(a.offset);a.offset++;return c}function
Qg(e,f){var
b=b_[e],d=a(f),c=m(d);b.file.write(b.offset,d,0,c);b.offset+=c;return 0}function
a89(a){var
a=AK(a),b=W;if(b.process&&b.process.stdout&&b.process.stdout.write)b.process.stderr.write(a);else{if(a.charCodeAt(a.length-1)==10)a=a.substr(0,a.length-1);var
c=b.console;c&&c.error&&c.error(a)}}function
a8_(a){var
a=AK(a),b=W;if(b.process&&b.process.stdout&&b.process.stdout.write)b.process.stdout.write(a);else{if(a.charCodeAt(a.length-1)==10)a=a.substr(0,a.length-1);var
c=b.console;c&&c.log&&c.log(a)}}function
rM(c,e,d,a){if(bc.fds===undefined)bc.fds=new
Array();a=a?a:{};var
b={};b.file=d;b.offset=a.append?d.length():0;b.flags=a;b.output=e;bc.fds[c]=b;if(!bc.fd_last_idx||c>bc.fd_last_idx)bc.fd_last_idx=c;return c}function
Qh(c,b,g){var
a={};while(b){switch(b[1]){case
0:a.rdonly=1;break;case
1:a.wronly=1;break;case
2:a.append=1;break;case
3:a.create=1;break;case
4:a.truncate=1;break;case
5:a.excl=1;break;case
6:a.binary=1;break;case
7:a.text=1;break;case
8:a.nonblock=1;break}b=b[2]}if(a.rdonly&&a.wronly)aT(eg(c)+LP);if(a.text&&a.binary)aT(eg(c)+Oc);var
d=Qq(c),e=d.device.open(d.rest,a),f=bc.fd_last_idx?bc.fd_last_idx:0;return rM(f+1,Qg,e,a)}rM(0,Qg,new
b8(aG(0)));rM(1,a8_,new
b8(aG(0)));rM(2,a89,new
b8(aG(0)));function
P8(a){var
c=bc.fds[a];if(c.flags.wronly)aT(HE+a+" is writeonly");var
d=null;if(a==0&&mj()){var
e=require("fs");d=function(){return E(e.readFileSync(0,Gy))}}var
b={file:c.file,offset:c.offset,fd:a,opened:true,out:false,refill:d};b_[b.fd]=b;return b.fd}function
AE(c){var
b=bc.fds[c];if(b.flags.rdonly)aT(HE+c+" is readonly");var
a={file:b.file,offset:b.offset,fd:c,opened:true,out:true,buffer:k};b_[a.fd]=a;return a.fd}function
a8H(){var
b=0;for(var
a=0;a<b_.length;a++)if(b_[a]&&b_[a].opened&&b_[a].out)b=[0,b_[a].fd,b];return b}function
bi(a){return a}function
P9(g,d,h,f){var
b=b_[g];if(!b.opened)aT("Cannot output to a closed channel");var
a;if(h==0&&a1(d)==f)a=d;else{a=aG(f);hd(d,h,a,0,f)}var
i=bi(a),c=eg(i),e=c.lastIndexOf(Lz);if(e<0)b.buffer+=c;else{b.buffer+=c.substr(0,e+1);cR(g);b.buffer+=c.substr(e+1)}return 0}function
AF(b,a,d,c){return P9(b,c_(a),d,c)}function
mg(c,b){var
d=a(String.fromCharCode(b));AF(c,d,0,1);return 0}function
a8I(a){return b_[a].offset}function
a8J(a){cR(a);return b_[a].offset}function
a8K(b,c){var
a=b_[b];if(a.refill!=null)aT("Illegal seek");a.offset=c;return 0}function
P$(a,b){cR(a);b_[a].offset=b;return 0}function
Qa(){return 0}function
iD(b,a){if(a==0)rJ();return b%a}function
cS(a,b){return+(j8(a,b,false)!=0)}function
Qc(d,c){var
b=new
Array(c+1);b[0]=d;for(var
a=1;a<=c;a++)b[a]=0;return b}function
a8M(a,b){a[0]=cM;a[1]=b;return 0}function
mh(a){if(a
instanceof
Array&&a[0]==a[0]>>>0)return a[0];else
if(me(a))return dM;else
if(rG(a))return dM;else
if(a
instanceof
Function||typeof
a=="function")return f5;else
if(a&&a.caml_custom)return aq;else
return dv}function
dW(b,c,a){if(a&&W.toplevelReloc)b=W.toplevelReloc(a);bc[b+1]=c;if(a)bc[a]=c}function
AJ(a,b){Qb[eg(a)]=b;return 0}function
a8S(a){a[2]=Qd++;return a}function
a78(a,b){if(a===b)return 1;a.t&6&&iA(a);b.t&6&&iA(b);return a.c==b.c?1:0}function
S(a,b){return a78(a,b)}function
a8U(){bz(zu)}function
F(b,a){if(a>>>0>=m(b))a8U();return aU(b,a)}function
c(a,b){return 1-S(a,b)}function
a8X(){return 0x7FFFFFFF/4|0}function
a8Y(b){var
a=W;if(a.quit)a.quit(b);if(a.process&&a.process.exit)a.process.exit(b);bz("Function 'exit' not implemented")}var
a9d=W.process&&W.process.platform&&W.process.platform==Ln?K6:"Unix";function
a8Z(){return[0,a(a9d),32,0]}function
a8Q(){AH(bc.Not_found)}function
mi(c){var
a=W,b=a0(c);if(a.process&&a.process.env&&a.process.env[b]!=undefined)return E(a.process.env[b]);if(W.jsoo_static_env&&W.jsoo_static_env[b])return E(W.jsoo_static_env[b]);a8Q()}function
Qi(){if(W.crypto)if(typeof
W.crypto.getRandomValues==="function"){var
a=new(W.Uint32Array)(1);W.crypto.getRandomValues(a);return[0,a[0]]}else
if(W.crypto.randomBytes==="function"){var
b=W.crypto.randomBytes(4),a=new(W.Uint32Array)(b);return[0,a[0]]}var
c=new
Date().getTime(),d=c^0xffffffff*Math.random();return[0,d]}function
kb(a){var
b=1;while(a&&a.joo_tramp){a=a.joo_tramp.apply(null,a.joo_args);b++}return a}function
X(b,a){return{joo_tramp:b,joo_args:a}}function
bt(c,a){if(typeof
a==="function"){c.fun=a;return 0}if(a.fun){c.fun=a.fun;return 0}var
b=a.length;while(b--)c[b]=a[b];return 0}function
Qf(a){return a}function
d(a){if(a
instanceof
Array)return a;if(W.RangeError&&a
instanceof
W.RangeError&&a.message&&a.message.match(/maximum call stack/i))return Qf(bc.Stack_overflow);if(W.InternalError&&a
instanceof
W.InternalError&&a.message&&a.message.match(/too much recursion/i))return Qf(bc.Stack_overflow);if(a
instanceof
W.Error&&iE(y0))return[0,iE(y0),a];return[0,bc.Failure,E(String(a))]}function
Qk(d){var
a=eS(d),c=cpdf_sjcl.codec.bytes.toBits(a);AL=new(cpdf_sjcl.cipher.aes)(c);var
b=Uint8Array.from(a);return iz(b)}function
a81(a){return Qk(a)}var
AL;function
Ql(f,b,h,a,g){var
e=eS(b),d=cpdf_sjcl.codec.bytes.toBits(e),c=AL.decrypt(d);a.t=4;a.c=cpdf_sjcl.codec.bytes.fromBits(c);a.l=b.l}function
Qm(f,b,h,a,g){var
e=eS(b),d=cpdf_sjcl.codec.bytes.toBits(e),c=AL.encrypt(d);a.t=4;a.c=cpdf_sjcl.codec.bytes.fromBits(c);a.l=b.l}function
a82(e){var
b=cpdf_crypto.createHash("sha256").update(eS(e)),c=b.digest().buffer,a=new
Uint8Array(c),d=iz(a);return d}function
a83(e){var
b=cpdf_crypto.createHash("sha384").update(eS(e)),c=b.digest().buffer,a=new
Uint8Array(c),d=iz(a);return d}function
a84(e){var
b=cpdf_crypto.createHash("sha512").update(eS(e)),c=b.digest().buffer,a=new
Uint8Array(c),d=iz(a);return d}function
a85(c){var
d=eS(c),a=Buffer.from(d),b=cpdf_zlib.deflateSync(a);return iz(b)}function
a86(c){var
d=eS(c),a=Buffer.from(d),b=cpdf_zlib.inflateSync(a);return iz(b)}function
a87(a,b,c,d,e,f,g,h){console.log(uT)}function
a88(a){console.log(uT)}function
Qn(a){console.log(uT)}function
rN(){return 0}function
a9g(h){var
a=new
Date(h*dv),b=a.getTime(),e=new
Date(a.getFullYear(),0,1).getTime(),c=Math.floor((b-e)/86400000),d=new
Date(a.getFullYear(),0,1),f=new
Date(a.getFullYear(),6,1),g=Math.max(d.getTimezoneOffset(),f.getTimezoneOffset());return[0,a.getSeconds(),a.getMinutes(),a.getHours(),a.getDate(),a.getMonth(),a.getFullYear()-Pi,a.getDay(),c,a.getTimezoneOffset()<g|0]}function
a9f(){return new
Date().getTime()/dv}function
a9h(){return Math.floor(a9f())}function
a8A(a){switch(a[2]){case-8:case-11:case-12:return 1;default:return 0}}function
a8c(b){var
a=k;if(b[0]==0){a+=b[1][1];if(b.length==3&&b[2][0]==0&&a8A(b[1]))var
e=b[2],f=1;else
var
f=2,e=b;a+="(";for(var
d=f;d<e.length;d++){if(d>f)a+=fQ;var
c=e[d];if(typeof
c=="number")a+=c.toString();else
if(c
instanceof
eQ)a+=dl+c.toString()+dl;else
if(typeof
c=="string")a+=dl+c.toString()+dl;else
a+=O9}a+=ie}else
if(b[0]==Q)a+=b[1];return a}function
PZ(a){if(a
instanceof
Array&&(a[0]==0||a[0]==Q)){var
c=iE(Ko);if(c)c(a,false);else{var
d=a8c(a),b=iE(Gx);if(b)b(0);W.console.error(wQ+d+Lz)}}else
throw a}function
a8T(){var
a=W;if(a.process&&a.process.on)a.process.on("uncaughtException",function(b,c){PZ(b);a.process.exit(2)});else
if(a.addEventListener)a.addEventListener("error",function(a){if(a.error)PZ(a.error)})}a8T();function
b(a,b){return a.length==1?a(b):dU(a,[b])}function
n(a,b,c){return a.length==2?a(b,c):dU(a,[b,c])}function
I(a,b,c,d){return a.length==3?a(b,c,d):dU(a,[b,c,d])}function
a9(a,b,c,d,e){return a.length==4?a(b,c,d,e):dU(a,[b,c,d,e])}function
ln(a,b,c,d,e,f){return a.length==5?a(b,c,d,e,f):dU(a,[b,c,d,e,f])}function
Gt(a,b,c,d,e,f,g,h){return a.length==7?a(b,c,d,e,f,g,h):dU(a,[b,c,d,e,f,g,h])}a8d();var
rP=[Q,a(J8),-1],mk=[Q,a(OQ),-2],$=[Q,a(x9),-3],bq=[Q,a(Ie),-4],ar=[Q,a(ML),-5],J=[Q,a(KV),-7],AN=[Q,a(LF),-8],AO=[Q,a(Ii),-9],B=[Q,a(Ps),-11],AP=[Q,a(Kg),-12],mq=[0,a(k),0,0,-1],mr=[0,a(k),1,0,0],a7W=[4,0,0,0,[12,45,[4,0,0,0,0]]],r8=[0,[11,a('File "'),[2,0,[11,a('", line '),[4,0,0,0,[11,a(H5),[4,0,0,0,[12,45,[4,0,0,0,[11,a(pR),[2,0,0]]]]]]]]]],a('File "%s", line %d, characters %d-%d: %s')],ss=a(dP),sv=a(dP),sx=a(dP),au=[V,1.,0.,0.,1.,0.,0.],kA=[0,[0,3,NI,1189.]],kB=[0,[0,3,M2,NI]],kC=[0,[0,3,J4,M2]],kD=[0,[0,3,Nj,J4]],e8=[0,[0,3,OZ,Nj]],kE=[0,[0,3,Nv,OZ]],sH=[0,[0,3,HV,Nv]],sI=[0,[0,3,Og,HV]],sJ=[0,[0,3,JR,Og]],sK=[0,[0,3,Pb,JR]],sL=[0,[0,3,26.,Pb]],kF=[0,[0,1,JY,11.]],kG=[0,[0,1,JY,14.]],Dk=[0,0,0,1,1],i6=[0,a(du),[0,a(gY),[0,a(c7),[0,a(dx),[0,a(l8),[0,a(c9),[0,a(ox),0]]]]]]],DF=[0,a(h4),[0,a(g1),[0,a(jF),[0,a(dx),0]]]],DK=j_([[0,a("/controlCR"),13],[0,a("/controlLF"),10],[0,a("/controlHT"),11],[0,a(dr),65],[0,a(rr),h2],[0,a(vl),fL],[0,a(yo),fk],[0,a(xz),fP],[0,a(Ak),c3],[0,a(wU),h$],[0,a(y3),hT],[0,a(qo),66],[0,a(nO),67],[0,a(w_),ft],[0,a(cj),68],[0,a(oM),69],[0,a(yI),gX],[0,a(yN),h6],[0,a(yk),eE],[0,a(ye),dm],[0,a(Ms),eN],[0,a(Hg),ip],[0,a(bh),70],[0,a(eC),71],[0,a(lZ),72],[0,a(ih),73],[0,a(vC),gA],[0,a(vM),gC],[0,a(wV),f3],[0,a(uS),hL],[0,a(nX),74],[0,a(j0),75],[0,a(jT),76],[0,a(KU),jE],[0,a(oW),77],[0,a(f2),78],[0,a(xm),iq],[0,a(d6),79],[0,a(jx),j1],[0,a(v_),ij],[0,a(yH),hJ],[0,a(Ah),fD],[0,a(wj),g6],[0,a(pv),fn],[0,a(zs),ic],[0,a(dK),80],[0,a(pj),81],[0,a(dS),82],[0,a(c6),83],[0,a(IR),h8],[0,a(qB),84],[0,a(HZ),g0],[0,a(d8),85],[0,a(wb),gB],[0,a(vK),gQ],[0,a(vb),gG],[0,a(wq),ex],[0,a(eO),86],[0,a(eH),87],[0,a(qt),88],[0,a(qP),89],[0,a(GY),gL],[0,a(y_),lQ],[0,a(oR),90],[0,a(JE),j5],[0,a(jW),97],[0,a(yY),fl],[0,a(xH),g3],[0,a(qp),d7],[0,a(zC),gT],[0,a(q8),gE],[0,a(Af),dT],[0,a(rn),38],[0,a(zj),gR],[0,a(pu),94],[0,a(po),co],[0,a(ot),42],[0,a(oe),64],[0,a(Ae),g$],[0,a(n3),98],[0,a(ql),92],[0,a(p1),eL],[0,a(oy),dt],[0,a(q0),c5],[0,a(q7),91],[0,a(ou),93],[0,a(vR),24],[0,a(Pl),f1],[0,a(ps),N],[0,a(pG),99],[0,a(yj),25],[0,a(yD),hN],[0,a(n5),it],[0,a(op),fX],[0,a(qY),26],[0,a(lq),58],[0,a(l3),44],[0,a(vW),eJ],[0,a(qx),fE],[0,a(pL),aQ],[0,a(pX),jy],[0,a(pr),j3],[0,a(vz),ik],[0,a(rb),gW],[0,a(y5),f5],[0,a(q4),36],[0,a(zc),27],[0,a(N7),h1],[0,a(qM),bW],[0,a(u_),fC],[0,a(wm),fI],[0,a(wf),fw],[0,a(vh),gJ],[0,a(qc),56],[0,a(qL),ju],[0,a(qi),lF],[0,a(px),jR],[0,a(pH),61],[0,a(Kt),d$],[0,a(oO),33],[0,a(nM),fV],[0,a(nU),bE],[0,a(qm),ir],[0,a(oB),53],[0,a(oi),ir],[0,a(qd),lW],[0,a(q_),52],[0,a(pk),jL],[0,a(pw),c8],[0,a(ro),fv],[0,a(oN),96],[0,a(qk),62],[0,a(qI),gZ],[0,a(p_),eA],[0,a(pO),hZ],[0,a(qE),hY],[0,a(qr),dp],[0,a(Jv),28],[0,a(lG),45],[0,a(nR),cO],[0,a(vU),fK],[0,a(wC),h5],[0,a(wl),fo],[0,a(wy),hQ],[0,a(oL),fT],[0,a(pI),fW],[0,a(pa),cP],[0,a(q3),60],[0,a(uA),fx],[0,a(LL),ia],[0,a(rg),dw],[0,a(q5),fG],[0,a("/minus"),f6],[0,a(y6),gS],[0,a(NO),io],[0,a(oS),aY],[0,a(rl),57],[0,a(x6),eD],[0,a(pt),35],[0,a(n1),dq],[0,a(yS),hb],[0,a(y7),fR],[0,a(xh),d5],[0,a(qX),hM],[0,a(v7),29],[0,a(Mt),g7],[0,a(qz),49],[0,a(zD),g_],[0,a(w2),fM],[0,a(wG),gF],[0,a(o8),fF],[0,a(oj),hO],[0,a(qy),Q],[0,a(vO),fJ],[0,a(pN),ec],[0,a(qg),fq],[0,a(oI),40],[0,a(oQ),41],[0,a(p5),37],[0,a(lU),46],[0,a(nW),hX],[0,a(nP),hW],[0,a(q1),43],[0,a(vt),fz],[0,a(n_),gP],[0,a(rd),63],[0,a(oC),ds],[0,a(qK),34],[0,a(oZ),ig],[0,a(qJ),lD],[0,a(oP),jN],[0,a(pS),hV],[0,a(oE),jn],[0,a(qW),j2],[0,a(n$),39],[0,a(iw),bF],[0,a(yT),f7],[0,a(w3),30],[0,a(qZ),dO],[0,a(PL),lK],[0,a(oA),fB],[0,a(lS),59],[0,a(oh),55],[0,a(o$),54],[0,a(rp),47],[0,a(jP),32],[0,a(p3),eP],[0,a(qu),bX],[0,a(O0),V],[0,a(oV),51],[0,a(vd),gI],[0,a(z3),f0],[0,a(n7),31],[0,a(wT),iy],[0,a(p$),50],[0,a(Ap),gV],[0,a(oU),dn],[0,a(uV),cM],[0,a(uC),f4],[0,a(z0),dM],[0,a(z_),gD],[0,a(rk),95],[0,a(p2),fp],[0,a(qQ),g8],[0,a(oK),bV],[0,a(o9),gU],[0,a(No),fU],[0,a(ym),aq],[0,a(rs),fO],[0,a(qq),b5],[0,a(NB),jX],[0,a(pf),48]]),DL=j_([[0,a(dr),65],[0,a(rr),fl],[0,a(qo),66],[0,a(nO),67],[0,a(cj),68],[0,a(oM),69],[0,a(bh),70],[0,a(eC),71],[0,a(lZ),72],[0,a(ih),73],[0,a(nX),74],[0,a(j0),75],[0,a(jT),76],[0,a(KU),gJ],[0,a(oW),77],[0,a(f2),78],[0,a(d6),79],[0,a(jx),fI],[0,a(pv),fC],[0,a(dK),80],[0,a(pj),81],[0,a(dS),82],[0,a(c6),83],[0,a(qB),84],[0,a(d8),85],[0,a(eO),86],[0,a(eH),87],[0,a(qt),88],[0,a(qP),89],[0,a(oR),90],[0,a(jW),97],[0,a(qp),fk],[0,a(q8),eD],[0,a(rn),38],[0,a(pu),94],[0,a(po),co],[0,a(ot),42],[0,a(oe),64],[0,a(n3),98],[0,a(ql),92],[0,a(p1),eL],[0,a(oy),dt],[0,a(q0),c5],[0,a(q7),91],[0,a(ou),93],[0,a(vR),h2],[0,a(ps),hX],[0,a(pG),99],[0,a(yj),f3],[0,a(n5),eE],[0,a(op),fX],[0,a(qY),hT],[0,a(lq),58],[0,a(l3),44],[0,a(qx),gW],[0,a(pL),aQ],[0,a(pX),gV],[0,a(pr),f0],[0,a(rb),dm],[0,a(q4),36],[0,a(zc),ft],[0,a("/dottlessi"),fJ],[0,a(qM),bW],[0,a(qc),56],[0,a(qL),fM],[0,a(qi),eN],[0,a(px),fz],[0,a(pH),61],[0,a(oO),33],[0,a(nM),fV],[0,a(nU),bE],[0,a(qm),f7],[0,a(oB),53],[0,a(oi),fG],[0,a(qd),f1],[0,a(q_),52],[0,a(pk),fE],[0,a(pw),c8],[0,a(ro),f4],[0,a(oN),fL],[0,a(qk),62],[0,a(qI),gZ],[0,a(p_),eA],[0,a(pO),fx],[0,a(qE),lB],[0,a(qr),dp],[0,a(Jv),gA],[0,a(lG),45],[0,a(nR),cO],[0,a(oL),fT],[0,a(pI),fW],[0,a(pa),cP],[0,a(q3),60],[0,a(LL),Q],[0,a(rg),dw],[0,a(q5),h$],[0,a(oS),aY],[0,a(rl),57],[0,a(pt),35],[0,a(n1),dq],[0,a(qX),cM],[0,a(v7),gC],[0,a(qz),49],[0,a(o8),g$],[0,a(oj),fw],[0,a(qy),eD],[0,a(pN),ec],[0,a(qg),fq],[0,a(oI),40],[0,a(oQ),41],[0,a(p5),37],[0,a(lU),46],[0,a(nW),d7],[0,a(nP),g_],[0,a(q1),43],[0,a(n_),gP],[0,a(rd),63],[0,a(oC),ds],[0,a(qK),34],[0,a(oZ),gF],[0,a(qJ),fF],[0,a(oP),hO],[0,a(pS),96],[0,a(oE),39],[0,a(qW),it],[0,a(n$),eJ],[0,a(iw),bF],[0,a(w3),h6],[0,a(qZ),dO],[0,a(oA),fB],[0,a(lS),59],[0,a(oh),55],[0,a(o$),54],[0,a(rp),47],[0,a(jP),32],[0,a(p3),eP],[0,a(qu),bX],[0,a(oV),51],[0,a(n7),fP],[0,a(p$),50],[0,a(oU),dn],[0,a(rk),95],[0,a(p2),fp],[0,a(qQ),g8],[0,a(oK),bV],[0,a(o9),gU],[0,a(rs),fO],[0,a(qq),b5],[0,a(pf),48]]),DM=j_([[0,a(dr),65],[0,a(rr),h2],[0,a(vl),fL],[0,a(yo),fk],[0,a(xz),fP],[0,a(Ak),c3],[0,a(wU),h$],[0,a(y3),hT],[0,a(qo),66],[0,a(nO),67],[0,a(w_),ft],[0,a(cj),68],[0,a(oM),69],[0,a(yI),gX],[0,a(yN),h6],[0,a(yk),eE],[0,a(ye),dm],[0,a(Ms),eN],[0,a(Hg),N],[0,a(bh),70],[0,a(eC),71],[0,a(lZ),72],[0,a(ih),73],[0,a(vC),gA],[0,a(vM),gC],[0,a(wV),f3],[0,a(uS),hL],[0,a(nX),74],[0,a(j0),75],[0,a(jT),76],[0,a(oW),77],[0,a(f2),78],[0,a(xm),iq],[0,a(d6),79],[0,a(jx),ig],[0,a(v_),ij],[0,a(yH),hJ],[0,a(Ah),fD],[0,a(wj),g6],[0,a(pv),fn],[0,a(zs),ic],[0,a(dK),80],[0,a(pj),81],[0,a(dS),82],[0,a(c6),83],[0,a(IR),f6],[0,a(qB),84],[0,a(HZ),g0],[0,a(d8),85],[0,a(wb),gB],[0,a(vK),gQ],[0,a(vb),gG],[0,a(wq),ex],[0,a(eO),86],[0,a(eH),87],[0,a(qt),88],[0,a(qP),89],[0,a(GY),gL],[0,a(y_),jO],[0,a(oR),90],[0,a(JE),jN],[0,a(jW),97],[0,a(yY),fl],[0,a(xH),g3],[0,a(qp),d7],[0,a(zC),gT],[0,a(q8),gE],[0,a(Af),dT],[0,a(rn),38],[0,a(zj),gR],[0,a(pu),94],[0,a(po),co],[0,a(ot),42],[0,a(oe),64],[0,a(Ae),g$],[0,a(n3),98],[0,a(ql),92],[0,a(p1),eL],[0,a(oy),dt],[0,a(q0),c5],[0,a(q7),91],[0,a(ou),93],[0,a(Pl),f1],[0,a(ps),jE],[0,a(pG),99],[0,a(yD),hN],[0,a(n5),it],[0,a(op),fX],[0,a(qY),hZ],[0,a(lq),58],[0,a(l3),44],[0,a(vW),eJ],[0,a(qx),fE],[0,a(pL),aQ],[0,a(pX),lW],[0,a(pr),jL],[0,a(vz),ik],[0,a(rb),gW],[0,a(y5),f5],[0,a(q4),36],[0,a(qM),bW],[0,a(u_),fC],[0,a(wm),fI],[0,a(wf),fw],[0,a(vh),gJ],[0,a(qc),56],[0,a(qL),jR],[0,a(qi),h8],[0,a(px),j1],[0,a(pH),61],[0,a(Kt),d$],[0,a(oO),33],[0,a(nM),fV],[0,a(nU),bE],[0,a(oB),53],[0,a(qd),ju],[0,a(q_),52],[0,a(pw),c8],[0,a(ro),fv],[0,a(oN),96],[0,a(qk),62],[0,a(qI),gZ],[0,a(p_),eA],[0,a(pO),hW],[0,a(qE),ia],[0,a(qr),dp],[0,a(lG),45],[0,a(nR),cO],[0,a(vU),fK],[0,a(wC),h5],[0,a(wl),fo],[0,a(wy),hQ],[0,a(oL),fT],[0,a(pI),fW],[0,a(pa),cP],[0,a(q3),60],[0,a(uA),fx],[0,a(rg),dw],[0,a(q5),fG],[0,a(y6),gS],[0,a(NO),io],[0,a(oS),aY],[0,a(rl),57],[0,a(x6),eD],[0,a(pt),35],[0,a(n1),dq],[0,a(yS),hb],[0,a(y7),fR],[0,a(xh),d5],[0,a(qX),hM],[0,a(Mt),g7],[0,a(qz),49],[0,a(zD),g_],[0,a(w2),fM],[0,a(wG),gF],[0,a(o8),fF],[0,a(oj),hO],[0,a(qy),Q],[0,a(vO),fJ],[0,a(pN),ec],[0,a(qg),fq],[0,a(oI),40],[0,a(oQ),41],[0,a(p5),37],[0,a(lU),46],[0,a(nW),hX],[0,a(nP),hY],[0,a(q1),43],[0,a(vt),fz],[0,a(n_),gP],[0,a(rd),63],[0,a(oC),ds],[0,a(qK),34],[0,a(oZ),lF],[0,a(qJ),ir],[0,a(oP),lX],[0,a(pS),j2],[0,a(oE),iy],[0,a(qW),j3],[0,a(n$),39],[0,a(iw),bF],[0,a(yT),f7],[0,a(qZ),dO],[0,a(PL),h1],[0,a(oA),fB],[0,a(lS),59],[0,a(oh),55],[0,a(o$),54],[0,a(rp),47],[0,a(jP),32],[0,a(p3),eP],[0,a(qu),bX],[0,a(O0),V],[0,a(oV),51],[0,a(vd),gI],[0,a(z3),f0],[0,a(n7),lQ],[0,a(wT),j5],[0,a(p$),50],[0,a(Ap),gV],[0,a(oU),dn],[0,a(uV),cM],[0,a(uC),f4],[0,a(z0),dM],[0,a(z_),gD],[0,a(rk),95],[0,a(p2),fp],[0,a(qQ),g8],[0,a(oK),bV],[0,a(o9),gU],[0,a(No),fU],[0,a(ym),aq],[0,a(rs),fO],[0,a(qq),b5],[0,a(NB),jX],[0,a(pf),48]]),Ep=[0,a(l9),[0,a("/AP"),[0,a("/JavaScript"),[0,a(cC),[0,a("/Templates"),[0,a("/IDS"),[0,a("/URLS"),[0,a(l6),[0,a("/AlternatePresentations"),[0,a("/Renditions"),0]]]]]]]]]],cf=[0,a(xB),a(x7),a(vr),a(zh),a(vE),a(k),a(k),a(k),a(k),a(k),a(k)],tZ=a("CDATA["),t0=a("http://www.w3.org/XML/1998/namespace"),je=a("http://www.w3.org/2000/xmlns/"),jf=a("xml"),er=a("xmlns"),EO=a("space"),t1=a(wi),t2=a("encoding"),lb=a("standalone"),EP=a("yes"),EQ=a("no"),ER=a("preserve"),ES=a("default"),ET=a("1.0"),EU=a("1.1"),EV=a("utf-8"),EW=a("utf-16"),EX=a("utf-16be"),EY=a("utf-16le"),EZ=a("iso-8859-1"),E0=a("us-ascii"),E1=a("ascii"),E2=a("input signal not `El_start or `Data"),E3=a("input signal not `Dtd"),E4=a("dtd signal not allowed here"),E5=a("start signal not allowed here"),t3=a("end signal without matching start signal"),E6=a("data signal not allowed here"),cL=a(k),t5=[0,a(du),[0,a(gY),[0,a(c7),[0,a(dx),[0,a(l8),[0,a(c9),[0,a(ox),0]]]]]]],cm=a("http://ns.adobe.com/pdf/1.3/"),hC=a("http://ns.adobe.com/xap/1.0/"),jj=a("http://purl.org/dc/elements/1.1/"),Fw=a("http://www.w3.org/1999/02/22-rdf-syntax-ns#"),FI=[0,a(jK),[0,a(l_),[0,a(cB),[0,a(lH),0]]]],F3=a(jG),F8=[1,0.,0.,0.],ul=[0,a(cN),0],a5=a(k),lk=[0,0.,0.,0.,0.],uv=[0,a(Ml),a(Iy),a(zO),a(Lt),a(zS),a(GW),a(wB),a(xS),a(lw),a(MC),a(xY),a(PA),a(J$),a(NX),a(Aq),a(I_),a(IG),a(L1),a(vx),a(yO),a(wZ),a(I1),a(xc),a(KB),a(IS),a(u9),a(xf),a(Ke),a(Mg),a(Ao),a(vk),a(wk),a(xu),a(vn),a(zo),a(zt),a(u8),a(zU),a(vS),a(v5),a(yl),a(LT),a(GA),a(yC),a(zm),a(Kd),a(Ng),a(vv),a(yu),a(IX),a(HN),a(pq),a(yZ),a(NH),a(HT),a(L6),a(zA),a(K5),a(OM),a(PK),a(y4),a(zF),a(vL),a(Ia),a(KT),a(xG),a(LX),a(yM),a(zE),a(uI),a(wL),a(yc),a(uJ),a(vY),a(vj),a(uF),a(v3),a(wA),a(wE),a(ze),a(w6),a(xo),a(yn),a(xb),a(JJ),a(I5),a(NG),a(yy),a(OE),a(we),a(zN),a(wn),a(wt),a(K0),a(N$),a(xN),a(vB),a(In),a(wS),a(wX),a(IF),a(y2),a(K2),a(yK),a(Aa),a(O7),a(wM),a(OF),a(wg),a(H3),a(uW),a(N_),a(Lb),a(zk),a(xA),a(u4),a(GC),a(oJ),a(HX),a(zB),a(xa),a(NE),a(wr),a(wz),a(xq),a(vm),a(vp),a(z4),a(vJ),a(z6),a(wR),a(zg),a(xr),a(Hl),a(zW),a(JG),a(xy),a(yA),a(zM),a(OV),a(vQ),a(Pw),a(Kk),a(wH),a(pU),a(yh),a(Pa),a(wi),a(Ht),a(pM),a(Oy),a(NQ),a(MK),a(ya),a(jD),a(lA),a(K3),a(KS),a(uE),a(yR),a(w4),a(ok),a(z1),a(Ol),a(xP),a(Jn),a(JT),a(xW),a(IU),a(La),a(zz),a(yG),a(uH),a(yz),a(Le),a(xd),a(vs),a(JC),a(xZ),a(yF),a(wW),a(z2),a(Jl),a(yb),a(zL),a(LU),a(vT),a(zv),a(vI),a(wc),a(yv),a(vN),a(Kz),a(xF),a(yU),a(OG),a(vc),a(MD),a(uU),a(L2),a(wP),a(IQ),a(L5),a(zZ),a(zH),a(MF),a(qD),a(KX),a(LD),a(Lr),a(vw),a(xI),a(Hi),a(vf),a(Hw),a(u0),a(M0),a(xU),a(u6),a(KD),a(zY),a(Px),a(zd),a(zl),a(Oi),a(yV),a(ww),a(uZ),a(n9),a(uP),a(wJ),a(y1),a(w0),a(zr),a(x_),a(Ha),a(Of),a(Pc),a(yr),a(uX),a(OY),a(qG),a(wp),a(v6),a(yL),a(wo),a(MQ),a(pV),a(uN),a(z7),a(NY),a(xe),a(xV),a(zX),a(LG),a(An),a(zf),a(xC),a(y9),a(zR),a(v8),a(yJ),a(vg),a(qA),a(xt),a(xx),a(HU),a(MG),a(H8),a(xO),a(zK),a(x8),a(vP),a(yP),a(My),a(vF),a(O1),a(Nz),a(xE),a(Ai),a(xv),a(y8),a(GQ),a(yB),a(xM),a(n2),a(x5),a(G3),a(Oh),a(As),a(uY),a(z8),a(xp),a(Kl),a(Aj),a(Hu),a(xk),a(wh),a(xn),a(Mk),a(N5),a(uO),a(zx),a(zq),a(MX),a(NW),a(Il),a(yi),a(uK),a(v9),a(yq),a(yd),a(vD),a(KZ),a(nV),a(I4),a(wN),a(zI),a(zV),a(y$),a(za),a(v0),a(wO),a(zw),a(yx)];dW(11,AP,Kg);dW(10,B,Ps);dW(9,[Q,a(Jo),-10],Jo);dW(8,AO,Ii);dW(7,AN,LF);dW(6,J,KV);dW(5,[Q,a(Mb),-6],Mb);dW(4,ar,ML);dW(3,bq,Ie);dW(2,$,x9);dW(1,mk,OQ);dW(0,rP,J8);var
QJ=a("really_input"),QI=a("input"),QH=[0,0,[0,6,0]],QG=a("output_substring"),QF=a("output"),QD=[0,1,[0,3,[0,4,[0,6,0]]]],QC=a("%.12g"),QB=a(dP),Qz=a(jq),QA=a(os),Qy=a("char_of_int"),Qr=a("Stdlib.Exit"),Qs=ef(0,0,O$),Qu=ef(0,0,65520),Qw=ef(1,0,O$),QN=a(Hc),QO=a("\\'"),QP=a(GV),QQ=a(IH),QR=a(I8),QS=a(MM),QM=a("Char.chr"),QZ=a("List.map2"),Q1=a("List.iter2"),Q0=a("List.rev_map2"),QX=a("nth"),QY=a("List.nth"),QW=a("tl"),QV=a(GJ),Q5=a("String.blit / Bytes.blit_string"),Q4=a("Bytes.blit"),Q3=a("String.sub / Bytes.sub"),Ra=a("String.contains_from / Bytes.contains_from"),Q9=a(k),Q8=a(k),Q7=a("String.concat"),Re=a("Array.blit"),Rd=a("Array.fill"),Rc=a("Array.sub"),Rb=a("Array.init"),Rg=ef(0,0,0),Rh=a("Lexing.lex_refill: cannot grow buffer"),Ro=a("Map.remove_min_elt"),Rp=[0,0,0,0],Rq=[0,a("map.ml"),Hx,10],Rr=[0,0,0],Rk=a(n0),Rl=a(n0),Rm=a(n0),Rn=a(n0),Rs=a("Stdlib.Queue.Empty"),Rt=a("CamlinternalLazy.Undefined"),RD=a("Buffer.add_substring/add_subbytes"),RC=a("Buffer.add: cannot grow buffer"),RB=[0,a(M_),93,2],RA=[0,a(M_),94,2],Ry=a("Buffer.nth"),Rx=a("Buffer.sub"),RM=a("%c"),RN=a("%s"),RO=a(Mz),RP=a(NT),RQ=a(Id),RR=a(OL),RS=a(Ju),RT=a(zy),RU=a("%{"),RV=a("%}"),RW=a("%("),RX=a("%)"),RY=a(of),RZ=a("%t"),R0=a("%?"),R1=a("%r"),R2=a("%_r"),R3=[0,a(bU),850,23],Sc=[0,a(bU),814,21],R6=[0,a(bU),815,21],Sd=[0,a(bU),818,21],R7=[0,a(bU),819,21],Se=[0,a(bU),822,19],R8=[0,a(bU),MZ,19],Sf=[0,a(bU),826,22],R9=[0,a(bU),827,22],Sg=[0,a(bU),831,30],R_=[0,a(bU),yE,30],Sa=[0,a(bU),836,26],R4=[0,a(bU),837,26],Sb=[0,a(bU),846,28],R5=[0,a(bU),847,28],R$=[0,a(bU),851,23],Tj=a(uL),Th=[0,a(bU),1558,4],Ti=a("Printf: bad conversion %["),Tk=[0,a(bU),1626,39],Tl=[0,a(bU),1649,31],Tm=[0,a(bU),1650,31],Tn=a("Printf: bad conversion %_"),To=a(LQ),Tp=a(G5),Tq=a(LQ),Tr=a(G5),Tv=[0,[11,a("invalid box description "),[3,0,0]],a("invalid box description %S")],Tt=a(k),Tu=[0,0,4],Tw=a(k),Tx=a(fr),Ty=a(lT),Tz=a("hov"),TA=a("hv"),TB=a(lo),Tf=a(x$),Td=a("neg_infinity"),Te=a(Py),Tc=a(dP),S9=[0,c8],SX=a("%+nd"),SY=a("% nd"),S0=a("%+ni"),S1=a("% ni"),S2=a("%nx"),S3=a("%#nx"),S4=a("%nX"),S5=a("%#nX"),S6=a("%no"),S7=a("%#no"),SW=a("%nd"),SZ=a(Id),S8=a("%nu"),SK=a("%+ld"),SL=a("% ld"),SN=a("%+li"),SO=a("% li"),SP=a("%lx"),SQ=a("%#lx"),SR=a("%lX"),SS=a("%#lX"),ST=a("%lo"),SU=a("%#lo"),SJ=a("%ld"),SM=a(NT),SV=a("%lu"),Sx=a("%+Ld"),Sy=a("% Ld"),SA=a("%+Li"),SB=a("% Li"),SC=a("%Lx"),SD=a("%#Lx"),SE=a("%LX"),SF=a("%#LX"),SG=a("%Lo"),SH=a("%#Lo"),Sw=a("%Ld"),Sz=a(OL),SI=a("%Lu"),Sk=a("%+d"),Sl=a("% d"),Sn=a("%+i"),So=a("% i"),Sp=a("%x"),Sq=a("%#x"),Sr=a("%X"),Ss=a("%#X"),St=a("%o"),Su=a("%#o"),Sj=a(lI),Sm=a(Mz),Sv=a(uL),RE=a(o6),RF=a("@}"),RG=a("@?"),RH=a("@\n"),RI=a("@."),RJ=a("@@"),RK=a("@%"),RL=a("@"),Sh=a("CamlinternalFormat.Type_mismatch"),TF=a(k),TG=[0,[11,a(fQ),[2,0,[2,0,0]]],a(", %s%s")],T5=[0,[11,a(wQ),[2,0,[12,10,0]]],a(K8)],T6=[0,[11,a("Fatal error in uncaught exception handler: exception "),[2,0,[12,10,0]]],a("Fatal error in uncaught exception handler: exception %s\n")],T4=a("Fatal error: out of memory in uncaught exception handler"),T2=[0,[11,a(wQ),[2,0,[12,10,0]]],a(K8)],TY=[0,[2,0,[12,10,0]],a("%s\n")],TQ=a("Raised at"),TR=a("Re-raised at"),TS=a("Raised by primitive operation at"),TT=a("Called from"),TU=a(" (inlined)"),TW=a(k),TV=[0,[2,0,[12,32,[2,0,[11,a(' in file "'),[2,0,[12,34,[2,0,[11,a(", line "),[4,0,0,0,[11,a(H5),a7W]]]]]]]]]],a('%s %s in file "%s"%s, line %d, characters %d-%d')],TX=[0,[2,0,[11,a(" unknown location"),0]],a("%s unknown location")],TL=a("Out of memory"),TM=a("Stack overflow"),TN=a("Pattern matching failed"),TO=a("Assertion failed"),TP=a("Undefined recursive module"),TH=[0,[12,40,[2,0,[2,0,[12,41,0]]]],a("(%s%s)")],TI=a(k),TJ=a(k),TK=[0,[12,40,[2,0,[12,41,0]]],a("(%s)")],TE=[0,[4,0,0,0,0],a(lI)],TC=[0,[3,0,0],a(jp)],TD=a(O9),TZ=[0,a(k),a("(Cannot print locations:\n bytecode executable program file not found)"),a("(Cannot print locations:\n bytecode executable program file appears to be corrupt)"),a("(Cannot print locations:\n bytecode executable program file has wrong magic number)"),a("(Cannot print locations:\n bytecode executable program file cannot be opened;\n -- too many open files. Try running with OCAMLRUNPARAM=b=2)")],T9=a("Fun.Finally_raised: "),T7=a("Stdlib.Fun.Finally_raised"),T$=a("Random.int"),T_=a("x"),Ua=[0,987910699,495797812,364182224,414272206,318284740,990407751,383018966,270373319,840823159,24560019,536292337,512266505,189156120,730249596,143776328,51606627,140166561,366354223,1003410265,700563762,981890670,913149062,526082594,1021425055,784300257,667753350,630144451,949649812,48546892,415514493,258888527,511570777,89983870,283659902,308386020,242688715,482270760,865188196,1027664170,207196989,193777847,619708188,671350186,149669678,257044018,87658204,558145612,183450813,28133145,901332182,710253903,510646120,652377910,409934019,801085050],Uo=a("Hashtbl: unsupported hash table format"),Un=[0,0],a7U=a("OCAMLRUNPARAM"),a7S=a("CAMLRUNPARAM"),Uc=a(k),UN=[3,0,3],UO=a(dP),UI=a(lz),UJ=a(Iu),UK=a(k),UE=a(lz),UF=a(Ok),UG=a(k),UC=a(h9),Uy=a(k),Uz=a(k),UA=a(k),UB=a(k),Ux=[0,a(k)],Ut=a(k),Uu=a(k),Uv=a(k),Uw=a(k),Ur=[0,a(k),0,a(k)],Uq=a(k),Up=a("Stdlib.Format.String_tag"),UX=a(dR),U5=a(k),VO=a(k),VC=[0,a(dl),0],VD=a(MH),VM=a(Iz),VN=a(k),VE=a(L7),VL=a(k),VF=a(Jp),VK=a(k),VG=a(by),VH=a(by),VI=a(dl),VJ=a(k),Vy=a("Filename.quote_command: bad file name "),Vz=a(dl),VA=a(dl),Vw=a(KR),Vv=a(".\\"),Vu=a(Pt),Vt=a("..\\"),Vg=a(MH),Vm=a(Iz),Vn=a(k),Vh=a(L7),Vl=a(k),Vi=a(Jp),Vk=a(k),Vj=a(by),Vb=a(KR),Va=a(Pt),U7=a(k),U6=a(k),U8=a(Od),U9=a(ve),U_=a(bb),a7Q=a("TMPDIR"),Ve=a("/tmp"),Vf=a("'\\''"),Vq=a("NUL"),Vr=a(ve),Vs=a("\\"),a7O=a("TEMP"),Vx=a(dP),VR=a(Od),VS=a(ve),VT=a(bb),VW=a(K6),VX=a("Win32"),V0=a("Bigarray.array1_of_genarray"),V5=a(Jw),V7=a(Nx),V8=a(HA),V9=a(Lw),V_=a(Mq),V$=a(MO),Wa=a(He),Wb=a(O4),Wc=a(w$),Wd=a(JI),We=a(O3),Wf=a(Hs),Wg=a(O5),Wh=a(Ob),Wi=a(Gu),Wj=a(IV),Wk=a(Lv),Wl=a(Jd),Wm=a(On),Wn=a(Km),Wo=a(rj),Wp=a(LM),Wq=a(IK),Wr=a(KJ),Ws=a(Ix),Wt=a(HL),Wu=a(q6),Wv=a(z9),Ww=a(Ji),Wx=a(GT),Wy=a(JU),Wz=a(Nn),WA=a(II),WB=a(PB),WC=a(G9),WD=a(Je),WE=a(G1),WF=a(H0),WG=a(Nu),WH=a(Mm),WI=a(JB),WJ=a(Hz),WK=a(Jc),WL=a(Os),WM=a(ND),WN=a(H$),WO=a(Pv),WP=a(Jy),WQ=a(LK),WR=a(Op),WS=a(OH),WT=a(L_),WU=a(Kr),WV=a(Hy),WW=a(H_),WX=a(JH),WY=a(N9),WZ=a(M7),W0=a(KA),W1=a(IA),W2=a(Ky),W3=a(MN),W4=a(H2),W5=a(Jb),W6=a(JD),W7=a(LR),W8=a(O_),W9=a(Pm),W_=[0,[11,a("EUNKNOWNERR "),[4,0,0,0,0]],a("EUNKNOWNERR %d")],V6=[0,[11,a("Unix.Unix_error(Unix."),[2,0,[11,a(fQ),[3,0,[11,a(fQ),[3,0,[12,41,0]]]]]]],a("Unix.Unix_error(Unix.%s, %S, %S)")],V1=a(l7),V2=a(k),V3=a(k),V4=a(l7),W$=a("0.0.0.0"),Xa=a("127.0.0.1"),a7N=a("::"),a7M=a("::1"),Xb=a("Jsoo_runtime.Error.Exn"),Xc=a(y0),Xs=a("Pdfutil.pair_reduce"),Xw=a(Ja),XB=a("Pdfutil.last"),XJ=a(k),XL=a(k),XK=[0,a("pdfutil.ml"),1237,6],XH=a("unopt"),XG=a("Pdfutil.array_map2"),XE=a("Pdfutil.ilist"),XC=a("Pdfutil.extremes"),XA=a("Pdfutil.select"),Xy=a("Pdfutil.cleave: not enough elements"),Xz=a("Pdfutil.cleave: negative argument"),Xx=a(Ja),Xt=a(Nf),Xu=a(Nf),Xq=a("Pdfutil.pairs_of_list"),Xo=a("Pdfutil.interleave_lists"),Xn=a("Pdfutil.combine"),Xm=[0,0,0,0],Xl=[0,0,0],Xk=a(k),Xi=a(k),XI=j_([[0,900,a("CM")],[0,xL,a("D")],[0,Hx,a("CD")],[0,aQ,a(o2)],[0,aQ,a(o2)],[0,aQ,a(o2)],[0,90,a("XC")],[0,50,a("L")],[0,40,a("XL")],[0,10,a(wa)],[0,10,a(wa)],[0,10,a(wa)],[0,9,a("IX")],[0,5,a("V")],[0,4,a("IV")],[0,1,a(jv)],[0,1,a(jv)],[0,1,a(jv)]]),X0=[0,a("pdfio.ml"),607,2],XY=a("Pdfio.getval_32 - n < 0"),XW=a("getinit"),XV=a("setinit_string"),XU=a("setinit"),XS=a("string seek_in: seek before beginning"),XR=a("string input_byte: attempt to be before beginning"),XQ=a("string input_char: attempt to be before beginning"),XT=a("string"),XP=a("bytes"),XO=a(xj),X2=a("Pdftransform.NonInvertable"),X4=[0,2,[0,[0,1,Ac],0]],X5=[0,0,[0,[0,1,eK],0]],X6=[0,3,[0,[0,2,wF],0]],X_=a(Ov),X7=[0,a("pdfcryptprimitives.ml"),bV,4],Yf=a("remove_dict_entry: not a dictionary"),Yg=a("replace_dict_entry: not a dictionary."),Yh=a("add_dict_entry: not a dictionary."),Ym=a("Pdf.getnum: not a number"),Yt=a(aF),Yv=a(eM),Yu=a(c4),YJ=a("nametree_lookup_kids: malformed name tree"),YK=a("Bad lookup array"),YL=a(vA),YN=a(c4),YO=a(oo),YP=a(cD),YQ=a("Malformed name tree entry"),YR=a(c4),YS=a(oo),YT=a(cD),YU=a("Missing name tree entry"),YM=a("Malformed name tree"),YZ=a("contents_of_nametree: bad /Names"),YV=a(oo),YW=a(cD),YX=a(c4),YY=a("contents_of_nametree: neither names nor kids"),Y1=a(fu),Y0=a("Bad trailer dictionary"),YI=a("find_indirect: not a dictionary"),YF=a("CAMLPDF_REPRODUCIBLE_IDS"),YG=a(jq),YH=a("camlpdf"),YE=[0,[12,47,[2,0,[4,3,0,0,0]]],a("/%s%i")],YD=a("unique_key: Not a dictionary or stream"),YC=a("couldn't extract raw stream"),YA=a(aF),YB=a(eM),Yw=a(cC),Yx=a("No /Pages found in /Root"),Yr=a("Malformed matrix"),Yq=a("lookup_exception: not a dictionary, key = "),Yp=a("No catalog"),Yo=a("Pdf.parse_rectangle: bad rectangle"),Yn=a("Pdf.parse_rectangle: not a rectangle"),Yl=[0,a("pdf.ml"),qU,12],Yk=a(a6),Yj=a("Pdf.getstream: can't read stream"),Yi=a("Pdf.getstream: not a stream"),Yd=[0,[2,0,[11,a(" whilst reading file "),[2,0,[11,a(" at position "),[4,3,0,0,0]]]]],a("%s whilst reading file %s at position %i")],Yb=[6,0],X$=a(k),Yc=a("Pdf.PDFError"),Y5=a("decrypt: no key B"),Y6=a(a$),Y9=a(Mp),Zb=a(Mp),Y_=a(dk),Y$=a(jY),Za=a("/Identity"),Y7=a(aF),Y8=a(h7),Zd=[0,a(vy),fU,27],Zf=a(Ov),Ze=a(a6),Zc=[0,a(vy),uR,9],$P=a("recrypt_pdf failed. Wrong password?"),$J=a("recrypt_pdf_owner: bad encryption"),$L=a(LY),$K=a(NN),$M=a("Recrypt with owner password failed."),$N=a(GF),$D=a("recrypt_pdf: bad encryption"),$G=a(LY),$F=a(NN),$E=a("recrypt_pdf: failed AESV3 fek."),$H=a(GF),$B=a(dy),$w=a(k),$x=a(k),$y=a(k),$t=a(k),$u=a(k),$v=a(k),$q=ef(0,16776960,o5),$r=ef(aq,0,0),$s=ef(aq,0,0),_$=a(Hn),$a=a(jx),$b=a(vZ),$c=[0,a(w1),[4,a(eI)]],$d=[0,a(u2),[4,a(eI)]],$e=a(dK),$f=a(d8),$g=a(d6),$h=a(dS),$i=[0,a(a6),[1,ak]],$j=a(jB),$k=[0,a(p4),[6,[0,[0,a(eI),[6,[0,[0,a(a6),[1,32]],[0,[0,a(zJ),[4,a(wD)]],[0,[0,a(pi),[4,a(L0)]],0]]]]],0]]],$l=[0,a(eO),[1,5]],$m=[0,a(a$),[4,a(j4)]],$n=a(k),$o=a(dy),$p=a("256 bit Encryption AES failed"),_Z=[0,[0,a(u2),[4,a(eI)]],[0,[0,a(w1),[4,a(eI)]],0]],_0=a(dK),_1=a(d8),_2=a(d6),_3=[0,a(dS),[1,4]],_4=[0,a(a6),[1,N]],_5=a(jB),_6=[0,a(p4),[6,[0,[0,a(eI),[6,[0,[0,a(a6),[1,16]],[0,[0,a(zJ),[4,a(wD)]],[0,[0,a(pi),[4,a(MI)]],0]]]]],0]]],_7=[0,a(eO),[1,4]],_8=[0,a(a$),[4,a(j4)]],_9=a(dy),__=a("Encryption AES failed"),_L=[0,[0,a(u2),[4,a(eI)]],[0,[0,a(w1),[4,a(eI)]],0]],_M=a(dK),_N=a(d8),_O=a(d6),_P=[0,a(dS),[1,4]],_Q=[0,a(a6),[1,N]],_R=a(jB),_S=[0,a(p4),[6,[0,[0,a(eI),[6,[0,[0,a(a6),[1,16]],[0,[0,a(zJ),[4,a(wD)]],[0,[0,a(pi),[4,a(Ir)]],0]]]]],0]]],_T=[0,a(eO),[1,4]],_U=[0,a(a$),[4,a(j4)]],_V=[0,N,4],_W=a(dy),_X=a("Encryption 128 r4 failed"),_B=a(dK),_C=[0,a(a6),[1,N]],_D=a(d8),_E=a(d6),_F=[0,a(dS),[1,3]],_G=[0,a(eO),[1,2]],_H=[0,a(a$),[4,a(j4)]],_I=[0,N,3],_J=a(dy),_K=a("Encryption 128 failed"),_r=a(dK),_s=a(d8),_t=a(d6),_u=[0,a(dS),[1,2]],_v=[0,a(eO),[1,1]],_w=[0,a(a$),[4,a(j4)]],_x=[0,40,2],_y=a(dy),_z=a("Encryption 40 failed"),_n=a(fu),_o=a(k),_p=a(fu),_q=[0,a(vy),867,17],_m=a(k),_l=a(dy),_i=a(k),_j=a("decrypt_pdf_owner: No /OE entry found"),_k=a(k),_a=a(dy),_b=a(jB),_h=a(k),_g=a(k),_f=a("Encryption: Could not decrypt single stream: Bad AESV3 user or owner password"),_e=a("Encryption: Bad owner password when decrypting single stream"),_d=a(k),_c=a("Encryption: Bad password when decrypting single stream"),Z2=a(dy),Z6=a(vZ),Z7=a("Missing /Perms in encryption dictionary"),Z8=a("Mismatched /Perms and /P permissions"),Z9=a("/Perms file permissions corrupted"),Z_=a("decrypt_pdf: no oe"),Z3=a(jB),Z4=a(vZ),Z5=a(k),Z1=a("Wrong length in /Perms"),Z0=[0,0],ZZ=a("/U too short in authenticate_owner_password"),ZY=a(k),ZX=a("/O too short in authenticate_owner_password"),ZW=a(k),ZV=a("/U too short in file_encryption_key_aesv3_user"),ZT=a(k),ZU=[0,0],ZS=a("/O too short in make_intermediate_owner_key_aesv3"),ZO=[0,[11,a("file_encryption_key_aesv3 pre-made length "),[4,3,0,0,[12,10,[10,0]]]],a("file_encryption_key_aesv3 pre-made length %i\n%!")],ZQ=a(k),ZR=[0,[11,a("file_encryption_key_aesv3 made length "),[4,3,0,0,[12,10,[10,0]]]],a("file_encryption_key_aesv3 made length %i\n%!")],ZP=[0,0],ZN=a(k),ZM=a(k),Zn=a(": too small in get_encryption_values"),Zi=a(dy),Zj=a(a$),Zk=a(eO),Zl=a(a6),Zm=a(dS),ZB=a(j4),ZC=a(p4),ZD=a(eI),ZE=a(pi),ZF=a(MI),ZG=a(L0),ZH=a(Ir),ZI=a(a6),ZJ=[0,0],Zo=a(d6),Zq=a(d6),Zp=a("Bad or missing /O entry"),Zr=a(d8),Zt=a(d8),Zs=a("Bad or missing /U entry"),Zu=a(dK),Zv=a("Bad or missing /P entry"),Zw=a(fu),Zx=a("Bad or missing /ID element"),Zy=a(jx),Zz=a(Hn),ZA=a("No encryption method"),ZK=a("get_encryption_values: unencrypted pdf"),Zg=a(dy),Zh=a(dy),Y3=a(k),Y2=[0,40,ds,78,94,78,dn,f6,65,aQ,0,78,86,aq,cM,1,8,46,46,0,fq,eN,dp,62,N,47,12,eJ,V,aQ,83,cO,b5],$Q=a(Li),$R=a(k),$S=a(k),$T=a(Li),$3=a("A"),aae=a("bad white code"),aaf=a("bad black code"),abN=a(bh),abO=a(a$),abQ=[0,a(lE),1320,21],abP=a("Pdf.remove_decoder: malformed /Filter"),abM=a("Pdf.decode_pdfstream: malformed Stream"),aci=a("Pdf.encode_pdfstream: malformed Stream"),acd=[0,[0,a(KN),[1,12]],0],ace=a(xs),acf=a(dk),acg=a("Encode predictor not supported"),ach=[0,a(lE),1445,9],ab$=a(a$),aca=a("Malformed /Filter"),acb=a(a6),acc=a(a$),ab7=a(zi),ab8=a(wY),ab9=a(Ll),ab_=a(OX),ab4=[5,0],abW=a(a$),abX=a(bh),abY=a(dk),abZ=a(d9),ab0=a(a$),ab1=a(bh),ab2=a(d9),ab3=a(dk),ab5=a(d9),ab6=a(bh),abV=a("Malformed filter array"),abS=a(a$),abT=a(bh),abU=a("No or bad filter"),abL=a(k),abH=a(a6),abI=a("no /Length"),abJ=a("No /Length"),abK=a(a6),abG=a("Pdf.decode_pdfstream: not a valid Stream"),abE=a(bh),abD=a(a$),abr=a(a$),abs=a(bh),abC=a(a$),abu=a(bh),abt=a("PDF.remove_decoder: malformed /Filter"),abv=a(dk),abw=a(d9),abB=a(dk),abA=a(d9),abz=a(dk),aby=a(d9),abx=a("PDF.remove_decoder: malformed /DecodeParms"),abn=a(d9),abo=a(dk),abp=a(bh),abq=a(a$),aa9=a(bh),aa_=a(a$),aa$=a("PDF.decode: Bad filter specification"),abm=a("decode_one"),aba=a(d9),abb=a(dk),abc=[6,0],abd=a(KN),abf=a("/Colors"),abg=a("malformed /Colors"),abh=a(G8),abi=a("malformed /BitsPerComponent"),abj=a(xs),abk=a("malformed /Columns"),abl=a("Predictor"),abe=a("Malformed /Predictor"),aaH=a("/Fl"),aaS=a(JQ),aaT=a(IT),aaU=a(wY),aaV=a(zi),aaW=a("/CCF"),aaX=a("/CCITTFaxDecode"),aaI=a(OX),aaJ=a("/LZW"),aaK=a("/LZWDecode"),aaL=a("/RL"),aaM=a(Ll),aaN=[0,[11,a("Unknown: "),[2,0,0]],a("Unknown: %s")],aaO=a(d9),aaP=a(dk),aaQ=a("/EarlyChange"),aaR=a("malformed /EarlyChange"),aaY=a(d9),aaZ=a(dk),aa0=a("bad Decodeparms"),aa1=a(j0),aa2=a("/EndOfLine"),aa3=a("/EncodedByteAlign"),aa4=a(xs),aa5=a("/Rows"),aa6=a("/EndOfBlock"),aa7=a("/BlackIs1"),aa8=a("/DamagedRowsBeforeError"),aaF=[0,[11,a("Warning: Missing EOD marker in runlength decode...\n"),[10,0]],a("Warning: Missing EOD marker in runlength decode...\n%!")],aaD=[0,a(lE),1065,20],aaA=a("unknown PNG predictor"),aaw=a("TIFF Predictor for 1bpc not supported"),aax=a("TIFF Predictor for 2bpc not supported"),aay=a("TIFF Predictor for 4bpc not supported"),aaz=a("TIFF Predictor for 16bpc not supported"),aav=a("Tiff predictor for unknown color depth"),aar=a("Bad CCITT stream"),aaq=a("CCITTFax k > 0"),aau=a("CCITT Uncompressed"),aat=a("CCITT k"),aas=a("Bad CCITT Stream"),aap=[0,-1],aao=[0,1],aaj=[0,-2],aai=[0,2],aal=[0,-3],aak=[0,3],aam=a("Not a valid code on EOFB"),aan=a("Not a valid code"),aah=[0,0],aaa=a(" length "),aab=a(by),aac=a(by),aad=a("Flate"),$8=[0,b5,0],$_=[0,a(lE),ft,15],$9=[0,co,[0,62,0]],$6=[0,a(lE),fz,9],$5=a("Error decoding ASCII85 stream"),$1=a("ASCIIHex"),$Z=a(jI),$Y=[0,[4,8,[0,2,2],0,0],a("%02X")],$V=a("Pdfcodec.Couldn'tDecodeStream"),$W=a("Pdfcodec.DecodeNotSupported"),acB=[0,a(by)],acC=[0,a(by)],acD=a(fu),acE=[0,a(by)],acF=a(fu),acG=[0,a(ls)],acH=[0,a(It)],acI=[0,a(KH)],acJ=[0,a(LZ)],acK=[0,a(HC)],acL=[0,a("\nstream\n")],acM=[0,a(xl)],acN=[0,a(" 0 R")],ac8=a("Linearization not supported since v1.8. Use an external linearizer."),ac9=a(im),ac_=a("bad xref stream generated\n"),ac$=a(Lm),ada=[0,1],adb=a(PC),adc=a("startxref\n"),add=a(N0),ade=a("trailer\n"),adg=a(aJ),adh=a(im),adf=a("Pdf.pdf_to_output: Bad trailer dictionary"),adi=[0,1],adj=a("\nstartxref\n"),adk=a(N0),ac6=a(a6),acZ=[0,[0,0,o5,0],0],ac0=a(a6),ac1=a(eH),ac2=a(im),ac3=a(aJ),ac4=[0,a(aF),[4,a("/XRef")]],ac5=[0,3],acY=a("max_bytes_required"),acS=a(by),acT=a(by),acR=a(by),acU=a(l4),acV=a(f2),acW=a(a6),acX=[0,a(aF),[4,a("/ObjStm")]],acQ=a("output_stream"),acO=[0,a(Lm)],acP=[0,a(PC)],acx=a(k),acy=a("bad name"),acv=[0,[11,a("Warning: name "),[3,0,[11,a(" contains the null character\n"),[10,0]]]],a("Warning: name %S contains the null character\n%!")],acw=a("#00"),acu=a("hexchar"),act=[0,[8,[0,0,0],0,0,0],a(Ju)],acr=[0,[4,6,[0,2,2],0,0],a("%02x")],acl=a("xref\n"),acm=a("0 "),acn=a(G2),aco=a("0000000000 65535 f \n"),ack=a(" 00000 n \n"),acj=[0,[12,37,[11,a("PDF-"),[4,3,0,0,[12,46,[4,3,0,0,[12,10,[12,37,[11,a("\x80\x81\x82\x83\n"),0]]]]]]]],a("%%PDF-%i.%i\n%%\x80\x81\x82\x83\n")],ac7=[0,2,a(k),a(k),0],adn=a(k),ado=a(k),ads=a("Malformed PDF header"),adr=a("Could not read PDF header"),ad8=a(Ar),ad9=a(xl),ad_=a(Hp),ad$=a(Pq),ael=a("Object not in xref table"),aek=[0,a(pp),728,11],aeK=a(Jj),aeL=a("xref "),aeM=[2,0,0],aeN=a(Jj),afW=[0,1],afV=[0,0],afR=a(dy),afS=a(jB),afU=[0,a(pp),1876,19],afT=[0,a(pp),1882,19],afP=a(xj),afN=a(xj),afJ=a("Encryption"),afL=a("Revision number too low when reading PDF"),afK=[0,[11,a("Because of error "),[2,0,[11,a(", will read as malformed.\n"),[10,0]]]],a("Because of error %s, will read as malformed.\n%!")],afI=[0,[11,a("Failed to read PDF - initial error was\n"),[2,0,[11,a("\n\nfinal error was \n"),[2,0,[11,a(zb),0]]]]],a("Failed to read PDF - initial error was\n%s\n\nfinal error was \n%s\n\n")],afB=[0,[11,a("Attempting to reconstruct the malformed pdf "),[2,0,[11,a("...\n"),[10,0]]]],a("Attempting to reconstruct the malformed pdf %s...\n%!")],afC=[0,[11,a("Read "),[4,3,0,0,[11,a(x1),[10,0]]]],a("Read %i objects\n%!")],afD=a(aJ),afG=a(GN),afE=a(Ip),afF=[0,[11,a("Malformed PDF reconstruction succeeded!\n"),[10,0]],a("Malformed PDF reconstruction succeeded!\n%!")],afz=[0,1],afu=a("Malformed or missing trailer"),afv=a(pQ),aft=[0,[11,a("File reconstructor: could not read trailer dictionary - "),[2,0,0]],a("File reconstructor: could not read trailer dictionary - %s")],afn=[0,bV],afs=a("Could not find xref pointer"),afo=a(Ot),afp=a(Hb),afq=a(pQ),afr=a(Ot),afh=[0,-1],afi=a(aJ),afm=a(GN),afj=a(Ip),afk=a("/Version"),afl=a("%PDF-"),ae_=a(dk),ae$=a(a$),afa=a(Hb),afb=a(pQ),afc=a(Jx),afd=a(aF),afe=a(eH),aff=a(im),ae5=[0,1],ae6=a("/Linearized"),ae2=a("Bad xref stream\n"),ae1=a("Bad /Index entry"),aeT=[0,0,0],aeS=a("Bad xref stream"),aeU=[0,[11,a("couldn't lex object number\n"),[10,0]],a("couldn't lex object number\n%!")],aeW=[0,5,[0,7,0]],aeV=a("Failure reading xref stream - malformed"),aeX=a(eH),aeY=a(Jx),ae0=a("Bad /Index"),aeZ=a("Unknown /Index"),ae3=a(im),ae4=a("Missing /Size in xref dict"),aeR=a("Bad Xref stream"),aeQ=a("read_xref_line_stream"),aeP=a("Could not read x-ref table"),aeC=a(f2),aeD=a("malformed /N"),aeE=a(l4),aeF=a("malformed /First"),aeI=a("objstm offset problem"),aeH=a("unexpected objstream end"),aeG=a("couldn't decode objstream"),aeB=[0,[11,a("lex_stream_object: not a stream, but "),[2,0,0]],a("lex_stream_object: not a stream, but %s")],aeA=[0,0,0],aev=[0,[2,0,[12,10,[10,0]]],a(xg)],aew=[0,[2,0,[12,10,[10,0]]],a(xg)],aez=a(a6),aey=a(a6),aeu=[0,[11,a("list length "),[4,3,0,0,[12,10,[10,0]]]],a("list length %i\n%!")],aex=a("Could not extract object"),aes=a("parse_array"),aeo=a(OD),aep=a(OD),aeq=[0,[11,a("Malformed file: odd length dictionary. Carrying on...\n"),[10,0]],a("Malformed file: odd length dictionary. Carrying on...\n%!")],aer=[1,[6,0]],aen=[1,0],aeh=a("Could not read object"),aef=[0,0,0],aeg=a("Could not read dictionary"),aee=[0,[11,a("Recovering from Lex error: "),[2,0,[12,10,[10,0]]]],a("Recovering from Lex error: %s\n%!")],aec=a("Failure lexing stream dict"),aed=a(a6),aeb=a("lex_stream_data"),aea=a("Bad read malformed stream  - "),ad3=a(Ar),ad4=a(xl),ad5=a(Pq),ad6=a(Hp),ad2=a("read_chunk"),adX=a(NR),adY=a(Pn),adZ=a(Ar),ad0=a(ls),ad1=a(GH),adU=a(jI),adT=a("Lexing Hexstring"),adV=a("lex_hexstring"),adS=[0,a(pp),pg,4],adR=a("lex_string failure"),adQ=a(HD),adP=a("mkchar"),adO=a(jI),adN=a(GJ),adM=[0,1],adL=[0,0],adw=a(ls),adx=a(It),ady=a(KH),adz=a(LZ),adA=a(HC),adB=a("EndStream"),adC=a(GH),adD=a(Pn),adE=a(NR),adF=a("Comment"),adG=a("StopLexing"),adH=a("LexNone"),adI=a("LexStream"),adu=a("Could not find EOF marker"),adv=a("%%EOF"),ae7=a("Pdfread.Revisions"),ae9=a("Pdfread.BadRevision"),afY=a("Could not read JPEG data - end of stream"),ag_=a(JQ),ag$=a(IT),aha=a(wY),ahb=a(zi),ahu=a(h4),ahD=a(l1),ahE=a(Mv),ahF=a(yt),ahG=a(Ab),ahH=a(jF),ahv=a(g1),ahw=a(eC),ahx=a(dx),ahy=a(lM),ahC=a("Can't use /Pattern here"),ahz=a(c7),ahA=a("ColorSpace not found"),ahB=a("ColorSpace dict not found"),ahI=a(LJ),ahP=a(Mv),ahQ=a(yt),ahR=a(Ab),ahS=a(Mn),ahT=a(ih),ahJ=a(NV),ahK=a(JW),ahL=a(dx),ahM=a(Lq),ahN=a(f2),ahO=a("Bad iccstream"),ahs=[0,[2,0,[12,10,[10,0]]],a(xg)],aht=a("Unknown colourspace"),akj=a(a6),aki=a(by),ajc=[0,[11,a("Warning: malformed TJ element; skipping\n"),[10,0]],a("Warning: malformed TJ element; skipping\n%!")],aja=a(N3),aiZ=[0,0.,[0,0.,[0,0.,0]]],ajg=a(pz),ajr=a(om),ajw=a(p7),ajx=a(o_),ajy=a(q9),ajz=a(pY),ajA=a(rc),ajs=a(ob),ajt=a(ha),aju=a(qh),ajv=a(gO),ajh=a(o1),ajm=a(qR),ajn=a(n4),ajo=a(fr),ajp=a(qn),ajq=a(l0),aji=a(lT),ajj=a(rf),ajk=a(q2),ajl=a(nS),ajB=a(oF),ajI=a(l2),ajJ=a(oH),ajK=a(oG),ajL=a(pW),ajM=a(qT),ajN=a(p8),ajC=a(p6),ajD=a(ra),ajE=a(nQ),ajF=a(oa),ajG=a(o0),ajH=a(p0),ajO=a(p9),ajP=a(o7),ajQ=a(qC),ajR=a(nZ),ajS=a(pP),ajT=a(o4),ajU=a(qN),ajV=a(pE),ajW=a(pn),ajX=a(nT),ajY=a(lo),ajZ=a(on),aj0=a(rt),aj1=a(pC),aj2=a(g5),aj3=a(ol),aj4=a(dl),aj5=a(lP),aj6=a(qa),aj7=a(qf),aj8=a(rh),aj9=a(qb),aj_=a(pc),aj$=a(pF),aka=a(lY),akb=a(qS),akc=a(oq),akf=a(pA),akd=a(lJ),ake=a(ly),akg=a(lJ),akh=a(ly),ai1=a(qO),ai2=a(jS),ai3=a(o3),ai4=a(oX),ai5=a(ru),ai6=a(jw),ai9=a(jw),ai8=a("Malformed 'scn'"),ai_=a("Malformed 'sc'"),ai$=a(N3),ajb=a("malformed TJ op"),aje=a(jS),ajd=a("Malformed 'SCN'"),ajf=a("Malformed 'SC'"),ai7=[0,[11,a(MB),[2,0,[11,a(v1),[10,0]]]],a(H7)],ai0=[0,[11,a(MB),[2,0,[11,a(v1),[10,0]]]],a(H7)],aiV=[1,1],aiW=[1,2],aiU=a("Lexing failure in content stream"),aiS=a("Pdfpages.lex_next => "),aiT=a("Malformed page content"),aiI=a(k),aiJ=a("BI"),aiK=a("EI"),aiL=a("ID"),aiM=a(os),aiN=a(jq),aiO=[1,[0,1]],aiP=[1,[0,0]],ahW=[0,4,0],ahX=[0,3,0],ahY=a(a$),ahZ=a(bh),ah0=a(G8),ah1=a("/BPC"),ah2=[0,[11,a("no BPC\n"),[10,0]],a("no BPC\n%!")],ah3=a(c7),ah4=a(g9),ait=a(l1),aiu=a(jF),aiv=a(h4),aiw=a(g1),aix=a(eC),aiy=a(lM),aiz=a(c7),aiB=[0,[11,a("no colourspace A\n"),[10,0]],a("no colourspace A\n%!")],aiA=[0,[11,a("no colourspace B\n"),[10,0]],a("no colourspace B\n%!")],aiC=a("/ImageMask"),aiD=a("/IM"),aiF=[4,a(h4)],aiE=[0,[11,a("no colourspace C\n"),[10,0]],a("no colourspace C\n%!")],ah5=[0,[11,a("no colourspace D\n"),[10,0]],a("no colourspace D\n%!")],ah6=a(GP),ah7=a(eH),ah8=[0,[11,a("no or malformed /W"),[10,0]],a("no or malformed /W%!")],ah9=a(OK),ah_=a(lZ),ah$=[0,[11,a("no or malformed /H"),[10,0]],a("no or malformed /H%!")],aia=a(a$),aib=a(bh),ain=a(qs),aio=a(qe),aiq=a(qs),air=a(qe),aim=[0,[11,a("decode_from_input failed\n"),[10,0]],a("decode_from_input failed\n%!")],aic=[0,[11,a("Content DecodeNotSupported: "),[2,0,[12,10,[10,0]]]],a("Content DecodeNotSupported: %s\n%!")],ail=a("Inline image, bad data: "),aip=[0,[11,a("Couldn't read inline image JPEG data "),[2,0,[12,10,[10,0]]]],a("Couldn't read inline image JPEG data %s\n%!")],ais=[0,[2,0,[10,0]],a(Kn)],aid=[0,[11,a("warning: bad end to inline image "),[1,[11,a(fQ),[1,[12,10,[10,0]]]]]],a("warning: bad end to inline image %C, %C\n%!")],aie=a(a$),aif=a(bh),aih=a(qs),aii=a(qe),aij=a(qs),aik=a(qe),aig=[0,a(a$),[0,a(bh),[0,a(dk),[0,a(d9),0]]]],aiG=[0,[11,a("Did not recognise beginning of inline image ID\n"),[10,0]],a("Did not recognise beginning of inline image ID\n%!")],ahV=[0,[11,a("inline image reading failed: "),[2,0,[12,10,[10,0]]]],a("inline image reading failed: %s\n%!")],aho=[0,[11,a("Failed to understand content on page\n"),[10,0]],a("Failed to understand content on page\n%!")],ahm=a(bb),ahc=a(k),ahd=a(a$),ahe=a(bh),ahf=a(k),ahj=a(by),ahg=a("\nEI\n"),ahh=a(" ID"),ahi=a("BI\n"),af0=[0,a(q2)],af1=[0,a(qh)],af2=[0,a(lT)],af3=[0,a(gO)],af4=[0,a(nS)],af5=[0,a(l0)],af6=[0,a(ha)],af7=[0,a(o1)],af8=[0,a(p7)],af9=[0,a(o_)],af_=[0,a(fr)],af$=[0,a(qn)],aga=[0,a(rf)],agb=[0,a(qR)],agc=[0,a(n4)],agd=[0,a(q9)],age=[0,a(om)],agf=[0,a(pz)],agg=[0,a(rc)],agh=[0,a(pY)],agi=[0,a(ob)],agj=[0,a(p0)],agk=[0,a(oH)],agl=[0,a(o0)],agm=[0,a(oG)],agn=[1,1],ago=[1,2],agp=[0,a(oX)],agq=[0,a(qS)],agr=[0,a(oa)],ags=[0,a(lY)],agt=[0,a(g5)],agu=[0,a(pP)],agv=[0,a(nZ)],agw=[0,a(pC)],agx=[0,a(lo)],agy=[0,a(on)],agz=[0,a(nT)],agA=[0,a(qT)],agB=[0,a(p6)],agC=[0,a(ra)],agD=[0,a(pW)],agE=[0,a(pA)],agF=[0,a(p8)],agG=[0,a(oF)],agH=[0,a(o7)],agI=[0,a(p9)],agJ=[0,a(rt)],agK=[0,a(qa)],agL=[0,a(o3)],agM=[0,a(lP)],agN=[0,a(dl)],agO=[0,a(qC)],agP=[0,a(ol)],agQ=[0,a(rh)],agR=[0,a(pF)],agS=[0,a(qO)],agT=[0,a(ru)],agU=[0,a(jS)],agV=[0,a(jw)],agW=[0,a(jS)],agX=[0,a(jw)],agY=[0,a(l2)],agZ=[0,a(nQ)],ag0=[0,a(o4)],ag1=[0,a(qN)],ag2=[0,a(pE)],ag3=[0,a(pn)],ag4=[0,a(oq)],ag5=[0,a(qb)],ag6=[0,a(pc)],ag7=[0,a(ly)],ag8=[0,a(qf)],ag9=[0,a(lJ)],ahk=a("Pdfops.LexingEnd"),ahn=a("Pdfops.Couldn'tHandleContent"),akn=a(cD),ako=a(l9),akp=a(aJ),akq=a(l9),akr=a("read_destination: no catalog"),aks=a(zp),akt=a(O6),aku=a(MT),akv=a(LB),akw=a(Jk),akx=a(M6),aky=a(GD),akz=a(wK),akA=a(cj),akm=a(l2),akB=[4,a(wK)],akC=[0,[4,a(zp)],0],akD=[4,a(Jk)],akE=[4,a(GD)],akF=[4,a(M6)],akG=[0,[4,a(O6)],0],akH=[4,a(MT)],akI=[4,a(LB)],akl=[0,[11,a("Warning: Could not read destination "),[2,0,[12,32,[2,0,[11,a(G2),[10,0]]]]]],a("Warning: Could not read destination %s %s \n%!")],akk=[0,a("pdfdest.ml"),26,9],akT=a(fy),akU=a(fy),akV=a(ey),akW=a(l4),akX=a(L4),akY=a(GL),akZ=a(pQ),ak7=a(l4),ak8=a(fY),ak9=[0,[11,a(L3),0],a(L3)],ak_=a(k),ak$=a(lv),alc=a(dr),ald=a(cj),ala=a(fy),alb=a(GL),ale=a(aJ),alf=a(v$),alg=a("read_bookmarks - Bad PDF: no root"),ak3=a(aJ),ak4=a(v$),ak5=a(aJ),ak6=a("Bad PDF: no root"),ak2=a(dr),ak1=a(lv),ak0=a(fY),akN=a(ey),akO=a(fy),akP=a(L4),akQ=a(l4),akR=[6,0],akJ=a(aJ),akK=a(v$),akL=a(aJ),akM=a("remove_boomarks: Bad PDF: no root"),alB=a(Js),alv=a(dK),alw=[0,[0,a(c6),[4,a(cj)]],0],alx=[0,[0,a(c6),[4,a(dS)]],0],aly=[0,[0,a(c6),[4,a(iw)]],0],alz=[0,[0,a(c6),[4,a(dr)]],0],alA=[0,[0,a(c6),[4,a(jW)]],0],alC=a(oo),alD=a(xR),alE=a(aJ),alt=a(xR),alu=a(aJ),als=a(k),alr=a(k),alq=a(xR),alh=a("Bad Number Tree"),ali=a(c6),all=a(dr),alm=a(cj),aln=a(dS),alo=a(jW),alp=a(iw),alj=a(dK),alk=a(Js),alK=a(ea),alL=a(eG),alM=a(ey),alN=a(ci),alO=a(lC),alP=a(aF),alZ=a(MV),alY=a(K9),al$=a("Bad /Contents 1"),alR=a(aF),alT=a(eM),alU=a(cC),al3=a(ci),al4=a(eG),al6=a(ea),al7=a(ea),al5=[0,a(hK),hV,15],al8=a(lC),al9=a("Bad /Pages"),amb=[6,0],ama=[0,[11,a("Warning: missing mediabox. Using most recently seen.\n"),[10,0]],a("Warning: missing mediabox. Using most recently seen.\n%!")],al_=a("Bad /Contents 2"),alS=a(Mo),alV=a(c4),alW=a(Iq),al0=a(ci),al1=a(eG),al2=a(lC),alX=a(JL),amn=a(MV),amm=a(K9),amf=a(aF),amh=a(eM),ami=a(cC),amg=a(Mo),amj=a(c4),amk=a(Iq),aml=a(JL),am3=a(ey),am0=a(fy),am1=a(c4),am2=[0,a(aF),[4,a(cC)]],and=[0,a(hK),494,18],anc=[0,a(hK),498,18],am5=a(fy),am6=[0,a(hK),504,21],am4=[0,a(hK),506,17],am8=a(fy),am9=[0,a(hK),gH,21],am7=[0,a(hK),514,17],anb=a(ey),am_=a(fy),am$=a(c4),ana=[0,a(aF),[4,a(cC)]],anV=a(ey),anW=a(ey),anX=a(c4),aoD=a(aF),aoE=a(eM),aoF=a(cC),aoG=a(ci),aoH=a(ea),aoJ=[6,0],aoK=[6,0],aoI=a(ci),aoC=a("add_prefix: bad stream"),aoB=a("add_prefix: bad stream 2"),aoA=a("add_prefix: not indirect"),aoz=[6,0],aou=a(c7),aov=a(g9),aow=a(g9),aox=a(g9),aoy=a(c7),aoq=a(k),aor=a("addp: blank name"),aos=a(bb),aop=a(h_),aol=a(aF),aom=a(eM),aon=a(cC),aoo=a(ci),aoj=a(k),aok=a(k),aog=a(k),aoh=a(h_),aoi=a(h_),aoc=[0,1,0],aod=[0,0,0],aoe=[0,0,0],aof=[0,1,0],aob=[0,[11,a(OW),[4,3,0,0,[12,10,[10,0]]]],a(PD)],an_=a(aF),an$=a(eM),aoa=a(cC),an5=a(ey),an6=a(eG),an7=a(cB),an8=a(lC),an9=a(ci),an1=a(aJ),an3=a(cC),an4=a(Ls),an2=a(Ls),anZ=a(cC),an0=a("fixup_parents: no page tree root"),anT=a("rewrite_page_tree_first: malformed page tree"),anQ=[0,[4,a(cC)]],anR=a(aF),anM=a(c4),anO=a(c4),anN=a("rewrite_first_indirect"),anJ=a(ey),anG=a(fy),anH=a(c4),anI=[0,a(aF),[4,a(cC)]],anB=a("change_pages: bad serial number"),anF=[0,[11,a("change_pages: No change supplied, and lengths differ\n"),[10,0]],a("change_pages: No change supplied, and lengths differ\n%!")],anE=[0,[11,a("Pdfpage.change_pages: non-null matrices when lengths differ\n"),[10,0]],a("Pdfpage.change_pages: non-null matrices when lengths differ\n%!")],anC=[0,[11,a("failure in change_pages_process_annotations: "),[2,0,[12,10,[10,0]]]],a("failure in change_pages_process_annotations: %s\n%!")],anD=[0,[11,a("failure in change_pages_process_openaction: "),[2,0,[12,10,[10,0]]]],a("failure in change_pages_process_openaction: %s\n%!")],anA=a(z$),any=a(z$),ans=a(a_),ant=a(Ag),anu=a(lv),anv=a(lv),anw=a(dr),anx=a(dr),anr=[0,[11,a("change_pages_process_annotations: annotation direct\n"),[10,0]],a("change_pages_process_annotations: annotation direct\n%!")],anp=a(cN),anq=[0,[11,a("change_pages_process_annotations: /Annots not an array\n"),[10,0]],a("change_pages_process_annotations: /Annots not an array\n%!")],ank=a(c6),anl=a(L9),anm=a(cj),ann=a(cj),ani=[0,[11,a("page not found for bookmark or annotation dest:"),[2,0,[12,10,[10,0]]]],a("page not found for bookmark or annotation dest:%s\n%!")],ane=a(cC),anf=[0,a(aF),[4,a("/Catalog")]],anh=a(aJ),ang=a("add_root: bad trailer dictionary"),amT=a(ea),amU=a("mkpage"),amV=a(lC),amW=a(eG),amX=a(ci),amY=a(ey),amZ=[0,a(aF),[4,a(eM)]],amS=a("split3"),amQ=a("Pdfdoc.renumber_pages: Bad key"),amR=[6,0],amt=a(gY),amu=a(du),amv=a(c7),amw=a(c7),amx=a(dx),amy=a(dx),amz=a(l8),amA=a(c7),amB=a(g9),amC=a(l1),amD=a(jF),amE=a(h4),amF=a(g1),amG=a(eC),amH=a(lM),amI=a(c7),amJ=a(g9),amK=a(g9),amL=a(c7),amM=a(c9),amN=a(ox),amO=a(ox),amP=[0,[11,a("Warning: Missing Op_BDC /Properties entry\n"),[10,0]],a("Warning: Missing Op_BDC /Properties entry\n%!")],ams=a(iw),amp=a(Ik),amq=a(cC),amr=a(Or),amc=a(Ik),amd=a(cC),ame=a(Or),alJ=a("Bad /Rotate"),alH=[6,0],alI=[6,0],alF=[2,0.],alG=[2,0.],alQ=[5,[0,[1,0],[0,[1,0],[0,[1,IP],[0,[1,792],0]]]]],anL=a("Pdfpage.RewriteDone"),aot=[0,a(h4),[0,a(g1),[0,a(jF),[0,a(eC),[0,a(lM),[0,a(l1),0]]]]]],apJ=a("bad /Size (sampled fun)"),apz=a(pm),apA=a("No /Domain"),apB=a("Bad /Domain"),apC=a(yX),apD=a(N8),apE=a("no /FunctionType"),apG=a(im),apH=a("no /Size (sampled fun)"),apI=a("Bad /Size (sampled fun)"),apK=a(pJ),apL=a(Mf),apM=a("/Decode"),apR=a("No /Range"),apN=a("/BitsPerSample"),apO=a("no /BitsPerSample"),apP=a("Bad /BitsPerSample"),apQ=[0,a(Jf),fo,29],apS=a("/C0"),apT=[0,0.,0],apU=a("/C1"),apV=[0,1.,0],apW=a(f2),apX=a("No /N in Type 2 fun"),apY=a("/Functions"),apZ=a("no /Functions"),ap0=a("Bad /Functions"),ap1=a("/Bounds"),ap2=a("no /Bounds"),ap3=a(KF),ap4=a(Mf),ap5=a("no /Encode"),ap6=a(KF),ap7=a("This is not a function"),apF=a("Unknown function type"),apn=a(Kx),apo=a(J6),app=a(Kx),apq=[4,a(J6)],apx=a("ifelse"),apw=a("if"),aps=a(os),apt=a(jq),apu=[2,1],apv=[2,0],apr=a("Bad lexeme"),apy=a("Cannot parse Type 4 function"),aoL=a("index"),ao7=a(v4),ape=a("abs"),apf=a(yQ),apg=a("and"),aph=a("atan"),api=a("bitshift"),apj=a("ceiling"),apk=a("copy"),apl=a("cos"),apm=a("cvr"),ao8=a("dup"),ao9=a("eq"),ao_=a("exch"),ao$=a("exp"),apa=a("floor"),apb=a("ge"),apc=a(HB),apd=a("idiv"),aoM=a("or"),aoY=a("le"),aoZ=a("ln"),ao0=a("log"),ao1=a(Ig),ao2=a("mod"),ao3=a(xQ),ao4=a("ne"),ao5=a("neg"),ao6=a("not"),aoN=a("pop"),aoO=a("roll"),aoP=a("round"),aoQ=a("sin"),aoR=a("sqrt"),aoS=a(w5),aoT=a("truncate"),aoU=a("xor"),aoV=a("Bad keyword "),aoW=[0,[2,0,[10,0]],a(Kn)],aoX=[0,a(Jf),hY,50],aqt=a(HY),aqs=a(HY),ap9=a(l1),ap_=a(jF),ap$=a(h4),aqa=a(g1),aqb=a(eC),aqc=a(dx),aqd=a(lM),aqe=a(c7),aqf=a(yt),aqg=a(Ab),aqh=a(Mn),aqi=a(ih),aqj=a(LJ),aqk=a(NV),aql=a(JW),aqm=a(dx),aqn=a(Lq),aqo=a(vu),aqp=a(zG),aqq=a(yX),aqA=a(f2),aqB=a("/Alternate"),aqF=[0,a("pdfspace.ml"),iy,24],aqC=a(yX),aqD=[0,0.,[0,1.,0]],aqE=a(h7),aqG=[6,0],aqH=a(vu),aqI=a(zG),aqJ=a(Ns),aqK=a(jZ),aqL=[V,1.,0.,0.,0.,1.,0.,0.,0.,1.],aqM=a(vu),aqN=a(zG),aqO=a(Ns),aqr=a("Bad /Hival"),aqv=a(IW),aqw=a(G0),aqy=a(IW),aqz=a(G0),aqx=a("Indexed/Inconsistent"),aqu=a("PDFSpace: unknown indexed colourspace"),ap8=[0,0.,0.,0.],aq0=a("EndCharMetrics"),aq1=a("StartCharMetrics"),aq2=a("EndKernPairs"),aq3=a("StartKernPairs"),aq4=a("C "),aqX=a("KPX"),aqY=a("badline in read_kern_line"),aqQ=a(o2),aqS=a(LC),aqT=a("WX"),aqU=a(LC),aqV=a(vH),aqR=a("badline in read_char_metrics_line"),arh=a('x\x01\xb5\x9aMo\x1b9\x12\x86\xef\xfa\x15<\xee\x02\x9b\x80\xdf,&\xa7|L\xb09$\x18\x8c3\xc9bo\x1a\xb9m\x0b#K^I^\x8c\xff\xfd\x92\xcd*\x16\xbb\x19\x1e\x17\t\fG~\xc2\xae\xae\xb7\xaa\xc8*\xfa\xe6\xba=_?\x9d\x8e\xd7/\xd3\xf5\xbc\xdf]\x84}\xad6\x1fN\x8f\x8f\xd3\xf1*>\x9c\x9e^\xce\xfb\xfb\x87\xab\xf8\xdb\xee\xefBEp\xff\xc8_\xc3\xfc\x15\xe6\xaf1\x7f\x8dA\xbc\xbb=\xfd1\x89\x9b\x97\xcbuz\xbc\x88\xcf\xc7\xdd\xe9\xfct:o\xaf\xd3\xedk\xf1\xeep\x10\xbf\xe5e.\xe2\xb7\xe92\x9d\xff\x9b>\xe4g\x9c\xa7\xedu\x7f:\x8a\x8f\t~#\xbe=<\x8b/\xdb\x17!\x94P\xee\x8d\xb2o\x94\x99\x1fP\xf9\xdf\x8f\xfb\xff<O\x9f?\nk$\xe8\xfa\xf1\xf7/\xcf\x97\xed\xfd$\xac\x0b\xc1\t\xe7\x9cq\x9b\xfcZ_\xb7\x8f\x93\xf8\xf7\xf6\xe9\xee\xe3\xfex\xff\xc7\xf6z\xd9|z>\x1c\xe6O?\x7f\xfb0\xffD\xf0\x8f\xb6\x8f\xfb\xc3K\xff_~L\xb3\x13\xbeL\xb7\xfb\xe7\xc7\xcd\xe7\xeb\xf6\xb0\xdf\xbd;\xde\x1f&!7\x9f/\x9f\xf6\x7fM\xb7\xbf\xee\xaf\xbb\x07q\xb7=\\\xa6\xcd\x87\x87\xedy\xbb\xbbN\xe7\x9b\xe9*n\x9e\xa6\xdd~{\x98\x8dy\xff\xfe\xf4\x97x\xa5\xd2_kD\x04%@K\xb1\xf9\xfdx;\x9d\x0f\xfb\xe3\xf4\xeb\xe9\xb2\x9f]\xf1JI\xc9\x1f\x7f{\xd8\xef\xfe<N\x97\x8bpr\xf3}:_2"\xa5~-\x13\xf5\xf5t\xdd\xef\xa6\xff\xa7R\x9d\x9b\xc4\xfe"\xb6\xe2<\xdd\xef\xd3\x12\xe7\xe9V\\\xcf\xdb\xdb\xe9q{\xfeS\x9c\xee\xd2\x82\xe9\xc3\xe3,\xe9\xf6 \xbe\xbd<Mw\xdb\xd9\xc0\xf2\x94\xf4\xf1\xeb\xcd/\xe9\xa1\xb7i\xb5\x9b\xdd\xc3\x94|\x9d]3\xbb\xe9n\xbf\xdb\xdc\\o\xff\xf9Ch\xc8\xdf|\xff!\xa2L\xdf\xa4\x10\xcd>\xa5\x10\xd52\xe9.\x8c\x16o\xc5\x8f\x7f\t\x1d }\xf3U\\\x9e\xf2s\xde\x8a\xf7B\xe2\x9f\xb7\x992\x85\x8a\xc1\xce\xd4V\xcd\x88q"h\x11M\x14^\xab\x02Z\x04\xbd*\xa0&0\xe9\x14u\x10^!\xe8V+&sFkzDA\x16\xd4\x10(E\xb4N\xf8\xa8\x0b\x17\n\x17T,\x9c-\x9c\x15*\xaf\x06)\xa0\xbd/$ \tH:Z1\xc5\x94\b.\x99 ]!#\x92\x11\x9f\xad\xe6\xc5\x7f\xcaZI\xac"\x16\x985"$\x9fTV\x15\xd6\xf3\xba\x81\xad\x05\xe1]N?SXM>\xad,-\xabt\xca\0\x9d_\f\nJ:\x19|1U\x9d\xaa\xd2\xcaQ\xda\xb4j,(*\xe5,\xa1\xc5\xad:&c\x95p\xca\xb3\xb1\xa8\x158\x87h\xf5lZ,g\x9f7E\x02KR)rA\xf5\xac\x93\x02\x82\x17\xde"\x19\xc8R\x83\xa4gK\xd3\xa21&KK\xf0YX/*\x87\xab\xa2\\\xd1\x92\xa5\xa1]5\xcaX\xbd\xea\xe4:\xa4\xabX*\xb9)&\x11\x1c\x84\x82\xa2X\xa1\xbe\x7f\xa4\xf7\x9fu\xd5\xac\xabC\xad`\xf6\xc4\x1c\xd6\x05\xf5s\xb8\x80jP\xd4*x\x8d\xa8\xe2\xb8\x0e9U0\xae\x9d%\x90rJ\x0f@\xd4\xc9\x05\x02\x8b\xa4\xb9V\xa6\0\xc9\x1f{_r\xca\xa1P>\x04D-\xdbif\x7fV;)\xad<*\xa5]\xfbx\xe0\xc7SVQ\x9cj\xdf\x82\x9eAJ*\x87\xa1\xa7C\x0brF{\xca(GE\x02ZP2\x88\n\xd9\x88`\xf3d\xeb\x1b\x0e\xe5q\x0e}\xde<\xd8)\xf6\xa4Gm\x9cA\xf74\xcfu\xd20GIDn\xac\xc5!\xfa\xa4\x9bN\xafZ*\x8ew\x94\xef\x9ab\xb8-#>9\x99\xfc\xed=\x15\'\n\xa1U\xc5\xe1\x10\xf2$\r\0VF\xb9DYE\x0fkT-Q\xc3\xe8\xba\xe6\x19\xbdD\xb92\x84Z\xf206\x8cYT\xbc$pE)\x89H"c\x87(%\x91B\x0f\x98e}\x06~\xad\x80B\x81&\x03\xfc\x12e\xbf\x06\xbb*\xfa&,_\xcb2J\x05\xcfb"\x19hQ\x90\xcd\xaa~m\xc0R-h^\x0b\xd5\x02*yv\xa9V\x04Fa\xe5\x01\xab\x16\xcej=\x10iU\xb4\xd5.\xd5\x8a\xac\x16P\xc9#[\xadY\xbc\x16\xb0\x01@jYT\xcb\xda&\xf3\x14g\x14\xa0V\xa1\xae\xd9T\x07\x0f\\\x1d\x80\xca\x1d\xed7\xb6\xad\x0e9\x07\b\xb4\xab\xf0\xb3\x81\xab\xed2\xfc\xc0\x11\x8aYea)i\xf3BT\xf0"\xd6p\xbb\xd0\xc9\xcf{s\xc9U\xa0\xac\n\xe8|\xc7:\xa5g\')|,{(\xd4\x8a\x87I\xe5X\xa6\x14"\xc62\x19W\x96\xbaUNqDE\xb9\xaa\x8e\xce\xfc\xbc:F\xd2Hb\xf1q\x8b\x8c\xf2!\x07\x89-(\xa9$\xc9\xd0EF\x15\x14\x1f\x8f:y K\x17\x19\xe5mc))%1\xf4\\X\xfa\x94\x95\x8a\x94Q\x9a|\xbaT*rQ\x8b\x94Q\n\x95r\xab\x8c\x92\x8c\x86UJ{9J\xe9\xb8>\xf2y5D\xe3\xca\xaf^\xb7\x01\xe8\x03\x97\xca\xd4a\x90\xb7\x88E\xb1|\x0e\x7f\xa7\xaaXJ\xd6\x13\x1fz\xc07\x19\x95\xc3\xcfG\x85\xa4\xa65\xc9\xd46\xa5\x9ck\xd64\xab\xad\xc2\xfbe\xaa\xa8\xc6\xd2Z\xfe\xc8\xd20\xda+\xca\xf9j>IcR{X\x86\x0b4,mWt\xea\xf5q\xb4[(Y\xf5Bi\xc3\xe2t\xb4\xb4\x17V\xeb\x065\xca\x18%\xa9\x06\x06\xb47,\xb2\x0bLc\xaf\xa2\xf4\xa2\xd3TX\xa4\x17\x9fR\x94\xa2\xfc\xa2\x03Zhk`s\xeeRJ\xafH-\xcd\b5\xab\xec\x0e\xee\xe7\xd9\xad\x94]\x91Z\xda\x11J\xd9E\xd5%4\xb5\x15\\\xfb\xf6~M.\xa2 \xb3\xbc\xea\xfat\x11`\x942\xa5\xd3\x99Y\xdc/\xc22\nllXT\xcb\x1a\\\x17\x16\xcaZ\xd9\xe4\x97F\xb5Te\x9b\xb3o\x8e\xe9j\xadF\xb54\x1d\xc5\xa0\x91@\xa7M\x91IT\xcbR\x81\x81\xc6\xaf\x06dC\xa2X\x86\xbc\x15\xab\xb7tJt\xd3\xc6\xa0\xb6k\x16(\x17{\x96N\x83\xb4o\xc4\xd8\xae\xebM\xeb\x01\xbfbK\xcd\x99\x93\xa6\xc0\x8d\f\x1a\xc8\b\xdc;a!\x83i\x93Q\xc7\x15\x1b\xe5\x92\xe5\xceV\x19\x94\xc1(:\xe7\xb6\xce\x05>\x10+\xa3\xd6\xa4\x1d\x91u\xf2\x80\xc5+\xaa\x81`4}`R\x8fH:\x8f\xcb\x9a3Mz\xd9\xd0\xe4\f\r *\nC\xd2S\xbcP_#\x9b\xf42\x0b4\xacP\x18\x92\xa8\x946\x980\xb0H\xc44cj\xbc\x1f\xd7,\fY\x1aB\x18bc\xf3Z:\x91\xd5\x02\x1aA0\xe9\x07$uW\xc1\xd4\xe6\xa5\xcd\xd8\xaciH\x87K\x8f4\xf5XttT8\xd9q\xa5\xca\xdb\xf9\x98I\xb0\xe9`\xd3naN6\xc5\x8b\xba\xadH\xdeU\\\x11m\x1e\x04\xb8y\xcb-lM\xb1@\xec\xf2\x1c\xd3\xe6Xm\xb9\xea\x84E.7G\xdd\xe4Mm\xba\x18.r\xc8\xb9\b\xe5C\xa7\xf3\x11Y*\x8b\x14\xb9J\xb5\xbd\xbbm\xf6;\xea\xba\x1c\x1dP\x15\x8dy\xd0\x13\x9e\xcf=\x8a\xfa.O\xcd\x94Z\xf7\x93MHP\xe7\xe5\xe9\xecU\xf6\xcby\xe5\xd4\xce6G/E\x9dW-\xf9J\x0fOT*\x98\x0eVc\xd8v\xb0\x1e\xc3\xae\x83\xcd\x18\xf6\x1dl\xc7p\xe8`7\x86\xa1\x83\xfd\x18\x8e\x1d<\xec/\x15ub\r<\xde[k/\xc6p\x1c\xc3\x9d\x82f\xac t\n\x9a\xb1\x82\xd0)h\xc6\nB\xa7\xa0\x19+\b\x9d\x82f\xac t\n\x9a\xb1\x82\xd0)h\xc6\nB\xa7\xe0xB\xa0b\xa7\xa0\x19+\x18;\x05\xcdX\xc1\xd8)h\xc7\n\xc6NA;V0v\n\xda\xb1\x82\xb1S\xd0\x8e\x15\x8c\x9d\x82v\xac`\xec\x14\xb4c\x05c\xa7\xa0\x1d+\x18;\x05\xedPA-;\x05-\x8c\xe1NA\x1b\xc7p\xa7\xa0\x93c\xb8S\xd0\xa91\xdc)\xe8\xf4\x18\xee\x14tf\fw\n:;\x86;\x05\x9d\x1b\xc3\x9d\x82\xce\x8f\xe1NA7VPu\n\xba\xb1\x82\xaaS\xd0\x8d\x15\xa4\x86\x0e\xea\xfe\xca\x93\x85\xf4\f\xc8#ec\x91\xa5\x11$\xb5(\x8aG\x0bY\x1eH\n;+\x11F\x01\xd3\t\x8a6c_\x0f<\x99\xce\xf7\x99L\xa3\x82\xd6\xd5\xa5\x1bQ\xd2\xfeb\xd3&\x9a\xef_\nM\x12Z\xa2\xf9D\x17s\xa7\x94\x0e&1 K\xd7/\xba\xbe`U0\xd7\x1bH\xf5m\x1e\x92\xcf0t\x0b\xeb\xe1\xc2t\x03\xa3\xaa\xc9|\xb1\x93\xbe\x85\xb4\x8d8]N\x7fZ\xd7\x81$\x1d\xd2x(\x916\x97\xdc\xa4z\x8foG\xfd]\xd4ua\xbe\xb0\xd1\xf9\xc6(9\xce\xa3\xc5\xd4\xe25pd8\t\x98\xea\xa6\xf3\x06\xe1* \xf9"H\x160uA\xf9.\xca\xe0\xfbQ\x9bWG\r\x8a\xe7\x12i\xd1\x1c\x04\x0eg~Z\xd7\xa1\x17Y\xc1s\x89|t\xcd\xa3\r\x07\x80\xb0_+\xc2\x83\x89\xe4`H\xbb\x93\x8b\x18r\xbaWO\x0f\xd9z{F>n\xc7\x18\0\xdc=i\xea\b\xa3\xa1\x93-\x0f\'\x92l\x90\xc2\xc9K4\x97:\xc2Hcg\xc53\x87\x8e\xa5\xdb\x19_}\xc6I\x9d\x9ce\xd3\x83\x03N\xbf4\xb5\x85\0\x15\xae:\'WC\x8aA\xafQ9S\x95\xa3d\xe2\xb1\x83\xcds\xfa\xf4r\x96\x8c\xb0k\x96{\xd8\x8e%\xe1j\xf3\0\x1c\x11i+\0\xa3\xe7ss\x81\xfd\x1a\xe6n\xbe\x87Q\xb9:\x05T<\xfc\xb0e\f\xcdV\xc0\x8a\xd5R\x0e\xd9:\x01\xab\xb7\x99|\x9d\x9e\x9a\xb3\x94\xd2^aXR\xe3\x07|\xf5\xce\xd7\xf9\x06Y,\x84\xb6N\xb6($`0\x8d\xd6\xf5\xee\xd9\xd6W\xb3\x9c\xf9r\xbe\xbeu\x06\x95\xa3\xdb\xe7@W\x95*\xd6)\xbf\xc9\xa3s?O:\x0b[\xd5\xa0\xce\x88[\xf5\xbc\x15A\x8aE\x0b\xe8`\xba\x81n\x16\xb6\xc3\x85\xe9B\xa6n\t<\xb3y\x95\xbc\x05\xf9RL\xd1\xebQ\x1eqLpa\xd3\xf9\xc2X\xd7kxM\xf7\xd0\xcd\xcan\xb82\xddD\xd7\x1b\x1c\xc5\xb3\x80<\/\xccW8.\xa0xN\xad\xeb\x0f\r\x03\xfc<\x85\x9b\x0bP@3\x9c^\xd7W\x9e\x07\xe53\xc9\\3-\x99Q\x7f\xc7\x83\xa4\xe6\x81P\xca\xed\x9c\xe8^a\xe1vv]\xe5cmVS\xf4\xcfE>\xa7\xd7\xe6\x97\xe3m\xf3;\'\xf9\x9f\xcdoI\xfd\x0f\x03u\x8c\r'),arg=a("x\x01\xb5ZK\x93\xdb6\x12\xbe\xcf\xaf\xe0q\xb7j\x95\"^\x04\x90\x9cl\xc7\xd9u\xed\xdaq\xc5N\x9c\xda\x1bG\xc2H,S\xa4LR~\xfd\xfa\xed\x06\xba\t\x92\xa3\xc9m\xcbU*\xcd\xb8\x1b\xe8\xc7\xd7O\xcc\xbb\xa9\x1e\xa6_\xfanz\x1d\xa6\xa1\xd9\x8f\x85\xfeA\xdc\xbd\xe8\xcf\xe7\xd0M\xc5\x8b\xfe\xf2mh\x8e\xa7\xa9\xf8\xdb\xfe\xef\x85\xf0\xce\xfc\x03?m\xfc\xf4\xf8\xe9\xcb\xf8i\x8bg\x87\xfe>\x14\xef\xbe\x8dS8\x8f\xc5\xabn\xdf\x0f\x97~\xa8\xa7p\xf8\xa1x\xd6\xb6E<f,\x860\x86\xe13\xfc2\xdf1\x84zj\xfa\xae\xf8\x19\x88\x7f,\xde\x9f\xae\xc5\xeb\xfa[Q\x88B\x98\x1f\x85\xfcQ\x9ax\xc1L\xff{\xd7|\xba\x86W?\x17Z\x95\x95\x9e\x7f\xfd\xc7\xeb\xebX\x1fC\xa1J'\xcbBydA\xb5\xde\xd4g\x14\xeb|\xdf\xb7w\xbf\\\xdbv\xf5s}n\xdao\xcb\xdf|\bQ\xdb\xd7\xe1\xd0\\\xcfw\xaf\xa6\xbam\xf6\xcf\xbac\x1b\x8a\xf2\xee\xd5\xf8K\xf35\x1c\xde6\xd3\xfeT<\xd4\xed\x18\xee^\x9c\xea\xa1\xdeOax\x17\xa6\xe2\xdd%\xec\x9b\xba\x8d\xb7>\x7f\xde\x7f-v\xc2\x95\xc5NzU\x88\xd2\x97\xf0!\xca\xe2\xee\xf7\xee\x10\x86\xb6\xe9\xc2\xdb~l\xa2\xde;Q\x96\xf9\xd7\xefO\xcd\xfec\x17\xc6\xb10\xe5\xdd\x1fa\x18\x91\xa4,\xc5\x0fe\xe9\xee\xde\xf4S\xb3\x0f\xffW\xb7\xbc\x04\x92C\xd3\x1d\xdf\xedO\x01\xec\x82\xcaD\xc5\x1e\x9a\xfd\xdd\xbb\xe9\xf0\xaf\x0f\x85\x97\xf8\xe5\x8f\x0f\x853\xf0\x05\xd0\x83V`\xf4\b_\xde\xbd(\x94,~*>\xfcYHS\xc2\x977\xc5x\xa9A\xec\x9f\x8a\xe7EI\xff~B*\x95\xa8T\xfc\xf2\xa6\b_\xf7m}\x8edB:\xb0\x8b-\xa4.\x8b\xca\xcaD\xae\x13\xb9\x15\x89\xfc\xda5\x9f\xc1>u\x1b9\x94\x80S+'\n[\x9aDn\x12\xb9)\x93\f\xdd\xf5|\x8f\xe6<v\x91\x1e@\xb2\x13U\xa1\x81\xa3\xb2*qT\xc4\xa1=\xc9\xd3\x80\xd9\xba\xa9\xa1+\0\x89e\xa1\xad\x83+lb\xb0\x89\xc1\x91\x02\x970\xec\x11\x8bH\\\xa9b\x07\x07Z\x0b\xe7\x1b\x92\xc8\x91\x02\xd6E\xf2\xfa|A\xf9\xbbCd\xd0\x02\x01SX0YU\x89\xc4\xe0\x13\x83VI\xa0\xf1\xba?M\xa7:]\xa0\x93\x85\xb4\xd0IE\xa0\xd7\xe5\xda\xa0\x97z\b]\x1b\x1e\x12\x83\x01\x89\x84\x17\x10!\xe5\xac2\\\xfa\x98#A+\x1a\xb5L,\xd2\xda\xcc\"\xd7v\xad\xc1FC3~<\xd7\xd3)i\x0e\x01\x0b\xbe\xd2\xd2\x16\xc6$E\xb4Z[\xf6\xd2^\xc7\xe4g\xc4\x82\x01\xf5\x8c\xa2\xd3\xf5\x1a9{\b\xef:\x89_\x81,F\x02\xc24\xb0\xe9Dm\xd6\xe7\x9e\x9b\x8e\x0f\x06\xa1\xe1H\x03(\x90\xce%\xe2j}4\x18\xbf\xe9\x93\xed+\x1fm)\0\f>\xf9J\x93k%\xf9jl\xeb\xf1D\bF7I\xa3\x8b\nODZ\xb7\xb6\xc8\xf70\xf4\t0\x1ah\xc1\x12\xb6\x02d\xd2\xb9~M\xdbw\x81\xe4\xb5\x05\xa6\xad\xec\x1aS\xae)\xa7/\xfd\x12\x85f>\xd2\x88\r\xe1i\b\xe9P\xad\xd2\xfdjA\xbc\xf1\xdeC\x7f\x1d\x92\0\xf1X0\xc4L\xa96\x94\x10m\t\x142\x9d\n\xc6\xaf|\x02\x9e\xd1k\xda\xb1\xf9\x9aH\xc9\0\x95\xcb\xc7n\xc2r\f\x9fC\x97\xad\x05\x11\t\xe6\x9cmP\xad\x89\xc3\x8c\xcc\x88\x06\x12\x82O\xb6\x9b\x80o\xc8\xb6*\xb9L\x9b\x85rn\xed\xde}\xdf\xf6I\n'\x12\x14 k\xeb\x8a\xb4\xf3\x1b,\x84s\xb3`P\t\x97R\x8a\x99\xa3*\xd7\xb8l1\x9fG\x1d+\xc4\xbb\x04`\xca\x94\xd4*\xb1\xc99\x9f\xae\x94m\0\xc1\x02\xc2\xd3@\x92Qd\xe6J\xae\x89\x8fX:\xc3\xf0\xc4\xc9\xe4?\x1dC\xeaM\x01Es\x8c\xf5\x06\xa9mI\xc9C\x82I\x12\x8a+\xbd>|\xdfw\xc7\xe1\xca\xe9L\x88\x18\xa86\"/\x92\x93\x1f-^\x07\xe4\xcf\xda\xcb)\x05\xaa\x8e\x89X\xcfN\xac\xc8\x89Ue#\xe5\xf30%B\xe9\xf1L/3\xa5]\x9f\xf9\xe2\xd4D\xc2\x1d\x12\xdarq$\xb9\xaf\x12\x89\xf0\xe7\xd0\xd2\x99h\x85\xaaD\xb8\xa5\xa0\xaf<S\x8aH\xf9\xf226\xec9\x002\x10\x8b\x9c\xda,\xb9\xcdV)\x1b\xbe\xa5\xfb\xa3m\xad\xce\x95\xc2\x92\xd7\xaa2\x11\xfe\xb3\xe6,%\xa3\xf6\xa5\xcf\xa4r\xad\xd3K\x12TE\x9d\xe4\x82pS\r_\xf5L\x89b*\x88\x8c\x99\x92<U)A\x01\x0f\x16\x15\xc9M.B\xbd\x02\x1cT\xce'\xea\x8d\xa3\xfe]_.t\xb0\x89\"d\xfb[\xf6\x14B\x02H\xffS\x9f\xef\x0f\x0b\xbb\xbar\xb6\xab\xe5\xd2\xe7\x12Z^_\x93\xfa\x0e\xe8\x9c[\x98\xd4\xado\x7fse\xd7\xef\xa0\xd6\xc9\x9c\xee\xac_\x13\xfe\n16\x90\xa3t\x8aI+r\xb0\xbb\xd9U)&\xdf699ZL\nt\xac#OY\x9dl\xf5\xfe\xc4\xe8\xbbu(\xc7\x97I\xfa\xffv\xea\xb3V\x06@1\x9f\xca\xb9\xd1'a\xdf5G\xaeRH\xe9\xb2W\x9d^\xe3\xef}\x9d\f\0NF\x9cdC9rSL\xa9@\xf8\xfb\x02\xa8;\xbc\xbf\xf2\x19\xff\x8e\x1c57\x06x\x7fB\x80\xc6\x96\x13N\xd7\xd0|p_\xe0\xec\xdaX\xbf\x9e\xc3\xb1\xe6\x04\r\xf6R\xd5\xecW\xc7\x91\x15K\xeb\x9b\xe2\xcf\x86O\xc5P]\xe8\xc5\xee\xf2\x89\xee\xed\xd8\xe42b\xb1\xa9r\xa9D\xfbrm\x80\xff\xce\xf6\x8f\x91\xa22\xac\xfd\xa6\x17\xb9\x87\xd6\xfac\x98\xe6\xfe\xc5\xc5\x06\0\xeay\x14\x83N'\x8f9\x8aX\b\x85!<\xf4\x03\x15\xd5J\xc5\xc4\x01\x89\xd9\xa5\x8e\xcd\xab\x9bw,:\x1eE\x97\xe8*_\xc2>4\xc9|\xd08\\Bwh\xf6\xd7\xb6^\x14\xcf\xca\xc8\xcc\xb2\xa9rWl\xef\xc7=\x0b\xb6\xc3\x12\nX5%|\xa1\x84\xea7\xb5n\xa8\xe1\x86\xba\r\xa9\x92j\x87q%\xd2$\xe1\x05ic\xd7\x89\xa0\xce9XP\x1e\x903\b\xbc[\xe7\xf7{v\x04\x94\xa0\x9d\xc4\xc2\x01Z\xc40Ab\xbf)\x06\x94\t!\xdf\x02\xbaD,2\xda\xa7\x04#Jr\xb1\xf6\xa9\xd2\x1c\xe6l\xacc\xff\x18\x9bl\xabK\xa2\x16k\xec\x86\x05\xd0\xa5L\xf4\xd8:\x96\x92\xe89(eR\xf2\xc2I\xd9\xa1\xd8\xd0\x02,\n\x88(\xb9\xe8\x11\xda\x8esb6Hm@\x14\xbd\x10\\\xaf\xd38[\x04C\b\xae5(\x86\xd0DK\x1eU2\x89\xdd\xf4\x99\x18\xdc\xa1@-S\xb2\x14\xd5\xfa\\\x109\x05'\xa0=\xcal\0\x8eY\n\xbb\xb6\xf5\xc7\x9c\xa0\x11\xbe\x06PgJA\xb4\x1b'\xb69C\xc7\xf6\t\x04\x86\xf6\xc9*>\x9a\xddhSB;\xcf\xc9'y\xbc\xb23<\x84(\xd7v\xee\xae\\{cWf\x11\xad\x96H7MK\xbf\xc8\xd5PT\xd0\x85(\xf1\xac\xa1\xd8\xf4-\x17\x02SB\x87\x81\xfe\x8c\xe3S\b\xb5\x96b\xca\xf9Z\xa5\x96\xc5\xe5\xb6S\x88M\xcf2P\xc261\t\xc2\xb1\xbe\\Ha\xd6^\x19\xe7\xa4\x8d\r\"\xdcg\x9c[\x98c\x93b'J\xdc$\xb4\x16KZ\xbb6\xf3u\x01i\x1b\x03\x11\xe7\x90l>\xae\x894\xc8\xf6\x98\x8e\xc5\x1c_\x18\xb7\x16\xa5!4\t\xbf\xae\xca\xfd\x9c\xbd\xb5\x8c&\xc1T;\xcb\"\xe7`L\x87\x7f\xa5h\xb1\x14-\xd0\x10\xd9\xaa\"Z\xb1>\xf92.\xa2\\\xba\x989\xf3\xc1r\x1d\xe5\xdf\xe7\xfcQRh\x01\x9a\xac\xe1\xa39\x10]9'\xda\x90G\xd1\xd8\xa6(h\x82r\x01\x14\x92G?J\x80\xf7\x94\\+CK\x14\xb0!O\xde\x98<\x1f\x9f\x9f\xd3\xb8\xf5\xe9\x02-\xdc\xe2\x82\xcd|?6\xb0\xfe\xe1\f\x0e\xbb\x86\x12\x9bg\x0fh\xa0;\xb8\x8b\xb740\xbe\xbc\xf2\\\x87\x18\x90\xe0?=\xb7\x0e\x82\x1b\xf9J\xae\xea\xb7\xe0|\x8f\x9df\xb9 \xe7\r\x89NM1N\xaeS`W\xe1\xa8\x12\x1d\xa0\x98|3@\xe3@\x91G\x85\xd4H\x83z\x15\x07>7\xf3\x82z\xee\x07\\Sq\xf3\x9f\xf6R\xa0\x80\x8a\xdb\x15\xd6\xd6\xacQ\xd9t\x0fM\xd7L\xdf\n\xea\x80\xd1?\xd8%h\x9a\xbdE\xb5)X\x0fm?4\x94\xc71FT\x84\n\x8f\x17bn\xeeM:\x7f\xdf^\xef\x0b\xae\xeb({U\xce[\0\xc1\r>\x13\x1f\x9a\xfa\xdc\xd3\xa2D \xec\xb1o(19\x12:\xb9\xcfg\x86S\x80\xc5T\xc1\x93\xf5\x0e\xce\xc5\"i\x14\x15\x95\xb9\xd3'rXP\x1dx\x10O\x8b\x9b\n\x8c\x8a\xb94\x91\x93s\xa1b\xa4\x86\xaf\x1e\x86\xfe\xcb}O\x1b\x8f\x98z\r\x96*\bDA\xa9\x9a\x1b\x7f\xeflf\x99# \x0e\xd1\x06Z\x0b\xb9\xe0P\xeb\x04\x159\xae\x97\x14\xea\xb1\xb1\x049\xbc \x8dy\nX\x9d\x9f#@\xfbt\x01 )_`n\\p\xe8\xbft|\xc5\x0e\xfb\x05\xb8\xc49V\x9c\xb3 \xf9\xf8\x10\x8e\xbc\\\0\xcb+@\xb32\x0bT\xdbM)\xc3=\xcfb'\xc3\xcb\x9e\xd8\\Fz\xb7.\xd7c\xd8\xb3\x97!\x8c0\n4\xb8\xc3*\x82\xa8\xddt%4\xff\xfeU \xb8\xcd$~\xbe\xb6Ssi\xbfq\xd0\xbb\x889#\t\xd3\xf3\xb8@Ap\x19zX\x97b\xe4\xf0\r6\xe66<\x7f\x0e\x04\xb7\xc9\x8c\xb0D\xc3\x9d\xe1\xa1yx\xe0\xe0\xd9\xa1:\x10\xf3\x96VF\x82'\x88\xb81\xc0\xfc\x05\xab\xe90\xb1a\x11\x84Z\xe0\x9a\x87\xe2\xc1m\n\xdd\xa1\xf9\xdc0`K\x1cG\r@Vs\xf2u\x9b\xb5X\xd7O\x8b\xbd\x02\xba\x19\xaa\x11\xc4~\xfc\xff\xc8\xb0\xdd|~\xba6\x9f\xa1\xf7\xechk\x0b\x89\x0e\x944\xb0\xc0\xd4\x9a%\xda\xb8\x1a\x9a\x96\xa1\xff\xba\xb8F\xc7\x84\x8d=\x94\xf2l(\xc7a\xc4\xfb\x9c\xb6m O\xf2\xca.Md8R\xd2\x16N\xf0\x98\xb1B,l}'j\x8be\xcad\0E\xd0?.\xd8#\x1b\x0f\x1d\xf3E\x91\xef\x04\xf9\xe9;1\xee\xc0\xeeR\xe2R\x1e\xcc--\x19\x8eG\x10\xee\xf4\xf7\xc0\xd7\xc0\xab\xc2\x10\xa6\xeb\xd0\xcd\xe6\xc3Y\x1c\xfaCL\x11\x89\x8d\xa7\x10IR\xb6\xe1r\"\x84\x99T\xd0+\x91\x0e\x8d\xe4j]v_Av\xfe8\xf1\x1e\x0e\x14\x82\xa4dp\xcd\xcc-3\x0f <l\xfd\xb6d\x90q,\x82L\x06\x85]\x91\xa1y\xfc\xe0\xdc\xf0%40~LCMk(\x01\xc4\xd0\xf1@\xa0[\xcc*\xe4R\x9e@xL\xdc7\xc3\xbe\r\xab\x88\xa1&\xcc\xaa<\x0b\x0boo\xb1\xcd+\xde\xc8b\x88\x85\xdc\xca\xb3\b\x1b,\x9c/\xd3\xb7\x91\xf0\xafP6\x1d\x87H+\xd8\xc2~}G\xd3A\xdcC\xb6\x98kZ\x1cP\xad\xc2q'\xb1\xc8r\xb3!\x80\xe7\x82L\x9b\x94\x90qxH\xd47\x02\x1fn\xb8\xe2\x07\xc9%\xf1\n\xd4Z\xdb\x92\x98\xe4\x9a\tFO\x98\xd7\xb6Lq\xd2[\xf3\xa95\x1f\xc4\xe7x\xbd\x9f\xf5\x07\x87\xda26\xb9F3\x87\xbe-^f\xb2Eb\xc9\x97\x98\xdb\xc2-Y\x92h+\xaej\xcd\x05=\xdb\x99w\x80\xa9\x06\x95&\xees\x13\xb5}\xa4\xc8\x86a\x17\xa7\x17\xc8\x03\xf4\x06\"y\x82a\xb7\xd4\xf1u\x8d\x80\x8c.\xcc\r\x9b\xe4\xf1\x85\x8f?\xe2L\xcc\x87\xa3\x99\x84OO>\x82\xe4\xe1\x19\xc6\xd2\x12e\bG|\xc2\x01o\f\xcd\x03'\xd7\xe8{\x9d7O\x92\xc7\x19\xe6\xda\xf3\xf3\xda\x82M$\x10\xc7\x1d i\xc2S\x8d#6\b\xafC8\xd7\xc3\xc7\xcc\x86\x0f\x05\x10\xed\xce\x98\xc5mj\x8d}p\xe5\xe1\xba'\xb4`\xb6\0(:@\x88\xa5\xb7\x13\xf9h\xc8I\x8b\x819[\x80\xc5pt\xe7\xa5\x80\xe49\x87\xdf9\x0e\xfd\x94\xdff|4\x12\xb6K\x8a\x92\xa5\x14\x1b\x97\xb7\xfd\x11\xcf\x07_\x16y\xb7\x01y\x96\xdfQ$\x8f;\x9c\x94\x89\x81\x1f\xb2d\x9cZ\xb1\xf96\x9a\x18\xdcM\x86>%0\x15\xdb\x02\xc8w\xda\xb2\x06\xbe\xb8\xd1n\x1d\xee\xdb\xdcq\xd9XR\xa1\xe3\xc2\xbd\x05)\xc2\xa3\xcf\xaa#\x02\xae\xdct\x95\xa9'\xc2\xf7&A\xee\x90\xe2F\x85\x01&\xea\xbb\x80T\xc69\xd9S\x13%\xa5\xbc}\xcb\xa2\xf52Q8op,#\x9bIu\xfb\x9a\xdc}\xe94\fC\xdb\xe8<+\xa4\xd7\x8dE\xdb\x7f\x0f\xdd10\xb4\xb0\xa5\xa8\xe2\xb63Qo6\x141\xb2f\xdd#\xb4 \xef\xc2\xa3\xf9\xdc\x85H\x9e\x88\x1e\xc5K\xdd\x8ds\xb8\xc8\x92\xc2\x85\xa5\xb2O\x85\x0bsQ\xef\x89k\x889Z$\xc7=\x15\xbd\x1c-\xf3]1V\xac\\\xc4\x8a\xdc$\x80\xf1\n\xeb\x9c9\xe7\x0b4\x19\xee\xfa=\x96?J\xe4\x8a\xdf@\xdd\xdc\x8c\xa57\xd0)9\x14{u\xbc\x07\xf7\xa3^\x92\x1d\x94x\x82\x89\xdb\f`r&\xae_\xbc$\x85\xf8\x8d\xfb\x11\xcf\xfd\xf4\x17\x17\xa95\xd3b\xc7I\xf2\x81\xc1!\xd6\x14\x9803\xe9'\x99H>`\x82\xde\x18\xc2'Kg\x9e\xe4!\xf9n]T\xad\xf16\x0f\xedl\xbb\xd2G;\xe0\xab[\xbe\xc9>\xc1tn\xe6N\x1e\x99$H\xe2\x153\xb9'\x98\xd8xx\x93\xa5\x9bf&\x7f\x83\x89=D\xa2\xadn\x99_\xb7\x97\x11\x91\xe3T\n\x0e\x89\xdc\x98K~\xde\x96V\xcf\x9d\x06\xd4\x1d\xea\xfe\x11p\xb0)\xf08\x871\xc3\xa6\x9bc\x06\xb2\x99\x02\xcc\xec\x9c\x8b\x81\xe0%\x85\x10\xbfroyH\x19\xe6Q\x90\x14=\x07\x10\xbfuoy\xee\xe7\x07\xba\x1dd\xa4\xc8\")U\xf1\x8b\xf7\n\xa2Q\x7f\x12\xce0F\xab\x05F\xf9\xe9\xfb1\x17\x8b\x07\xb3@\x84A\xe4b\xf1\xdcS\\$\xe0\xed\xbb\xfcM\x98.e\xc4\x9d0\x02\x15g_f3\xe5\xd3l\f\b\0\t\x06E\xe2#!\x8dx\x9a\x8f\x91w\xeb:y\x03xK\x19\xb5\xcb\xe0\x9b\xefRO1\xe5\xc0\xa0p\x82t7c\xd6\xe8\xa7\xd8\xee\xf3\xdf}\xd85\xd0w\x9b\x06\x06f1\xea\xa9\xf0\x99\\\xc5\xde\xdb\xc5J\xf4\xb2;,\xfeZ\x07\x7f\\\xfc\xe9\xd7\xff\0\xd1\x1a\xbc\xa8"),arf=a('x\x01\xb5}]w\x1b7\x12\xe5\xbb\x7f\x05\x1fw\xcfY\xcd\x92M\xb2I\xce<%\xb13\x93\xd8\x89lGMZ\xf3FK\xb4\xc45%:\xa4ZT\xfb\xd7/\xbaQ\xa8\x8f\x8bjz_\xf6\xe4\xc4\x87\xbc\x17\xdd\r\x14\n\x17@\xa1\x9a\xfa\xebi}x\xfau\xff\xf8\xf4\xc7\xe6\xe9\xb0\xbd9\x0e&\xff\x18\xbd\xfae\xff\xf0\xb0y|\x1a\xfc\xb2\xff\xd6\x1c\xb6w\xf7O\x83\xffq\xf3?\x07\xa3\xc5|\xfa\xbf\xda\x7fg\xdd\xbf\x8b\xf6\xdf\xc5\xb0\xfbw6\xf8\xe9v\xffy3\xf8\xab9>m\x1e\x8e\x83\xdf\x1eo\xf6\x87o\xfb\xc3\xfais\xfb\x8f\xc1\xe0\xa7\xddn\xf0\xb1\xbd\xcfq\xf0qs\xdc\x1c\x9e\x03*\x0f9l\xd6O\xdb\xfd\xe3\xe0u(\xfd\xcf\xc1\xd5}=\xf8c\xdd\f\x06\xa3\xc1\xa8\xf8\xe7d\xfa\xcfQ\xd1=\x81\xcbW\x8f\xdb\xbf\xeb\xcdo\xaf\x07\x93\xf1p:fx\xf9G}\\\xdfm\x06\xa3\xc9d^\f\xca\xf9t^\xbej\xdb\xf5\xe7\xfaa3\xf8\xcff\xf7\xbcy\xda\xde\xac/~\xde\xefn/?\xef\xda[\xbc\xfa\xb5\xde\xed,=h\xe9\x01\xf3\xeb\x87\xed\xae\xb1%^\xad6\x9dA\xda\x82\xaf~{Z\xef\xb67?=\xde\xed6\x83\x8bQ\xf1\xea\xb7\xe3\xaf\xdb\x97\xcd\xed\xfb\xed\xd3\xcd\xfd\xe0\xcbzw\xdc\xbc\xfa\xe5~}X\xdf<m\x0e\x7fm\x9e\x06o^\x9e6\x8f\xb7\x9b\xdb\x8f\xfb\x87\xf5cW\xbb\x9f\x7f\xde\xbf\x84Kg\x93\xc1EQ\xcc\x07\xa3\xd1h2X\x94\xc5\xe0U\x15\xca\x1dv\xdb\xc7\xcd\xfb\xfdq\xdb\x99\xe7b4\x1c\n|u\xbf\xbd\xf9\xfa\xb89\x1e\x07\xd3\xe1\xab\xe5\xe6pl\x8b\f\x87\xc5?\x86\xa1\xd4\x9f\xfbP\xd5\xcd\xff\xd7\xee\x13\x93m\x8f\x83\xf5\xe0\xe9\xb0\xbe\xdd<\xac\x0f_\x07\xfb/\x83w\xdb\xc7\xfdS\xf3ms\x11\n\xed\x06?\xfd{\xb0~\xbc\xfd\xdf\xfb\xc3`\x1bnp\xac?\x1f\xb7\xb7\xdb\xf5a\xbb9\xfe\xe3\xd5\x9b\xf0\xa0\xdb\xed\xe3\xdd_7\xf7\x9b`\xe5\xae\x16\x7f=\x85\xe2\xeb\xc3m\xe2^\xfd\xb2\xfe\xf6\x9fh\xf4\xd9h\xfe\xea\x13}\x9e\x8e\x8bW?\x1doZ{\x1e:\xe2\xf5&}\xbb(\x86\xb3W\x7f=\xdd\xfeg\x15\f:o?-\xc3\xa7\xc90|\n\xce\xde\xf6Hr\xf6\xf1h\xfa\xea\x97\xc1\xb8\x18\xfck\xb0\xfa4(f\xf3\xf0\xe1\xcf\xc1\xf1\xdb:X\xef_\x83\x9f\x07C\xfa\xef_m\xa9q,5\xee>\xfc9\xd8\xbc\xdc\xec\xd6\x0f]\xb1\xc5$\x94\x19\x073\x86z\xc4\xb2\x93Xv2\x9bte\xff\xae\xf7\xc1\x94\x9fw]\xe9\xd1b<\x98Lf\x83i\xb1\x90\x0b\xa6\xf1\x82\xe9\xb4\xec.x\xac\x1f>\xb7\x9dz\xf7\xd8]R\xb6\x95(\'\x93A\xb9\xa0\xf2\xa5-\x7f\xbb\xdf\xed\xd6\x87Xv\x16\\e4\x1d\x94E1\x98\xcd\xa6\xb1\xf8,\x16\x9f\xcf\x17]\xf1o\x9b\xc3M;h\xba\xea\x84{]\x8c\x16\x83\xc5p\x14\xaaCm\x9d\xc7\xf2\xb3\xa2\xe8\xca\xaf\x1f\xc2\x15\xc7\xd0/\xdd\x15\xe1&\xed\x05\xb3`7\xae\xff\xc2\x9a\xb0kp\xf4\xbd\xee\x19\xa1R\x93\xc94T[.\x99\f\xad=\xbf\xad\x0f\x9b\xc7\xdd\xe6K\xbcbV\xb6\xdd8\x0f\x16\x1c\x86\x07M\xe2\x15#\xe7\ny\xc8E1\x8d\xd7\x8c\xcb\x85\\C};\xa6\x96\xaf\x8fm\xbd\x8e_c\xb5&e B\xd5\xe6#\xa9\x16u\xf3t\x1e\xbb\xee\xdb\xae>\xc6V\x17m\x1f\x04\x03M\x87e,9\xb1m\xbe\tJ\xb4\xee\x8a\x86\x91|1*\xe7\x83"4\xb9}FWzj+\x7f\xdf|\xbb\xdf\xc4\xde\x9d\x8d\x07E\xe8\xb0\xf1l\x11\x1c\'v\xd8\xa4\xb4\xf7\x0e\xe6\xdf\xee\xa3\xf5\xcb\xd6\xd9\xcc\x9dg\xe0\xbe\xbb\xf5\xf1>Zd<\xebzj\x12\xea2k}\xa0-=\xb7\x9e\xf3}s\xd8\xc7\xf6E7(G3v\x83\xc9\xc2\x96\xdd?\xc6a1\n5\x1e\x92\xff\xc6\x92\xd3\xa1-\xf9t\x8a7-\xca\xceh\xaa\xe0\b\n\xde\x1f6\xf1\xa6\xe54>?t \x17.l\xe1/\xfb\xfa \xe3a\xbaP%\xc7Pr\xfb\xbcI\xd6\xea\xee\x1a\x9c<\x8d\x9d\xe9\xc4\x96=n_\xa2\x01\xa8\x02\xba\xb60,\x8f\x9bg\xea\xb3Qp\xb6\xd0\xb2\x99\xba-\f\xc9\r;f\xb9\xa0\x1b\x97r\xe3\x19\x8c\xf7-\x99v6\xa7\xb2S);\xb7\x9es\xb3\xdf\xedc%\x16\xadK\x8e\x83I\xa7a\x92\xec\x8a.l\xd1\xe3\xe6a+\xc5\xa7etK}E9\xb4\xee\xbek\xa7\x14r\xf7\x8by\xe8\x94i(\x1a\x87R9\xb2E7\x7f\xd7\xeb\xa8h\xa1\x86a\x14\x95\xe1\xa1\x93P\xf7\xaela\xcb\xde\xb5\x93\xfc&v^\xab7\xe1\xce\xc3\x85\xdc\x99z\xaf\x1c\x8dH=6\xc7n\xce\x8b\xda\x11-\x1d\x86h\x11]\xb8\xa4\x0e\\\xb4\xea\xd6\x8ei\x12\x19\xf2\xe0E\xe8\xe0\xe4\xed\xe5\xd4\n\xd9O\xd1+[\xf7\x99\rE\x8b\xca\xd2\x16\xfb9iP(\x16\x9e\xc6\xc5f\xb6\xd8/\xf1\xb9\xc38\xcaf\xf3\x85<\x17\x04\xf4\xb5\xba\xe1L\xe6\x89\x92\xfa\xab\xec\xee\xfc\xe7\xe0\x8d*6\x95b\xb3\xa1\xb5\xcf\xaf\xaaX\x90Q.F\x1d4#!\xf87U/\xba\xd4\xbc\x1d\xd8T\xbdYa\xab\xf7\x9fx\xc3Q\xb8\xe1|(\xed\x9d\x8d\xad\xb2\xfc&\x024.U\xf5`@\xfd\x9e\xc6\xe8E(P\x8eUA\xe8\x8d\xb7\xd1\xd3f\xedc\xa7s)V\xda\xe6\xbe\x93\xe6\xb6\x10\x17K\x93\x1a9\xfb\x1fi\xb0\r\x07\x8b\x91\xba\x1bt\xc5\x9fRl>Tu[X\xe3]\x9a\xbe\x9d\x17c6\xde|h;\xed\xbd\xea\x8d\xb1<w\x0e\xbd\xf1An\x18t\xcd\xdc\x10z\xe3\xa3v\x16u\xc3\xb1}\xee_\xd1z\xa3\xe8|#\x91\xf8\xf9\xc4\xda\xef\x8a&\xbb\xce\xeb\xa7b\xc09tG\x15\xcb\x8d\xe20\xd2\x8e0/\xed\xa3\x974\r\x14\x9d\x11\xd5\x1d\xa9K\x16\x938\xecW4\x82[c\x07?\x94\x017\x9f\xdb\x1b~\xa2*\xb65\\\xa8\xfb\xc1\xf8\xb8\xa6\xfb\xcd\xbb\xe7\x96\\n\x01\x03\xe4\xbfq\x98O\xbb.\x91>^\xc0\x02\xe2sX\x9a\x7f\xdd<\xf1\xa2\xa3\xe8lY\x86\xf9\xb2\x88Fi\xaf\x81\xc5\xe1\xe7p\x89\xcc\xb0\xa3"\xce/\xe3\xa1\f\xae\xc5\xd8}\x8aZ\xa8\x8c\xe6\xf4\x9c\xd6\t\xd2s&V1\xd7\xc7\x9b\xed\xf6f{\xb8\xa9\xe3\x1as4\x1e\x85\x85\xea8H\xfc\x88\xa7\x9c\x05LOu\xbb\xfc=\x86\xb5{\x9cK.\x8a\xd6y\x83\x15\xa6\xa1\xeb/h)\xb8\x80\x95E\xb7Rc\x0b\xb4b;\t\xfa9.En\x170W\xc55\xce\xb4\x9d-\'\xa1\xba\xa1J\xb4\x10Y\xccm/|\x8e#m\xd4\x15,\'S\xe9\x07XW\xdcD\x87_\xc4;\x066\xdd1ly\xec-oyn\n%g\xcaCGCXX\xd0t:\xa4{\x8e\xd5=\x0b\xdb?_D\x85&\xed\xca\xb1mv\xd0\x9cmXDt\x1fv\x83/;\xba\x12\xe6\xa9\xbb8\x9f\x85\xde,\x82\xb8\x96a\x16\x91\x87\xc0\x18\x8c\xee\x12\xa72\xb5\xee\x1f\r\xa7\xb6;\xb6\xa2N\xe3\xb2\xf5\x8e)\x95\x83n\xfb?\xb1\x87\xc3\xf26<{\x02e\xa1\xc3\xbe\xca=\xcb\xd9P={n\xef\xb9\xd3\xcf.T9\xea\xae\xb4{x\x90i`1T\x9d5\x82\xcez\xb4m\x96r#[n\xaf;\xb5\x9c\xa8\xae\x1a\x15\xb6\xe4\xb7\xe8\xa4\xf3n\x8b\xd7\xb9\x94\x14\xc55D\xbc\xe9\x90\x8a\x96\xba(\xf5M\xda\x13\x1c\xa4=\x93\xb9\xae\'\xae\xfeb\xb919\xfeD\x95,\xadK\xd1`\n\xde{\xd1\x8e\xf2\xa2[(\xc6\x923[\xcd\xba+\xb9\x98\xc7\xb6\x87Ip:.\xa8$,\xd4\x9fIp\xbai0`R\x10f\xae\x13\x15l\xd7\xe8\xf3`U.X\xc0"\xfd%\x16\xec\xfag\xa2\x9e\\\xc0Pj\xbar\xc9\xd5\xca\xa9\xbeeZ\xe7u\x035\xec&\x06\xbc\xbe\xea\x94\x81\xcb\x8d\xad\xc9[M\x14\xd5YL\xa2\x1eN\xdbI\xacH\x97\xa4\xed\xd5|H\xc2+\xcb\xc7\xa2\x98F\x89"QkE.\xbf\xbf\xa7\xb8\xadN\xf3\x13JGr\x9f\xb6\xbb[\xda\xe5\x04\xcb\x8cBoO\xc3Bc\xdcn\x0b\xdbkJ\x98Bb\x14\xe0v\x7f\xa2%v\xb7\xe8\t\xbb\xca\xa9j|\t\xdb\x18\xdezw\x8a\x17\xaa\xd6J^Y\xd0h+a+\xd3nXC\xc4\xe7N\xee\x1f\xf6\x1cc\x11\xd3QZ\x0e\x8fh\x92\xfc\xd2\x06\x9c\xd2\xea9\xc6\x96\xda=\xe0\\\xf6u\xa3\x12<\xbb\xd9\xa88\xc3,\f\xa54\xc3\x8cJ\xd8\xd5|\xd9\xed\x0f[\xbau[\x99"\xdc\xb2,e\xe1;*A|\x8e\x1b\xa9L7\x15\xb4\xe3\xa6\xdd\xb9\x15\xe9\x02\xf0\xf3\x9b\xfa\x10\xb6\xf57\xd1\xe9B\xa1v\x8b\x15\\\xa0\xdd\xc1\xc5\xf2)\xd40V\x13\xd8q\xdb\x05\xe1x\n\x0b{\xe2q!\xeb\x88QZA\'?M\x01\x195\xf1\r\xbb\x89o:WU\x9b\xc1@\xb8\xab\xb7\xe1\x8a\x87\xbd\xac\x18FmG\x04\xc7\r%\'\xf3\t]\x05\xf3K{UW?uU\xbb\xaf\xe8\x9cD\xae\x1a\xf7\\%^\x1c\xbc\xa4\xbd*\xb8\xaf\\\x05\xd3\xcc\x97\xadLfe\xf0wi\xca\x14\n\xeet\xc1\xa9*\b\xfd\x17Bji\xb1\x134\xa2\b\xc5\xca\xf0\x7fW\xcb\xae8\xf4\xde\xed\xfa\xee\x8e\xf6y\xa3n\xd0\x05\xcb\x94E\xa9zb\xe1]\x90bc\x932]"\xeb\xdeQZp\xdb`H;\x8a6\x87\xcd-=k\xd8\x19\xbeh\rD\xa1\x9f\xd1\x1c\xc6]\x88\x17\xad\xef\x0e\xebo\xf7\xa2\xb9\xedb\xaa\xed\xf1!\r\x8c\xb4\xc6\x1eOItB\x88x\x13\xad\x1f\xa8Q\x10\xaaI\xd1F>\xd2\x13 \x04$\xbe\xf8y}\x8c\xee8\xe9\x96?ep\xd72(\x0e\x199\xad\xbc\xd1\x1d\xf9\xaa.&7iW\xa2cuU\xe9_\xa5\xe3lE\x17g\x9b\xce\xd5\x12c>\xeb\xf1bu]\xbb\x92*\xbbu"\xbbVZ\xa2\x87Y,>.\x04s\xb7\xdf\x8e\xdb8\x0bv\xa1\x87E\b\xfb\xa5(\xd4(\xad\xd5\xb9|\xe8\xa6\xa7\xfb}\xcda\xc3Y\xdcW\x84U\x94\xc4mF\x0bX\x0b\xa4\xad\xbf(j;\xdd\x06\x07\x9d\x86\xd8\x06+*.\xb1C\xafR\xbc\xa7\x8df\x96\xa15\xed\xd8\x9aM\xd3C&\xb6\xf8\xfa\xa6~\x8a\xc5\x0b*>m\xe3-\\\x1cBuq\x15\xfee\xb7ya\xbfn\xaf\x99\xb4!\t\xbe\x06W\0j\x1a\x19S\xd8P\xb6\b\xa3\xb4\xa6N\xc5\x1f\xd67\x87\x14\xefh\x97\x0b\xed\xed\x83\xc3\x953\xea\xc3\x05\xc4\x80>\x1f6\xa9\xc1\xd3\xd8\x82Ih\xa4\xd4\x06\xe2@\xb7\xfb\xa7\xf5\rO;E\x10\xad\xb2]4\xce\xdbq\x1f\x036\xc5\x10\xc2\xb1\xb7\xdb0\xb8Ro\x8fB\xbd\xdb+\xda\xa3\x15\xb9\x02t\xee\x90&\xa9\xf6^\xd3 \xeb\xedP\x99\xd1\xc2\xa7\x18B\x97\xddln\x83\x1b\xc6\xbdD\x17\xa7l\xcf?\x8a"E\xdb\x8b!\xc6K\xeb\xc7\xbb\xf5\xa1~\xd8\xad\xeb\'\xa9\xd3\x906\x16\xd3t\x15t\xc3\xfe.\xc4,\xbf\xf2@\xec\x9e\xd1-\xf4bi\xe8\x85\x9b5w\xc2d\x11\xfd\xa2\r\x12\xf1\xcd\xb3\x11\xf1\x80\xda\x18\xd6\xde#\x16\xc7"\xadJ\xf8\x82\x9fb\x80\xa7]q\x8d\xda\xd5a\x1a\xa3E\x91j2\x8b\x05\xf7\x87\xdb/!v\xc7a\xc1v\x813\t[\x9cI\x98\xdc\x92\x13\x15cX\x1d\xbf\x93}\xe9x\x02\xc1\x92"\x1d_p|C\x15\x9ev[\xc5y\xebA\x14\x7f.\xd2\t\x06W\xfd\xf2M\x9a\x83\xbaA\xdc.\xa2\xa5"\xa9\xaf\xcai\xaa\xfdCXL\xd5;\xa9\xfe8V\x7f\xae\xaa\x9f\xc2\xf9i[\xb1\x8ee\xbb(e8\x05+d\x1fPL`\x97t\xdbN\xc1\xc7\xa3\xde,\x15\xb2*-&\xb8\xb1\x91\xb6vA\x90\x89\x8a\xfb\x14)\xc8\xcd\xbb\x11)\\\xb4K\xde\xa0\xa4\xa1\xe6\xd3\x92\x9c E\xbaS\x88c\x1fkM\xbb\x97E\x98>\xb9\xd6S\xd0\xb60\xcf\x85s\xbf \xd8\xc7T\xef\xb8\xe8oua\xd4]r1\xb2\x15\xff\xcd\x8c\xc2\xb8C\t\xbd\xb4\x18MMq\x9e\xabE\xd8h\xe3\xdb\xce\xd5\xc9\x7f\xb1\xf4ZD\x846\xf3e\x1bR\x81\xd2\xbcQ\xc9\x06 mZf\xf3I\xef#62\xa2R\x85Fyi\x8e\xeeX\xcd\xe1(O\xd6\\Z\xaf\xdfn\x9f\xb7\xb7b\xfe\xb0A\xe9tv2\xf7\xef.\xc6Q\xb7\xa6Ue*\xccqb\xd0|\x8a\x18\xe7\x17\xb01\xe5\xee\xc9\x98\x8e\xe99\xd2\x96M)\x12s\xeb{B#O\xd0[\xb1>\xd3\x1f\xbb\xe3(\xa5\xfa\xed\xbe\xb5\xd5?\xbdq\xcd\xfb\xcb\xd6K\x85Oz\x9b\xc2\xb2o\x1aQ\x16~i\xdb\xc5\xfa\x8a\x1e\x9f^+\to-[\x146\xe8\x94=Au\xf3\x19\xab\xb2[\xab\xdb\xb7\x0e\xddZHo\xc3\xd1\x8b\xde\x98\x06p\xa4\x1ek\xcfq\xff0\xad\xd3\xf1DY@\xf0\x9f\x07;\xad5\xb1\xc3F%%\x05\x84\x95\xd8\x05Z\x7f<\xa3k\xd2\x11?Kgh\xefXT6\xab\xbfZip\xed\xe7\xe5\xc4\xb5\xfd\x8d\x1a\xbe\x8b\xde\xe1\xcb=\xc5\x9e\xa0b\x83i\xfeG\xc3\xfc\x99\xb9\xe7"\xb6V\xc7\xe4Q\x0ew\xd2\xb7\x9d\xe8OC\xf9\xde\x01)kB]\x9d\x1eu\xbb\xca\x8c\xdf\x86L\xdb\xfa\xe8\x8096\xe2\x17\xe5k\xea\x10\xa8\xb7J\xb2(L\x1a1Z\xf4\xf7\x94]\xb4\xf5\xba\x9a\fx\xee,\nQ\x9d\xeb\xac\xa3^\x7f\x9d\x93\x06\x0eL\x82\xed\'\xed\xb6\tn>Y\xd0!\xe2\xfe\xfb\xe6\xf1.\x16^t\xb1\xa0R\x96\x16h\xc4\x8f\xca\xc9\xd2\x91G&\xcb\xe9D+\xeb\xa6!\x8dY}\xba\x95\x8dqP5\x15m\xeb\xf5e\xb8\xe4\x8c\x0b\xf1\x94\xa1FV\x9c.\x82\xd7\xe0\xc8\xe2\x90\xa3\xea\xacvV\x9f\xb6\x11\x81\x9e\xba\xdc\xe8\xae\x9a\xd10\xd1Qrl\xef\x7fa\xb9\x9f\x8eA\xd0s\x92\xa7]\xdd\xef\x0f\xba\x03Fe\xee\xf1i\xd5\xa87*\xeal\f\xdb\xc9\x9d\xabV$}\x9d\xcb\xe7YR6\x1dj\x85\xbbd\xae0\xa1\xfd\x89X0\xad\xbd\xc2\x16\xa3o\xa4V\xba\xdejZ\xc0z\xb3\xcb\xb0\x96ig\x01-\xe3\xbd^\x9b\xc3p\xac\xbb\xb0D\f}\x84]m\xd1\x86\x84&\x92R\x93YR\xedY\x95!{\x17$R\x9cO\xaf{\xcb\xca\xc2.\x96-\x1cM\xa25\xd4C\xbd{\xda~\xdb\xc5h[P\x97Q\x17[\x9c\x0e\xa7\xbeY\xa4\x8b\xce\f"\x11U\xb5\x9fJ\x87\x8fX\x91\xa4\x19!8\xf3\xb4]\xefn\xb7_\xe2y\xcc\xa4\xd5\xa4\xb0\xee\x9eO{\x07Fc\xe6b\xb3(\xa2=j6\xeb\x80\x88\xb5\x93\rV\x88\x05\x0f$ \xaa\xde\xa4\x7f\xf9\xfa\x06\x17O\xac\xd8}\xf3\x81\xa9\x7f\x92\x98v\x17\x06\xd5\xe7\xe5\x99]|\f\x7fx\xc1\x8d\x1a~\x8b\xdeU)\x9f\xd7(\xebt\x87\x02\xd3I\xffv@\r(\xe5\n)`\x91O\xf7\xa2w?2\xfco\xaa\x1a\x93\xbeY^eg\x85m2\xa5huNV\xb6\x07\x9eC\xb8u:C8\xec\xbfn\x1e\xd3I\xc2\xb4\xd5\x8d\xd0\xbe6\xe9*E\0q\x81u\xd8\xdcm\x8f\x12g\x9cNi\x855\xc9f\x1b\x9e\xa3TlF\xa5^\xf4\xb6\xd6\x8au\x99R\t3\xb1\xa6}\xf8\xb1\x0e3\xa0$\xc7\xb4\xc1}:\xd6\x1b\xfa\xb2\xfaF\x94\xa3\xd7#yZB\xd3O\xfa\x97L{\xe5\x01\xea\xec\x0e=\x80\'%\x15t\xe3\t\xa9gQ\xfe_\xf1\x96\xde\xb2\xd3I\xac2e\x16I2R< \xeb\xb6\xed\xfe\x9c\xf4\xe6\x89\x0ec\xfb\x16\xe4\xbc\xbc\xd3\x13o\'\xd2\xdd\x82p\x9e\xaf\xd9x\x81\x8a\xeb\x931\xad"\xf5y*\x1a\xfdI\xc9d<1ls\xe0\xe6`G\xd6\0\xb5a\x99\r\xd3b\xe0\xcc~H\x95\x1f\xa5-\x85\xce\xed\xc8f\x0f\xd5QQ\xb4\x87\xfd3\x8d\x11$Z\xf5\x94\xfd\xf1\t\xe5\x8a\xfd;K>K\x84\x8a\xb4K\x1e,\xcbb\xadZ\xd9\xde\xb7\xdb&\xeaC\xf1l\xfa\xcd\x97\xee\xde\xf4\xcb\xce\xae\xd6&\xe4\xeb\xd33;!54X\xd6\xa7\xd9\xd0\xe0\xb5\xb8\x1au\xe3^\x95\xe6\xa6\xda\x98P7+M\xa7\xf9\x94\x97\x1a\x8a\xa1\x86\xff\x87\xc5F\xa5\xd6&g\xf7\xd0\xb4\xc9\xdd\xec\x9eh#\xd1\x0e\xbd\xe0\xbc\xed\x99\x8ag\xc6\'^i\xc63\xfc\xb9I\x0b\xc9\xd6U\xa7\xbdYU\x85\xb6\x16\xf36wz\xd1\xbf\xaa\xb2\xf1\x05\xdd\xd6\x91\xbf\xa4y\x88\'\xf0]\xa8\xafM\x14p\xf6\xfely1\x0b\xc5\x1c\xfb\xc3e\xfb,\\\x96\x92V\xe6gV\x10zl\x97\xd1\x89u\x1e >\xe4V\xa2\x0b|\xf7EVz>\x9e\fx\x99\x1ad\xf2\x10\xe4\x92\x0eq\x164\x9b\xe5\x06\xe5E\xb9\xd6\xc09\x85\xd0u\xb2\x19\xaf\xe3h\xd4\xee`\xa6\x9f\x96\xfd\xfb\xe7\xb7(\x97s\xd2X\x9d\r\x88\x8d~\x07[\x8a\x16G\xcf\xe4\xa8\xb5\xbc\x97\xd0\xf9C\x9ba\x1d\xa6\xc9Q\x9b\xd2\x82\xf7\x97E\x96\xddw+\xa1\x82!\xc6S\xb8\xf2\x8b\x94\x1b\xd9;\xdd+i\xa0xn\xd9\xbb\x0by\x07[\xe3v~\xed\xeb\xdd\xe08\xf7\xeb]\\;\x8f\xc6E\xec\xd8\xe9<\xeb\xd84o\xb6\xf1s5i.(\x9b\x19\'M\xf6g\x90\x115\xe3\xf7.\'%\xdc\x11\x97\x93a\x86\xca\x16MIq\xf2\xe3\x9d$<\xf3a\xef\x8e\xf1\r\xee.\xcf,\xb67:\xf05\xec\xd5d\x8e\xd5\xcb*N\xe7wa[\x95\xf5id\xd9\x0e\x18\x96gF\x96l`%\x87\xb3ws\x9c\r\x953c\x91\xd50\xb7*)\xe2b\x98?*\x8d\xe0\xdb0MoR\xa2\x7f8v*\xdac\xe8V\x84\n\xdf3\xc4\xfb\xcf8\x85\xac\xa9\xd6\x18?\xf0Bf\xbc\xcd\x90\x9b\x9f\x8b\xdaL\xd2\xf2\xf5v{C\x1e\xdd\xe6\x8e]L\xda\xdc\x91v\x1c\f{\xa2\xb3\x18z:\xb34\xc6\x0e(h-\xa5S\xc6\xb2m\x8f\x1a\x02\xbc\xed)\xc6\xbe\x1d\xa5,\xdb\xb1\x7f\xc0|\xc4\xea\xcc\xa8::c8\xd7\x93\x9e\x8b\xf4Ia\xb6\xc6\x93z\xc5\x05^\bj`\x1b\xb8\xac\x9a\xc0\x8a!M`\xc3\xa2\xff\xde\xea\xcc8\x055\xf0\xe4 \xf9\xb2:Q\xd7\xd3:\xd4\x84\x17\x8f\x10\x03K\x19i\xa8\xe1\xb2y_ga\xf1^\r\xd7\x8b\xcdt\xac\xac\x13\xe2Q{\xbe\xf6\x05\xbbu:f\x16\x99\xe1m\xed\xbc\xe8\x12\x06\xda\xc3\xad\xf1\xb0g\n\xc2`ELf\xec?\xf7xT\xd3t\x14\xe7Q6\xacx\x1d\x86\xd5\x9fR\xd0Ug6b\xf5w\xfb\xbbv,>\xee\x93\xf0L\xbb\xed\xb0~I$\x1b\x01f\xf1\xa6\xc5\xa4\xf0/\xa8\xcd\x05Z 0\x1eB\x02\x11j#s^\xab\xd1\xed1\x7f\xd8\xa3Mg\xfe\x14v\x97\xed\xe7\xd4\\0\xef\x99\xf76\xb4\xbfL\r\x98\r\xb3Q\xcc^\xaa6\xba\xd1C\xfbW\x94\x8f\x99\x13M\xc9\x89\x8a\\\x808\xff\xe1\xd1\x06&G\x93y\xb7\x86\x1e\xcf\xf3\x95\x01/s\xf5\x12\xa5\xdb^\x84\x07\xf4\xed]\xde\xd4\xf4\xfa\x98\xbc*\xf9\xe6\xf1V\xbdc\x19_\xba|\xbb9<\xbe^?\xad\xe5\xdb\xfb\xf56\xacB\xc3Q\xfd\xe8\xd5\xdb\xf7\x9f\x06?\r\xc2\xbd\'\xc3\xf49N\xec\n\x88\x86\xd2\0\xadK\x05\xfaw{J\x96>\xc7\xe9[\x01\xdaz\x02_\xaa\xeb/\xf1\xa1z\xeb\xa4Pv:\x85\xc5iJ\x01f\xe6U8\xd9V!1\xdd@\x01Q\xe8\x04\xf8\xa0>_\r.\x16\xfc\x99l\xa2\0\xddF\x86+\xd5^:\x1dU\x80n\xa3\xa0\xd2F\xc1\xa8\x8d\x02\xd86\n\x9e\xda(\b\t\xa6B:\xe1\x97\xef\xcb\xc1\xc5<}^\x85\x10H\xfa|\x1d\x1cn\xc4_\xa8\xf2\n\x91z\nX\x0f.\xc6\xfc\x99.\x11@\xb7WP\xb9\x8f`\xd4^\x01l{\x05O\xed\x15$\xb5W\x90\xd8^\xfe\xfe\xac\xfa\xf4\xa4\xf0F\x7f\xc6\xba7y-c\x115t\b\0W&\x14\x06QBq$E\\\r\'\x02`L\x11\xea\x0e\xac\xc8]\xe2=/\xddz\xb9\xe3\x8c\xa8|\xb0\x11\x01#\x8eP\x7f\xd8\x11\x89c\x8f`\x18\x80\x84\xc2(\x8c\xe8\x07\x04\xd4x$\0\x06eB\xbd\x91\x19\xb9\n\xad\x86c\x94Po\xa0\x12\x95\x8fV"`\xc8\x12\xea\x8f["q\xf0\x12\x8c#\x98`;\x8c#\xa8\xc6r\x04\xd4\x80\x8e\x80\x1e\xd5\x84\xe0\xd0&\xd8\x19\xdf\x91\xa9q\f\xe0H\'\xd4\x1b\xeeD\xf5\x8d&\x1c\xf8\x84\xfa\xa3\x9fH\x94\0\x82Q\x07\b\xb6b\x10\xc1gt\xad\x13\x96h2\xc0m\xb2\xa3\x12q\xe0*\x95 \0F#\xa1\xa0\x12\tE\x95\x88\xb8R\t\x02@%\buU"r\x97x\xcfK\xb7^\xaeJ\x10\x95\xab\x04\x11\xa0\x12\x84\xfa*A$\xaa\x04\xc1\xa0\x12\x84\x82JD\xf4\x03\x02J%\b\0\x95H\xa8\xa7\x12\x91\xab\xd0j\xa8\x12\x84z*AT\xae\x12D\x80J\x10\xea\xab\x04\x91\xa8\x12\x04\xa3J\x10lU"\x82J%"\xa0T"\x02Z%\bA\x95 \xd8Q\x89\xc8\xd48\x06P%\b\xf5T\x82\xa8\xbe\xd1\x84*A\xa8\xaf\x12D\xa2J\x10\x8c*A\xb0U\x89\b>\xa3k\x9d\xb0D\x93\x01n\x93\x1d\x95PFPR\xa1Q\x18\x97\x9a\x02\xd10\x14*\x87"\x95|h\x144DS\xae\x90\xa8\x02\x97\xees.\xfb\xab\xee\xea\x8a\xe6sq\xd1,(\x8c\xa6|\x99\xd1%Pk4\x07\x82\xa3)P\x1dE}pQ\xa5?\x1a\x05\x112\x94\xa7D\xaa@\xe5\xda\x1e5IS\x9e0i>W\'\xcd\x82Di\xca\xd7)]\x02\xc5Js\xa8X\x9a\xb3\xb2\xa5\x18\xa5]\nU\x02\xa6P\xadb\x1aF)\xd3\x9c\xa3g\x8a\xae\xdd!\x8b\xca\xa6)O\xde4\x7fV\x0bP\xe84\xe5\xab\x9d.\x81\x92\xa79\xd4=\xcdY\xf1S\xcc\xb3\xeb\xe1\'\xb7l\xe3\xa3\xfd\x96rT\x91\x11\xa5\x89\x82\x81\xac\b\x01z\xa8\bTC\xa6\x94\x16\n\x06J(\x84\xab\x83L_:\xf7\xbf\xec\xab\xac\xab\x80\xc2\xe6\xfa\'\x1c\xa8\x9f\x10\xbe\xf6\t\x8f\xca\'\f\xe8\x9e\x10\xa0zL|p0\xa5x\x82\x81\xde)\xc2S;\xa6+\xc7\xbe\xa8tBx:\'l\xaer\xc2\x81\xc6\t\xe1+\x9c\xf0\xa8o\xc2\xa0\xba\tc\xb5\x8dq\xa5l\x8c)]cL\xab\x9a\x80\xa8i\xc28\x8a\xc6P\xed\f6T3!<-\x13\xf6\xcc\xf8E\x1d\x13\xc2W1\xe1Q\xc3\x84A\x05\x13\xc6\xea\x17\xe3\xcf\x8e\xaf\x9e\x9cr\x8d\x87\xf5\xd9\xc4Q\xad\xd8V%Y\x04\x80\x04\x10\nb\x95PT\xaa\x88+\x99"\x004\x8aPW\xa0"w\x89\xf7\xbct\xeb\xe5\xea\x12Q\xb9(\x11\x01\x8aD\xa8/GD\xa2\x16\x11\fBD(\xa8PD? \xa0\xf4\x87\0\x10\x9f\x84z\xca\x13\xb9\n\xad\x86\x9aC\xa8\'8D\xe5jC\x04H\r\xa1\xbe\xce\x10\x89"C0*\f\xc1V^"\xa8\xb4%\x02JX"\xa0U\x85\x10\x94\x14\x82\x1d=\x89L\x8dc\0\x95\x84POF\x88\xea\x1bM( \x84\xfa\xeaA$J\x07\xc1\xa8\x1b\x04[\xd1\x88\xe03\xba\xd6\tK4\x19\xe06\xd9Q\t\xaa\x9d\x92\x89\x84\xc0xL0\b\x05\xc3\xa8\x14D(\xa9H\bhE\x82]\xb1 \xf22\xbb\xef\xa5_=W/\x12\x97\x0bFb@1\x12\xecKFbQ3\x12\x0e\xa2\x91`P\r\x82?d\x88\xd2\x8d\x84\x80p0\xec)\x07\x91UfC\xd4\x8e\x04{\xe2\x91\xb8\\=\x12\x03\xf2\x91`_?\x12\x8b\x02\x92pT\x90\x84[\t!Ti\b!JD\b\xd1*\x92 \x94\x91\x84;:BT\x9d\r\x13T\x92\x04{R\x92\xb8\xde1\x87b\x92`_M\x12\x8br\x92p\xd4\x93\x84[A!\xf49\xf3\xbaSV\xa6\xc9\x11\xbf\xf5\x8e\xaaPe\x94\xaa$\x04\x86m\x82AU\x18FU!B\xa9JB@U\x12\xec\xaa\n\x91\x97\xd9}/\xfd\xea\xb9\xaa\x92\xb8\\U\x12\x03\xaa\x92`_U\x12\x8b\xaa\x92pP\x95\x04\x83\xaa\x10\xfc!C\x94\xaa$\x04T\x85aOU\x88\xac2\x1b\xa2\xaa$\xd8S\x95\xc4\xe5\xaa\x92\x18P\x95\x04\xfb\xaa\x92XT\x95\x84\xa3\xaa$\xdc\xaa\n\xa1JU\bQ\xaaB\x88V\x95\x04\xa1\xaa$\xdcQ\x15\xa2\xeal\x98\xa0\xaa$\xd8S\x95\xc4\xf5\x8e9T\x95\x04\xfb\xaa\x92XT\x95\x84\xa3\xaa$\xdc\xaa\n\xa1\xcf\x99\xd7\x9d\xb22M\x8e\xf8\xadwT\xa5{\xa8\xd2\x94\xf8\x1d\x86l\x04AO\bD5\xe9`\xa5%\xf1;(I\x04]\x1d\xe9\xa8K\xb8\xdf\xa5W!WA"\x93\xebG\xc4A="\xe8kG\xe4P9"\n\xba\x11AP\x8d\x0e\xfc\0\xdf\x95b\xc4\xef\xa0\x17\x04zj\xd1Q\x15\xd8\t\x95"\x82\x9eND&W\x89\x88\x83FD\xd0W\x88\xc8\xa1>D\x14\xd5!\xa2V\x1b\xbaoJ\x19\xba\xefJ\x17\xba\xefZ\x15"\x80\x9a\x10QG\x11:\xa2\x06\x07G5\x88\xa0\xa7\x05\x91\xe9\x19\'\xa8\x03\x11\xf4U r\xa8\x01\x11E\x05\x88\xa8\x1d\xff\xdd\xb7g\xf0\x9f\x13\xf0\r~\xf7\xda\xe9\x8c\xfa\xe8\xabj\xd8\x13\0\xc3\x8cP\x18\xf8\t\xc5\x91\x1fq5\xf4\t\x80\xb1O\xa8;\xf8#w\x89\xf7\xbct\xeb\xe5\x8e\x7f\xa2r\x01 \x02\x14\x80P_\x02\x88D\r \x18D\x80PP\x81\xf8\xf5\x03\x02J\x07\b\0!H\xa8\xa7\x04\x91\xab\xd0j\xa8\x05\x84zb@T\xae\x06D\x80\x1c\x10\xea\xeb\x01\x91(\b\x04\xa3"\x10l%!\x82J\x13"\xa0D!\x02Z\x15\bAY \xd8\xd1\x85\xc8\xd48\x06P\x19\b\xf5\xa4\x81\xa8\xbe\xd1\x84\xe2@\xa8\xaf\x0eD\xa2<\x10\x8c\xfa@\xb0\x15\x88\b>\xa3k\x9d\xb0D\x93\x01n\x93s\x95\xf8y\xf0\x93\xfel\xaf\xfa9\x9dx+\xc01\xda\xcf*\x9e\xaa0k\xaa\x9fy\xdb\xa3\x10\xb0\xc1\xcf$f\xea;\r5\x06\xc2\x88\x18\xf1\xe7\xe4\x18\f\xe8\xca\t\xaa\x1c\x851\xaa\x9c\0\xb6\x0b\x05O\x95\x16$UZ\x90Xi\xfa\xfe\xba\xb5\xe8\x84?[U{\xcd\x16\x15\xc0Q\xb8\xd7\xda\xa2\x82Y]{-\x16\x15$UN\x90X9\xf9n\xc5\xebu;$\xf9\xf3J}\x0e\x03q\xc6\x9f\xa9\x15\x02H\xf5\x18\x8b\x7f\xc3#u\xd5\xeb\xf4w7\x18\x88\xea\xa7\x8cC\0X\x88P0\x13\xa1\x9e\xad\x88\xca\rF\x04X\x8dP4\x1d\xc1h?\x82\xad\x11\t\x04KFt\x89\xc0\n\x01eX\x02\xc0\xba\x84\xe6&\x8e\x04\xd89\x82\x99\xb1\xbb\xb7\x1b\xb5\xb1#\x80\xc6\x8e(\x1a;\xa2\xae\xb1#\xe5\x18;\x12h\xec\x88f\xc6\x8epf\xec\b\x83\xb1#\x88\xc6\xee\xd0%\x02+\x04\xb4\xb1#\x80\xc6\x8e\xa8c\xec\x8e@cw \x18\xfb\xd7\xd6\xces\xfeL\x0f\x10\x80\xac+\x806\xac\xa0R\x05\xc1\xc8\x9c\x02$K\n\x92\x8c(H\xb4\x9f|\'\xd31\xb0n_\xd7M\x9f\xa9\xb6\x02Pm\x05\xd0\xb5\x15Tj+\x18\xd5V\x80T[ARm\x05\x89\xb5\x95\xefT[\x06\xa8\x07\xda\xbf\xe0\x15\x81d\xfd\x84\xfc\xde\x9a\xbf\xe0\xcf\xb6A\xbf\xb3\xf9\x05p\x1a\xf4\xbb6\xbf`\xb6A\xbf\x8b\xf9\x05\x81\x06\xfd\x9e\xcc/\xdfm\x83~O\r\xe2\xef\xa9=\f\xd4\xfa36\xa7vk_;\xb5\xaf\xb1\xf6\xb0L\x11<kU\x9d\xb5\xaa6\xadz\xdb.\xdf\xc7\xfc\xd9\xae\x1a\xde\xdaE\xbb\xa0\xd9"\xe1-/\xd5\x05p\x97Roe\x81.\b\xad\xcd\x05\xb0k\x85\xb7\x83v~\x9f\xa6\xcfi\xad\xc0\0-\xc6\x15\xa0\x17\x0f\x8c\xaa\xc5\x83`\xfc~\x9c\x02\xd3\x8a\x82\x01^90\xc2+\x87\x84\xecCm\xf9s\xb2"\x03\xc6\x8a\x8c*+2\x96\xac\xc8\0X\x91q\xb6"#\xc9\x8a\f$+&\xa0V\x16\xad\xb1\xa7k\xb7\xa7k\xa7\xa7k\xec\xe9\xba\xa7\xa7\xeb\xac\xa7q\xa9\xfc\x16V\xc9o\xdb\xe5\xef\x84?\xdb)\xee\xad^\xf4&Lo\xb9\x94\'\x1b\x18\x9aj8\xaf\xd5\xa6@n\0C\x83-\f\xe7\x9b\xc5\x14A\x0b\x19\x12\x86\x85\xe1`\x84hN\xb9\xae\x81a\xdc\x18\x0e\x86\x90\xe5\x9c\xd1d\n\xe4\x03\xcb\xd2\xf9\x183<\f7\xc3\xe1\xc83$\x0eBM\xaa\xf1h`\x18\x9a\x86\xf3F\xa9)\x90\x0fXC\xc3\xd85\x9c?\x8cM\x11\x1c\xd1\x86\x84\xc1m8\x18\xe7\x9a\xab}\x17\xa9\xcf\f\x89\xfaGC\xa2>?$\xea3C\xa2\xfe\xf1\x90\xa8\xcf\r\x89L?\fi\xa5DS\x8d/\x18(0\x86\xcb\xb4\xe6\x9d\x8a\x03\xbd\xc3\x10\xd0;?\xfa\xf3\xae]\xd8\xa6\xa0\xc6\xbbvQ;O\x9f\xdb\xf0H\xc1_\xd2\xe0\x14D\x8d*\x06\xedo\xdd_\x8c&\x86\xc8P\x89%\xbc\xc30\xc2;\'\x82\xf0\x0e\xdf\xe6z\xe7\xbe\xcd\xf5\xee\xcc\xdb\\\xef\xf8\xe5\'n4\xbf\xfd47\x80n>\xbc\xfd\x04\xb0c\x88\xc8\xf4YC\xb1>\xd5`\x93\xd18}\xef\x10\x99\x9f\x0ePv20X\xcbr\x9e\xcd4\xa8-\xa7qe?\rk+\x1a\x1cmiH\xc7\xa2\x9a\xef\xb3kV\xe6\\\x81\xc67\x1aZ\xbag\xc8%:\xca\x9e\xb24\x01`\xe3\x84z\xd6\x8d\x9c\xb6kD\x94E#\xa0mI\bZ\x91`\xc7~\x91\xe9\xb3\x9cb}\xaa\xc1&\xa3\x9d\b\xcd,t\xd9n\x99\xa6\xfc\xd9\x06\x95/y\xcb$\x80\x13`\xbe\xd4[&\xc1lX\xf9R\xb6L\x82@\xbc\xf82m\x99\xe4;\xcdM\f\\\xb1\x9c^r/*@w \xc3Ku\xfdJ}\xfe\xa4>Kt\xe0\x12\x03\x03\x97NL\xe02\xed\xdd\xf8!i\xef\x96\x80x\x0fe\\\x02\xc0\xc2\x84\x82\x99\t\xf5lMTnp"\xc0\xea\x84\xa2\xe9\tF\xfb\x13l;\x81@\xe8\t\xd6z\xdb`\xec\x13O\xeb-\xb7\xc4{\xae\x10\xf8\x84\x80\xea,+\xfd\x80\xe6\xdd\x16\t\xe8\xbb\bb\x07*\xe3\xab^\xd4(t\xa5\xa6\xa0?5\xe5u\xaa\xe6\xf3\x9e\xd5,t\xaf\xa6\xb0\x8f5\x87\x1d\xad9\xdb\xdb\x9a\x81.\xb7\xefB9v\xc2\xce\xef}\x17\xca)\xb0t\x9f\xb3r\xd1O.\xaa\xbc\xc2yE\xc8\xa3r\xffP,8\x89b\xd0S\xf86\xcaO\x04\x03/\x11\x02|D\b\xcfC\x84\xcd\xfdC8\xf0\x0e!\xd07\x84A\xcf\x10\xc6\xfa\x85\xe0\xe0\x15\xfam\x91\xcc"\xe8\x11=o\x8bd\xf4\xd2\xb9\xff\xca\xc1>9\x98\xf2\x83\xec\xa5\x8a\x9c\xc8}\x80\x11\xf0\0\xc6\xb1\xff\xa3\xd5U\xe7\x13\0=O(t;\xa1^\x9f\x13\x95w8\x11\xd0\xdb\x84bW\x13\x8c\xfdL\xb0\xedd\x02\xa1\x879\x19\xdf6\x18\xfb\xd6K\xc6\xb7\xdc\x12\xef\xb9B\xe0\x13\x02\xaa3m.;\xa0y7F\x02\xfa0\x82\xd8\x81fW\xa9\xfa\xd1\xe2\xd0\x9d\x96\x84^\xb5\xa4\xd7\xb9\xb6D\xde\xc7\x96\x87\xae\xb6$\xf6\xb8e\xb1\xe3-k\xfb\xdfr\xe0\x06\x86\xbc\xea\xb1\x1e:\x05\x90\x9eo\x98"\xcb\x9e\xe7\xadz\xf0O=\xb8\xf2\x1b\x8b\x83\xfbX2\xf7"\xc3\x833\x19\x0e}\x8a:EySB\xc0\x8f\x12\f\x1e\x94`\xcfw\x12\x97{Mb\xc0_\x12\x8c\x9e\x92p\xf4\x91\x84[\xefH(\xf8\x85$\xddC\xdb\xd1\x17\xdc\xa4{ \x97\xd9}W\x19\xf2)CToC\xae:\xc2y\x0f\x13\x03}K(\xf6j\xdcF\xa9N%\0\xfa\x94P\xe8RB\xbd\x1e%*\xefP"\xa0?\t\xc5\xee$\x18{\x93`\xdb\x99\x04B_\xf2~\xd96\x18{\xd2\xdb/[n\x89\xf7\\!\xf0\t\x01\xd5\x89v\xfb\fh\xde\x85\x91\x80\x1e\x8c v`l\xaf\xea@\x02\xa0\x03\t\x85\x0e$\xd4\xeb@\xa2\xf2\x0e$\x02:\x90P\xec@\x82\xb1\x03\t\xb6\x1dH t \'\x9c\xd9\x06c\x07z\tg\x96[\xe2=W\b|B@u\xa0\xcd\xd7\x024\xef\xc0H@\x07F\x10:\xf0}\xdbw\xe9\xbc\xf7=\xf7\x9bB\xa8\xcf\x14bs\x81\x18\xd6\xc9@\fr6\x10#\x92\xf6\xc3\x90\xe4\xfd0\x94\x12\x7f\x18\xa0~\x11Dr\x07\xde\xf3Y\xbb\x006\xbb\xea\xbd=k\x174\x8b\xdf\xbc\xe7\xb3v\x01 \x02\xfe^\xce\xda\x051\xb1\xee\xf7|\xd6\xce@:k/\x12\xa0\xc9\rV?\x9d\xff(\xc0\xab\xfe\xc6\xa9\xbe>\xde\x11\x10\xdb\xb4\xc9\xda\xb4\xc9\xda\xb4WN\xb2\xb7\x91\xf9\xf7\xf6pF\xd0,H\xff\x9e\x8fa\x04p\xd3E\xdf\xcb\x81\x8b 6I\xf4=\x1f\xad0\xc0\x19\x0bd\xd7\x0f*\x8d\xed\x03\xa6\xb1}p\xd3\xd8>8il\x1f0\x8d\xedCO\x1a\xdb\x87,\x8d\xedC\x96\xc6\xf6\x01\xd2\xd8>\x903p\x95\xa9\x11\xf4\xfdc{n*\x9fm\x96\xc2G{B*h\x96\xa5\xf0\x91\xcfB\x05p\xb3\x14>\xca\xa9\xa7 dx\x01l\xaa\xc5\xc7V\x11\xe53y\xab\x02\xb4\x0e2\\\xe9\xcf\xd8\xae\xcamW\xe5\xb4\xab\xc2vU=\xed\xaa\xb2vU\x90}\xf11u\r\x7f\x17\x99\xfe\xa8R\x9e>\xb6Z\xcc\xf8\xb5\x9d\xdc>j\x05NX,\xa2z\x92\0h6\xa1^\xdb\x89\xca\r@\x04X\x81P\xdf\x14D\xa2=\b\x86\xce&\x14z\x9c\xe3\x93\0@\xdf{\xf1I\xcbU\x19\xe0\xda\xa4\xea\xb7I\xd5g\x93\xca\xb5Iu\xce&\x95o\x93\xccQ\b\xb6\xde\x82\x01\xd7\x8f\x1cp\x9d\x18\xe0\x1aK\xa0\x07e\xf1\xd5DD\xeb*7"\0LF\xa8g2\xa2r\x93\x11\x01&#\xd47\x19\x91h2\x82\xc1\x8d\b\x057\x8a\xe8U\x06\x80\x1b%\xd4s\xa3\xc8U\x19\xe0\xda\xa4\xea\xb7I\xd5g\x93\xca\xb5Iu\xce&\x95o\x93\xcc\x8d\b\xb6n\xc4\xe9\xad\xb6\xd7\x95\x1bqz\xab-\x81n\x94\xa5\xb72a\xb3r\n\x0fF\xf3\xf5e\xe5\xb8\x05\x1cS:Y9.\xd7cV/+\xc7%\xd1\xed\x9c\xac\x1c\x8f\xbb\xea\x81\xd1\x11{O\x8b\xbd\x12U\x0f|\xc6\xb6\xd5\x8fl[\x9d\xb7mu\xc6\xb6\xd5\x8fm[\x9d\xb3m\xee\xbe\x9a\x04\'\xb6\x87\xe6\x9e\xe7i\x87\xb6g\xe6^\xe9\xcc\xb9\xfd\x13s\xa2\xaf\xda}\xcc\x82?\xd3\xb5\x02\xd0~@\0mvA\xe5\xbe\x82\x91\x81\x05H&\x13$\xd9I\x90h\x1c\xf9N\x9e\xc8\x80\xbc\xa4u\x85\xefg]\xb9\xaff]9oe]\xe1\x0bYW=\xefb]e\xafa]\xe1\x1bXW\xf8\xf2\xd5U\xbb\xc3\x9a\xf3g\x9b{}\xc5;,\x01\x9c\xdc\xeb+\xbd\xc3\x12\xcc\xe6^_\xc9\x0eK\x10\xc8\xbd\xbeJ;,\xf9ns\xaf\xaf\xc2\xa2zg\xdaG;.\xe67\xfc>\xd4\x15o\xb8\x04\xa0a\xaf\0\xd5\x1aA\xa55\n\x93\r\x97\x80\xd4D\x01R\x13\x05IMd\xe4\xbe\xf9v\xbfy\x94\xcd\xccU\xbb\x05\xe3\xfa\xef\xb1\x07\xf6\xae\xc1\xf7\x8e\xc1\xf7hp\xd8\x82\t\x9euD\xda\x82\t\x80vO[0\x06\x0e\xfa3V\xda\xfc\xc1\x12\x81\x8f\x9b\x87-v`\xad\x86K\x8d\x03\xbav\xc7o\xed\x8c\xdf\x1a\xc7/$\xbd\t\x9e\x8d\xeb:\x1b\xd75\x8c\xeb\x93\xea\xbeF\x7fF\x07kr\xcf\xe1\xb7v\x16\x16\x80\xa6\xda\xb7v\0\xf5\xac\x90\xbd\xb5\x03\x04\xd8\x03\xde\xda\x01\x18-`\xde\xda\x01\x104\x8e\xd7\xae\x13\x0b\x80\xda9kW\xa0r\xdd\xb3kW@}\x05\x84\xb5+\xc0\xa0\x85v\xedjQ\xa5)\x04\x80\x8f\x13\n\xfaH\xa87f\x89\xca\x07.\x110z\t\xc5\xa1J0\n\'\xc1V=\t\x84\xa1\x9c^\x82\xda\xe5\x06\x021\x8d\xe0\x06}\x19e\x95P\xd0\xd6\x84:\x02KT\xdfX\xf1\xa4\x96\x18\xd0[BQt\tF\xe5\x8dp&\xbf\x11\xdec\xb3\xf7n\x7f\xef\xfb{v\xdf\xd7\xb3{\xb7g{\xc4\x99H\xbf\xdbQ\xa6\tu;\x18\x05;\xa2\x87\fp\x9b\xe9\xebw\xe4\x1c\x11\x8fD\x8d\xa2P\xbb\x1aW\xf7\xabY\xdd\xa7f\xb5\xabf=\x12O\xa4/u\xb5/u\xb5\'u\'\xf4\x9d&\x03\xdc\xa1\xe0\xcd\x02\xca\x9ez.\xd00ZKs8/h\xce\xb5\xa7.\xe0XU\xd3h[\xcdeF\xd4dfJM\x82A5\x853\x88\xdd\xb6N<\x18g\x93\xbem\xab[\xc0\x99Y\x9cm\xab\xcb\xf5\xcc2\xde\xb6\xd5%q\xc6q\xb6\xad\x1e\xa7EX\xc38X5\x873\x91\xe6\\\xd5\xd2\x05\x1c\xed\xd24*\x98\xe62\xa9\xd2d6Oi\x12f+M\xa1\xa4)\x0e\xb5\xc7Pv\xfe\xd2\xaf\xad\xf8c1\x9b\xcb4\x873\x9a\xe1\xbcyM\x178\xaf\x01\xee\x1c\xa7y\x9c\xe94\x97\xcdw\x9a\xccf=E\xe6s\x9f~\xa1\xc57\xdc\xfe\x8c\xcf\xed\x7f\xe4W\xfb\xf3~\xb5?\xe3W}\xf3\xa3.r\xce\xf5\xb2\xb9Rsg\xdc+\x9b7\x15w\xe8\x81\xcf\x98\xa8g&U\xa07\x9f*\xba\xf6\x85\xb2>3[\xd4?\x9a\x11\xea\xf33B}fF\xe8\x9bsu\x91s\x93F}n\xd2\xa8\xfb\'\x8d\x93\xef\xd1M\x0f|fX\xe7\xb3s\xa52\x1b*Lj\xa80\x9f\xa1rS\x19*\'\x8b\xa1\xc2\x04\x86*\xcb]\xa8\xb2\xb4\x85\n2\x16*LV\xa8\xe0\x9d\xfa\n_\xa7\xaf0\x89\xber\x93\xe8+7\x89\xbe\xeaO\xa2\xaf\xfa\x92\xe8+7\x89\xbe\xf2\x93\xe8+?\x89\xbe\xf2\x92\xe8+7\x89\xbe2\xe9\xe8\xb6\xd1h\n7\x1d\xbd\xeaOG\xaf\xfa\xd3\xd1\xab\x1f\xa4\xa3Wg\xd3\xd1\xab\xfet\xf4\xeaL:zu&\x1d\xbd\xeaMG\xaf\xfa\xd3\xd1\xab<W\xdb\xb1\x15\x9a\xd1\xc9\xd5\xae\xfar\xb5\xab\xbe\\\xed\xeal\xaevu&W\xbb\xea\xcb\xd5\xaezs\xb5\xab\xde\\\xed\xaa\'W\xbb\xea\xcb\xd5\xae0\xb59\xb3\n\x9a\x0bS\x9b+7\xb5\xb9rS\x9b\xab\xfe\xd4\xe6\xaa/\xb5\xb9rS\x9b+?\xb5\xb9\xf2S\x9b+/\xb5\xb9rS\x9b+\x93$l\x1b\x8d\xa6\xe8I\x12\xae\xce%\tW\xe7\x92\x84\xab\x1f&\tW?H\x12\xae\xce%\tWg\x93\x84\xab\xb3I\xc2\xd5\x99$\xe1\xea\\\x92p\xe5\xe5\xcb\xba\x16D\xf3f\xf9\xb2\x95\x9f/[\xf9\xf9\xb2\xd5\x99|\xd9\xaa7_\xb6\xf2\xf3e\xab\x9e|\xd9\xaa\'_\xb6r\xf3e+?_\xb6\xb2\t\xa7\xd0~4\x0b=I\x99%!`\x96\x04\x83Y\x12\xec\x99%q\xb9Y\x12\x03fI0\x9a%\xe1h\x96\x84[\xb3$\x14\xccB0\x98\x85P4KwGe\x94\xf8\x1dL\x12A0H\x04=sD&7F\xc4\xc1\x14\x11DCD\x14\xcd\x10Qk\x84\x88\x81\t:\x10\f\xd0a\xd0\xfc\xa5\xfa\x99\xa1%\xfe\xcc\xd0\x12\x7ffh9\xf0~fh\xe9\xfc\xcc\xd0\x12\x7ffh\x99\xfd\xcc\xd02\xfb\x99\xa1%\xfc\xcc\xd0\x12\x7ffh\xa9~$r\x89\xbf\x0f\xb9\xf4\x7f\x1ar\xd9\xc6O\xe4\xb3\xed\xd8\xa5\x8d\x94\b\x9a\xf5\xdd\x92c"\x02\xb8\xbfk\xb8\x94\xe8\x87 \xb4\xef\x12\xc0v\xd7\xb2\rn\x94\xfc\xd9.\xd4\x97\x1c\xc6\x10\xc0\xd9i/u\xc0B0\xbbg^JhB\x10\xd8\x1d/S\x10B\xbeSm\x19\xb0[\xb3%\xa6x.\x07\xbai\x1b4y\x8a!(\xc0\xeb\x83\x8d\xd3\x07:D  v\xcc&\xeb\x80\r\f\xa4%o\xfb\xd9\xb3\xf6\xbc\xc7Z\xf2\xfe^\0g\xf7\xb8\xd4;y\xc1\xec>q\x89{v\xc1aG\xb8\xe4\xdd\xb9\x006(\xb8\xccr>\x97\xceFy\xd9\xee\x8e\xb9\xa7j\xf4\xa5\xdau\x9d\xdaq\x9d\x1a]\x07\xb6\xb9\x82g.Ug.U\x1b\x97Z\xb5\xaa#\x9fm\x1dW\xac:\x028\x95^i\xd5\x11\xccVz%\xaa#\bTn\x95TG\xbe[\x7f_\xa9\xc4\xa1\x15f\x0b\xad\xdc\x14\xa1\x95\x93\x17\xb4\xc2d\xa0UO\x06\xd0*K\xfbYa\xae\xcf\n\x13|V\x03Iw_\xb1\x82\b`\x7f\x8coe\x15D\xd0,*\xbcb\x05\x11\0\x82\xbb+Q\x10A\xcc\xcf\xed\xadXA\x18 \x9f\x1d\xc9w\x1d\xa5\\u9\xe2\xd3\xf49\xe5\x883\x90r\xc4\x05\xc8\x7f/ger\xc4\x05S9\xe2\f\xda\x9f\xcbY\xa9\x1cqF8G<!I@\xb8I{\xe50{t\xe9\xbd\xeb\xc1{\xc7\x83\xf7\xe8\xc1{w\xd8\xadD@\x04!\'\x11\0\x1d\x19\x02y+\xad\x1f\xdc\x17A?&\xa9\x95I?\x040\x8e\xc3\xa8r\x1c\xc6\x92\xe30\0\x07\x07\x8c\xb3C1\xc2\x0e\xc5\b9T\xfa\xde(\xcfopD6\xd9\xd8\xbb\xee\xde\xf5\x18\xf1\x97\x94\x1d/Hz\xd7C\x10\x930/\xb0\xca\x98\x170\xa5\xcc\x0b\xc2\xb9\xf1\x02qr\xbc@\x94\x1d/@z\xd7\x83\x91K~\xb5\xe5\x9a\xa5G\0]GA\xb3\xb7b\xaeYz\x04\xb0\x9d!x\xaa\xb8 \xe4U\x02P%\x19X\xf3\x14u\xcd\xd2#\x80=\xa6\xbb\xb6\xd2#h6\x97^\xb3\xf4\b\0s\xe6\xb5H\x8f &^z\xcd\xd2\xc3\0\xb9\xfbT\xbe?\xe8\xdf\x82\xbc\x1e\xc8z\xf3\x9a\xb5G\0\xd2\x1e\x05\xe4+\xe2k\xad=\n\x13\xed\x11\xd0.\x93\xafE{\x04\x81e\xf2u+5R\xdd=\xbc\xb8tm\xc5F\xc1\xf9kJ\xd7,7\n\xc1\xd7=\x98\xc0\xf7\x97\xaeYq\x14\x02o+]g?\xady\xadE\x87{\xa1\xd6\x05\xea\xacI\xb5\xdf\xa4\xdakR\x9d5\xa9\xeekR\x9d7\xa9\xc6W\xb2\xae\x93\xf80\xc0\xb1d\x1e\xa66\x98\x8c0j\x8b\x13NF\xceQ\x19\x1bPF8\xd3\x1b\b)#\x0e\xcac\x83\xca\0+\r\xb2\xefr\0\xea\xa9Q\xf6.\x07\x10\xa0K\xee\xbb\x1c@\xa2B\xd9w9\0\x05\xad\x8a\xa8\x12,\x02@\xb5\b\x05\xe9"\xd4\xd3/\xa2r\x11#\x02\x94\x8cP\x943\x82Q\xd3\b\xb6\xc2F \xa8[:\x060\x83\xcb\x9c\r\x80\x17+\xe9!\0\x14\x8fP\x90\xbd\x84:\xdaGT.\x80\x89\xc8U\x90\x18\x90BBQ\x0f\tFQ\x8c\xf0>k`&\x8f\x04\xbb\x82B\x9c\xa3*\xc4\xa0\xb4\x10\xdc\xa3/\xc4f"C8\x8a\'\xc1\xa8\xa0\xf6\x14\x07`GK#QgEk\xdf\x12\xf5\x19K\xd4\xbd\x96\xa8}K\xd4g-Q\xf7X"\xd7\\\xc2Ax\xf5\x91\x0bkTv\xe6\xe20\xa8\xc0\xfe\xa9\x8bC;:\x9c\x9d\xbb8L\xa6\xc6\xf9\xc9\x8bC\x81&gg/9\xa3\x94Y0\x10g!<}\x166\x97h\xe1@\xa5\x85\xf0\x85Zx\xd4ja@\xae\x85\0\xc5fB\x89\xb6`\xa0\xdbB\x80t\x0b\xe1\xa9\xb7\xb0\xb9\x80\x0b\x07\x1a.\x04\xca\xb80\xa8\xe4\xc2X1\x17\x1c\xf4\\\x1d\xb3\x991\x8e\xc7o\xf9\x10QB*\x18h\xbb\x10 \xef\x8ap\x14^\xd8\\\xe4\x15\x97\xeb\xbc\x90 \xf5B\xa0\xda\x0b\x83\x82\xcf\xcc\xdek~&\xfb\xc2\xb8z\'\xb4#yB\xa2\xea\t\xd3#|R \xd3>\xa1p"\x10\x06\xe7\x82\xecx5g\x9c\x19\x81\xb9\xda\xbb\xa0\xee5U}\xdeT\xf59S\xd5\xbd\xa6\xaa\x7fd\xaa\xba\xdfT\xf9L!\x94\x9d,\xd6\x03y\xef<|\xe6\xdfrH\x809+`\xf8y\x90~\xc3y\xdd\xa6\xd7\xf0g\x897\xac1\xde\xb0v\xe2\r\xa4K\xaa\x06\x04@5\bu\xeb\x129U\xa1\b\x9c\x10h\xf0\xa9X?B\xf3J\xc6\xca\xa8J\x12\0\x95$\xd4\xadd\xe4T%#pB\xa0\xc1\xa7b%\t\xcd+\xa9\\P\xd5T\xa3P]M\xb9uV\x05T\xc5\x15zr\xd1\xc6\xad\x13\xb6CSyc\x18QM\x11\f\x1a"\x84\xdb\f\xa6U#\x18;9X\xe3\xd4\x03\xab/D^\xf98\xa0U\xcd\t\x80j\x13\xea\xd69r\xaa\xc2\x118!\xd0\xe0S\xb1\x9e\x84\xe6\x95$\xe9P\xb5L\bT3\xc1n=\x89T\x15%\xe4\x94!M\xf6l\xack\x82\xf3\xca\x92\x98\xa9\xca&\x04*\x9b`\xb7\xb2\xf2\x07?S\xd5\xe4\x0f~\x02\xd2d\xcf\xc6\xca\xe6\x7f\xf031\x9d\xbc\xaa\xaa\xc6\xefP\xd1\b\xba\xd5L\x7f\x970U)\xfd]B\xf3\xbd\x81\xe7a\xf5\xf0\xef\x12&<\xce\x93\xaav\x04@\xf5\bu\xeb\xc7\x7f\x16-U\x88\xff,\x9a\x05\x1a|*\xd61\xfb\xb3hD|\x1e\xec\xf8i\xe13\xcf\xba\t\xf0j\x15`^\x1c\x10P\xab\x1b\xc2_r\xf9\xec\xfe%\x97\xcf\xce_r\xf9\x8c\x7f\xc9\xe5s\xcf_r\xf9\x9c\xfd%\x97\xcf\xd9_r\xf9\f\x7f\xc9\xe5skE\xfe\xdc\xe8\xcfX\xdf\xdcJ7\x03i\xec\xcd\xe0\xab\xc2\xbfz/\xa1\xdf\xb4F\x95\xcf\xf6\xfe7`T\x81\xedq\xdaM[I~fc{\xe6FW2a\xb1\xc8=\x02\xaa\xba\x04\xb8\xcf\x8f\xdc.\x03\xa0\xf6\x84\x9e\xbb\x05\xb4\x83W\x04\xb6Z\xd8\xa2lE\x90\bz\x1d\f\x01\xd5,\x02\xdc:En\x97\x01\xd0,B\xcf\xdd\x02\x9a\xc5o\x1a\xd9ja\xb3\xb27\x8d\x98\xa0\xbf8z\x9fC\xbai\t\xf2kF\xec\xce\x81\xb0\x81\t?\x7f#l$\xe1M^\xc9\xac\xa1\t\xcf\x9b\xda-\xfc\x8f\xdf\xd67r\xda\x1a\xb7\x88\xf8\x83\xf0EF\xba\x8c\xbd\xd5\xed\xe0\x96\x1f\x15>\xdft\x7f\xb9L\0\x11\xcf[\xa5\x9b\xb7]\x93\xf8sj\x0b\x03\xaa\x11\x84\xc5\xfb\xaaG\x11\0\xcf\x8b_\x9f\xf1\xba\x13\x02M\x06@\x1d\b\xcd*\x92\x82\xa6\xf4\xc0\r\xfc^\x95\x9e-\xf4D\xb1\x19\xbc\xa8\xcf\x8d\xfel\x1f\xbc\xf1\x9e\xa9\xa3\xb5\xe9\xc1&\x04X\x18\xf0\x19\xaf<!\xf0\x82@\x93\x01P\xad\\\x1f\x88\xd0\xaf\xc4\xa6\xba\x99W+\x0b\x03>\xe3\x95\'\x04^\x10h2\0\xea\x96\x0f\xf2D`\x127W0\xcb\xe1.r\xe6\xd9\xbd\xd1\xc9E_\\\xb4\xf1Q\xac\xbe\xbb?H,\x84uR\x0bp\xd7_ \xfe\xec\xdc\xe2\xe4`/\x0e\xd6x\x18\xd4\xda\xdb\x160\xc7q\x1e\xa84\xe3Xk&\x9e\xbd\xbb\x9c<\xf0\xc5\x03\x1b\x17\xc4\xaa\x0b\x93\xd7]\'m\xa7z\x9b\x9c\xed\xc2\x80\xcfx\xe5\t\x81\x17\x04\x9a\f\x80\xfae;\x99D\x98\xe4\xdeT9\x9b\xdb[X\xf49\xbb\xf8\x94!/\x19\xd2\xe4\bT1\xdf\xc0$\xc6d\xda\xa6:\xdaD\xdb\xc2\xa2\xcf\xd9\xc5\xa7\fy\xc9\x90&G\xa0\x8e\xf9\xbe\x85\x98/\x12"\xa5\xef\x1b\xfd\xd9\xce\xac_\xe4\xef\x8f\t`b`\t\xcdf\xde/\xf6\xcf\x8b1\xc8a\xb0\x04Hp+!\x12\xd3"d\xcf\xab\x82/\x1c\xc8\x14\xc0Y\xe2\x7f\xd1aK\xc1\xec\x12\xff\x0b\x06)\x05\x87%\xfe\x17\x0eI\n`\xf3\xcd\xbe\xa8\0$\x01v\x8116\xb0\xc1\xeeB\x0f\x8c\xf8cl\x9e|\x8f\xf6W\xdf\xa5\xb5\x02rc\x15\xc4\xc6\x17,\xb6_\xbeS3\x05 \xcb3 \x1b\xc8lk\xdb\xb3\xad\xa5R\xf2\x14\xfan\x9bE\xa0m[\x02\xf3\x06\x12\x93\xb52\xe1YS\x89\xb0\xed%\x10\x1aM(\xb4\x1cC\x81wn(\xf0\xeeL(\xf0\xce\xbeY\xec\xa2\xd6(\xce{\xc5>\x95\x1b\xc8\x7f\xab\xd8g3c9\xef\x14\xbb\x14\x18\xce{\xa3\xd8\xe3\xee|\x93\xa0)\r\xe7\x19\xf4^\xed\x9c\xefq\xe7|\xef\xec\x9c\xbfv\'!\xd3\xf4\xd9\n\xe4W8\xf7`4\x13\xcc\xafr\xca\xc1\0D\xec\x19g-c$E+\x18H\'\x18\x04\xc0\xdb\xd5.\f5\xef}\xbb\xda-\x90\xb7\xc7{\xbb\xda\xe5\xfcV\xbaoW\xbb$\xb4\xdd{\xbb\x9a\xb8\x9d\x9a\xf5vjv\xdb\xe1\xbc\xb6sf\xb4\x1d\xae\xf3w\xb8\xac\xdf\xb9\xcb\xfa]\xdf\xb2~\x07/\x15{p\xd3\x03\xc3#z^*Nt\xb4\xd0\t\x81&\x03\xe0\xb6\xd9\xdf\x1c#\xe2AE\xc3\x1e0\x1a\xf6\xe0F\xc3\x1e\x9ch\xd8\x03F\xc3\x1ez\xa2a\x0fY4\xec!\x8b\x86=@4\xecA\xfdI\xb5\x07\xfckj\x0f\xce\x1fR{\x8c\xc7t\xe9\xb3]\xa1<\xe2\xa1\\B\xb3\x05\xc9\xa3:\x82K\x80\xfbK\xce\x8f\xfa\xc0-!\xb0&y\x94\xe35\xfa\xfe\xccA\x01\x1d\x03\xcf\xa2\xdf^\xdc\xfbQe\xa8\x18\0\x9a\xea\xe6\xa7\x18*o4f\xa7\x18\xd4o~\x96\x9bb`4\x04d\xa6hP\x99\x04\x8f\xe6\x1e\xdd\xa3\xb9\xc7\xbe\xa3\xb9G\xfe\xf5\xa0\x91\x05\xc0B\xce\xaf\x07\x01\x95[\xc8\xfez\x10\xa0\xbe\x85\xe0\xd7\x83\0F\x0b\x99_\x0f\xb2\xa0\xb2\x10o\xf7m\x93\xd1B\xd9v\x9f\t\xfb{\x10#\x0fFk\xf5\xfd\x1e\x84[\xc0\xb1\x9c\xf3{\x10.\xd7cE\xef\xf7 \\2\xb3h\xfe{\x10\x1e\xa5\xadk\xa5\xdb3Zfi_\xba\x13\x1d\'0ei\x02\xc0\xc6\x84z\xd6%*\xb7+\x11`QB}[\x12\x89V$\x18\xedG\xb0\xb5\x1c\x9f\xf7L\f\xd0`\x93\xd1N}\xc7;{u\xea\xb1Ws\xdc~ \x7f\xb8`\xafn\xbf\xc7;\xef\xbd\x9b\xb2\xb2X@\xdd\x9e\x83|cS\xa2\xc1K\xf0i}\xda\xb3\xb7Q1\x07U\x0f\xb7Q\xb1q^\xb6q\xef\x80u9{j\xbe\xd7a\xae\fS\x95\xd1a\xae1\x96k\x9ck\xb1\x1agN\xbf\xf7\x1c\x01\xb2\x80z<G\x80\xc6\xa6D\x83\x97\xe0S\xfb\xce\xb2\xedz\xf4\xb9\x07W\x150\xb8\xaa\x87\xc1\x9b\x9e\xfb`\xad,\x99WNbN\x80\xa8\nI\xccil\xcb4\xd9U\xf8\xf8\xdeCsZe?#\xa0\x1e\x1b\x01\xf5T^e\xdaK\xf0\x99\xd9*3\x11,\x15\x16P\x8f\x8c\x80z$\x8a\xc9\xde\x15\x93}\x9f\x98|Sk\xe2o\xb8\x1c\xfe\xe6\xac\x84)\x1c\xd3s\xca\xa3Y\x9f\xb2\xe7<\xf66\xc4\xcd\x15\xb7\xdb|yR\x9f.&\xa5p\xf1\xa2[{\x01\x81t\x82\x933r\xac\xa6Ak-\xcdxGk\x9a\xb7\xf1+\xc5h\x1b\xe4\xb5>X\x13\x10H\xd5p\x18\x8a\x16z\x8c\xae`\xce\xcb+\x7f\x1a\xa4\x079\x8c\xfd\xdd5\xc3\xd0a\xa0\xcb\xe9J8|\xde\xb1\x91\x10W?\x84\xf3o\xf5\xd9v\xc8!\x9d\xb9j UG\xa0\x18\x7f-\xd3\xf7[\xc5%\x87`\xe0\x8e=\xfa !\x13\x06l\x9c$\xc1\xe9UL\xbe\xc9^\x7f\xc6*{\xf1\xd3\x83\x13?=`\xfc\xf4\xd0\x13?=d\xf1\xd3\x03\xc6O\x0f\x18?=p\xfc\x94\xcd\xf2\xb7"\x8f\xaauG;\xf8\x0f\xec\x0b\nH6W\x90k\xa9\xa7\x01?\xe2I\x97`\xf49\x85\xb4\x0eA\x80\xe4\xa3\t\xdc\x1d\x94\xfc$\x88\x0e-\xa5\t\x04\x80\xf1\t\x05\xa7I(z\x8e>\te;E\xf0\x16K\xa1#Qf\xa5\xb4}m\x130-\xeaZ\x8br<\xc0\xb9"\xba\xcf\0\xb7\xa5\xae\xaf\x11\x95;\x1c\x11\xe0u\x84\xfa\xaeG$\xfa\x1f\xc1\xe0\x84\x84\x82\'\x9a\xb3e0\xf3\xdfX\xec\x88\xe6A\xef$\x14\\4\xa1\xe8\xa7\t\xef7\xbf\xf8&}\xf7\xdc6-\x92\xad76\xf8\xddz1\xae\x7f\x13Ng\xdc\xd2r\x02\xa0\x83\t\x05WN(\xba\xb2\xf9-\xe9\xd2\x80\xb7X\n]9\xa2\xca\x95\t\0W&\xd4\xb5\xa5\xfd\x99g{\xe3}\x06\xb8-u]9\xfb\x95g \xc0\x95\xdd_y\x06\x12]\xd9\xfe\xca3\xa0\xe0\xca\xf6W\x9e\xad\x99\xff\xc6bG4\x0f\xba2\xa1\xe0\xca\tEWNx\xbf\xf9\xc5_\xe9\xbb\xe7\xca)Nb\xbd\xb1\xc1\xef\xd6\x951H\xc2\xb8z\x80vh\rcgk\x0e\x9d\xdbp\x99\x8bk\x16\x1c]Q\xb7\xfe\x15\x99\xd3\xc3\x89\xca\xd4\x81q\0\xf4\x9f\xa88%\xb2\xc1`\x0f&\\\xf8\x8c\xad\xfc\xe1\xe1\x1fL\xb84\x0e\x95\xfe\x83\t\xb7H6l\x9c\x83\t\x97\xc3!\xa4\xb8l )\xeeo\xff\x92\xa3o\xeclhi\x0e\x07\x98\xe1\xb2af\xd8\x1fu\xb2\x1aW\x1au\x07\x9e\t\xa4y#\xa8\xf1Q\x18\x8an\x14\x8dX\x1d\xad8b \xe7\x88)R\xdcx\r\xb9\'5\xf2\xca\x8f\xdd\xc6\xc5oW\x03~)\x86\0\xceq\xb0\xa8=\x84\xd4\xdc\x927\t\xf1\xfb\n\xbe_\xcb~\x92\x80\xd4\xe1\x16U\xdbVC\xa4\xfdf\xdcL\xce3*\xe2\xe4\x87\xcf\x03Q\x9dg~\x05P\0\x92\x05\x01\x9c\xa1\xf9\xac_\xf5\x13\xcc\x0e\xc2gy\xb5O\x108\xedyN\xaf\xf2\xc9w;\xa2\x9e\xe1\xb7m\x9e[u\x19\xf3g{\x1c\xf4luD\xd0\xec\x90\xe8\x99\x15C\0+\x13\x82\xc3_<}fA\x10\xc0\xfe\xd1\xd6g\xfc\xa1\x98\x13\xfcE\xdd\x93\x92\xc8\x13\xea\xe2\xc9\x15\xc3\x93\xa3\x80\'\x94\xbdS\x8f\xd6\x9d2\x81;\xa1\xaa\x9dP\xcaN\xf8\x07\x7f_T\xe6\xcf\x0bf\xfe\xbc`\xe6\xcf\x8b\x9b\xf9\xf3\xe2d\xfe\xbcx\x99?/\x98\xf9\xf3\x92e\xfe\xbcd\x99?\x8d\xfa\xd3\xbe\r\xfei\xdf\x06\xff\xb4o\xe3\xfei\xdf\xc6\xf9\xd3\xbe\r\xfei\xdf&\xfb\xd3\xbeM\xf6\xa7}\x1b\xf8\xd3\xbe\r\xfei\xdf\x06<\xbbQ\xf6m\xd0\xbe\r\xda\xb7q\xed\xdb8\xf6m<\xfb6h\xdf&\xb3o\xe3\xd8\xb7u\xdbi\xfa\x9c\xdc\x96\x01\xe3\xb6\x8c*\xb7e,\xb9-\x03\xe0\xb6\x8c\xb3\xdb2\x92\xdc\x96\x81\xe4\xb6\t\x80\xb1G\x13\x8c\xf2\f\x02\xc0=\b\x05\x1f!\xd4s\x14\xa2ro!\x02\\\x86P\xf4\x1b\x82\xd1y\b\xb6\x1eD \xb8\x91\xd9\xe6\xdbF\xab\xee%\0\xbc\x8aPp\xad\x84:\xfeET\xeed\x89\xc8=\x8d\x18p7B\xd1\xe7\bF\xc7\x93\xa8\xc1\xd4\0\xe0\x82^\xd4\xc0R\xb93B\xd4\xc0\xa2\xbe[b\xd4\xc0\xc2\xe0\xa0\x1050(\xba*\xd7Ny\xab`\xe0\xb0B\x80\xcf\n\xe1\xb9\xad\xb0\xb9\xe7\n\x07\xce+\x04\xfa\xaf0\xe8\xc2\xc2X/\x16\x1c\x1c\x19\xb2\xb7s\xab(\xf7\x11\f<Z\bpjE8~-l\xee\xda\x8a\xcb\xbd[Hpp!\xd0\xc7\x85A7gFy\xba`\xe0\xecBx\xfe.l\xee\xf2\xc2\x81\xd7\x0b\xe1;\xbe\xf0\xe8\xfb\xc2\x80\xfb\x0b\x01#\0\x93\xf2Sw\x7f\x97\xec\xc7\xef\x90\xf2\xf8\x1d\xf2\x1c\xbf{\xc9\x8d\xdf\xf3\x8c\xc6\xefN\x1a\xe3w\xc8]\xfc\x8e\t\x8b\xdf1K\xf1{\xd2T\xf8n\xabh\x14\x15\xc1\xbc\xb2\xa8\xa7\x88g\xd56j\n 4\xc0jiB\xe9/\x99\xe1w\xdb\n\x02m+\x12\x98\xb7\x82\x98\xac\x15\t\xcfZA\x84m\x05\x81\xd0\nB\xa1\x15r\xcb\x8d\x87\xd9\xd6(\xc2\xb6H\x13y\xab\x14\x9b\xb5LsY\xeb\x14i[\xa8\bh\xa5b\xa4\xa5o\x1eo\xdfn\x0e\x8f\xef\xd7\xdb\xc31}y\xbd~Z\xb7\x9f\x7f\xdd?>\xfd\xb1y:lo\x8e\xff\x17\xd3\x07VP'),are=a('x\x01\xb5}[s\xdbH\xb2\xe6\xbb\x7f\x05\x1fw#\xd6\xb3\xbc_\xcey\xf2t\xb7==\xea\x19\xd9nI\x1c\x9f7J\x82l\x1eS\x84\x87\x14,\xd1\xbf~\x01TV^\xbe\xcc\xa2\xf7\xe5\x84#\x1c\xc4\x97\x05 +3\xeb\xab\xac\x1b\xf4\xe7\xd3\xe6\xf0\xf4\xb6\xde?\xfd\xa3z:l\xef\x8e\x83\xe9_F\xaf~\xa9\x1f\x1f\xab\xfd\xd3\xe0\x97\xfa\xdb\xe9\xb0\xfd\xfc\xe5i\xf0\xbf\xee\xfe\xf7`\xb4Z\xce\xfeO\xf7\xff\xa2\xff\x7f\xd5\xfd\xbf\x1a\xf6\xff/\x06o\xee\xeb\xdbj\xf0\xe7\xe9\xf8T=\x1e\x07\xbf\xef\xef\xea\xc3\xb7\xfa\xb0y\xaa\xee\xff2\x18\xbc\xd9\xed\x06\x1f\xbb\xe7\x1c\x07\x1f\xabcu\xf8\xde\xa2\xf2\x92C\xb5y\xda\xd6\xfb\xc1\xafm\xe9\xff\x18\\}i\x06\xff\xd8\x9c\x06\x83\xd1`4\xfe\x8f\xe9\xf4?&\xa3\xfe\r\\\xfez\xbf\xfdwS\xfd\xfe\xeb`:\x19\xcef\f\xdf\xfc\xa39n>W\x83\xd1t5\x1f\x0e\xe6\xab\xc9t\xfe\xaa\xab\xd7?7\x8f\xd5\xe0o\xd5\xee{\xf5\xb4\xbd\xdb\xbc\xbe\xbc\xddu\xb7\xbfz\xdb\xecvV4`\xd1\xe6q\xbb;Y\xe1\xabu\xd5\xdb\xe1\x1f\xd5\xfd\xb6y|\xf5\xfb\xd3f\xb7\xbd{\xb3\xff\xbc\xab\x06\xafG\xe3W\xbf\x1f\xdfn_\xaa\xfb\xf7\xdb\xa7\xbb/\x83\x87\xcd\xeeX\xbd\xfa\xe5\xcb\xe6\xb0\xb9{\xaa\x0e\x7fVO\x83\xdf^\x9e\xaa\xfd}u\xff\xb1~\xdc\xec{\xb5\xfe\xfa\xd7\xfa\xa5\xbdu1\x1c\xbc\x1e\x8fg\x83\xd1h4\x1f\xac\xda\xaa\xbe\xban\xcb\x1dv\xdb}\xf5\xbe>n{\xbb\xbc\x1e\r\x87\x02_}\xd9\xde}\xddW\xc7\xe3`6|uS\x1d\x8e]\x91\xe1p\xfc\x97a[\xea\x9fu\xabl\xf5?\xea7\xb1\xd7\xf68\xd8\f\x9e\x0e\x9b\xfb\xeaqs\xf8:\xa8\x1f\x06\x7fl\xf7\xf5\xd3\xe9[\xf5\xba-\xb4\x1b\xbcy7\xd8\xec\xef\xffo}\x18l\xdb\x07\x1c\x9b\xdb\xe3\xf6~\xbb9l\xab\xe3_^\xfd\xd6\xbe\xe8~\xbb\xff\xfc\xe7\xdd\x97\xaa\xb5s\xaf\xc5\x9fOm\xf1\xcd\xe1>\xcb^\xfd\xb2\xf9\xf6\xb7d\xf6\xc5h\xf9\xea_\xf4{6\x9e\xbczs\xbc\xeb\xecy\xe8\x05\xbfV\xf9\xea\xf5x\xb8x\xf5\xe7\xd3\xfd\xdf\xd6\x83\xc5\xbc\xfbq\xb3\x1e,\x97\xed\x8f6\xc6;\x7f\xe4\x18\x9f\x8c\xda\xb8\x19L\xc6\x83\xff\x1c\xac\xff5\x18/\x96\xed\x8f\x7f\x0e\x8e\xdf6\xad\xed\xfes\xf0\xd7\xc1\x90\xfe\xfdgWjbKU/w\xbb\xcdc_l\xd5\x95\x99L\x87\x9d\x16\xa9\xec4\x95\x9d\xccf}\xd9\x7f7uk\xc8\xdb]_z4_\x0e\xa6\xf3I\x1b\xb6K\xb9a\x96n\x98\xcd\xe6\xfd\r\xfb\xe6\xf1\xb6s\xe9\xe7}\x7f\xcbb\xd2\xbe`\xdeF\xc5|I\xe5\xe7\xb6\xfc}\xbd\xdbm\x0e}\xd9\xf9\xaa\r\x94\xd1l0\x1f-\x06\x8b\xc5,\x15_\xa4\xe2\xcb\xe5\xaa/\xfe\xad:\xdcum\xa5Wg\xbahoX\xf5\xb2\xc5p\x92\xca/S\xf9\xf9|\xd1\x97\xdf<\xb6w\x1c[\xaf$m\xba\x1b\xda\x17\xb47\xb2\xfe+2\xcex,\x15N\x91\xd7\xbfc6\xea\xab<\x19\x89\x8dZs%\x1b\xf5\x86mu\xda\x1c\xaa\xfd\xaez\xa0;\x86\xcb\xde\x8b\x83\xe9l\xdaV?\xa95\x1d\x05\xb7\xc8[^\xaf\xd2-\x93\xb6\xba|\x0b\xf9vB5\xdf\x1c;\xbd\x8e_\xc9\x13\xb3\xd6\x0b\xadj\xad\x99X-r\xf3l9M\xef\xd85\xc7\xbe\xf0r\xd6\xf9`8o\x9b[2\xeatj\x03\xe2\xae%\xa0M_\xb4u\xca\xeb\xce\xac\xe3\xd1\xb4\xad\xc8<\x95\x9eY\xdd\xbf\x9c\xbe}\xa9\x92wW\x93\xc1\xb8\x8d\xc1\xc9\xacU\xbd\xb3_Wzn\x9f\xdd\x9a\x7f[\'\xeb/\x17\xad\x1e\xe6\xc9\x0b\b\xdf\xdd\xe6\xf8%\x19d<\xea];\x9d\x8d[\x83,R\xe9\xa5\x8d\x9c\x1f\xd5\xa1\xceZte\xe7\xad\xe1s\x18LW\xb6l\xbdO\xcd\xa23\xf2\xb0\xb5\x83\x94\x9c\rm\xc9\xa7\xe7\xf4\xd0\xf1\xbc3Z\x17\x89\xb9\xe0\b\n~9T\xe9\xa1\xad\x0f\xfa\xf7w!\x92\x0b\x8fm\xe1\x87\xba\xa1\x18\x1fu\xef_\xcc\xa5\xe4\x04Jn\xbf\xa7\xa7\xb6m\xad\x7f\xeaX\xda\xcelj\xcb\x1e\xb7/\xc9\0#R`&\x8f\x85fy\xac\xbe\x93\xcfF\x93\xce\x04\xf3\xb6\xb1\xf1c\xa1IV\x1c\x97\x8b)YV\x99a\x01\xed}K\xa6]\x8e\xa9\xac4\xc6\xd9\x12\xe3lW\xef%\x14&\xc3Qk\xd5\x14\n\xb3\x15\x84B\xf5\xb8\x95\xe29,\xf5\x1d\xf3\xa1\r\xf7]\xd7\xa1\xf4\xd6h\x03\xac\xb5Y\xdb\xe4\xa6\xab\x14\xef\xf3\x91-Z\xfd\xbb\xd9$Fk[v\xcf8\xe3eK\x04\x89-\xe7c[\xf8s\xd7\xb9W\xc9{m\xb0\xb4\x8f\x9e\xb5\x9d\x0e?\x1a\xdc\xd7\xf6\xbe\xc7\xbe\xcbK\xadt\xd4\x07Q\x1b\x17\xe3\x14\xc3s\xf2\xe0h8J\xfc\xbaI\x86\x1e\x8fR\f\xad\xdav\x9d\xe3}>\xb3T\xf6\x86H\xaf{dG-\xd4\xec\xe7s[\xec\xaf\xd9s\x1da\x8d\xa5\x18\xf9mA<\xf7\x8b\x90U\xfb\xde\xc5R\xda\xd9|iK\xfe\x9a<\xd6Ue1W\xef]\xd9\xf7\xfe\x96\x8a\xcd\xfbb\xf2\xde\x05\xb9i>\x1a\xf5\xc5\xde\xaabm_\xc0\xc5\xc8E\x0b\xf2\xff\xbb\xa4\xde(E\xf6b\xb5b\xf5\x16c\xab\xde\xdf2\xb3\x0fS\xb1\xfc@\xe8\xf4~\xcf-\xa5\xeb\xefFR,7\xa9\xe1\xb0/\xf6\xf7\xbe\x18u,\xb3\xa5*\b\xde\xb8H\xaf\xed\xea\xb1\x1cJw\xb8\x80\xb6\xf4\x87\x14\x9b\xcd\x84\xab\x17\xb9[#N\xfd\x87t\x96\xab\x91\xd8x\x01\xae\xf8\xa7<\xcd\xd4ue\x8dwI\xbeM1\xb5l\xa9,\x1bo9\xb4\xb5x\xaf\xbd!\x9d\xe2\x12\xbc\xf1A\x1e\xd8\xd6\xcb<\x10\xbc\xf11=p\xd9=\xb0\xad\x0e?pb\xdf\xfb\xe7\x80\xb2\x8f\xde\xbb\xa3\x89<oj\xc3\xe5\x8a\x82\xbe\x7f\xe0L\xfa\xe0\xe5\xcc\xbe\xf7:\x95\x1bO(^T]\xa0}\xdc\xa4\x92\xbd\xad\x97C\xf5Dr\xc9j\x9a\xda\xfd\x9a\x9a\xf0\xaa-\xd76\x13\x89\x84%\xa4\x18\xffJ\x05W\xbdS\xd4\xf3\xa0}|\xa2\xe7-\xfa\xf7J\xe4\xaf\xa0\x81\xfcW"\x84N\xbd\x85\n\xd4\xd5\xc8\xc6\xf3m\x9b\x9a\x7f\xad\x9e8\xedH\x1d\xe6\xbcMN&\xc9(\xdd=\x90\x1e\xde\xb6\xb7H\x1f;\x9a&\xf3\x8f\xdbGg\xf3\xaf&\xe1[T\xa62\x9a\xa6\xf7LZ\x9a\xe0\xf7\x90\xd3\xa6\xf3\x9c\xaa\xdcm\xb7w\xdb\xc3]\x93\xb2\xcc6\x95\x19\xb7\xcc1\x9bH\x9f\xb3\x82\xfe\xa9\xe9\xb2\xdfc\x9b\xba\xa7\xce\xe4\xf5\xb8k\x81\xed\xa8b\xd6)I\xb9\xe0*\xa7\x16:U\x93\xbc\xabK\x89Z\xb6\x99\x8c;\x03\xd0\x1d\xd0Y\xa5$g>\xea\xb3\xc0Y\xdb\xe7\xcc&\xa4\x0e\xe4\x16\xb7\x89\xee\x97\xa9\xe0RZ\xe4je\xf9\xe2n\xc0\xfdd\xf7\xc4\t?q4\x84\xc4\x82r\xa0Tr>\x13\x86l\xfb\x02[\xb2\xd2%g\xad\'\xe4\x99\xe0\xd0\x07i\xbe\xd3\xb6[\\\x8c;\xf8\x8f\xc1\xb6\xcd"\xfa\x1f\xbb\xc1\xc3\x8e\xee\x84~\xeasvL;vK]\x94\xbc\x04\xb2\x8c\x14-\xf3Y\x9f\xb8L\x94\xda3\xeb\x8em*\x97z\xf6\xa5*\x07n\xfb\xef\xe4\xe1y7n\x1ca\xd9\x855\xefWy\xe6\\\xb5\xd5\xae\xdb2\xcf\xdc\x95\xde\xbd\xb2<\xfb(uY\xb6.\xe0:\x8f\xc0Y{[g)\x07\xaeJ\xb9\xe2r\xd2\xb7\x8bYKJR\x122\xc0o\xd4\xe6R\xa2\xdf\x85\x94\x14\xc5\x1c\x82\xfd\xdf\x15\x9d\x0f\xf5S\xf3\xf0\x8c\xeas\x90\xceo\xdaf\xdeRnf\xed\x982\xa3\xf9$\x85\xd4x\xa5JB\xbe\x9e\x071md,\xfaF\xdee\x8a\xa9$4\xa6f@\xd9V\x1f\xd0\xed\x8b\xdaa-\x95\\\xda\xb7\x7fO\xcf\xec)r\xdeF\xa2\x14\\Y\x16\x7f&\x16\xef\xfd3VO\x1c\x0f\xed\x13_\xe8\x89\x9d\x7fZ\r\xa4\xdc\xc8\x96;\xa5r\xb3.\xd4\xa6V\xc9\xf1\xd8\x16\xfd\xd1\x17\x9d\xa4\xfc|\xa4\xcaM\xb2\xc9\xa7L\x89\xc2:\xab1\xd1n;J\xcat8\x1a\xe7\xf1\xd5|H\xbc\x9b\xfc\xd4z\xa8\x9f*\x99\xb4c\xa6<\xc0\xed*\xeb\x9f/\x84;$\xba\xed2>~~N2(E\xed\xf9\xf6i\xbb\xbb\xaf\x069k\x1a\xb5=\xfdl\xd9\xb1a\xca\x96Gs\x18\x81\xa6I\x80\xfb\xfay?\xe0\x91qK\xca]y\xae\xfa\x1cb\x98G\xde\xabY\x1a\xa9w\n\xcc\xb94\x84q7^m\xa7{\x88i\xba\xb1\xfd\xbc\x8d@\xa1\xd2\x11\'\xc3\xd4C>t\xb3M9wN\x13K\xdd\x10\xb0KM\x87\xf9\x1d\xd0m\x9chP\xd3g\xa7\xf3\x95\xf4/\xa39$b\x0f\xbb\xfa\xb0\xa5G\xcf\xc6\xd4\xb4\xfa\x11\xfa\x82n\x80\xf0>V\xa2\xcc\xa2\x1b\x7f\xb4\xddd\xdf\x13\xf0\r\xd0g\xdc5\x87vP\x7f\x97B\xae\xf5|\xa7M\xeb\xf19\xebN\xc1>Z\x8d\xa4\xfb:n\xfb\x19\xb8\x14\xa5\x8b~\xaaa\xbc\x94<q\xb4\x80\xb9\x86<\x1f#\xdd^\xdb\x90\xbbno\xda:8w{\xa3\x05\xd0\xd4\xe7f\xdb\xde\xf1XK\xba0j5\xebXt\xd6\x9a\xa0c\x8et\xdb\xd8\xbe\xac\xbb\xadWP\xbdm\xd1\xdf\xd6M\x19\xc9m\x93\xc2mj\x1a\xa5\x0b\xc9\xee\xbe\x91~\x1d\xe4\xde\x0f[\xe9\xcefm:\xd6wg}A`\xb3\x87\x9d.8S\x05\xc1\x87\xed\x9cZ\xcev\xda\xe1\xfb\xb8U\xba\x8b\xd6\xc9\x88<\xb2\0\x0f\xdeo>\x7f\xa6\x91\xdeh\xd2\x85\xf8\xac\x1b\x7f\xab\x9ez\xb1\x8an\xc8\xd3c]X\xa5[T/\x993n;\x1f\xd2\xb5\xa4\xeaP\xdd\x13\xdf\xad\xda\xa0h\xa7F\xbai\x94\x11\xb90\'\xd6\xb3Ij\x1c\xed\x8c\xd1\xe6\xf3a\xf3\x8dr\xb7q\x17\x91\xad\xe1\xe7*\'\x1e\xe5,{2#\xdeig\x88+j\xb1m\xf5[N\x9f\xb6U\x9f\x8d(\x80s\xaem\xf2\xa9\xdeq\xb7\x9b#\xcd\x97t\xa9R\xdbv\xbbj\xe4Y\x9b\xd1r\x16\xc7$\xdf\xf5z\x9e\xee\x9a\xb4\x8a\xc9]\xf3\xf8.\x15$-o\xf6\xd3\x8bS\xd5\x83/\x17\x85P\xd6\xf7\rS,\xb7a\xc0\xc1\x95\xb3\xf46\x0fK\xc6h\xe7s\xb7\xdf\x8e\xdb#\xc5c\xd7\xc5\xac\x86Z\xbf\x15\xdc\xd0z\xea\xe9K\xdd\xf0\xe4\xe12\r\x95\xdb\xaeQf8F9-\xcf\xd9{\x1e\xff3\xb1.\xbb\xbe\xa7\x9b\xb6\x98t\xdd\x149w\x85-\xe6\xb0\xa1Y\x9f\xae\xc1\xcfZq\x9a\t\x9cRq\xe8\xf57w\xcd\x13\xf9\xa75UW\xbc\x9f\x07\xe4\xe2\xe0\x9f\x94\x89?\xec*\xea5\xdb\xd1m\x7fO7\x8b\xcb\xf7\x80wTo2\x9e\xf5\x93\x87\xd3nl\x93{\xa0\x9cX\xe7\xe2\x8f\x9b\xbbC\x9e\xf4h\xe7!\xe7\xe3\x8e\xca\xda\xdca\x99\x1f\xbf\xb4\xe5o\x0fU\xae\xf0\xbc\xd3\xa6K\xdd\xbbA\xe5\x88\x8a\xafl\xf1\xfb\xfais\xc7\xbd\xcfx\xdaM3M\xdb\xec\xa4\xeb\x19\x92\xfb\xc6C \xca\xfbm\xdb\xbe\xd8\xdd\x9d.\xc3\x8ez&\xea\x0e`\xbbC\xee\xab\xbaTa\xd6r\xe1\xb4-\xb1\x98\xe5\xd2\xe0\xb2\xbbv\x19\xa5\x9d\xb9N7\xa4n\xbd\x9b\n\x1dRi\x9c3m\xf6\x9f7\x87\xe6q\xb7i\x9e\x98\xec;\'\xcc\xe6\xe2\xb8\xf1\x10\x9cP\x7fn\xe7-S\n\xdc*\x9e\xde1]\xf1;\xc0\x07w\x1bv\xc1\x82<<_\xaa\x87\xbb\x06\xf1\x88\xe4\xd8\xb6\x85\x05\xb3\xe38\'&|\xc3\x1b\x9a\xe2\xe9\x07\xc4j\x84=\x1egM\x16\xa9`}\xb8\x7fh\xe7\xefxjp\xd4\x85Ck\x92\xe9T\xa6q\xc6\x13H.\xfe\x90\x91\xe9t\x04\xd3%\xe3\xbc\x84\xc13\x1c\xaap\x1a\xf2/WC\xf5\xec)\xa8~\x99T_Q\x13\xee\xb2^)\x9c}5\x9fe\xed\x1f\xdb\x8c\xaa\xd9\xb1\xfa\xddTb\xa7~oN\xba+\xcf\xe8\xe7\x85\x89\r\xcd\xda\xa6\xb1\xe5j()\xf68O\xa0\xe7.\xe0\xbe\xeb\x87\x8f\xc7\xd4\xdb\xad:"\x1a\xab\x1c\xb6k\xd2vl\x03\x86\x99\xa8\xd5\x8bq\x9e\xe8\xce\xfcSK\xe1q\xb7\xa80\xee\x17;f\xd3D<\xe3<\xdb\x9d\'9j\x1ak\xa6\x81\xc1j.\xa3\x92\xf1\f\x98\xad\xed\xe8\xda\x95\xbf\x96\xb0i,AK)\xb3%w\xbf\xafa\x8a\xe2w\xd3\x06\xfb\xa9\xb7i[|5\x1c\x99\xe2\xdcY\x0b\xad\xe5\xb1\xefRH\x10Ko\x84B\xf2x~\xb1d\x06\xc1\xd2\x8dk\x80y\xdc\xb2(\xbf\xa2\x92\x16\xc5\n\r]i\x9e\xdf\x01\xc6\xc9\xf3<\xae\xba\x94\xb4\xdfo\xbfo\x89b\x97\xb4\x80\xd0-\xd1\x8c\x0bO\x17\xe3\xa8G\x8fWa\xe17\x8e\xf1i\xce\x18o`c\xca\xd3\xb31\x03\xd3\xf3\\\x1b>^\xcd\xba\xb97\xe4\x81\x98\xd2_\x8d\xc6\x9c\xe9\xf3x\xb5_\x92R\x9c?\'\xfe\xd3cW\xef/\xab\x97\x9aA)V\x85I\xdfT\x02\xa2\x88K[\x17\xeb;\n1\xbdQ\x14\xdeY\xb6\x9bl\xd1\xf3N\xee\r\xcaL\xe7\xac\x9a\xc3Z=\xbe\x0b\xe8\xf1\xd8\x8e\xc410~3\x15\xe0\xb9z\xd4\x9eg\xfe\xdbN\x9d\x16(\xfaiP=\xfd\xcf\x8d\x9drMt\xd8dE\xdb\x02\xda\x8e\xf4\xf5th\x9fO9\xed\x1d/\xf2\xf7\x9dPZlZ\xf6\x99\xcf"\xd6_\xe5\x19\xac\xfdr\x11\x87\xdc\x9d4_5?W\xe4\x13\x8e\x045=\x98{\x7f4\xcc?\xb1\xb6\x0b\x1a\xd9\xebYy\xb6P\xe6q\xd5\xc8\xfa\t\x9b\xf6E\xc5\x06)\x19\xa1V\x07\xa9\'O\x92\xa3:\xdd|y\xd2G\r\x0f\xb0\x12\xbf\xa8XS\xcb@E\x95$%\xcc*\xb5\x93\x1f9#\xf4\x91fR\xb6b\xa8I\x83gg\xe5Y\xaa~\xe9\xb7D\x0f*\xfb:G\r\xb9+\xdaJ]\xfb\x0e\xb7\x1fb\xc0\xc3\xa7\x8bd\xcd]\xfd\xa3\xda\x7f&f\xee\x92\x9dn\x0e\x1a\xfb8^\xefP}D^\xf4@\x0b\xf2\x9a\x96s\xd3h\xa4\xc2\x06b\x9e\xdb8\xb0\x9a\x9ap+\xc62\xdcr.\x84r\x97a2\xf8\xae\xbbh;FlY\x9c)\xab\x96\xc5\xeb\xe9\x05W\xddiW-\x88\xa3\xf4D9\x06\xf3\x7fA\xb2\x9f\x17B0r\xb2\xe6W_\xea\x83f\x04\xb5\xe6\x89\x0e\xb8\xd4\x95T\xabcXOv\xae\xcaHJ\xce\xe5\x15-\x15a\xb2\xac\xe5JOit\xe2R\x0b\xbd\x88\xe8z\x05\xad\xb7\xea\x16\x1c\xf3\xe5\x90a.\xd3\xc1\x02\\\xc6#\xbdn\x1f\xc3\xb1\xe9\xe7%\x0eY\xffq7\xa34\x91]\n\xce\x92j\xc4\xaa\fYLHT\xf1R.\xc2e\xd5\xd8\xb0/\xdbfG\xab\xf1<\xcc\xa1\x1e\x9b\xdd\xd3\xf6\xdb.M\xb9\xcd\xba\xbdL\xf3vIc6\x9c\xc7fQ.*7"!U\x19OM\xf3\xf2#*=]\xd0\xec\xfe\xe6\xf0\xb4\xdd\xec\xee\xb7\x0fiI\xa6\x8d\xd7\xd7\x93nv\xad\x0b\xc8\xb8a\x9cl2\xa1\x93\xa2a\xa1\xd7\x11\xfdy\t\x18\x15b\xc2C\xd6\xe8Yo4*\x12\xc0o\x98<1c\x97\xfa\x03\xa3\xbf\xa6\x98\x82\xf9+\x9b|\xa8\xe4\fo\xc8\xd4\xa1\xea;-2\x18/\xd9\xa8\xeeu\x96g\x10\x0be\x1b\xd5\xa0T(\xe4\xe9\n\xdf\xdd\x0b\xdf\xfd\xcc\xf0\xbf\xab \xebG<K_V\xef\xd0j\x87\xc9\xb4Mk\xd2/\x8f\xb4\x14\x80\xf1\xcb\xcb\b\x87\xfak\xb5\xcf\x8b\t\xf3~\xb6\xb1\x1d\x0evc\xd9a\x9c`\x1d\xaa\xcf\xdb\xa3L4\x9e\xc9\xb0\xb8\x8fR\xadOm\xbe\xc0\x06(C<C\xd6i{\xc5\xc2\xe7\xc3\xf3\xdcq7m\x0f(\xfbc:\xe6\xe8\xba\x9a\x91\x8b\x01\x0eKa\x8ebDr\xb7\xa4\xe2\xa5O\xb0\xd4\xa4\x18F@\xad3IY\xbe\xc3\b\xe0NIM\xb9q\x87\x84\x04\x96\xcbJ\xb4\x14\xcb\xce\xa6i\xd6\x806\x17\xc9\x86\xa4\xb4\xed\xac[\x92]\xc4\xb1\xf8\xdb\x13\xad\xc7\x96\x12rN\xeft\xc7\x9b6%v\x99\x86\xda\xe8\xe3\x12T\xccO\xc63Z\xaf\n\xfa\xa6\xc9(9\xe8I\xd1dZ4\x9c\xb5\xbe\xefz\xb3\x90\x03\xd4\x80e\x99\x93\x01\xb5\xc2\xedz>U\xbe\xef\xf9R\xb6\xb4p\xeap\xef\xa1\x92\xda\xd4{\x94\xbb\xec7\x96\x81\xb9c*\xcdO\xa8P,\x8f,y9Q\x14\xe15E,\xcb+\xe7\xaa\x96\xaf\xe7\xa3\xb2\xd1\xb9\xfb\xd5\xa9{\xb9\xfb\xe5`WyL\x8e\xf533+\xaai\xf0l\x80\'G\xce\xc5\x15\xefN\x8a,\xcd\xfd\x92\x9d\x13\x9a\xe5\x9d\x0b\xd8\xe5\xe5\x8a\xe2T\xc3\x99\xdar\xcc\xa8d\xe3\xcc\x18z>\xa2An\xb5{\xa2\x81D\xbf<\xbd\xe45D4\xcc\x13g\x9az\x19\xdf5\x8c\x9cW=\xd7&\xabj\x9b\xea\xb8]\xa6\xec\xe7@KY\x95\rH]\xd7BL>\xa6E\xf81\xef\x15\xf0c\x7f\xb6\xbc\x98\xa57{\xbf\xa3\xb9\xc4\x8en\xba\x8c\xe2&\x9a.c\xaa\xd6m{\x9e\xe6:\xf4N@|\xc9\xbd\xcc.\xe4]1K?z^\xd2\xb2x\x9f\xa6\xb64yh\xe9\x92\xec3Iy\xf6\xb2[\xf9\x1c\xc6\x13\x1e\x7fj\x12\\\xd1I\x05\xbd\xdf\x8c\xad\xb4Z\x11\x07\xca84\r\xd2\xa7E\xae\xb9(\xcd\x02D\xb9<OsC\x12\xd7Msch\xf2\xb4\xb5\x1cM\xe8+\xdcZu2\xec\xd6mg\xf3\xe2\xf3+\x18x\x97\xd3,\xee\xc3U`\xf4\xfd\xf7lT\xcent\xe2\x94\xd2\x9bIq\x18\xf2\x07\xa4M\xb3\xc5\xb0\xe8\xde6r\xbelv)y\x1e\x8dr\x9e\xe2\x9bJ\xee8\xbb\tt\xec5\xdb%\x7f\xec59\xa01\xbb\x95.\xbf\x98O\xaa\xf9\x8e>\x9f\ff;\x98r\xfc\xfa\x0e1\xcfr8*\xf6?\xbf)Z\xfeY\xb6]\xe9|eZ&\xe5\xbcJ*i\x9c\xde\xe3\x85\xd3\xe3\xca\xfa\xd4\xb4\x92\xf23jY\xc3\xf1\x99\x96\xc5\xce=7\xde\xe5\xd2\xd0T\xce\xb5E\xa6CoU\xa6D\x9fTO\xa9\xcd\xdc\xb7\xfdt\x95g\xcaW\xfd\x98\xa7_\xb8\xc1@\xca\x91\xa1z\xf5rPHR\xa5\xb2\x9d\x9f\xcf\x995\xaai\x95G\x9c\xd3Y\xce_\xef\xb7w\x14\xd1m\x93z\xbd\xa4\x03\b\xf3qavV\xe6\x10\xf2\xe6\xecbj\xec\xa6g\xc9\xfez\xd7\x98\x1b\xf6H\x0b\x90a\xcf(\x9e\xa5\xaa\xa5l\xee*\x86\xe5\xf6\xf2\x11\xd5Y\xe6\xf4Tm0\xf4tR\xa0[\xbdR\xe8r<\xb5\x90=\xa5=BX\x07.\xab\x93\xcd<\x9b>+\xf3\xff\x1bY<\xe0\xdc\x11W\x0er(+5t\xb7\x8e\xd6\xcc\xc9\xa3%qI K\xa3$\x15\n%&a\n\xd7\xc9\xe6\x84Rj\xbd%\x1e\x95\xf9\xea\xd6b\x16\xb2\xd2\xe0n\xca33<\xacm[\xd3\xb8\xdb\xf9\xd5\xaa>^\x16T\xc2\xc9\x8a\xb4TXnW{\xd5K\xa7\xb1\xfe\xb0\x98q>\x95\x96\x92\xf4\xe6FT\x7fW\x7f\xee\x9a\xe2\xbe\xce\xbc\x93vK\xe9s"\xae\x05\xd8\xe9\r\xc5%\xa5\xe9(\x9b\n+~\xc0\x1b\xa8\xcfk\xb5\x91.\xaf\xad\xed\xeb\xc9\xac\xdfk4\x9b\xc5\xc9\xe1g\xac\xb9\xee\n\x96\xd04\xb9\xa3\xa1\xf1\xe52e\xfe=\x01M\nQ*^(\x0eq\xc4c\xe8\x85Y\x1e\xfd\xf9\xa9`\xde\xff\xb0\xb7\x13\x93\xdd\xa6\xbe.\x87\x9e,|\xc6\xc7i\xae\xceP\xd2\xf0bQ\xec&\x7fk\xe8\b\x99\x1c\x97\xfcm\x7f\xaf\xceY\xa6\x83\x97\x17\xd5a\xff\xeb\xe6i#W\xef7\xdb6\x0bmgIg\xaf.\xde\xffk\xf0f\xd0>{2\xcc\xbfS\xbf\xae\x80d(\rPZ*\xd0;\xfd;\xf5\xde\n\xd0\xd6\x13\xf8R\xff\xc6\x97\xea\xa1\x93B9\xe8\x14\x96z)\x05\x98\x8eW\xe1d[\x85\xa4\xed\x06\nHD\'\xc0\x07\xf5\xfb\xaau\xc0\x98/\xc8(\x1a\xd1\xb5\x14\xfcz\xf0z\xc6\xbf\xa9\x9a\x02\xe8j\n*\xd5\x14\x8c\xaa)\x80\xad\xa6\xe0\xb9\x9a\x82\x10g*\xa4\xe7~\xb9\xbeig>\xf2\xef\xb5\xc2?\r\xfa\xb3\xcftA\xca+D\xf4\x14\xb0Q&k\xd0\xadM\xe8\xd6&pk\x83nm\nnm\x9c[\xf3\xba\xb2BR}\xf9\xfa{\xb7\xa8K\xbf\x9f\xd5\xef\x93\xfeM\xba\x0b Zf,\x15Q\xad\x87\0\xa86\xa1\xd0\x8e2\x8a\x8d)\xe1\xef\x1c\0\xcd\x8a\xd0\xb0m%\xd9\xa5\x03B\xbd\xc2\xa6F"\xef\x18\x12\x80w\b\x8d]DB\xf4\x13\xc1\xd0\x06\t\x85\x86\x98\xd0\x0f\b\xe8&I\b\xb6\xcb\f\x87\x8d3\tU\x0b%\0\x9a)\xa1Q[%\x91o\xb0$\x80VKh\xdctI\x88\xed\x97`l\xc4\x04\xdb\x96\x9c@\xd5\x9c\x13\xb0\xc6\x12\xbaa\x13\x82\xad\x9b\xe0\xa0\x89\'I\x83\xceh\xc2\xe8j\xca\xd1\xd5\x94\xa2\xab\t\xa3\xab9\x17]M\x1c]\x8e\n\b\xb6|\x90\xc0\xef\xd8\xae\x9f\x1189\x008\x82PO\x14\xa9\xed*\xa2 \0LF(\x10EF\x91(\x12\xfe\xce\x01@\x14\x84\x86D\x91d\x97\x0e\b\xf5\n\x89\x82D\xde\x95$\0W\x12\x1a\xbb\x92\x84\xe8J\x82\x81(\b\x05\xa2H\xe8\x07\x044Q\x10\x82D\x91\xe1\x90(\x92P\x11\x05\x01@\x14\x84FDA"O\x14$\0\xa2 4&\n\x12"Q\x10\x8cDA\xb0%\x8a\x04*\xa2H\xc0\x1aKh\xa2 \x04\x89\x82\xe0\x80(\x92\xa4Ag4at5\xe5\xe8jJ\xd1\xd5\x84\xd1\xd5\x9c\x8b\xae&\x8e.G\x14\x04[\xa2H\xe0wl\xd7\xcf\b\x9c\x1c\0DA\xa8\'\ne\x04\xc5\x16\x1a\x05\xe3i\x11\xf0\x86\x11!y(\xe1\xbb\x18\x05\x1a\xd1\xa2\x90KT\x81\xcb\x18-\xab\x1eR\x8b\x96\xfb\b\xd0R\b\x03-\x8acA\x97\xc0\x80\xd02\xe0\x1c-\x02\xe2Q\xa2\x0f!\xaa)H\xc3\xc8CF\x16\x92\x91*\xa1\x18I\xa3@KZ\x14q\x93\x96{\x82\xd2R`)-\x8a\xa9J\x97@\xbe\xd22$--\xb3\xcc\xa5$\x8a\xbe\x14\xba\x0e\xcbj"\xd30\xb2\x99\x96\x05\x94\xa6\xc4M\xe8\xe6\xa6\x1c\xe4\xcdO\x82\xbc9\x1b\xe4M9\xc8\x9b\x9f\x06ys&\xc8\x1d\xf5i\x99\xe5?%\xf9\x1er\xd6s\x88\x9eb\x148Q\x8b<12\xa2hQ00\xba\b\x80\x12\x95\0\t\x91E\xef"\f\xc8P\x04!\x15\xb2\xf82\xc2J\xca\x86$(R\x1f\x1d"\x83\xd8\x10A\x1c\x19"\xc7\xb8\x10\tP\x9f\b\x80\xf8X\xf0!\xc04\xe9\t\x88\x94\xa7$!\xe1\xb1\\\xd1\x9d`@v"\x88\xa8N\xa4\x9e\xe8D\x064\'\x82\x98\xe4D\x8e\x14\'\x12$8\x91Xzc\\\x91\x1bc\xeb\xa0\x9c&6\x01\x91\xd6D\x12\x90\x1aCM\xe0\xc2\xa6\x14\xae\xcd\xd9pm\xce\x84kS\n\xd7\xe6\'\xe1\xda\x14\xc3\xd5\x91\x98H,\x851\xfe=\xe0\x96\xe7\0;E\x18P\x97\b<q\xa5\xba*\xd6"\0\xccJ(\xf0UF\x91\xac\x12\xfe\xce\x01@S\x84\x86\x1c\x95d\x97\x0e\b\xf5\n\xa9\x89D\xde\xd1$\0/\x13\x1a\xbb\x98\x84\xe8_\x82\x81\x8b\b\x05"J\xe8\x07\x044\x05\x11\x82\xfc\x93\xe1\x90|\x92P1\x0f\x01@;\x84F\x9cC"O8$\0\xb6!4\xa6\x1a\x12"\xcf\x10\x8c$C\xb0e\x98\x04*zI\xc0\x1aKhb!\x04Y\x85\xe0\x80R\x92\xa4Ag4at5\xe5\xe8jJ\xd1\xd5\x84\xd1\xd5\x9c\x8b\xae&\x8e.G\x1d\x04[\xdeH\xe0wl\xd7\xcf\b\x9c\x1c\0\\A\xa8\'\n\xd2N1EF\xc0h\x19\x06\xae`\x18\xc9\x82\x04\xef<\x02t\x91\xe1\x90/Hx\xe9\x91X\xbd\x902\xb2\xcc{5K\xc0\xad\x19\x8e\xfd\x9a\xa5\xe8\xd8\x8c\x03od\x18\x88\x83\xe0\x0f\x0e\xd1\xd4\x91!\xe4\x0e\xc6C\xf2 \xa9b\x8f\x8c\0}d8\xe2\x8f,\xf3\x04\x92%\xc0 \x19\x8e)$K\x91C2\x8e$\x92q\xcb"\x84*\x1a!d\xed\xcah"\xc9\x102I\xc6\x03*!Q\xe3\xdc\xd3\xc4\x81\xd7\x9c\t\xbc\xa6\x18xM\x1cx\xcd\xd9\xc0k\n\x81\xe7(%\xe3\x96S\b\xfd\xee8\xe0\xd9!\'\x8f\0\xafd\xd8\x13\x0b)\xa3\x88%#`\xc0\f\x03\xb10\x8c\xc4B\x82w\x1e\x01b\xc9pH,$\xbc\xf4H\xac^H,Y\xe6\xfd\x9b%\xe0\xdf\f\xc7\xfe\xcdR\xf4o\xc6\x81X2\f\xc4B\xf0\x07\x87hb\xc9\x10\x12\x0b\xe3!\xb1\x90T\x11KF\x80X2\x1c\x11K\x96yb\xc9\x12 \x96\f\xc7\xc4\x92\xa5H,\x19Gb\xc9\xb8%\x16B\x15\xb1\x10\xb2ve4\xb1d\b\x89%\xe3\x01\xb1\x90\xa8q\xeei\xe2\xc0k\xce\x04^S\f\xbc&\x0e\xbc\xe6l\xe05\x85\xc0s\xc4\x92qK,\x84~w\x1c\xf0\xec\x90\x93G\x80X2\xec\x89\xa5\x7f\xa9\xa2\x95t\r\xc6K P\n\x81H(=\xfc\x0e\xaf\x81L\x12\x18RI/\xba\xc4\xebH\xa1\x90D\x92\xc4{2\xe1\xe0\xc7\x04\xc6^L2\xf4aB\x81:\x12\b\xc4\xd1\x83\x1f\xe0Z\x93F\x02\x902\b\r\t\xa3\x97)\xbaH\xd7@\x16\t\x8c\xa8"I<Q$\x1ch"\x811I$\x19RDB\x91 \x12j\xe9\xa1\xbfR\xe4\xd0_\xafA\xae\x89!\x01H\x0b\t\rH\xa1\x174`\xfa&\n\xa1\xa6\x18BM!\x84\x9a(\x84\x9a3!\xd4\x84!\xe4H \xa1\x96\x02\xfa\xab\xef\xd0V\x9f\xe1\xfa\x84\xd7\xd0\xf4\x13\xe8\x1b~\nW\xd5\xf2\t\x003\x11\nm?\xa3\xd8\xf8\x13\xfe\xce\x01\xd0\xfc\t\r\xdb\x7f\x92]: \xd4+\xa4\0\x12y\x07\x92\0<Hh\xecB\x12\xa2\x0f\t\x06\x1e \x14\x88 ]~@@S\x01!\xc8\x05\x19\x0e\xc9 \t\x15\x1b\x10\0t@h\xc4\x07$\xf2\x84@\x02`\x04BcJ !r\x02\xc1H\n\x04[VH\xa0\xa2\x85\x04\xac\xb1\x84&\x06B\x90\x19\b\x0e\xa8!I\x1atF\x13FWS\x8e\xae\xa6\x14]M\x18]\xcd\xb9\xe8j\xe2\xe8r\x14A\xb0\xe5\x88\x04~\xc7v\xfd\x8c\xc0\xc9\x01\xc0\x13\x84:\xa2\xf8k\x17c#\xfe\xcd\xa6\xce\x80\xb6\x91\xa0\xda\xf4\x19#\xcb\b`\x8d"x\xb6\x87 \xd9\x14\x82$+\xf0u\xfa\x03\x12\xaf\xc7\xf9\x9a\xfe\xe8C\x06~\xc9\x05&\xf9:\x17\xc8@\xaa\x17\x94J \x16M\xcd\x14\x8a&\xd0\x15%\x82\xc4\xc2\x04C\xf1_\x07o\xd8\xec\xbf\xe6\x9dH\n \x16\x15@\xdb^P\xe7\xc2_\xf3\x8c\x95\x02\xb2\x8d\x05\xc96\x16$\xd9X\xae\x89\xd8\x18\x90\xb6\xfak\xd7L\x19o[\xe8\x8a\x7fS-\x04\x10\xf5\x18#\xf3\xf0\xc3\xb2]2\x90\x8c\xab\x8cC\0X\x88P0\x13\xa1\x91\xadH\xe4\rF\x02\xb0\x1a\xa1h:\x82\xd1~\x04[#\x12\b\x96L\xe8\rVx\x8d%\x94a\t\0\xeb\x12\xeaMlb\xd6\xbe\xc5\x19\xbb?\x14\xa9\x8d\x9d\x004vB\xd1\xd8\t\r\x8d\x9dD\x81\xb1\x93\0\x8d\x9dPg\xec\x04;c\'\x18\x8c\x9d@4v\x8f\xde`\x85\xd7XB\x1b;\x01h\xec\x84\x06\xc6\xee\x05h\xec\x1e\x04c\xbf\xed\xec\xbc\xe4\xdf\xf4\x02\x01\xc8\xba\x02h\xc3\n**\bF\xe6\x14 [R\x90lDA\x92\xfd\xe4\x9aL\xc7\xc0\x86;\xe3\xb7\xf9\x93m\n m\x05\b\xb2\x8e\xb7\xea\xb3\x1d\n\xb3\xb9\xc6[>\x02\xae\x10H"\xde\xd2\x07\xb3\xd45i\xcb\0y`\xc4\x80\xf4\xcbo\xf3\xc7\xfe\x14`s\xdc\xb7\xe6kn\nu=\xff[}\xe4U\x816\x13x\xcb\'(\x15\x02]\xfc\xdbA\xad\x7f\xa3\x86u\xa8P\x1d(T\xe3\xbb\xeb0\x01y\xcb_\xa1P\x88Mj\xdf\xe6\x83u\x02\xe4\x18\x16\xbb\x1e\xda\xb63\xcb\xbf3O0@vU\x80Nh\t\xfe{\xd7\x12\xa8\xb7\xfe;\xb7\x04\x01(\xb6\x04\xd0\xb6\x10Tl!\x18\xd9B\x80\\gA\xb2\x1f\x04I\xb1%\xd7d\x04\x066\xfa7j\xbbAm7\xa1\xb6\x9b@\xdb\rj\xbbq\xdan\x9c\xb6\x1b\xd0v\x83\xda\xda\xfc\xe3\xef\x98x\xfc\xbd\xcb\x88\xb9p\x83\xd5iB\xed\x9b@\xfb\x06\xb5\x87\xc4WpW\xab\xc6\xd5\xaa1\xb5\xba\xe8\xc6\x843\xfem\xc9\xe7\xc2\x8e\x04\x05u\\s\xc1\xe3?\x01\xc2!\xcd\x85\x8c\xfa\x04\xa1\xb6!\x80\xa5\x9c\x8b\x81\xf43\x17\xcc0\x02\xe4\x96 \x80\xef\'/4\xc3(L\x18F@\xdbe^\b\xc3\b\x02\x1d\xe5E\xc70\xf2\x1b5\xacC\x85\xea@\xa1\x1a\xdf\r\f#\xb8\xd3)3\x8c\0\xb6\x87\xbeP\xe3\xb3\x0b\x1c\x9a]\x84\xa3\xb2\x8b`@v\x81c\xb1\x8b\xc20\xec\xc2\x8d\xc0.\xdc\xe0\xeb\x02\xc6]\x17\xdd\x80\x8a\xbd~\xc2h<\xf9\xb8\xd3\xa4wY\x80\xe11F\x16\xc5\xb7)\xf0\x93WB\xd4\x1bY\xdc\0L\x11l\x0bF\b\xcd\xc2\xc8\xa0\x85h\x99r\xb9\x81!*\x8d\f\x9a\x90\x95\x05\xc1k\n\xf88\xb6b\xdf\xc6\x8c\x1cB\xde\xc80\xca\x8d\x10\x1b\xa1\x16\xd6\x05\xf8\x8c\x11\xea\x9fU\xb4>_\xd1\xfaLE\n\xcd\xd8\x149WWl\xdcF\x06\xed\\\xcbT\x9370\xb4~#\x8b\x88\xc0\x14\xf0\x9c`\xc4@\x0fF\x163\x85)\x82\xa4a\x84\xc8\x1fFh\xa9D\x8bNqK9\x9da\x06\xcf5\x7f\xf4\x93\x8b#\xbe\xc8\xf3\x8a\n1S\x8a\x8c\xdf\xe8\x8b5\x8fR\xfe\xe8\xe7\xdc\xa6|\x91\xe7\x80\x04Q\xd3=\f\xda?\xaf\x80\x82\x8c\xce3zb\x83\xfc\xc1\xd5\x15\xc0y\xf2\x0f9=8\xb2\b\xd66<=h\x857\x0eQ\x95\x97\xd3vS\x8b\xa0\x19\xfci;+)\x19DI\xd1*|f\xcd\xd6\x1a\xed\xe3\xce\xaceA\xb2\x856\x12!h\xa4\f\x87F\xe2\xe9\t@\x94\x91x~\x82ke\'(\x10\x0e\x8c\x94$%#))\x1a)\x89NXk4\x12\xa1\x81\x91T\xa5\x8d\xa94\xee\ff\x84\xb1\xd9\x14zS\xc0\xb5\t\x15l\f\xa9qgN-\x8c\x8c\xaa\xe4E\xd3b\x19g`KP\x91\xdd\x9c\xb1c\x82\xca\xe2\xd4Ihc\x13\x82f\xceph\xe0$\xbcq\x882j\x02\xb49\tAC\x12\x1c\x980IJ\xc6SR4[\x12\x9d\xb0\xd6h*B\x9d\x91.\xd5\x88\xf8\x12G\xc4\x978"\xbe\fG\xc4\x97\xc1\x88\xf8\x12G\xc4\x97nD|\xe9F\xc4\x970"\xbe\xc4\x11\xf1e\xe7\xcd)\xff\xb6i\xda%x\x90\xe1\x1b\xee\xb3.;\xafq\xcd\xff\xd5\xfdu>\xfa\xfd\x89\xbdy\xc9n\x13@\xaa\xc7\x18\rv\xf9%y\xb0\x9b\x81\xf4\fe\\\x02\xc0\xc2\x84\x82\x99\t\x8dlM"op\x12\x80\xd5\tE\xd3\x13\x8c\xf6\'\xd8:\x81@\xf0\x04\xf7\x8c\xb6\xc2\xe8\x93\xa8_\xb42\xe5\x1d\xee\x15\'\x06P~\xe2nra\x01\xf0\x98\xeb$\xad\0|g\x17`2\xaa\x8c\xaf\xbc\xa8Qp\xa5\x16\x81?\xb5(r\xaa\x96{\xcfj)\xb8W\x8b\xd0\xc7Z\x86\x8e\xd62\xebm-\x01\x97\xdb3\x8a\x81\x9d\xd0\xf9\xc5\x13\x8aA\x01\x15\x06\xf6\x88\xde\xc4\xa3* \xec\xc1\xbdE\x80Bh\xc4\xc7\xf6\x02)\x04\x89\x92`\xa4\xf0cT\x9c\b\x06Q"\x02\x88\x11\x11D\x11"R\x1f\x1f"\x83\xe8\x10\x01\xc6\x86H02Db\xe3Bp\x88\n}\x84\xcbY\x04#\xa2p\x80\xcb\x89U4\xe83M\x13\xc4T$\xe8sN\x0b\x87A\x14D\xa7\x9c\x9c\f"\x80q\xf4\x7f\xb2\xbar>\x01\xe0yB\xc1\xed\x84F>\'\x91w8\t\xc0\xdb\x84\xa2\xab\tF?\x13l\x9dL x\x98\x8f\xc7\xd8\n\xa3o\xa3\xc31V\xa6\xbc\xcaGI&\x06P\xfe\xe4\xb3%\x0b\x0b\x80\'\xdd\xc9\x12+\0\x1f&\x10\x1dh\x86\xe1\xca\x8f\x16\x07wZ!x\xd5\n#\xe7\xda\x12\xde\xc7V\x0e\xae\xb6B\xf4\xb8\x95\xa2\xe3\xad\xd4\xfa\xdf\xca \f\x8c\xf0\xaa`=\f\n\x10F\xb1a\x8a\xa8\x101\xb8\x8a\x14\x83\xab\x801\xb8\x8a\x1b\x8bC\xf8X\xa1\x8f"#\x87`22\x8c)r\x8a\x8a\xa6\x8c@\x1ce\x18"(\xc3Q\xecd\x99\x8f\x9a,\x81x\xc90FJ\xc61F2n\xa3#\xa3\x10\x17r\x06\x06\xea\x8e\xb1\x10\x9e\x80\x01\xa1\xf2\xbf\x1c\x13\x99XD\xf9\\\x0e\x8e,\0\x01?\xfbc# \x01\xdf\x12\x8a^M\xc3(\xe5T\x02\xc0\xa7\x84\x82K\t\x8d<J"\xefP\x12\x80?\tEw\x12\x8c\xde$\xd8:\x93@\xf0%\x0f\x99m\x85\xd1\x93\xd1\x80\xd9\xca\x94\x1fy\xb8<1\x80\xf2"\x8f\x9f\x17\x16\0\x1f\xba\xd1\xb3\x15\x80\x07\x13\x88\x0eL\xf5U\x0e$\0\x1cH(8\x90\xd0\xc8\x81$\xf2\x0e$\x018\x90Pt \xc1\xe8@\x82\xad\x03\t\x04\x07\xf2\xb6O[at`\xb4\xe9\xd3\xca\x94\x03y\x8b\xe4\xc4\0\xca\x81\xbcgra\x01p\xa0\xdb1i\x05\xe0\xc0\x04\x82\x03\xdfw\xbe\xcb\xdbS\xdf\xb3\xdf\x14B>S\x88\xd9<(\xb0\x9a\x85\x110o\x1f\x14\x84\xf7\t\n\xc4\x1b\x05\x05\xa2\x9d\x82\x02\x90_\x04\xd9\xa8:l\xec\xba\xcb{^\xcb\x17 X}y\xaf\xd7\xf2\x05\xb3\xeb,\xefe-_\x10X\x1az\x9f\xd7\xf2\xe5\xda.\x9a\xbc\xe7]-\xcb\f\xc8\xba\xc0{^;\x13\x80\xc2K\x01~!\xf1\xbd^\x1aS\x98\xac\x87\th\xd7\x11\xdf\xcb\xca\x97 \xb0S\xe7}\xb7\xc6%\xbfQ\xc3:T\xa8\x0e\x14\xaa\xf1\xddu\xb8p\xf9^V\xa8\x04\xb1K\x94\xefy-\x8a\x01\xde\xd5Bv\xfd\xa0\xf6\xbd~\xc0}\xaf\x1f\xc2}\xaf\x1f\x82}\xaf\x1fp\xdf\xeb\x87\xc2\xbe\xd7\x0fn\xdf\xeb\x07\xb7\xef\xf5\x03\xec{\xfd\xd8\xad$\x8f\xf9\xb7e\xca\x8fv\xcdXP\xc7\x84\x1fyuX\x80p\xdf\xc6GY\x07\x16\x84,+\x80\xe5\xbd\x8f\x1d\xe5M\xf8\xb7\xddd\xf5\x11\x88\x8e\xe1k\x0e\xf8\x8fl{\x01\x82\x16\xf8Q\xdb^0\xdb\x02?\xa2\xed\x05\x87\x96\xf9Ql/\x88i\x99\x1f\x15\x0f\x7fT\x14\xfc\xb1#[\xc6?\xd9h\xff\xa8)6c\xa9\x88\xf2$\x01\xe0NB#\x9f\x92\xc8;\x96\x04\xe0]Bc\x17\x93\x10\xfdL08\x9bP\xf08O@N,\0\xbe\x8f& \xadLE\x01\x01\x10\n\x84F\xf1@"\x1f\x14$\x80\xc8 4\x0e\x0f\x12b\x8c\x10\x8c\x81B\xb0\x8d\x16\x9cQ\xfd\x883\xaa\x1fy\x02\xd5\x96\xc0\br\x13\xa8Y\x90\xac\xab\xc2\x88\0\b#B\xa30"\x91\x0f#\x12@\x18\x11\x1a\x87\x11\t1\x8c\b\x860"\x14\xc2\x88\x17/\'\x16\x800\x8a\x96.\xadL\x85\x11\x01\x10F\x84FaD"\x1fF$\x800"4\x0e#\x12b\x18\x11\x8caD\xb0\r#^\x8a\xb5^_c\x95?a\t\f#\xb7\x0e\xcb\x02\xbbOi\x1c\xc1\x18R\xa5}Ja\x81 \xbc\x82}J\xa1\xac\x10j\xd1>\xa5P\x88a\x17\xecS\x8ad:\x04\x835\xe1X\x16\x86\xa3\x02uPj\x18CS\xcb\xc2\0\xd5\x05\x820\xd5b\fV-+\x84\xac.\xe2\x02W\x0b]\xf8j!\x04\xb1]\x18\x8f"o\x1d\x1b\xedS\\\xda\x05w\xbc*N\xe2?\xe1\xb4\xd0\x9fxZ\xe8O\xb3\x16eA,j\x0eVX\xd0\x15\xb5\x87\x81\x10v\xc5U%\xf0\x16%\x82\xdb\xae\xf4(\xec\xca\x8d\xc2\xae\xdc(\xec*\x1e\x85]E\xa3\xb0+7\n\xbb\xf2\xa3\xb0+?\n\xbb\xc2Q\xd8\x95\x1b\x85]ud3\xe5\xdf\xb6\x15\\YZ\x11\xd4\xc5\xfb\x15\x13\x88\0ad_\tU\bb\xf7\xae]1)0\xb0\xd1\no\x9cm\xf3Xq\xce@l\xdaMd\xda\x8d3-\x0f\x17\xe5y\xde\xb2\x1b\xb4l\x1e0\xf2Mw\xf5N1\xe2\x15\x0f \x190/\xad\\\xad*8\x97ze\xc7\x90\n\x8e\xaa\xa5G\x91\n\xa5\xca\xb2\x92\x95\xabk\xe5\xeb\xfa\xe5\xf4\xedK\xb5\x97\xdd\x17W\xdd\xc8R\xc4\xb5S\xbd\x8e\x15\xad#Ekg\x7f\x18^*\x81S6\x8f/U\x19t\x03\x0f0\xb9\xc8\xc1\\8\xe5\x0f\xce\xee\x87\xf0(\xf0\xd5\xe0X=n\xd1\xcb\x8d.\xd0\xb8\x877\xb1e\x9a\xc82\x8d\xb3LS\xb2L\xe3,\xd3x76\x18\xb2\xcf\xfa\xe2d.\x9c\xe2j\xa3L~\x07\x1f\x0f\xe4R\xf6| \xc2\xc8\x80\xc1\tA\x94\x05f\xb1g\x04\x11v\xac\b\xa7\x04\x11\x07\x93\xd8s\x82\0+\xa6\xb49>\xa0\x11g\xba\x1c\x1f\x04\xc0\x9ea\x8e\x0fB\xe4Q\x9b\xe3\x03\n\x8c\x9a\xd0\x8d\xab\xe2&v\x1d\x12,\xa1g<\xb7)zn\x13{\xce\x91.\xc1\x05\xc7mB\xc7!\x07\xe7,\xc14Q\x93:\xc0\x03\xbc^Ul\x11G\xce\x19.\x9b\xa4*\x9a$\xe4j\x12\x01a\x13\x1a\x1b\xab*\x18\xcb\xf1w\x82kW\xb0\x8e+[\x9f\xa9U]\xacU\x1d;\xba\xc4\xee$\x8dk\xe6x\x9e\xe0\xd0\xdf\x8e\xf1\x13|\xf0H\\\xddC\xec\xdbB/\x90\x84AW\x90\x04\x8d+\xda\xc4om\xce\x18\xb9)\x1a\xb9\x89\x8d\xdc\x9c5r\x13\x1b\xb9)\x84O\x13\xb6\xb5g\x87\x9c<\x12W5\xeaK\x94mM\x8f\xa2q\xf74-t\xbd\x8b\x16\xc6\xb6\xd5%"\x0bk\xb9\xb3\xb3\x16\xfa^GK\xbdY\xb5\x14\x8d\xabe\xae\x1f\xb2\x93\x04\xd3\b\xc6>\xa94I\x10\x16\b\xfa\xa7`\x92 \x94\x15\xfa\xaah\x92 \x14b\xbf\x15L\x12D\xb2M\xc1<\x9bs\xc1\xe2\xfa3-\xfbi\xacl~\x12+\x9bs\xb1\xe2\xfb9-<\x1b*\x9b3\xa1\xe2z>3\x8a\xb5\xbc\xe4\x07\xb8\xe1#K5\xa8\xceY\xd6\xf7\x8bF\xf83\xd3V?1m\xdcS\xea\x02\xd8_j\xd99\xd3WgM\xef{P%\xac\x0b7\xd5\xe7\fU\xff\xd4\x16\xf5OlQ\x9f\x0b\xb3b/\xab\xcb\x9c\xb3\x87\xefq\xb5\xf0L\xb4\xf9\xdeW\t\x0f%\xfc\x9c\xa9\x0e\xe7b\xaa\xd4++4\xea\x9b\x95\xb8)\xdc\xd6\x9c\xd3\xa9\xf9\xa9\xfb\x9a\x9f\xb8\xaf9\xe7\xbe\xe6\xff\xc3}\xcd9\xf75g\xc3\xb99\xc3$\xcf\x05\xfcT\xc2\xcf\x99\xc9\xf7\xf4\xd7\xea\x13\'\xd7\xf8u\x93k\xfc\xb0\xc9\xf5 \xfa\xa6\xc9u\xf09\x93k\xfc\x92\xc9\xb5\xfb\x88\xc9\xb5\xfb~\xc95|\xba\xe4\x1a\xbfZr\r[0\xaeq\xf7\xc55\x9fj\0\0*fO5\0\x1aU\xd1\x9dj\0\x01T\x16N5\0\x8c\xd56\xa7\x1a\0\x04\x03D\xe7\x03\xae\xc3\xf3\x01\xd7\xf6|@\x84\x82Q\x82\xf3\x01\x91(2O|> \x92\x82\xa1\xa2\xf3\x01\x91\fM\xe6\xcf\x07D\x120^q\xf3\xfcuy\xf3\xfc\xb5\xde<\xef10\xa1\xdb<\xef\x05\x91\xf9\xa2\xcd\xf3^\x06\xa6\xf3\x9b\xe7\xbd\x04\xcd\x86\x9b\xe7=\x0e&+\xec5\xbf.\xed5\xbf\xe6\xbd\xe6\0\x80\xa1\xec^s@#\x13\xb9\xbd\xe6 \0\xe3\xc0^s\x80\xd1,f\xaf9\x80`\x90h\xd7\xf6u\xb8k\xfb\x1awm\xc78\x18&\xdc\xb5\x1d\x0b#3\x95vm\xc7r0Z\xbck;\x96\xa2\t\xa3]\xdb\xb1\f\fzf\x03\xf3\xf5\xb9\r\xcc\xd7\xb2\x81\x19\x110)l`F82\xa3\xdf\xc0\x8c\x120\x1dn`F\x1c\xcde70#\n&\nw\0_\xc7;\x80\xf3\n\xe4\x1b\x8f\x80Y2\ff\xc9pd\x96,\xf3f\xc9\x120K\x86\xd1,\x19G\xb3d\xdc\x9a%\xa3`\x16\x82\xc1,\x84\xa2Y\xfa\'\xbe\xc1k0I\x02\xc1 \t\x8c\xcc\x91$\xde\x18\t\x07S$\x10\r\x91P4CB\xad\x11\x12\x06&\xe8A0@\x8fA\xf5o\xd4\x17\xd6n\xf0\x0bk7\xf8\x85\xb5\x9bA\xf4\x85\xb5\x9b\xe0\x0bk7\xf8\x85\xb5\x1b\xf7\x85\xb5\x1b\xf7\x85\xb5\x1b\xf8\xc2\xda\r~a\xed\xa6\xfbv.k\xfe\xce\xfa\xe3\x06\xbe\x98\xcb\xf0\xa5\xfem\x1d{\x13\xce\xb5\xdc\x04\x13,78\xabrS\x98J\xb9q\xf3\'78ir\x833%7\x03\xf9\x12\xde\rO\x89\b@\x15\x15@+-\xa8\xdb\x9e|\xc3s\x1c\x02d\xe5\x04\xc9^\x10$yA\xaeI[\x06h\x946\x95k\x9a\x9e\x98\x11\xa0]VaP\xe5\xb9\x07\x05DAU\x05A\xa5\xe7\x15\x04\xc4H\xab\\\xa4U.\xd2\xf2L\x01\x03\xb5\xfe\x8d*\xd7\xa1\x86u\xa0a\x8d\xca\xc0\b_p\xa7d\x1e\xca\x0b\x80\xd1/c\xf6lh5ffo4\xcaS\r\xc6R\x13\x86N\x13\x84N\x83\xa1\x03\x83]\xc1]H5.\xa4\x1a\x13R\xeb\x8euf\xfc\xdbnOY3\xeb\b\x10\xec\x81^k\xd6\x11\xcc\xee\x81^\x0b\xeb\b\x02\xfb\xaf\xd7\x99u\xe4\xdan~^\xab\x8d^k\xdc\xdd\xb5\x0e\xb7t\xad\x83}\\k\xdc\xbc\xb5.\xec\xd8Z\xbbmZk\xdc\x9b\xb5\xc6\rYk\xb5K\x7f\x8d\xbb\xf4\xd7\xb8K\x7f\x1d\xee\xd2_\x07\xbb\xf4\xd7\xb8K\x7f\xedv\xe9\xaf\xdd.\xfd5\xec\xd2_\xe3.\xfduf\x8ce\xbe\xaexC\xd3\x1a?=\xb9\xc6OO\xae\xc3OO\xae\x83OO\xae\xa3OO\xae\xf1\xd3\x93k\xf7\xe9\xc9\xb5\xfb\xf4\xe4\x9a\t\x83\xabP+a\x8d*\xd7\xa1\x86u\xa0a\x8d\xca\xc4\xdf\xa2\\\xbboQ\xae\xf1[\x94k\xfc\x16\xe5\x9a\t\x83\xed\xdc(a\x83J7\xa1\xd2M\xa0t\x83J7\x05\xa5\x1b\xa7t\xe3,k\xbf\xf7\xb4\xeef\xb08\xaaO\xd8\xdaN\xae]}\xea\x17\xa2F|\x91\xe7\xb9\x04\xc9KN\x82\x98YA\x81\xd5T\xa0\x80y\xfeO\x10^F\x12\x88\xa7\xf1\x04\xa2\xb9;\x01\xf2*\x11#-\xad,g\xf9w\xeer\x180]\x0e\xa3\xaa\xcba,w9\f@\x97\xc38w9\x8c\xe4.\x87\x81\xdc\xe5d`#\x93\xe9\x9fd\xb1F\x10\x9b\x9a|\x82e\x19)\xe7\xbf\x1c\xf3I\x16`\x04\x81\xae\xe4\x93Zj\x91BdY\x01\xb2e\x19\xa1.q.\xd7)A\xe1\x02\xa6t\xe5\xaa\xc5\xcb#\n\t\xebUE\xf52\xab\x1f\x82\xba\xdaV\xae\xb6\x95\xaf-.i|\x1alU\xe8om\xfbh\x018\x82\xf7\xa9_\xf6\xe0{kW\xd5:\xaeX\x1dU\xacvU\xc0\xf5\x0b\x11p#\x11(/U\b\xe2\x1c\xc7\x19\x0e#*\xc3aw6\xba\x155\xae\xc17q\xf3n\xa2\xe6\xdd\xb8\xe6\x8ds\xfa"\xf0\xed\xbe\xf1\xed\xbe\x81v\xcf\x13\xcf\x88\xa0\xdav\xea\x19\xe1\xb0Jn\xf2\x19%X9\x98~F\xdc\xd5\xc6L@#\x8a|\xc6\x07u2y\xd8\x83:\x80F\xf4\xe6\x0e\xea\x80\0\x88.<\xa8\x03B\xa4<{P\x07P \xbf\x84j\xde \x04\x1b\x11\xc1\xc0\x85\x84\x86\xed\x8bdA##\t\xb64\x82\x911\bv\xb4A80%\xa1v8\xf7)/\x1d\x986f\xd6\x13\xe0\x01^\xaf*\xb6\x88\xa3\xd1\f\x97MR\x15M\x12\xb2*\x89bkU\xb1\xb5\xaa\x82\xb5\x1c\xd3&X\xd1-\x01\xc0\xb9\x84"\xf1&\xb8v\xcf\xabc[\xd5g\x8cR\x17\x8dR\xc75/\xd12Ic\xbb8~&\x18I\xda\xae*\x01\x1c\xd0u\x124\x8e)\x9a\x98\x01\x9b3T\xd7\x14\xa9\xae\x89\xa9\xaeD\xe6$-\x10aS B\xe4v\xbd\x04\x14\x80X?\xb7\b\x14H\xc2\xcaG\xcb@\x81\x10M\xe0\x17\x82\x02\x91\xab*.\x05\x05\x02d~\x96(\xf2\x17\f\xf8_\x04Q\x17 R\xdf\x0b\x88\f:\x02\x11\xc4}\x81\xc8\xb1;\x10\t\xf4\b"\x80N\x81\x05\x9a\x17\x05\xc4\xc6-\x12\xe8\x1dD\x106|\x11\x07m_\x84\xd8\xfcE\x82m\\$\x8e\xfeD\x04\xfd\x85\b\xa0\xcbP\xab\x7f\xa6\xa9\xe3\xaa\xa0\x7fR\xa8lU\xb4\x9a\xebA\x94\xe4\xac\xd9\xaasf\x0b\xbb\x12\x91\x16\x8dZ\x15\x8dZ\x95\x8d\xea\xba\x15\x96\xa8\x9eE0\xe8\\D\x80\xfd\x0bK\xea\xe8\xd9u\xd1\xa4\xf5y\xc3\xd5\xe7\fW\x17MS\xeaq\xa4\x80\x1b\x10\x88\b;\x1e\x91`\xdf\xe3\x96\x97\xbd$\xe8\x81X\xd6D\xa4\xd5\x14y\xba9\xcf\xc6\xcd96n\x8al\\\xea\x93\xa4@\x99\xae\x9b2]C\xe7\xb4\xe9\xfe\xea\xd98\xff~V\xbf\xe5\x93\xab\x1b\xfc\xda\xea&\xf8\xd0*Q\x9azZ\x02\x9e\x118\xe1-\xf8pB\xfd\x1b\x125\xaa7$\xe0\x19\x81\x13\xde\x82o \xd4\xbfA9R\xbdF\xa1\xcf!z\n\x9f\x80o\xd5"\xffjF\xd4\x8b\x19{\x0e\xb0Sp/\xbeR\x04\xfe\x85)\xf0\xd4\xdb\x12\xf0\x8c\xc0\to\xc1\x97\x10\xea\xdf@\xf1\xa9^A\xc8\xb3CN\xee.|K\x86\xfdk\xe4o\xfc\x8e-\xf2\xec\x90\x93\xbb\x0b_\xe3\xff\xc6o\x96\xe4\xbf#:\xd6\xd7\xcfp}\x82\xf2\xf8x\xfc;\xa2\x19\xe7?@86\xc03\x02\'\xbc\x05_\xe0\xfe\0!\tn\xdb\x7f\xf9\x83\'\xb7\xb0\xe4{;\xd8\xf1{\xda\xdf\xb6ki\x01\xb3^*\xb0]k\xb8\xc55\xe3[\xf5\xe7pn\xf1\xcf\xe1\xdc\x86\x7f\x0e\xe76\xf8s8\xb7\xf8\xe7pn\x0b\x7f\x0e\xe7\xd6\xfd9\x9c[\xf7\xe7pn\xe1\xcf\xe1\xdc*\x93\xdf\xaa\x19\xe5[\x9cQ\xbe\rf\x94\xef\xe4Oc\xd1\xf5W%\xfb\x1aY\xed\xce\x8e\x97g\x1a\xfc\x8a\xa5\xe2\'\xd8\xf3N3\r~\xc5R\x85\'\xd8\x13\xd4\xfc\f\x82\xbf\xfa\x92\xf1s\xfa\xce\xf3\xf8ms\'k`\xe9\x91\xf8\x95\xef\xa1\x13\x82\x04-\xa2\x86\x8d\x19\xf8\xce\x91\xac[E5xQ\xf8I\xe1\xe0\xbf*\xf0_\x159\xa3\x82a\xabA\x95\x12\xd8\xb9\x11\xf0\x82%NX\x02\x15s\xbd]\x16D\x8e\xae\xe0H\x94A\x95v|\xa6\xc7>\xec\x05K\x9c\xb0\x04j\xe7N\xf8\xb0\xc0\xed\x85de\xfc^\xc8@\xa4\x95\x8d\xbaW\x8d\xbe\x84eOaYW\x81\xb0\xd3\xcdR7\x10\x99\x01\x8e5\xd0\xbd\xf4\x04\x1f\xf2\x1c<\xf8%(w\n\xca\xa1\xdeQ\xcf\xcd2\x1e\x96\xa0\xda,pz\xb3D+\xce\xe0s\xf4\xf0\x97\xa8\xe4)*\xe9\x94\x17\x89\xd7\xde\xec\x80\xcc\xfa\xd9\x1d\x90\x16U\x1ac\x8aB\xc0\x0b\x968a\t\xd4\xd0\xe5,Y`\xf7\xcaeE`\xaf\x1c\xc0JA\x97\xe0d\xe4\xc5\x959\xb92\xa8\xa4Oy\xb2\xc4n]\xcb\xea\xc0\xd65\x80\x95\x96.?\xca\xc8\x8b+srePK\x9f1\x91\xe4a \x7f,\xef\x81\xa7<\x04\xb0\x7f\xce\xfc\xc1\xcep\b\xeaR\x99\x07\x9e\xcf\x10\0\xd6\x8f\x1fd\xfaB\x10\xb3~\xfc\xc0\x93\x15\f\x905\xf9\xba\x8d\xe2]u<v\xc3\xef%A\xbax\x85\x15\x82\xfd\x07\x0f\xe1\xfe\x83\x87`\xff\xc1C\xb4\xff\xe0\x01\xf7\x1f<\xb8\xfd\x07\x0fn\xff\xc1\x83\xdan\xf0\x80\xdb\r\x1e\xc2\xed\x06\x0f\xc1v\x83\x07\xdcn\xf0P\xd8n\xf0\xe0\xb6\x1b<\xe0v\x83\x07\xdcn\xf0\x80\x7f7\xf1\x01\x12\x86\xb9\x81\x13F\xf9\xc5\xe7\xfe\xc8\x11\xff\xce#r\x06\xf24\x90\0\xe68\x11\xc1)\xf0\x0e\x0e\x80\xc7\x11\n\xcf\xcch\xf4`<\x1b\x15\xc1\xf0\x92\xf0dT(\x0b^\xa8\xff.\x8a\xfb\x93(\xd1_C\xf9:\x90\x86\xfb\x95#X\0R@\x01>I\xff\xaa#Xa\x12\xc1\x02\xda\xcc\xfd\xabD\xb0 \x90\xa1\x7f\xed"X~\xa3\x86u\xa8P\x1d(T\xe3\xbb\xebp\xd4\xf0U"X\x10;\xb2\xf9\xca\x11\x9c\x018W\x19\xc2\xa0yt\xaa2\x96\x05\x15,\x9c\xa9\x8c\xc5\xde\x0f\xd1\x89\xcaP\x86\x96\bOTF\xc2\xba\0\x9f1B\xfd\xb3\x8a\xd6\xe7+Z\x9f\xa9H\xc1\xd5\xe1i\xc9P\b\x01\x10\x1d\x96$\xd9c?Y\xc8\xbfm\xeb~\x84\xa9AF\xd5\x8c c\xf6\x03\xa7\x8fn\xfe\x8fq\xf8\xc0\xe9\xa3\x9a\xedc\xc4|\xe0\xf4\xb1?\xed7\xcb\xbf\xb3\x8e\f(m\x12\xb6W\x95\xdac\xa5\xf6a\xa5\xf6A\xa5\xf6X\xa9}\xa1R{W\xa9\xbd\xab\xd4\x1e*\xa5\xe7\x95\xf6\xaa\x82{\xac\xe0>\xaa\xa0,6\x0e\r\0U\x8d\x96\x1a\xad\xc8W\x1a\x16\x1a-\x1aW\x1f\x97\x19-\x8c\x86\xb0\x8b\x8c\x06T&\xe1\xe1\xa7\xad2\x1a\xc7\r?\xb3@\xbew14\0X(\xfa\xda\x85\x15y\x0b\xc1\xb7.,\x1a[\b\xbet\x010Z\xc8~\xe8\xc2\x80\xcaB\xf2\x99\x0bSe\xb4\x90\x1b\x02\xb3\0N\x1d\x0f\x03\x18\xadU<s\x1c\x15\b,\x17\x9d8\x8ed\x05+F\xe7\x8dC\xa1\xb3hp\xdc8\x10i\xeb\xc2a\xe3\xc0h\xce\xd2\xf1Q\xe3,N\xc4\xab,M\0\xd8\x98\xd0\xc8\xba$\xf2v%\x01X\x94\xd0\xd8\x96$D+\x12\x8c\xf6#\xd8Z\x0e\'}\xf7<\xc7k\xab\x8cvrs\xbc$\xa8a^\xb7\xc6)\xd9\xba{\x19\x17~V\xbfe<P\xab\x9c\xb2\xc6\x9c\xb2\x0er\xca\xdaL\xa3M\r\x88\xefg\x96\xca/\xe6i4\x0b\xbc\xe0\xd3O\x0e\0\xc5J\x8bFu\xf1\xd0n]>\xb4[\xdb\x89\xaa\xac\x9b\x9d\xa8\n\xd0\x97\xf0\xb5\xa7\x18\x85\n\x9c]\x1d\xaaq\xa2j\x8a8\xd6@OTeM\xf5D\x95\xc3^\x82\x97\x9d"\f\xf4>\xb3\xc4TG\x87]\xeb\xf0\xb0k\xcdS=Y1\x9e\xea\xb1\xc0\x0b>\xfd\xe4\0P\xb0\xb4<U\x9f99Z\x9f;9j\x85Je\x83?\x17\xf0\x97\x82\x02\xa7\x12\x0e\xd5\xb1B_\xab\xf0\xb0g\x1d\x1f\xf6\xace\x02+\xeb*\x13X\x80\xbc\xb8W\x9c<\x02\xba\x16\xd7\xec(\xc1n\x15\x9c\xcd\f@\x0f\x004\x1f\xf4\xb1\xa89\xedcE\xf2B\x10\xe4s?\x16\xe5\xc3?\x16\xe6\x13@\x16\xa6c@\x16\xccg\x81\fz\x8b\xc0\x9d\x03\xc2\n\xd3\xf2\x8dCi9\x06\xf1\xe4\xea\x95\x01\xef\xb1\xd4}[\xc5\xcd\x13\xa2\xee\xd5U\xa8P\x15*T\x95=P\x95<`\xfe\x1c\x86\x95\x84\xbe\xa9b\xdfT\xb1o\x1e\x10p\x8e\xfa\x1c\xc6\x92\x99j\x01\xd9\x17\x04\xb6\x0e\bm\xb6-[g[\xb2\xce6\xb4\xc16\xb6\xc16\xb6\xc1\x7f#\xe0J|=S\xdb\x9d\x03\xc2\xca\xed\xce="\xff\x95\x10\x83>"\xe0\xea\xb3\x0f\xdf\xb4\x0fCo\x7f\xe6\xfd\xfb\xb0-\xd6\x0e\b_W\x97\xbdV\x97\xbcV\x87^\xc3?\xabb\x85\xb1K\xeb\xd0tuX\xa1o\x0e r\xb7D\xf0o,vp@h\x88Ch\xf7\xc3\x19\xbb;\xbb\x1c\xc3\x07\x1f\xc3\x07\x1f\x0b\xe4v<\xf3B\x0f\x9c)\xdc8 \xd4\xae)\xfb\xbf)\xf9\xbf\t\xfd\xdf\x9c\xf3\x7f\x13\xfb\xbf\x89\x9bt\x13u9\xdfy\x7f!\x01\xcf\b\xc8~Y\x02NX"w\xd8\x80JE\xad\xe0\x07\xea\xf0#\xb4\xe1\x8f\xd0\xc3?\x02\xe6\x8f\xfe.V\x1d\xfe]\xac\x9a\x07K#s\xef3\x02*O\xc1-3u\xb8e\xa6.m\x99\xf9\xc6+B3\xba\xe6\x85\x8b\f\x9cTax\xec\xb7\xe8\x89\xe9\xfe\xc2\xfe\b-\x8dE\xb4\xd9\x82\x16H\xeccH6U\xb2]\xf5\xf0\xa4~\xbd\x9e-D\x96n\xba\xe7\x9d\x1b\x1a\xcc\x99\x82\x93h\xd5\xfc\xc3\x0e\xd1-L.^\x92\xa3$\x90\x98f\xec\xe4\xc7\x10,\xbe\xe8X|\x91"\x9d@\xf6\x13%\x92\xbd\xa9\x81\x1c\xfa}\xde\xfc\xdbNI\x1c8\x83\x15 \x98\x9e8\x98M\xdc\x8c\xd9I\x89\x83d\xab\x82\xc0l\xc3\x81wh\xf3u\xde \x9b\x81\xb4yg"\x97}\xa0\xcf\xf2\xf5v@\x8d\xea\x90\x93\x1b\xb9V\x9a\x0b\xc8\x8a\x0b\x94\xf4\x96kR[\0\xd2\x9a\x01\xfdS\x1b\x9f\xd1\x9d\xfa\tZ\xed\xe2\x1b\x12\xf3\xf0\xf5\xe3`\x9c\x7f\xee\xd5\xcf\xf4,\xb9N\xf1\xa2\xae\xd5\xb3\x05M&\xe5\xebob\xcdL\x13lN\xd9k\xcce\x9e\x06S\xfe\xa9\x9f\xcfh#j7P\xd9&rA\xe3]\xd0\x80\x0bl\x8f$0z\xa6A\xcf\xa4\xfe\x87/\xbfK5N\xeag\xd2R\xaeY\xa1\f\xa5\x02\xaa\xa1\x10\0\xad\x85Ph2\x84F\xed\x86D\xbe\xf1\x90\0Z\x10\xa1\xd8\x8c\b\xc6\xb6D\xb0mP\x04B\xab\xca\x13a\xda\xd1frlf@idtm\xddL`\xe0k\x928\x87\x13n\xbdN \xf8\x98Ppt\xde\x88\b\xd7Q\xdbJ\xa2\x1d^GU\xd8\x9d\xb9\xdf6\xd0\x04J+M\xd7{\xbc\xb6\xed\x95@\xdbh3\x18\xb4\\\x12\xd9\xe6K\xd3\x95\xe06l\xc8\t\xf5\xad9\xe1\xd2x\xe9:j\xd7y\xe1\xc9V\xb9\x89\xec\xd6\x14]\xdf\x14\\\xdfD\xae\x8f[\xbd]r\x024\f\x0bK\x02y&\xd7\x9a\xe0\x84\xd7\x96\x13p\x926\xe3\xf2\xf7\x0b,\0\xc4`\xffz\x01\xa0\x111\xf8?^`\x05@\f\xf0\xa7\x0b\0Fb\xb0\x7f\xb9\xc0\x82@\f\xfa\x0f\x17L\x003\xc4\x90@!\x06\xba\xb6\xd1A`\x10\x1d$q\xd1A\xb8\x8d\x0e\x02!\x02\b\x85\b\xc8\xfb\x8b\xe1:j\xd8I\xb4\xc3\xeb\xa8\n\xbb3\xf7[bH\xa0\x10C\xba\xde\xe3\xb5%\x06\x02-1d0 \x06\x12Yb\xa0\r\xb7\xe06$\x06\xfc\xab\x01\xb6\xb4\xb4~\xba\x8e\x88!\xaf\xb7\xda*7\x91\xdd\x9a\xa2\xeb\x9b\x82\xeb\x9b\xc8\xf511\xd8\x95V@\xc3\xb0\xb0\xc4\x90\x97Y\xad\tNxm\x89\x01\xd7X\x19W\x86\xd2\xf4\xa0a$\t-C\xaa\xd0\xb2\x900t\x81\x806\xb4\x18\xc9C\xcb\x1c\x85h\xa1#\x12-\x04:\xd1"$\x15%\x83\xa83\x12K0J\xa4hF\xa3\x10qZ\x14\xc5\x9d\x96\xfb\xe8\xd3R\x88A-\xc2h\xd32\x8c9%+\xa0!\xad(l\x17\xa3\xe5\x8a\xef~\xfaD\xa0+%R\xa4\xa5\xd0}\x8c\x02\x81i\x11\xd0\x98\x11Ed\xa6\x0b\0\xa5)\xd1\xb70h\x1c\xbd)Y@rJ\xaa\xf8L\xa3!\xe1\x99\xed\x13\x91\xe9\x9a\xb2G\x9a\x9f\x84bs6\x14\x9br(\x16H1\xd88\x11\xca\xce\x04+\xd0\xa4\xd95\x11\x99\xf2\x14\xa3@\x9c\xe1\x96\t\x92\xe2\xb1\x06w\x9c\xa1_\t\xce\x85\xcdH%\x17\xb0y\xb0E\xd5\xbd\xd1Y\x95cxV\xe5\xc8GS\xf8\xde\xf08\xd2\x11\xff\xa0#\xe2\xfa\t\x9e\xef\xb8t\x10\xd5\x91L=\x8d\xe3\xdb\x1emJWWxm\xe7\x962\x18L\x1d%\xd1\r\\\xafy\xc6.]\x7fj\xa7\xef\xcd5\xf5n\x16\x94\x9e\xc9\xe0yB0\xcd\xf6M\x9c(\xe14{\xf8\xbd\xebP\x89\x12\xbes/*\0u\x9d\x02\x98\xfd\x9a\x8c\xaaM\x9a\x8c\xe5\x9d\x99\f\xf0^KFx3)#t.\x8f\xaf\xf36\xcb\f\x90c\x97Y{-\xabP{\xdea+@\xa4}\x15ho6\xd02\x88U\xaa\\\x95*W\xa5Z\xffF\r\xebP\xa1:P\xa8\xc6w\xe3\xeeV\xc6\x9dN\xbc\x8f\x95\x01\xb4*|\xf9\xefy m\xe7YR+\x06r>\xc5\x80I\xa2\x18u;\x93\x9e%]b\x80s$F81b\x84\xb2!\xbe\xce)P\x06((\xe6Y{I\x8f\x9e\xe5k\x11\f\xd8\xed\xf5\xcf\xf0m\bF]\xde\xf7l\xbf\x04\xc1\xa0\xcd\0\x9f%(\x04\x81\\\xef\xb9\xff\n\x03\xffF\r\xebP\xa1:P\xa8\xc6w\xd7\xe1.\xb5g\xf5=\x05F\xf2g\x14\x18\xb0\x89\xe53\x07\x05\x99\xf5E\x1d{y\xc1c//x\xec\xe5%<\xf6\xf2\x12\x1c{y\x89\x8e\xbd\xbc\xe0\xb1\x97\x17w\xec\xe5\xc5\x1d{9\xf5\\\xc6\xbfs[c s\x19\x03\xc1\xde\xf3\x93\xe12\xc6\xec.\xf3\x93\xe22F`c\xfc\x89\xb9\x8c\xaf\xed\x96\xf1\x13wR\xc3\fha\x85\xea\xc3q\x81SxF\xe0\x14\x1c\f8E\xa7\x01Nx\x04\xe0\xe4\xf6\xfd\x9f\xdcf\xff\x93\xda\xe1\x7f\xc2m\xfd\xa7p/\xff)\xd8\xc0\x7f\xc2]\xfb\xa7\xc2V\xfd\x93\xdb\x9f\x7f\xc2M\xf9\'\xdc\x89\x7f\x92\x0e>\xdb\x95\'\x9c\xc7\x16\0\xfd\xed\x843\xa0Q\xd5\xdc\x843\b\xa0\x920\xe1\f0\x9a\xdaL8\x03\b5\xb6)\x9b\xad\xb5+V\x85\xb5\xc6\xe0\xcah\xb1\xd6U\xa9\xd6Q\xac\x91$\xb4G\x15\xdb\xa3\x8a\xedQ; \xacN]V\xbc.)^\x87\xea\x15\x02\x93\x84\xb1\xee\x18\xa2\x84\x86^s\xc1\xca\xea\xa9x\x15\fj+\x02\x88Z\x11D\x96\x10\xa97\x86\xc8\xc0\x1e"\xc0Z\x8b\x04\x9d&\x12\x1b\xc7\x82\x83Q\xdcIlg\x96\xa8pU2\x0b\x86\xb5\x12\x9c3Ku\xc6,Q|\x8b\xb0d\xb3\xaah\xb3\xaah\xb3:\xc2J5\xad\xcfV\xa8>S\xa1\xba\xa4s!\xf4E^\xac\x136\0\x11\x94\xdc\x8d\xcd\xe0\xc7@\xf2\xbb\x1f\x92\xc31\x90s8\x01|\x06\xfa\xc3\xe4p\x82\xa9\x1c\x8eA\x9b\x96\xfeP9\x1c#\x90\x96\xfe\xe8s8\xfe\x8d\x1a\xd6\xa1Bu\xa0P\x8d\xef\xc6\x1c\x8eq\xa7\x13\xe7p\f\xd8\xcc\xf8\x07\xf7\x01\0\x80\xb6\xb6\x0f@4\xa8\x88\xeb\x03P\xe0ml\xfb\0@\xb1f\xd0\x07X\xb8v@X\x9d\xba\xacx]R\xbc\x0e\xd5+8\x04\xfa\0\x80\xc15\xb6\x0f\xc8h\xb2\xb8\x07\xa0B\x84\x82\x7f2\x1aT\x93D\xbe\x9aY\xe0\xfdC\x120\0\xa1XG\x82\xd1?\t\xae\x1d\x10V\xa7.+^\x97\x14\xafC\xf5\n\xfe!a\xac;\xfa\x87P\xf0\x8f\xd8)\x06\xa1bJ\x02\xbe\xd2\x92\xa0\xdaJ\xec\xab\xae\x85\xdeoJ\n\xc6Q\x12\xb4\x81\x12\xa1\x0fET\x87`\xb1\xca\xf5\xf9\x8a\xd5\xe7*V\x17U/\xf8V\x15(\xd7\r}\xac$\xe2\xe7\xdf\xf6\xf7\x17\xd5a\xff~\xb3=\x1c\xf3\xc5\xaf\x9b\xa7M\xf7\xfbm\xbd\x7f\xfaG\xf5t\xd8\xde\x1d\xff\x1fS\xe0c\x1a'),ard=a('x\x01\xb5}]w\xdbF\xb2\xed\xbb\x7f\x05\x1f\xef]\xebj.\t~\xcf<%\xb13\x93\xd8\x13\xd9\x8e@Y\xf3FK\x94\xcccJtHA\x12\xfc\xeb\x0f\x80\xae\xcf\xdd\x05\xfa\xbc\x9c\x95\x15/p\xef&\xd0]]\xbd\xbb\xbb\xba@\xfd\xf9\xb8><\xfe\xba\x7fx\xfc\xf7\xe6\xf1\xb0\xbd>\x0e&\x7f\x1b\xbd\xfae\x7f\x7f\xbfyx\x1c\xfc\xb2\xffV\x1f\xb6w_\x1e\x07\xff\xe7\xfa\xff\x0eF\xcb\xc5\xf4\xff\xb5\xff\xce\xbb\x7f\x97\xed\xbf\xcba\xf7\xef|\xf0\xd3\xcd\xfe\xf3f\xf0g}|\xdc\xdc\x1f\x07\xbf=\\\xef\x0f\xdf\xf6\x87\xf5\xe3\xe6\xe6o\x83\xc1O\xbb\xdd\xe0c{\x9f\xe3\xe0\xe3\xe6\xb89<5\xa8>\xe4\xb0Y?n\xf7\x0f\x83\xd7M\xe9\xbf\x0f.\xbeT\x83\x7f\xaf\xeb\xc1`4\x18\x15\x7f\x9f\x8c\xff>-\xba\'H\xf9\xf2a\xfbW\xb5\xf9\xed\xf5`2\x1eN\x0b\x81W\xff\xae\x8e\xeb\xbb\xcd`<\x1f\xcd\x96\x83\xc9b\xb4\x9c\xbcj\xdb\xf5\xc7\xfa~3\xf8\xd7f\xf7\xb4y\xdc^\xaf\xcf~\xde\xefn^\xfdZ\xedv\x1e\x1f$|}\xbf\xdd\xd5\x9eyu\xb9\xe9,\xd0\x15\xf8\xedq\xbd\xdb^\xff\xf4p\xb7\xdb\f\x86\xaf~;\xfe\xba}\xd9\xdc\xbc\xdf>^\x7f\x19\xdc\xaew\xc7\xcd\xab_\xbe\xac\x0f\xeb\xeb\xc7\xcd\xe1\xcf\xcd\xe3\xe0\xcd\xcb\xe3\xe6\xe1fs\xf3q\x7f\xbf~\xe8*\xf3\xf3\xcf\xfb\x97\xc1\xd9h>\x1c\x9c\x15\xc5b0\x1a\x0e\xc7\x83\xe5\xac\x18\xbc*\x9br\x87\xdd\xf6a\xf3~\x7f\xdcv\xd68kH\x85/\xbel\xaf\xbf>l\x8e\xc7\xc1t\xf8j\xb59\x1c\xdb"\xc3a\xf1\xb7aS\xea\x8f}S\xd1\xcd\xffjo\xa9\xa1\xb6\xc7\xc1z\xf0xX\xdfl\xee\xd7\x87\xaf\x83\xfd\xed\xe0\xdd\xf6a\xffX\x7f\xdb\x9c5\x85v\x83\x9f\xfe9X?\xdc\xfc\xff\xfda\xb0mnp\xac>\x1f\xb77\xdb\xf5a\xbb9\xfe\xed\xd5\x9b\xe6A7\xdb\x87\xbb?\xaf\xbfl\x1a\x1bw\xb5\xf8\xf3\xb1)\xbe>\xdc0\xf7\xea\x97\xf5\xb7\x7f%\x93\xcfG\x8bW\x9f\xe8z:.^\xfdt\xbcn\xedy\xe8\x88\xd7\x1b\xfetV\f\xe7\xaf\xfe|\xbc\xf9\xd7\xe5`\xd4\x10\xcd\xd5\xaa\xb9\x9a\f\x9b\xab\xc6\xb7\xdb\x1ea\xdf\x1e\x8f\xa6\xaf~\x19\x8c\x8b\xc1?\x06\x97\x9f\x06\xc5|\xd1\\\xfc18~[7\xd6\xfb\xc7\xe0\xe7\xc1\x90\xfe\xfbG[j\x9cJ\x8d\xbb\x8b?\x06\x9b\x97\xeb\xdd\xfa\xbe+\xb6l\xcb\x14\x93I[\x8fTv\x92\xcaN\xe6\x93\xae\xec_\xd5\xbe1\xe5\xe7]*\xbd\x18L&\xf3\xc6/gZ~\x9a\xcaO\xa7\xb3\xae\xfcCu\xff\xb9\xed\xd3\xbb\x87\xee\x1bM\xa9a\xd3\xe0\xc5`\xb6\xa4\xf23_\xfef\xbf\xdb\xad\x0f]\xd9q\xe3J\xa3\xd1t0-\xc6\x83\xf9|\x9a\x8a\xcfS\xf1\xc5b\xd9\x15\xff\xb69\\\xb7C\xa4-\xdfx\xdd\xd9h9X\xccFMm\xa8\xa5\x8bT|^\x14]\xf1\xf5}\xf3\x85c\xd3+\xdd\x17\xa6\x93\xee\x0b\xf3\xe1H\xab\xbf\xf4\x06\xec\x9a\x9b<\xaf\xfdF;\xfc&\xd3A1\\\xca7&Co\xcco\xeb\xc3\xe6a\xb7\xb9M_h\xcc\xd1\xf4\xe1\xa2\xe9\x9e\xc6\xa4\xad-\xdbo\x8c\x82o\xe83\x9a\x1au_)\x1a\x0b\xc9W\xa8_\xc7\xd4\xec\xf5\xb1\xad\xd5\xf1kjw\xd3\x03\x8b\xe6\xfff\xb0I\xa5\xa8\x87\xa7\x8b\xd4k\xdfv\xd5\xb1+;i\xfbw\xda\xf4\xeft8K%\'\xbe\xc1\xd7\x8d\xe6\xacS[[\xeb\xcc\x9az4U\x1fM\xa8\xf4\xd4W\xfdK\xfd\xed\xcb\xe6\x81kQ4\x9d5n\xee;\x9e\xa4\xce\x9a\xcc\xfc\xbd\x1b\xdbo\xf77|\xf3\xa1\xbf\xf3\x1c<w\xb7>~\xe9\x8a\x9e5\xcfj\xbbi<j\xba\xa9\xed\xff\xb6\xf4\xc2{\xcd\xf7\xcda\x9f\xec]te\xa7\xc5D|`\xb2\xf4e\xf7\x0f\x1b\xee\xcba\xe3O\x0b)8\x1d\xfa\x82\x8f\xcf\xe9\x9e\xc5\xac\xb5\xd9H\xbdj:\x82\x82_\x0e\x9b\r\x1b\xa1{\xfch\xa6\x85\x0b_\xf8v_\x1d\xb8ls\xdb\xc2\x94\x1cC\xc9\xedSvW\x1e6\xd3\x89/{\xdc\xbe\xa4\xf6\x8f\xa8\xfdC\xbd-\x8c\xc8\xe3\xe6\x89\xbbl\xda\xd5@\x07\xe3\x14\x06\xe3F\x9c2\xb0\xebt\x0e#}K\x86\xed\xc6m[\xb6\xd0\xb2\x0b\xef7\xd7\xfb\xdd>\xd5aYt\x82S4\xad+R\xd1\xa5/z\xdc\xdco]\xf1\xe4\x94\xe6\x1b\xb3\xa1w\xf6];\x97t\x15i\x04a\xd1\x98j\xd6\x14M\xe3h6\xf2E7\x7fU\xeb\x1d\x0f\x8cf\f\xb5#c\xd2\xd4\xbd+[\xf8\xb2w\xedd\xbe9\xf4\xdd\x99:o6\x1a\x91pl\x8e\xddd\xd7\xb9Z7\xea\x1a;\xcd\x8b\xe4\xbf3\xea\xbee+k\xedx\xa6\xa1?"\tk\x8b\x92\xab\xcf\xa6^\xc2~J]\xd7\xdeq>\xd4\x11?\x9b\xf9b?w\xc5\xe6\xad\xeb\xcef\xaaV\xb3\xb9/\xf6Kj|\x12\xc2\xd9b\xa2\x8f\x05\xe5|m\xee\xb7\x98\xea\xfd\xa8\xb7f\xdd\x8d\xff\x18\xbc1\xc5\n\x95\xd5\xf9\xd0[\xe7W-6m\xcc.\xc5\xa8{\xe6$\x02\xff\xb4\xb5\x9b\x8f\xc6R\xbby\xe1k\xf7\xaft\xbfQ\xfb\xd8\xa9y\xec\xd8\x8b\xcao^{\xa4\x18\f\xa6\xdf\x93\x89[Wk&\xb8\x85)\b}\xf1\xb6+\xb8h\x07\xf2\xbc\xd0\xbe\x98\xcf|k\xdf\xd9\xd6\x8e\xb5\x18\xcfe\xe4\xe9\xffVY\x9a\xcf\xd4\xc4s\xe8\x89?\xb4\xd8lj\xea\xb6\xf4\xb6;w\xb6\x1bk\xcf.\x86\xbe\xcb\xde\xdb.\xd3\xbeX@_|\x90\xfb5\x8a\xd6\xdeK\xee\x07}\xf1\xd1\xdcon\xee7\xf6\x8f\xfd3\r\xa4e\xf2\xbcb\xa9\xf7\x9bx\xeb]\xa4\xa1\xd1v\xda\xb4\x9d\x12\xf9~\xd0\x17ezl\xd2)\xeb\x04\x8b\x99\x7f\xf0j@\xb3lS\xbf\x89\xb9\x1f\xf5\xc6r\x92\x86\xfbe*\xd66cY\xe8\0Z,\xfc\xdd>i\xedfS\xed\xdb\x05\x8c\x8b\xabTl\n\xc5\x960.\xfecty\xa1\x8b\xaa%\xac\x18>7\x0b\xf1\xaf\x9bGYe\xcc\xba\x19\xb2\x99x\xdbuI\x91Tq\tK\xc1\xcf\xcdWNO\xaa\xcbq\xf8\x14]\x99\x14\x93\xf4\x98b>\xd4\xc7L\xbcJ\xae\x8f\xd7\xdb\xed\xf5\xf6p]\xa5\x05e\xa3\xa2\xe3f\xfd\xd6N\x06<\xcb,aB\xaa\xda\xa5\xee\xb1Y\xa7\xf3J\xf5l\xd4X\xa0e\xcfh\xd5\xb7\x84\x85D\xb7*\xd3\xd67\x8b\xb2f t\x8b2\xd2\xd7%\xccMiES\xb4\xce\xd6,}\x8ay\'\xdd]\xc1\x85\xef\x80\xcf\xe9\x8e\xa3Tp\xae\xee\xb1\x84U\xc4ur\xdf\t\xddq"wl\xf66\xfe\x967\xae\xa4q\xcc\xd1\x10\xd6\x114\xdb\x8f\xe9\x9e\x0bs\xcf\xc2w\xcdmr\xa7v\x12\x187w\xeb\x9a\xdd\xc8\xcc\xb6Y3t\x17\xbb\xc1\xed\x8e\xbe\t\xf3\xd2\xdd\x80f\xbb\xb3b\xd4\x98\xa1\xf1E}\b\f\xbc\xe4)\xb3\xce\x19\'3S\xed\xa9\xef\x8d\xad\nR\xea\x83)\x95\x83^\xfb\xafd\x88\xf6\xc9\x13(\t\xdd\xf5U\xef85\xab\xda\xd1p\xe1\xef\xb8\x83\'K9\xea,\xde%\xdc\xab\xee/\x9a\x05\x97\xb4x\x04]\xf5\xe0[\xac\xe5F\xbe\xdc\xdeu\xe9\xdct\xd4\xa8\xf0%\xbf\xf1 hwrP\x14W\fr\xd3\xaeh\xa3\xb2Z\x94z\x86\x97\xff\x07m\xcfxnzp\x84K\xbd\x81\xac\xc7\x9az\xb6k2)9\xf3\x0e\xf5\xc8\x0eu\x96Td6\xe7\x82s_\xcb*=z\x96n\xd9,\xf4\xa7\xe3\x82J\xc2\x9a\xfc)\xddr\xdc\x19sl\xca\xc1D\xf5\xac\xbe<o\xbaR\xca\x15\xb0\x1c\x7fQ\t\x9d6[(-\x07\xa3\xa8\x96\xa6\xb4~6\x1d\xdb[\xf2\x92\xae\x1b\xa3\xcd\xb6a k\xa9\xc9bh\xca\x8d\xbd\xbd[%T\xbd\x99,Hm\xdbI\xba\xe0\xaf\xf0>j1$\xb9M\x9d\xb4h\xfb\xb3\xf1\xf3\xf6\x0b\xbc\x89m\xe5-\xbf\x7f\xae\xb3\xe3\xa6\x99\xfa\x80Y \xb4\x8f\xdb\xdd\xcd\x86%k4\x1bw{\xe5q\xbb\xfbk\xbf2\x83i#\xed\xf3o\xf6\xcf\xb4\x96n\xfd\xa2\x99e\xda\xed\xbe4}\x06\xdb\x15\xd9]w\xde\xde\xf4q\xabu\xb3\x82\x06\xda\f\xb6,\xed\xb6\xb4\x89\xe9$\x91\xe9\xf6\xe3\xb3\xae\xb3dd\xf2\xc2wD\xf3\xe2m\x1bR\xe2er\x8a\x1e\xb5\xb3\xd2XwE\xa3\x198uM\xbb\x97\xb3$\x0fS\x99WF3\xd8\xbe\xdc\xee\xf6\x87-\xdf\xba\xf3\x87a\xda\x9a\xd1\x847\x9a\x81\xee\x1c7Z\x99\xae\xbd\x8bI\xda\xc6\x14\xfc\x05\xf0\xf1\xeb\xea\xd0\xec\xdd\xafk\x9aS\xdbU\xcf\xb4\xd9\xc0\xcc\xc64zxy\\\x8c\xcd\xc4u\xdcvA\xb6n\xb92\xec\x02(\xed}\xc5D\xbcVf\'\xe5\x88\x8b\xcew\x93n\xbe\x9b\x8cu?1\x9a\xc3 \xb8\xab\xb6\xcd\x17\xee\xf7\xbaFh\x16.M\xed&\xb3\xb4\xa2M_\x82Y\xa5\xfdRW9\xfdR\xd7\xa4b:4_\x1a\xf7|I\xfd7\xfa\x16\xcc-\xb7[\x1d\xf5\xd3\x89\xb10/\xb1\xa5\xe0\xae\xaf \xf4]\x130\xe3\xc5M3\x1b\xb4S|Ct\x95\xecJC\xc7\xdd\xac\xef\xeex/\xd7jYc\xbf\xb4g\xe6NXF\xe59\xee\x15~\x85\xd7\xd5>\xda\xd1\x8e\x9f\xcdaC\x01\xa7Eg\xf4\xa2\xf9\xda\x98";\xa3\x05\f\xb8&\x1a\xb4\xbe;\xac\xbf\xd1:\xad\xd3\x9aQ\'c\xf3!\x8d\b^J\x8f\xa7\xa45M\xccw#\n\xdeD\x87\x1b\xe7\x1dv\x035\x15\x87\x10\x8f:\xe1\xe7\xf5Qb!gm$\xa6\x9dEGla^a\xa3#\xea\xb7&\xe9[\xad\'\xea\xb7f\xf1\xb7L\x10m\xd2\x05\xd1:\xff\x15\xe3\xcd{\xfc\xd7xU\xee\xc0\xbc\x18o\xd6\\\xe9aM\x94v\xfb\xed\xb8M\xf3^\x17ZX6k\x06\x8e1\x8dxU.\xe5\x9b>z\xfc\xb2\xaf$"x\x96V\xc5]\xf0Z\x04h\t\xb3?o\xedEH\x9b\bK\xf3\xadi\xb7\xb8\x13!\xc5\xd5t\xd3\xa7\x14\xce9k4z\xd6,\xb6\xdaia>\xe5\x87L|\xf1\xf5u\xf5\xb8\xa1.]t\xc5\xc7mP@\x8aC .\xad\xb8ow\x9b\x17\x91\xbb\xee;\xcdT\xa0\xdf\xc19_&\x8f\xc6\x99\x9b\xd6\r;\x87\x12q\xe454\x17\xbf__\x1fX\xa8g\xe9\xee\xe3v\xa1@=\xb8\x84\x10\xcf\xe7\xc3F\xdaK\xa5ms!\xcas\xb3\x7f\\_\xcb\\\xd3.Eg\xed"q\xdcn4R8\xa6\x18B\xa0\xf5f\xdb\x8c+\xee\xebYW~\xdc\xee_\xa5<\xa8\xdb\x81\xe7\xa5F\xa0\xa7m\b\xa9\x91\x9a9-s\x8a!\xf4\xd6\xf5\xe6\xa6q@\n\x84\xa6\x13\x8db2\xa5\xf8y1\xc40h\xf5p\xb7>T\xf7\xbbu\x95\x1a\xb0\xecZ<Yh\x8f\x15C\xb0\xfe\xfe\xae\tD\xa6\x85n\xa3$\xdd\x13\xc6\xc3\x89<\x01\x8c\x7f\xbd\x16\xdb\x07][\f\xb3\x81p\x0fj\xd81,\x87\x05/@\xa4\xfcO)p\xd3\xb6pi\x82\nE\xc1\xf5\x98\xa7r\xfb\xc3\xcdm\x13\x90\x93X_39N\x9am\xccx\xa2\xf1\x80b\fk\xe0wf\xdb\xd9\xad\xb5l\x10\xa4\xe0\xc3\b\x89[h\xe9v\x8f\xda\xf6h{\x1cA!\xe5\x82\xcf#\xa4\xe6\xe7\xa9\xe6\xe3\x14#]\xceF\xa6"\xdcM\xb3)W\xfe\xbeY6U;\xae\xfd,U~\xa6^_pp\x9e\xb7\x0ekjg\xda:.\xa6\xba\x80/&\xb0\x0f\xbaig\xdb\xe3\x11\xb6C,\b\xc5\x047/\xc6,\xdd\xb1H\xb1TA,8j-[\x0e-\xdd\x06\xa6\x9a\xfaL\x17\xad\x1f\x93\x03p\xec\x9a\xa3\x17{\n\xc5\xa6-\xcar\xa4\x9b\x89b\nr\xd6\xcck\xcd\x19^\xa3\xd0G3\x154[\x956"3\xea\xber6\xf25\xff\xcd\r\xbdfY\xd5\xeeC\x9a\xeeX\x8e\xa6\xae\xbcL\xcd*ffs\xcb\xce\x8b\xa5\xd7\xaa\x1cf\xc3\x8e\xa5e?\x92\x8d=\xda\x9b\xcc\x8c\xbaf\x15\xd2\xe1t\xa2B\x12\xbbq\xcd\x95\x18N\xd6ZZ\x98\xdfl\x9f\xb6\xa4\xab\xed6\xbb\rT\xb7\x0b\xec\xc9"\xbe\xb9\x11z\xb93-\x1f\xb9\xac\x84~A\xe5%\b\x8c_\x10S\x1a\xc3\xf7\x9bR"hp{\x13K\xeb{@m\xa7)\xddp\xf5\xd9\xfd\xd8\x9d.\x19\xa1\x1f\xd3i\xb1\xdd\x9b\xe6\x9d\x05\xad\xee\xef1i\x89h\xbdm\xc3\xac\x88\x0b\xbb\xee\xb5_\xe8q\xe7\xb5\x91\xee\xd6\xacEA;\xe1I\xdcm\xa5\x1a\xe9\x84I\xc5\xa1\xcd\xddg4\xf5\xd8}6:\xd0\x1b_}\x8e\xbcc\xe5%\x8e\xdfL\xe2t\xdap6\x85`\xbe\x8csZWbo\xcd&t\xb6\xdf\xcc\xdegh\xfa\xf1\x9c\xbe\xc3\'\xf5I\xd8\xd2y\xd4|\xa2\xf1\xdd\xac\x01fa!\xd5_\xcc&\xa1\xed\xafu\xe4\x9a\xd8[\xaf\x94\x88\x1fX\xf7\x9f\xc7\xdd\xf4G\xd6\xdcej\xae\x8d\xb2\xa3\x14\xee\xb4o\xd3yb\xf3\xa0\xde\xd1\xa8K\xc0\xff\x81\xb0]`uFd}\x1b\x04\xc76\xfc\xa2\xd51g:\xbd\x15\xd2\x15\xa0\xadP_?\xf95Z\xaf\xa7\xe9`\xd7\xae\xd2\bT\xbf4\x98\x15\xd7)Y\x90\xa8c`y\xbc\xf9dI\'\x82\xfb\xef\x9b\x87;\xd1\xa9\xb4/\xe5%\x05\xda\xf0\xa3\xd6[\x0e12E\xe6\x03*\xec\xa4\tu\x92=\xac\xcaF8\b\x9a\t\xa6\xf5:2j\xe0\x8f\xd5\xfc\'3\xacd\xa2\xc0a%\x01Ems\xb7\x14i\xa3\x8a}u\xb9v=\xc5Ni"\xe0\xd8\xde\xffx\xc7\x91\xd3\rt\x1cv\xb4\x8b/\xfb\x83\x93\x83y\xee\xef\xbcX4\x8d4G]\xd8L\xe9Z\xa3\xc4}]+\xe7SZ\xd6\x1cRe\x8e0\xa1\xcdH\xa6K\xad\xf9\xfa\x86ii%O\xa7\x04\xac\xb68\x8c\xc8\x98u\x15\x901\xd9\xd5\xb5\xc9\b\xc7\xaa\x8b>P\b\xb2\x193\xcd*\xd7d\x1adfTe2V\xec]\x86\x18\x1d\xeb[\x81HY\xb3\x98\xeb]\xad\xd0\xc2\xe9\xbe\xda=n\xbf\xedR0\xadY:\x8d\xd2\xbc7\x9c\xc6F1\xe3\xbf\x7f\0\xa9\x9a\xaa\x83\xf3I"\xd6\x83\xd5\xa2\x89\xc0<n\xd7\xbb\x9b\xed-\x1d\xb3\x8c\xba5nK\xf7\x8d\x89\xda/\x11\xedR\x88\xb6\xa3\xd9l\x03\xf2\xd5N2X!\x91:\xdc\xdd\x8f\xe7\xdd\xc1\xcf\xacw\xc9\xfa\x06\x97r"\xd6}S\x81k\x80\x95\x17\xa8\xbf\xac\xca\xfc\x17\xcc\x9a\xac\xe7\x0b\xd7f<\xf5\xcf\xdcr\x12c\xcc#\x07P}[\x003\x9a\x8c+pd"\x9f\xe7\xc5\x15~h\xf9\xdfL5&}\xd3\xbb\xc9\xb1jv\xc6}\x89Vrk> 8\xec\xbfn\x1e\xec1\xc1h:L\xc7\x04\xc3xiu\xd8\xdcm\x8f\x1aL\xd4\xb5\xd5"\x9bjd~\xd2\xe1g\xb2(z[\xeb\x85Z\xf2$2\xa1\xa6\xad\xf7\xb1j&?\t\x98\xb7\xeb\x936\xc0\xde.(\x87\xb1\xa6\xbeQ\xe5\xe8\xf5H\x99\x92\xd0\xf4\x8b~o\xd9\x1b\x0f0\xa7r\xe8\x012!\x99m\x91LF=\xcb\xf1\xff\x98\xadb_\xd9\xe9$U\x992\x844\xa9(e\x8e\xb5\xe9\x8b\xc3xBz\xf3H\x01\x80\xbe\xa5\xb8,\xec\xec\xa4\xcb\x8b\f\x9b\xaf\x93-L\xfbV\xb3\xc5h\x9c=\x85m\xfehT\xb2;\n\x9c\xb4Kq\xb0\xa2(\x80\xdd\x06\x8dy\x19\xb0\xe8\xdf\x06\xd9\x88W\xc1K\xebQo\x93\x7f2\xbd\xf4\xc3i\xc6\xab\x91\x14\xef\x0bH\x98\x19\xecD@\x82O\t\xa1"\xedQ!\x96\x15\xa96\x8d\x1c\xcd\xd2\xde\xb0\x8d\xe5\xf0Qw6\xf3f\x0b\xf6h\xe6\x15?\xcf5t~"\x90bW\x80\xaa\xe8\xb3\x9e\xfe<\x9a\x9b\xf7\xaf\xd7\xa5\xa1=1\xa0l\xbe\xe3\x86\xc2\x8c\xf4?Xg\x94F-N\xed\x9bic\xbb\xd9=r\xbc\xb6\x8d\x90\xb6\xc3#\x1e\xfe\x8f\xb2\xbeL\xe7\xf2\x0b\x97\xe8\x91\xad\xa7\x9e\xf7n5\xb5l\x14\xbc9c5\x89\x90YS\x9dilCG\xf1R\xe6^\x0f\xd5\xbb\xa3\xff`\xb7/f7\xc7\b\xd3!\xe7=\xf4\xc9b\x16\x1b#\xaf\x89bc\xa2\xd1v\x98\x92\x07\xcf\xc6\xcb\xcc>\x92\xde\xa2\x01\x05\xbe{\xb0\xf2]\x8c\'\x03Y\x9d6\xfaxht\xf2(\xa3\xa4\xb5\xcfr\x99\x19T\x96\xe2n\xc7\xc1\xbb\xf2"\x0f)Lh\xc4\xee`\x8a\x9f\f\xfb\xb7\xccoQ(\x9b\xa3\xa8\xb4\x853\x19}\xd8\xe8w\xb0\x91h#\xda\xe8\x98\x12\xa1\xd67\n\xc8\x1f\xda\x1c\xe9\xe5t\x96\xdd]\xd7V~\xc3\xd4\xbf\xb8\x92\x99;s\x8b\xd1\x89E\x8d=\xc9\x19\x8f\xbb\xa5d\xd1\xbb\xf9x\x07\xdba\x1b\xbc\xc7\xdem\x1c\xe7\xcbzw\xcbs_\xea\xd7|\xa0\xf0|\xd9F\xcb\xcdd\xb9\xe4|\xe8a\\\x93=H\xc8\t\t\x94e\xa4I\x90\x90e$\xae\x95Xn\xb2\xd1\xc2\xaa\xb3\x18\xf5\xee\x12\xdf\xe0\x8e\xf2\xc4\x1a{c\xf5X\xfb\xb4o\x95rg\xd6n&]\x0b\x9bjlO\xe3\xca\x99\x7f6;1\xact\xcf\xda\xbf\xc3\xd5\xd2\x18\xbb=1\x10E\n3\x9b\x9e\xd0}\x1e\xbd7\xcd\xf4L\xf9\xf4\xd3y\xb3\x04\x99\xa5\xb3\xaeQ\x11{\x85\xba\xfe\t\x87\xd0u\xd4\x1a\xe2\x05Q\x80Lv\x16z\xefSA\x9a\t\xafXo\xb6\xd7k\xc9W8\xeb\xb2\xc3\x9b\x81\xd5S\x95\xd7\x18gj\x96\x7f\xbd\x8b\xe1\xbeP\xacM\xff\xca6:\xc6\xf9e\xa3S\x8cc+jYk\xc5\x9e\xa1\xf2\x11\xab3\xa7@\xb5M\xf8\xcd\x85\xa4\xe7K\x91\xa2\xc8\xc2\xce\x84(eU\x07m\x90\xb2vA:L3\xd7|R\xf4\xdf[\xa3\xc3rk<#`?\xd6jX\x07\x86\x8a\xc8\x82\x11\xf4[\x16\x8d\xa0\xde\xba[_g\x01\xf0^\xf16\x8d\xecv\x80\xdd\x9a>\x98\xaa$\x97\xb2o#`3+\xb3P\x8c\xdd\xc7\xb6\x99\0\xd3n\xda\xea\x99|z\xc3\x13}\xe3\xea\xc1\xcc\xcf}\xbb{Y\x7feq\xf0!\x9f\x96k\x9a"\xd6\x7f\xb7\xbfk\x87\xe2\xc3\xfeQ\x1a\xd1.\xf3\xcc\xdb\x1d\xd9\0p\x8b6;\x06\x8a\xf8\x0b\x95\xcf?0\xf2\x80\x01\x10\x92\x87\xa62:\xd95+\xc1\xb3I\x1b\xdcn\x1a?\x8f\xe7\xae\xbb,\xb6lf\x81E\xcf\x84\xb7\xa1\r\xe5\x89A,^jv\xb6}\xdb\x1a\xed0t\xa2)\x9fL\xcd2\xfd\x91\f\x87\x07\x1f\x87l\x84\xbc]:\x17\xed\xbb\x03\xa3\x9e]\x85]\x9atg\xe2\x8bi\xef\x86\xe5ME/}\xe9\xbb\x8do\x1en\xccK\x91\xe9-\xc9\xb7\x9b\xc3\xc3\xeb\xf5\xe3Z?\xbd_o\x9b\xc5gs ?z\xf5\xf6\xfd\xa7\xc1O\x83\xe6\xde\x93!_\xa7\x19\xdd\0\xc9N\x16\xa0\xe5\xa8B\xffl\x97]|\x9d\xe6m\x03X\xe3)|n\xbe\x7f\x8e\x0f\xb5\xdb%\x83\x8a\xcf\x19,\xcdQ\x06ps\xae\xc1\xc9\xb6\x06I9\x05\x06H2\xa7\xc0\x07s}18[\xca5\xd9\xc4\0\xb6\x8d\x02\x97\xa6\xbdt\fj\0\xdbFE\xb5\x8d\x8aQ\x1b\x15\xf0mT\x9c\xdb\xa8\b\xe9\xa5A:\xd9\xd7\xcf\xab\xc6\xd3\xf8\xfa\xb2\tz\xf0\xf5U\xab\xaf\xf2\x81*o\x10\xad\xa7\x82U#~rM_Q\xc0\xb6WQ\xbd\x8fb\xd4^\x05|{\x15\xe7\xf6*\xc2\xedU$\xb5W>?\x99>}6xm\xaf\xb1\xeeu^\xcbT\xc4\f\x1d\x02\xc0\x95\t\x85A\xc4(\x8e\xa4\x84\x9b\xe1D\0\x8c)B\xc3\x81\x95\xb8s\xbc\xe7yX\xafp\x9c\x11\x95\x0f6"`\xc4\x11\x1a\x0f;"q\xec\x11\f\x03\x90P\x18\x85\t\xfd\x80\x80\x19\x8f\x04\xc0\xa0d4\x1a\x99\x89+\xd1j8F\t\x8d\x06*Q\xf9h%\x02\x86,\xa1\xf1\xb8%\x12\x07/\xc18\x82\t\xf6\xc38\x81f,\'\xc0\f\xe8\x04\xd8QM\b\x0em\x82\x83\xf1\x9d\x98\n\xc7\0\x8etB\xa3\xe1NT\xdfh\xc2\x81Oh<\xfa\x89D\t \x18u\x80`/\x06\t|B\xd7z\xc6\x12u\x06\x84M\x0eT"\r\\\xa3\x12\x04\xc0h$\x14T\x82QT\x89\x84\x1b\x95 \0T\x82\xd0P%\x12w\x8e\xf7<\x0f\xeb\x15\xaa\x04Q\xb9J\x10\x01*Ah\xac\x12D\xa2J\x10\f*A(\xa8DB? `T\x82\0P\tF#\x95H\\\x89VC\x95 4R\t\xa2r\x95 \x02T\x82\xd0X%\x88D\x95 \x18U\x82`\xaf\x12\t4*\x91\0\xa3\x12\t\xb0*A\b\xaa\x04\xc1\x81J$\xa6\xc21\x80*Ah\xa4\x12D\xf5\x8d&T\tBc\x95 \x12U\x82`T\t\x82\xbdJ$\xf0\t]\xeb\x19K\xd4\x19\x1069P\tc\x04#\x15\x16\x85qi)\x10\rG\xa1r\x18\xd2\xc8\x87EAC,\x15\n\x89)p\x1e>\xe7\xbc\xbf\xea\xa1\xaeX>\x17\x17\xcb\x82\xc2X*\x96\x19[\x02\xb5\xc6r 8\x96\x02\xd51\xd4\x87\x105\xfacQ\x10!GEJd\n\x94\xa1\xedQ\x93,\x15\t\x93\xe5su\xb2,H\x94\xa5b\x9d\xb2%P\xac,\x87\x8ae9/[\x861\xdaeP#`\x06\xb5*fa\x942\xcb\x05zf\xe8*\x1c\xb2\xa8l\x96\x8a\xe4\xcd\xf2\'\xb5\0\x85\xceR\xb1\xda\xd9\x12(y\x96C\xdd\xb3\x9c\x17?\xc3<\x85\x1e\xfe\x1c\x96\xadc\xb4\xdfR\x81*\nb4Q1\x90\x15%@\x0f\r\x81j(\x94\xd1B\xc5@\t\x95\buP\xe8\xf3\xe0\xfe\xe7}\x95\r\x15P\xd9\\\xff\x94\x03\xf5S"\xd6>\xe5Q\xf9\x94\x01\xddS\x02TO\x88\x0f\x01f\x14O1\xd0;CDj\'t\x19\xd8\x17\x95N\x89H\xe7\x94\xcdUN9\xd08%b\x85S\x1e\xf5M\x19T7e\xbc\xb6\tn\x94M0\xa3k\x82YUS\x105M\x99@\xd1\x04\xaa\x82\xc1\x86j\xa6D\xa4e\xca\x9e\x18\xbf\xa8cJ\xc4*\xa6<j\x982\xa8`\xcax\xfd\x12\xfc)\xf0\xd5\xe7\xa0\\\x1da}6\tT+\xb5\xd5H\x16\x01 \x01\x84\x82X1\x8aJ\x95p#S\x04\x80F\x11\x1a\nT\xe2\xce\xf1\x9e\xe7a\xbdB]"*\x17%"@\x91\b\x8d\xe5\x88H\xd4"\x82A\x88\b\x05\x15J\xe8\x07\x04\x8c\xfe\x10\0\xe2\xc3h\xa4<\x89+\xd1j\xa89\x84F\x82CT\xae6D\x80\xd4\x10\x1a\xeb\f\x91(2\x04\xa3\xc2\x10\xec\xe5%\x81F[\x12`\x84%\x01VU\bAI!8\xd0\x93\xc4T8\x06PI\b\x8dd\x84\xa8\xbe\xd1\x84\x02Bh\xac\x1eD\xa2t\x10\x8c\xbaA\xb0\x17\x8d\x04>\xa1k=c\x89:\x03\xc2&\x07*A\xb532\xc1\b\x8cG\x86A(\x04F\xa5 \xc2H\x05#\xa0\x15\f\x87bA\xe4yv\xdf\xf3\xb8z\xa1^0\x97\x0b\x063\xa0\x18\f\xc7\x92\xc1,j\x06\xe3 \x1a\f\x83j\x10\xfc!C\x8cn0\x02\xc2!p\xa4\x1cD\x96\x99\rQ;\x18\x8e\xc4\x83\xb9\\=\x98\x01\xf9`8\xd6\x0ffQ@\x18G\x05a\xdcK\b\xa1FC\b1"B\x88U\x11\x86PF\x18\x0ft\x84\xa8*\x1b&\xa8$\fGR\xc2\\\xef\x98C1a8V\x13fQN\x18G=a\xdc\x0b\n\xa1O\x99\xd7=ge\xea\x1c\x89[\x1f\xa8\nU\xc6\xa8\n#0l\x19\x06U\x11\x18U\x85\b\xa3*\x8c\x80\xaa0\x1c\xaa\n\x91\xe7\xd9}\xcf\xe3\xea\x85\xaa\xc2\\\xae*\xcc\x80\xaa0\x1c\xab\n\xb3\xa8*\x8c\x83\xaa0\f\xaaB\xf0\x87\f1\xaa\xc2\b\xa8\x8a\xc0\x91\xaa\x10Yf6DUa8R\x15\xe6rUa\x06T\x85\xe1XU\x98EUa\x1cU\x85q\xaf*\x84\x1aU!\xc4\xa8\n!VU\x18BUa<P\x15\xa2\xaal\x98\xa0\xaa0\x1c\xa9\ns\xbdc\x0eU\x85\xe1XU\x98EUa\x1cU\x85q\xaf*\x84>e^\xf7\x9c\x95\xa9s$n}\xa0*\xddC\x8d\xa6\xa4\xcf0d\x13\bzB \xaaI\x07\x1b-I\x9fAI\x12\x18\xeaHG\x9d\xc3\xfd\xce\xa3\n\x85\n\x92\x98\\?\x12\x0e\xea\x91\xc0X;\x12\x87\xca\x91P\xd0\x8d\x04\x82jt\xe0\x07\xf8l\x14#}\x06\xbd 0R\x8b\x8e*\xc1N\xa8\x14\t\x8ct"1\xb9J$\x1c4"\x81\xb1B$\x0e\xf5!\xa1\xa8\x0e\t\xf5\xda\xd0}2\xca\xd0}6\xba\xd0}\xb6\xaa\x90\0\xd4\x84\x84\x06\x8a\xd0\x11\x1588\xaaA\x02#-HL\xcf8A\x1dH`\xac\x02\x89C\rH(*@B\xfd\xf8\xef>=\x81\xff<\x03_\xe3\xe7\xa8\x9d\xc1\xa8O\xbej\x86=\x010\xcc\b\x85\x81\xcf(\x8e\xfc\x84\x9b\xa1O\0\x8c}B\xc3\xc1\x9f\xb8s\xbc\xe7yX\xafp\xfc\x13\x95\x0b\0\x11\xa0\0\x84\xc6\x12@$j\0\xc1 \x02\x84\x82\n\xa4\x8f\x1f\x100:@\0\b\x01\xa3\x91\x12$\xaeD\xab\xa1\x16\x10\x1a\x89\x01Q\xb9\x1a\x10\x01r@h\xac\x07D\xa2 \x10\x8c\x8a@\xb0\x97\x84\x04\x1aMH\x80\x11\x85\x04XU \x04e\x81\xe0@\x17\x12S\xe1\x18@e 4\x92\x06\xa2\xfaF\x13\x8a\x03\xa1\xb1:\x10\x89\xf2@0\xea\x03\xc1^ \x12\xf8\x84\xae\xf5\x8c%\xea\f\b\x9b\x9c\xab\xc4\xcf\x83\x9f\xec\xb5\xff\xd6\xcf|\xe2m\x80\xc0h?\x9bx\xaa\xc1\xbc\xa9~\x96m\x8fA\xc0\x06?\x93\x98\x99\xcf4\xd4\x04hF\xc4H\xae\xd91\x04\xb0\x95S\xd48\x8a`T9\x05|\x17*\xce\x95V\x84+\xadH\xaa4}~\xddZt"\xd7^\xd5^\x8bE\x15\b\x14\xee\xb5\xb5\xa8b^\xd7^\xabE\x15\xe1\xca)\x92*\xa7\x9f\xbdx\xbdn\x87\xa4\\_\x9a\xebf \xce\xe5\x9aZ\xa1\x80VO\xb0\xf4\x977\xb8\xab^\xf3_\xcb\x10 \xa9\x9f1\x0e\x01`!B\xc1L\x84F\xb6"*7\x18\x11`5B\xd1t\x04\xa3\xfd\b\xf6F$\x10,\x99\xd0\x15\x02\x97\b\x18\xc3\x12\0\xd6%47q"\xc0\xce\t\xcc\x8c\xdd\xbd\xd4h\x8d\x9d\x004vB\xd1\xd8\t\r\x8d\x9d\xa8\xc0\xd8\x89@c\'43v\x823c\'\x18\x8c\x9d@4v\x87\xae\x10\xb8D\xc0\x1a;\x01h\xec\x84\x06\xc6\xee\b4v\x07\x82\xb1\x7fm\xed\xbc\x90kz\x80\x02d]\x05\xaca\x15\xd5*(F\xe6T\x80-\xa9\b\x1bQ\x91d?\xfdL\xa6\x13`\xdd\xbe\xa6\xcb\xd7T[\x05\xa8\xb6\n\xd8\xda*\xaa\xb5U\x8cj\xab\0\xd7V\x11\xae\xad"\xa9\xb6\xfa\x99j+\0\xf5@\xfb\'\xb7\x12\xc0\xd6g\xe4\xf7\xd6\xfc\x85\\\xfb\x06\xfd.\xe6W h\xd0\xef\xd6\xfc\x8a\xf9\x06\xfd\xae\xe6W\x04\x1a\xf4;\x9b_?\xfb\x06\xfd\xce\r\x92\xcf\xdc\x1e\x01*{\x8d\xcd\xa9\xc2\xdaWA\xed+\xac=,S\x14\xcfZUe\xad\xaa\\\xab\xde\xb6\xcb\xf7\xb1\\\xfbU\xc3[\xbfhW4[$\xbc\x95\xa5\xba\x02\xe1R\xea\xad.\xd0\x15\xa1\xb5\xb9\x02~\xad\xf0v\xd0\xce\xefS\xbe\xe6\xb5\x82\0\xb4\x187\x80]<\bj\x16\x0f\x8a\xc9\xebq\x06\xe4\x15\x85\0\xb2r\x10DV\x0e\x8c\xec\x9b\xda\xca5[Q\0gEA\x8d\x15\x05c+\n\0V\x14\\\xac(\b[Q\0\xb6"\x03\x95\xb1h\x85=]\x85=]\x05=]aOW==]e=\x8dK\xe5\xb7\xb0J~\xdb.\x7f\'r\xed\xa7\xb8\xb7v\xd1\xcb\x98\xddr\x19Ov04\xd5qQ\xab]\x81\xdc\0\x8e\x06[8.6\x8b+\x82\x16r$\f\x0b\xc7\xc1\b\xb1\x9cq]\x07\xc3\xb8q\x1c\f!\xcf\x05\xa3\xc9\x15\xc8\x07\x96\xa7\xf31\xe6x\x18n\x8e\xc3\x91\xe7H\x1c\x84\x964\xe3\xd1\xc104\x1d\x17\x8dRW \x1f\xb0\x8e\x86\xb1\xeb\xb8x\x18\xbb"8\xa2\x1d\t\x83\xdbq0\xce-W\xc5.R\x9d\x18\x12\xd5\x8f\x86DuzHT\'\x86D\xf5\xe3!Q\x9d\x1a\x12\x99~8\xd2K\x89\xa5\xeaX0P`\x1c\x97i\xcd;\x13\x07z\x87!\xa0wq\xf4\xe7]\xbb\xb0\xe5\xa0\xc6\xbbvQ\xbb\xe0\xeb6<R\xc8\x07\x1e\x9c\x8a\x98Q%\xa0\xff\x05\xfb\xb3\xd1\xc4\x11\x19\xaa\xb1\x84w\x18Fx\x17D\x10\xde\xe1\xdb\\\xef\xc2\xb7\xb9\xde\x9dx\x9b\xeb\x9d\xbc\xfc$\x8d\x96\xb7\x9f\x16\x0e\xb0\xcd\x87\xb7\x9f\0\x0e\f\x91\x98>k\x186\xa6jl2\x1a\xa7\xef\x1d"\xf7\xc3\x01\xc6N\x0e\x06ky.\xb2\x99\x05\xad\xe5,n\xecgakE\x87\xa3-\x1d\x19X\xd4\xf2}v\xcd\xca\x9c*P\xc7FCK\xf7\f9\xa6\x93\xec\x19K\x13\x006f4\xb2n\xe2\xac]\x13b,\x9a\0kKB\xd0\x8a\x04\x07\xf6KL\x9f\xe5\f\x1bS56\x19\xedDhf\xa1\xf3v\xcb4\x95k\x1fT>\x97-\x93\x02A\x80\xf9\xdcn\x99\x14\xf3a\xe5s\xdd2)\x02\xf1\xe2s\xde2\xe9g\x9a\x9b\x04\xb8\x109=\x97^4\x80\xed@\x81W\xe6\xfb\x97\xe6\xfa\x93\xb9\xd6\xe8\xc09\x06\x06\xce\x83\x98\xc09\xef\xdd\xe4!\xbcwc \xdd\xc3\x18\x97\0\xb00\xa1`fB#[\x13\x95\x1b\x9c\b\xb0:\xa1hz\x82\xd1\xfe\x04\xfbN \x10zB\xb4\xde7\x18\xfb$\xd2z\xcf\xad\xf0\x9e\x97\b|B\xc0t\x96\x97~@\xf3nK\x04\xf4]\x02\xb1\x03\x8d\xf1M/Z\x14\xba\xd2R\xd0\x9f\x96\x8a:\xd5\xf2y\xcfZ\x16\xba\xd7R\xd8\xc7\x96\xc3\x8e\xb6\x9c\xefm\xcb@\x97\xfbw\xa1\x02;a\xe7\xf7\xbe\x0b\x15\x14X\x85\xcf\xb9\f\xd1O!j\xbc"xE(\xa2r\xff0,8\x89a\xd0S\xe46\xc6O\x14\x03/Q\x02|D\x89\xc8C\x94\xcd\xfdC9\xf0\x0e%\xd07\x94A\xcfP\xc6\xfb\x85\xe2\xe0\x15\xf6m\x91\xcc"\xe8\x11=o\x8bd\xf4*\xb8\xffe\x80}\n0\xe3\x07\xd9K\x159\x91\xfb\x80 \xe0\x01\x82c\xff\'\xab\x9b\xce\'\0z\x9eP\xe8vB\xa3>\'*\xefp"\xa0\xb7\t\xc5\xae&\x18\xfb\x99`\xdf\xc9\x04B\x0fK2\xbeo0\xf6m\x94\x8c\xef\xb9\x15\xde\xf3\x12\x81O\b\x98\xce\xf4\xb9\xec\x80\xe6\xdd\x98\b\xe8\xc3\x04b\x07\xba]\xa5\xe9G\x8fCwz\x12z\xd5\x93Q\xe7\xfa\x12y\x1f{\x1e\xba\xda\x93\xd8\xe3\x9e\xc5\x8e\xf7\xac\xef\x7f\xcf\x81\x1b8\xf2\xa2\xc7z\xe8\x14@F\xbe\xe1\x8a\xacz\x9ew\xd9\x83\x7f\xea\xc1\x8d\xdfx\x1c\xdc\xc7\x93\xb9\x179\x1e\x9c\xc9q\xe8S\xd4)\xc6\x9b\x18\x01?b\x18<\x88\xe1\xc8w\x98\xcb\xbd\x86\x19\xf0\x17\x86\xd1S\x18G\x1fa\xdc{\x07\xa3\xe0\x17\x9at\x0fmG_\b\x93\xee\x81\\e\xf7\xbd\xcc\x90O\x19bz\x1br\xd5\x11\xce{\x98\x18\xe8[B\xb1W\xd36\xcat*\x01\xd0\xa7\x84B\x97\x12\x1a\xf5(Qy\x87\x12\x01\xfdI(v\'\xc1\xd8\x9b\x04\xfb\xce$\x10\xfaR\xf6\xcb\xbe\xc1\xd8\x93\xd1~\xd9s+\xbc\xe7%\x02\x9f\x100\x9d\xe8\xb7\xcf\x80\xe6]\x98\b\xe8\xc1\x04b\x07\xa6\xf6\x9a\x0e$\0:\x90P\xe8@B\xa3\x0e$*\xef@"\xa0\x03\t\xc5\x0e$\x18;\x90`\xdf\x81\x04B\x07J\xc2\x99o0v`\x94p\xe6\xb9\x15\xde\xf3\x12\x81O\b\x98\x0e\xf4\xf9Z\x80\xe6\x1d\x98\b\xe8\xc0\x04B\x07\xbeo\xfb\x8e\xcf{\xdfK\xbf\x19\x84\xfa\xcc >\x17H`\x9b\f$\xa0d\x03\t\xa2i?\x02i\xde\x8f@\x9c\xf8#\0\xf5\x8b"\x9a;\xf0^\xce\xda\x15\xf0\xd9U\xef\xfdY\xbb\xa2Y\xfc\xe6\xbd\x9c\xb5+\0\x11\xf0\xf7z\xd6\xae\x88\x8bu\xbf\x97\xb3v\x01\xf8\xac\xbd`\xc0\x92\x1b\xac>\x9f\xff\x18 \xaa\xfe&\xa8\xbe=\xdeQ\x10\xdb\xb4\xc9\xda\xb4\xc9\xda\xb47N\xb2\xf7\x91\xf9\xf7\xfepF\xd1,H\xff^\x8ea\x14\b\xd3E\xdf\xeb\x81\x8b">I\xf4\xbd\x1c\xad\b \x19\x0bd\xd7\x0f&\x8d\xed\x03\xa6\xb1}\b\xd3\xd8>\x04il\x1f0\x8d\xedCO\x1a\xdb\x87,\x8d\xedC\x96\xc6\xf6\x01\xd2\xd8>\x903H\x95\xa9\x11\xf4\xf9c{n\xaa\xd7>K\xe1\xa3?!U4\xcbR\xf8(g\xa1\n\x84Y\n\x1f\xf5\xd4S\x112\xbc\x02>\xd5\xe2c\xab\x88zM\xdej\0\xab\x83\x02\x97\xf6\x1a\xdbU\x86\xed*\x83v\x95\xd8\xae\xb2\xa7]e\xd6\xae\x12\xb2/>r\xd7\xc8g\x95\xe9\x8f&\xe5\xe9c\xab\xc5\x82_\xf9\xc9\xed\xa3U`\xc6R\x11\xd3\x93\x04@\xb3\t\x8d\xdaNTn\0"\xc0\n\x84\xc6\xa6 \x12\xedA0t6\xa1\xd0\xe3\x12\x9f\x04\0\xfa>\x8aOz\xae\xcc\x80\xd0&e\xbfM\xca>\x9b\x94\xa1M\xcaS6)c\x9bd\x8eB\xb0\xf7\x16\f\xb8~\x94\x80\xeb\xc4\x01WX\x02=(\x8b\xaf2\x91\xack\xdc\x88\x000\x19\xa1\x91\xc9\x88\xcaMF\x04\x98\x8c\xd0\xd8dD\xa2\xc9\b\x067"\x14\xdc(\xa1\x17\x19\0n\xc4h\xe4F\x89+3 \xb4I\xd9o\x93\xb2\xcf&eh\x93\xf2\x94M\xca\xd8&\x99\x1b\x11\xec\xddH\xd2[}\xaf\x1b7\x92\xf4V_\x02\xdd(Ko\x15\xc2g\xe5\x14\x11\x8c\xe6\xeb\xcb\xca\t\x0b\x04\xa6\f\xb2rB\xae\xc7\xacQVNH\xa2\xdb\x05Y9\x11w\xd1\x03\xa3#\xf6\x9e\x16G%\xca\x1e\xf8\x84m\xcb\x1f\xd9\xb6<m\xdb\xf2\x84m\xcb\x1f\xdb\xb6<e\xdb\xdc}-\tN\xec\x0f\xcd#\xcf\xb3\x0e\xed\xcf\xcc\xa3\xd2\x99s\xc7\'\xe6D_\xb4\xfb\x98\xa5\\\xd3w\x15\xa0\xfd\x80\x02\xd6\xec\x8a\xea}\x15#\x03+\xc0&S\x84\xed\xa4H2\x8e~&O\x14@_\xd2\xba\xc0\xf7\xb3.\xc2W\xb3.\x82\xb7\xb2.\xf0\x85\xac\x8b\x9ew\xb1.\xb2\xd7\xb0.\xf0\r\xac\x0b|\xf9\xea\xa2\xdda-\xe4\xda\xe7^_\xc8\x0eK\x81 \xf7\xfa\xc2\xee\xb0\x14\xf3\xb9\xd7\x17\xba\xc3R\x04r\xaf/x\x87\xa5\x9f}\xee\xf5E\xb3\xa8\xde\xb9\xf6\xd1\x8eK\xf8\x8d\xbc\x0fu!\x1b.\x05h\xd8\x1b\xc0\xb4FQm\x8d\xc1t\xc3\xa5 5Q\x01n\xa2"\xdcDA\xbe\xd4\xdf\xbel\x1et3s\xd1n\xc1\xa4\xfe{\xec\x81}h\xf0}`\xf0=\x1a\x1c\xb6`\x8ag\x1d\xc1[0\x05\xd0\xee\xbc\x05\x13\xe0`\xaf\xb1\xd2\xee\xcf\x95(|\xdc\xdco\xb1\x03+3\\*\x1c\xd0U8~\xab`\xfcV8~!\xe9M\xf1l\\W\xd9\xb8\xae`\\?\x9b\xee\xab\xed5:X\x9d{\x8e\xbc\xb5\xb3\xf4\x004\xd5\xbf\xb5\x03hd\x85\xec\xad\x1d \xc0\x1e\xf0\xd6\x0e\xc0h\x01\xf7\xd6\x0e\x80\xa0q\xb2v\x9dx\0\xd4.X\xbb\x02\x95\xeb\x9e_\xbb\x02\x1a+ \xac]\x01\x06-\xf4kW\x8f\x1aM!\0|\x9cP\xd0GB\xa31KT>p\x89\x80\xd1K(\x0eU\x82Q8\t\xf6\xeaI \fe~\tj\x97\x1b\b\xc44\x81\x1b\xf4e\x94UBA[\x19\r\x04\x96\xa8\xbe\xb1\x12I-1\xa0\xb7\x84\xa2\xe8\x12\x8c\xca\x9b\xe0L~\x13\xbc\xc7f\xef\xc3\xfe\xde\xf7\xf7\xec\xbe\xafg\xf7a\xcf\xf6\x883\x91q\xb7\xa3L\x13\x1av0\nvB\x0f\x19\x1063\xd6\xef\xc4\x05"\x9e\x88\nE\xa1\n5\xae\xeaW\xb3\xaaO\xcd\xaaP\xcdz$\x9e\xc8X\xea\xaaX\xea\xaaH\xea\x9e\xd1w\xea\f\b\x87B4\x0b\x18{\xda\xb9\xc0\xc2h-\xcb\xe1\xbc`\xb9\xd0\x9e\xb6@`UK\xa3m-\x97\x19\xd1\x92\x99)-\t\x06\xb5\x14\xce ~\xdb:\x89`\x9cM\xfa\xb6\xada\x81`f\t\xb6\xad!\xd73\xcbD\xdb\xd6\x90\xc4\x19\'\xd8\xb6F\x9c\x15a\x0b\xe3`\xb5\x1c\xceD\x96\x0bU\xcb\x16\b\xb4\xcb\xd2\xa8`\x96\xcb\xa4\xca\x92\xd9<eI\x98\xad,\x85\x92f8\xd4\x1eG\xf9\xf9\xcb\xbe\xb6\x12\x8f\xc5l.\xb3\x1c\xceh\x8e\x8b\xe65[\xe0\xb4\x06\x84s\x9c\xe5q\xa6\xb3\\6\xdfY2\x9b\xf5\f\x99\xcf}\xf6\x85\x96\xd8p\xfb\x13>\xb7\xff\x91_\xedO\xfb\xd5\xfe\x84_\xf5\xcd\x8f\xb6\xc8)\xd7\xcb\xe6J\xcb\x9dp\xafl\xde4\xdc\xa1\x07>a\xa2\x9e\x99\xd4\x80\xd1|j\xe8*\x16\xca\xea\xc4lQ\xfdhF\xa8N\xcf\b\xd5\x89\x19\xa1o\xce\xb5ENM\x1a\xd5\xa9I\xa3\xea\x9f4\x9ec\x8f\xae{\xe0\x13\xc3:\x9f\x9dK\x93\xd9PbRC\x89\xf9\fe\x98\xcaP\x06Y\f%&0\x94Y\xeeB\x99\xa5-\x94\x90\xb1Pb\xb2B\t\xef\xd4\x97\xf8:}\x89I\xf4e\x98D_\x86I\xf4e\x7f\x12}\xd9\x97D_\x86I\xf4e\x9cD_\xc6I\xf4e\x94D_\x86I\xf4\xa5KG\xf7\x8dFS\x84\xe9\xe8e\x7f:z\xd9\x9f\x8e^\xfe \x1d\xbd<\x99\x8e^\xf6\xa7\xa3\x97\'\xd2\xd1\xcb\x13\xe9\xe8eo:z\xd9\x9f\x8e^\xe6\xb9\xda\x81\xad\xd0\x8cA\xaev\xd9\x97\xab]\xf6\xe5j\x97\'s\xb5\xcb\x13\xb9\xdae_\xaev\xd9\x9b\xab]\xf6\xe6j\x97=\xb9\xdae_\xaev\x89\xa9\xcd\x99U\xd0\\\x98\xda\\\x86\xa9\xcde\x98\xda\\\xf6\xa76\x97}\xa9\xcde\x98\xda\\\xc6\xa9\xcde\x9c\xda\\F\xa9\xcde\x98\xda\\\xba$a\xdfh4EO\x92py*I\xb8<\x95$\\\xfe0I\xb8\xfcA\x92py*I\xb8<\x99$\\\x9eL\x12.O$\t\x97\xa7\x92\x84\xcb(_6\xb4 \x9a7\xcb\x97-\xe3|\xd92\xce\x97-O\xe4\xcb\x96\xbd\xf9\xb2e\x9c/[\xf6\xe4\xcb\x96=\xf9\xb2e\x98/[\xc6\xf9\xb2\xa5O8\x85\xf6\xa3Y\xe8I\xc6,\x8c\x80Y\x18\x06\xb30\x1c\x99\x85\xb9\xdc,\xcc\x80Y\x18F\xb30\x8efa\xdc\x9b\x85Q0\x0b\xc1`\x16B\xd1,\xdd\x1d\x8dQ\xd2g0I\x02\xc1 \t\x8c\xcc\x91\x98\xdc\x18\t\x07S$\x10\r\x91P4CB\xbd\x11\x12\x06&\xe8@0@\x87A\xf3W\xe6g\x86V\xf83C+\xfc\x99\xa1\xd5 \xfa\x99\xa1U\xf03C+\xfc\x99\xa1U\xf63C\xab\xecg\x86V\xf03C+\xfc\x99\xa1\x95\xf9\x91\xc8\x15\xfe>\xe4*\xfei\xc8U\x1b?\xd1k\xdf\xb1+\x1f)Q4\xeb\xbb\x95\xc4D\x14\b\x7f\xd7p\xa5\xd1\x0fEh\xdf\xa5\x80\xef\xaeU\x1b\xdc\x98\xc9\xb5_\xa8\xaf$\x8c\xa1@\xb0\xd3^\xd9\x80\x85b~\xcf\xbc\xd2\xd0\x84"\xb0;^q\x10B?Sm\x05\xf0[\xb3\x15\xa6x\xae\x06\xb6i\x1b49\xc7\x10\f\x10\xf5\xc1&\xe8\x03\x1b"P\x10;f\x93u\xc0\x06\x06\xd2J\xb6\xfd\xe2Y{\xd9c\xadd\x7f\xaf@\xb0{\\\xd9\x9d\xbcb~\x9f\xb8\xc2=\xbb\xe2\xb0#\\\xc9\xee\\\x01\x1f\x14\\e9\x9f\xab`\xa3\xbcjw\xc7\xd2S\x15\xfaR\x15\xbaN\x15\xb8N\x85\xae\x03\xdb\\\xc53\x97\xaa2\x97\xaa\x9cK]\xb6\xaa\xa3\xd7\xbe\x8e\x97\xa2:\n\x04\x95\xbe\xb4\xaa\xa3\x98\xaf\xf4\xa5\xaa\x8e"P\xb9KV\x1d\xfd\xec\xfd\xfd\xd2$\x0e]b\xb6\xd0e\x98"t\x19\xe4\x05]b2\xd0eO\x06\xd0e\x96\xf6s\x89\xb9>\x97\x98\xe0s9\xd0t\xf7KQ\x10\x05\xfc\x8f\xf1]z\x05Q4\x8b\n_\x8a\x82(\0\xc1\xddKU\x10E\xdc\xcf\xed]\x8a\x82\b@>;\xd2\xcf6Jy\xd9\xe5\x88O\xf9\x9as\xc4\x05\xe0\x1cq\x05\xf2\xdf\xcb\xb9t9\xe2\x8a\x99\x1cq\x01\xfd\xcf\xe5\\\x9a\x1cqA$G\x9c\x11\x16\x10i\xd2\xde8\xcc\x1e]z\x1fz\xf0>\xf0\xe0=z\xf0>\x1cv\x97* \x8a\x90\x93(\x80\x8e\f\x81\xbcK\xab\x1f\xd2\x17\x8d~L\xb8\x95\xac\x1f\n8\xc7\x11\xd48\x8e`\xec8\x02\xc0\xc1\x81\xe0\xe2P\x82\x88C\tB\x0e\xc5\x9fk\xe3\xf95\x8e\xc8:\x1b{W\xdd\xbb\x1e#\xf9\xc0\xd9\xf1\x8a\xf0\xbb\x1e\x8a\xb8\x84y\x85M\xc6\xbc\x82\x9c2\xaf\x88\xe4\xc6+$\xc9\xf1\nQv\xbc\x02\xfc\xae\x87 \xe7\xf2j\xcb\x95H\x8f\x02\xb6\x8e\x8afo\xc5\\\x89\xf4(\xe0;Cq\xae\xb8"\xe4U\nP%\x05X\xcb\x14u%\xd2\xa3\x80?\xa6\xbb\xf2\xd2\xa3h6\x97^\x89\xf4(\0s\xe6\x95J\x8f".^z%\xd2#\0\xb9\xfbT?\xdf\xdb\xdf\x82\xbc\x1a\xe8z\xf3J\xb4G\x01\xd2\x1e\x03\xe4+\xe2+\xab=\x06S\xedQ\xd0/\x93\xafT{\x14\x81e\xf2U+5Z\xdd=\xbc\xb8t\xe5\xc5\xc6\xc0\xf9kJW"7\x06\xc1\xd7=\x84\xc0\xf7\x97\xaeDq\f\x02o+]e?\xadyeEGz\xa1\xb2\x05\xaa\xacIU\xdc\xa4*jR\x955\xa9\xeakR\x957\xa9\xc2W\xb2\xaeX|\x04\x90X\xb2\fS\x1fLF\x18\xb5%\b\'#\x17\xa8\x8c\x0f(#\x9c\xe9\r\x84\x94\x11\x07\xe5\xf1Ae\x80\x8d\x06\xf9w9\0\x8d\xd4({\x97\x03\b\xd0\xa5\xf0]\x0e Q\xa1\xfc\xbb\x1c\x80\x82V%\xd4\b\x16\x01\xa0Z\x84\x82t\x11\x1a\xe9\x17Q\xb9\x88\x11\x01JF(\xca\x19\xc1\xa8i\x04{a#\x10\xd4\x8d\x8f\x01\xdc\xe0rg\x03\xe0\xc5Fz\b\0\xc5#\x14d\x8f\xd1@\xfb\x88\xca\x05\x90\x89\\\x05\x89\x01)$\x14\xf5\x90`\x14\xc5\x04\xef\xb3\x06f\xf2Hp((\xc4\x05\xaaB\fJ\x0b\xc1=\xfaBl&2\x84\xa3x\x12\x8c\n\xeaOq\0\x0e\xb44\x11UV\xb4\x8a-Q\x9d\xb0D\xd5k\x89*\xb6Du\xd2\x12U\x8f%r\xcd%\x1c\x84\xd7\x1e\xb9\x88Feg.\x01\x83\n\x1c\x9f\xba\x04t\xa0\xc3\xd9\xb9K\xc0dj\x9c\x9f\xbc\x04\x14hrv\xf6\x923F\x99\x15\x03qV"\xd2ges\x89V\x0eTZ\x89X\xa8\x95G\xadV\x06\xe4Z\tPl!\x8ch+\x06\xba\xad\x04H\xb7\x12\x91z+\x9b\x0b\xb8r\xa0\xe1J\xa0\x8c+\x83J\xae\x8c\x17s\xc5A\xcf\xcd1\x9b\x1b\xe3x\xfc\x96\x0f\x11#\xa4\x8a\x81\xb6+\x01\xf2n\x88@\xe1\x95\xcdE\xdep\xb9\xce+\tR\xaf\x04\xaa\xbd2(\xf8\xc2\xec\xa3\xe6g\xb2\xafL\xa8wJ\x07\x92\xa7$\xaa\x9e2=\xc2\xa7\x052\xedS\n\'\x02ep.\xc8\x8eWs&\x98\x11\x84\xab\xa2/T\xbd\xa6\xaaN\x9b\xaa:e\xaa\xaa\xd7T\xd5\x8fLU\xf5\x9b*\x9f)\x94\xf2\x93\xc5z\xa0\xef\x9d7\xd7\xf2[\x0e\f\xb8\xb3\x02\x81\x9f\x06\xfc\x1b\xce\xeb6\xbdF\xae5\xde\xb0\xc6x\xc3:\x887\x90.\x99\x1a\x10\0\xd5 4\xacK\xe2L\x85\x12\xf0\x8c@\x8dO\xc5\xfa\x11\x9aW2U\xc6T\x92\0\xa8$\xa1a%\x13g*\x99\x80g\x04j|*V\x92\xd0\xbc\x92\xc6\x05MM-\n\xd5\xb5TXgS\xc0T\xdc\xa0\xcf!Z\x87u\xc2vX*o\x8c \xa6)\x8aAC\x94\b\x9b!\xb4i\x84`\xcf\x01V\x07\xf5\xc0\xea+\x91W>\rhSs\x02\xa0\xda\x84\x86uN\x9c\xa9p\x02\x9e\x11\xa8\xf1\xa9XOB\xf3J\x92t\x98Z2\x02\xd5d8\xac\'\x91\xa6\xa2\x84<gH\x9d=\x1b\xeb\xcap^Y\x123SYF\xa0\xb2\f\x87\x95\xd5?\xf8\xc9U\xd3?\xf8\tH\x9d=\x1b+\x9b\xff\xc1Of:y5UM\x9f\xa1\xa2\t\f\xab\xc9\x7f\x97\x90\xab\xc4\x7f\x97\xd0}\xae\xe1yX=\xfc\xbb\x84\x8c\xa7y\xd2\xd4\x8e\0\xa8\x1e\xa1a\xfd\xe4\xcf\xa2q\x85\xe4\xcf\xa2y\xa0\xc6\xa7b\x1d\xb3?\x8bF\xc4\xe7\xc1N\x9e\xd6\\\xcb\xac\xcb@T\xab\x06\x96\xc5\x01\x01\x95\xb9!\xfc%\x97\xcf\xe1_r\xf9\x1c\xfc%\x97\xcf\xf8\x97\\>\xf7\xfc%\x97\xcf\xd9_r\xf9\x9c\xfd%\x97\xcf\xf0\x97\\>\xb7V\x94\xeb\xda^c}s+]\x0f\xb4\xb1\xd7\x83\xaf\x06\xff\x1a\xbd\x84~\xdd\x1aU\xaf\xfd\xfd\xaf\xc1\xa8\n\xfb\xe3\xb4\xeb\xb6\x92\xf2\xcc\xda\xf7\xcc\xb5\xad$c\xa9\xc8\x17\x04Lu\t\b\x9f\x9f\xb8]\x06@\xed\t=u\x0bh\x87\xac\b|\xb5\xb0E\xd9\x8a\x80\tz\x1d\f\x01\xd3,\x02\xc2:%n\x97\x01\xd0,BO\xdd\x02\x9a%o\x1a\xf9ja\xb3\xb27\x8d\x84\xa0\xbf8\xfa%\x87l\xd3\x18\x8akF\xec.\x80\xb0\x81\x8c\x9f\xbe\x116\x92\xf0:\xafd\xd6P\xc6\xf3\xa6v\x0b\xff\xe3\xb7\xf5\xb5\x9e\xb6\xa6-"\xfe |\x91\x91!\xe3ou3\xb8\x91G5\xd7\xd7\xdd_.S@\xc5\xf3\xc6\xe8\xe6M\xd7$\xb9\xe6\xb6\b`\x1aAX\xba\xafy\x14\x01\xf0\xbc\xf4\xf1\t\xbf\xf7\x8c@\x9d\x01P\x07B\xb3\x8ap\xd0\x94\x1e\xb8\x81\xdf\xab\xb2\xb3\x85\x9d(6\x83\x17s]\xdbk\xff\xe0M\xf4L\x1b\xad\xe5\x07\xbb\x10`\xe1\xc0\'\xfc\xe63\x02/\b\xd4\x19\0\xd5\xca\xf5\x81\b\xfbJ,\xd7\xcd\xbdZY8\xf0\t\xbf\xf9\x8c\xc0\x0b\x02u\x06@\xdd\xf2A\xce\x04&qK\x05\xb3\x1c\xee"g\x9e\xc2\x1b=\x87\xe8K\x88\xd61\x8a\xd5\x0f\xf7\x07\xccBX\x87[\x80\xbb\xfe\x02\xf1\xa7\xe0\x16\xcf\x01\xf6\x12`u\x84A\xad\xa3m\x81p\x12\xe7\x81J\x0b\x8e\xb5\x16\xe2)\xba\xcbs\x04\xbeD`\x1d\x82Xue\xf2\xba\xdb\xa4m\xae\xb7\xcb\xd9.\x1c\xf8\x84\xdf|F\xe0\x05\x81:\x03\xa0~\xd9N\x86\t\x97\xdc\xcb\x95\xf3\xb9\xbd\x85G\x9f\xb2/?g\xc8K\x86\xd49\x02U\xcc70\xcc\xb8L[\xae\xa3O\xb4-<\xfa\x94}\xf99C^2\xa4\xce\x11\xa8c\xbeo!\xe6VC\xa4\xf4yc\xaf\xfd\xccz\xab\x7f\x7fL\x01\x17\x03c4\x9byo\xfd\x9f\x17\x13P\xc2`\fhp\x8b\x11\x8di\x11\xb2\x97U\xc1\xad\x042\x15\b\x96\xf8\xb76l\xa9\x98_\xe2\xdfb\x90RqX\xe2\xdfJHR\x01\x9fovk\x02\x90\x04\xf8\x05\xc6\xd8\xc1\x0e\xbbkz`$\x97\xa9y\xfa9\xd9\xdf|\xd6\xd6*(\x8d5\x90\x18_\xb1\xd4~\xfdL\xcdT\x80,/\x80n \xb3\xadm\xcf\xb6\x96J\xe9S\xe8\xb3o\x16\x81\xbem\f\xe6\r$&k%\xe3YS\x89\xf0\xed%\x10\x1aM(\xb4\x1cC\x81wa(\xf0\xeeD(\xf0\xce\xbfY\x1c\xa2\xde(\xc1{\xc51\x95\x1b(~\xab8f3c\x05\xef\x14\x87\x14\x18.z\xa38\xe2\xeeb\x93\xa0)\x1d\x17\x19\xf4\x8b\xd99\x7f\xc1\x9d\xf3\x97`\xe7\xfc\xb5;\t\x99\xf2\xb5\x17\xc8\xafp\xee!h&\x98_\xf5\x94C\0\x88\xd8\x0b.Z&\bG+\x04\xe0\x13\f\x02\xe0\xed\xea\x10\x86\x9a\xf7\xbe]\x1d\x16\xc8\xdb\x13\xbd]\x1drq+\xc3\xb7\xabC\x12\xda\x1e\xbd]M\xdc\xce\xccz;3\xbb\xedp^\xdb\x053\xda\x0e\xd7\xf9;\\\xd6\xef\xc2e\xfd\xaeoY\xbf\x83\x97\x8a#\xb8\xee\x81\xe1\x11=/\x153\x9d,\xf4\x8c@\x9d\x01p\xdb\xeco\x8e\x11qo\xa2a\xf7\x18\r\xbb\x0f\xa3a\xf7A4\xec\x1e\xa3a\xf7=\xd1\xb0\xfb,\x1av\x9fE\xc3\xee!\x1avo\xfe\xa4\xda=\xfe5\xb5\xfb\xe0\x0f\xa9=\xa4c:\xbe\xf6+\x94\x07<\x94c4[\x90<\x98#8\x06\xc2_r~\xb0\x07n\x8c\xc0\x9a\xe4A\x8f\xd7\xe8\xf3\x93\x04\x05l\f<\x8b~Gq\xef\x07\x93\xa1\xe2\0hj\x98\x9f\xe2\xa8\xbc\xd1\x98\x9d\xe2\xd0\xb8\xf9Yn\x8a\x83\xd1\x10\x90\x99bAc\x12<\x9a{\b\x8f\xe6\x1e\xfa\x8e\xe6\x1e\xe4\xd7\x83F\x1e\0\x0b\x05\xbf\x1e\x04Tn!\xff\xebA\x80\xc6\x16\x82_\x0f\x02\x18-\xe4~=\xc8\x83\xc6B\xb2\xdd\xf7MF\x0be\xdb}!\xfc\xefA\x8c"\x18\xad\xd5\xf7{\x10a\x81\xc0r\xc1\xefA\x84\\\x8f\x15\xa3\xdf\x83\b\xc9\xcc\xa2\xf9\xefAD\x94\xb5\xae\x97\xee\xc8h\x99\xa5c\xe9f:M`\xc6\xd2\x04\x80\x8d\t\x8d\xacKTnW"\xc0\xa2\x84\xc6\xb6$\x12\xadH0\xda\x8f`o99\xef\x998\xa0\xc6&\xa3\x9d\xfa\x8ew\xf6\xe6\xd4co\xe6\xb8\xfd@\xffp\xc1\xde\xdc~\x8fw\xdeG7\x15e\xf1\x80\xb9\xbd\x04\xf9\xc6\xaeD\x8d_\xc1\xa7\xf5i\xcf\xdeG\xc5\x02\xd4<\xdcG\xc5\xc6y\xd9:\xbc\x03\xd6\xe5\xe4\xa9\xf9\xde\x86\xb92\xccT\xc6\x86\xb9\xc6X\xae\x0e\xbe\x8b\xd58q\xfa\xbd\x97\b\x90\x07\xcc\xe3%\x024v%j\xfc\n>\xb5\xef,\xdb\xafG\x9fzpS\x01\x87\x9bz8\xbc\xee\xb9\x0f\xd6\xca\x93y\xe54\xe6\x04\x88\xa9\x90\xc6\x9c\xc6\xbeL\x9d}\x0b\x1f\xdf{hN\xab\xec\'\x04\xccc\x13`\x9e*\xabL\xff\x15|f\xb6\xcadB\xa4\xc2\x03\xe6\x91\t0\x8fD1\xd9\x87b\xb2\xef\x13\x93ofM\xfc\r\x97\xc3\xdf\x82\x950\x85czNy,\x1bS\xfe\x9c\xc7\xdf\x86\xb8\x85\xe1v\x9b\xdbGsu6\x99)\x97\xbet\xe3\xbf@ \x9d\xe0\xe4\x8c\x1e\xabY\xd0[\xcb2\xd1\xd1\x9a\xe5}\xfc\xca0\xd6\x06y\xad\x0f\xde\x04\x04R5\x02\x86\xa2\x85\x11c+\x98\xf3\xfa\xca\x9f\x05\xe9A\x01\xe3\x7fw\xcd1t\x18\x18r\xb6\x12\x01\x9fwl"\xd4\xd5\x0f\xcd\xf9\xb7\xb9\xf6\x1dr\xe03W\x0bpu\x14J\xf1\xd7\x19\x7f\xbe1\x1c;\x84\0w\xe2\xd1\x07\r\x99\b\xe0\xe3$\f\xf3\xab\x98r\x93\xbd\xbd\xc6*G\xf1\xd3C\x10?=`\xfc\xf4\xd0\x13?=d\xf1\xd3\x03\xc6O\x0f\x18?=H\xfcT\xcc\xf2\x97!\x8f\xa6uG?\xf8\x0f\xe2\x0b\x06`\x9b\x1b(\xb4\xd4\xe3@\x1e\xf1hK\b\xfa\xc4!\xadC#@z\xe9\x02w\x07#?\f\xd1\xa1\xa56\x81\x000>\xa1\xe04\x8c\xa2\xe7\xd8\x93P\xb1S\x02o\xb0\x14:\x12eVj\xdb\xd7>\x01\xd3\xa3\xa1\xb5(\xc7\x03\x9c+\xa1\xfb\f\b[\x1a\xfa\x1aQ\xb9\xc3\x11\x01^Gh\xeczD\xa2\xff\x11\fNH(x\xa2;[\x063\xff\x85\xc5\x8eh\x1e\xf4NB\xc1E\x19E?e\xbc\xdf\xfc\xea\x9b\xf49r[^${o\xac\xf1\xb3\xf7b\\\xff2Ng\xdc\xdar\x02\xa0\x83\t\x05Wf\x14]\xd9\xfd\x96\xf4\xcc\x817X\n]9\xa1\xc6\x95\t\0W&4\xb4\xa5\xff\x99g\x7f\xe3}\x06\x84-\r]9\xfb\x95g \xc0\x95\xc3_y\x06\x12]\xd9\xff\xca3\xa0\xe0\xca\xfeW\x9e\xbd\x99\xff\xc2bG4\x0f\xba2\xa1\xe0\xca\x8c\xa2+3\xdeo~\xf5W\xfa\x1c\xb92\xc7I\xbc7\xd6\xf8\xd9\xbb2\x06I\x047\x0f\xb0\x0ema\xecl\xcb\xa1s;.sq\xcb\x82\xa3\x1b\xea&\xfeF\xe6\xf4p\xa22\r`\x1c\0\xfd\'*A\x89l0\xf8\x83\x89\x10>a\xabxx\xc4\x07\x13!\x8dC\xa5\xff`",\x92\r\x9b\xe0`"\xe4p\b\x19.\x1bH\x86\xfb+\xfe\xca16v6\xb4,\x87\x03\xccq\xd90s\xec\x8f:\xd9\x8c+\x8b\x86\x03\xcf\x05\xd2\xa2\x11T\xc7(\f\xc50\x8aF\xac\x8dV\x1c1\x90s\xc4\x14)i\xbc\x85\xc2\x93\x1a}\xe5\xc7o\xe3\xd2\xa7\x8b\x81\xbc\x14C\x80\xe48x\xd4\x1fBZn%\x9b\x84\xf4\xf9\x12>_\xe9~\x92\0\xeep\x8f\x9am\xab#x\xbf\x996\x93\x8b\x8cJ8\xf9\xe1\xd3@U\xe7I^\x01T\x80dA\x81`h>\xd9W\xfd\x14\xf3\x83\xf0I_\xedS\x04N{\x9e\xf8U>\xfd\xecG\xd4\x13\xfc\xb6\xcdS\xab.c\xb9\xf6\xc7AO^G\x14\xcd\x0e\x89\x9eD1\x14\xf02\xa18\xfc\xc5\xd3\'\x11\x04\x05\xfc\x1fm}\xc2\x1f\x8ay\x86\xbf\xa8\xfbl$\xf2\x19u\xf19\x14\xc3\xe7@\x01\x9fQ\xf6\x9e{\xb4\xee9\x13\xb8gT\xb5g\x94\xb2g\xfc\x83\xbf/&\xf3\xe7\x053\x7f^0\xf3\xe7%\xcc\xfcy\t2\x7f^\xa2\xcc\x9f\x17\xcc\xfcy\xc92\x7f^\xb2\xcc\x9f\xda\xfci\xdf\x1a\xff\xb4o\x8d\x7f\xda\xb7\x0e\xff\xb4o\x1d\xfci\xdf\x1a\xff\xb4o\x9d\xfdi\xdf:\xfb\xd3\xbe5\xfci\xdf\x1a\xff\xb4o\r\x9e]\x1b\xfb\xd6h\xdf\x1a\xed[\x87\xf6\xad\x03\xfb\xd6\x91}k\xb4o\x9d\xd9\xb7\x0e\xec\xdb\xba\xed\x94\xaf\xd9m\x05pn+\xa8q[\xc1\xd8m\x05\0\xb7\x15\\\xdcV\x10v[\x01\xd8m\x19\x80\xb1G\x13\x8c\xf1\f\x02\xc0=\b\x05\x1f!4r\x14\xa2ro!\x02\\\x86P\xf4\x1b\x82\xd1y\b\xf6\x1eD \xb8\x91\xdb\xe6\xfbF\x9b\xee%\0\xbc\x8aPp-F\x03\xff"*w2&rO#\x06\xdc\x8dP\xf49\x82\xd1\xf14j0u\0\xb8`\x145\xf0T\xee\x8c\x105\xf0h\xec\x96\x185\xf008(D\r\x1c\x8a\xae*\xb53\xde\xaa\x188\xac\x12\xe0\xb3JDn\xabl\xee\xb9\xca\x81\xf3*\x81\xfe\xab\f\xba\xb02\xde\x8b\x15\x07G\x86\xec\xed\xdc*\xc6}\x14\x03\x8fV\x02\x9c\xda\x10\x81_+\x9b\xbb\xb6\xe1r\xefV\x12\x1c\\\t\xf4qe\xd0\xcd\x851\x9e\xae\x188\xbb\x12\x91\xbf+\x9b\xbb\xbcr\xe0\xf5J\xc4\x8e\xaf<\xfa\xbe2\xe0\xfeJ\xc0\b\xc0\xa4|\xee\xee\xef\x9a\xfd\xf8\x1dR\x1e\xbfC\x9e\xe3\xf7(\xb9\xf1{\x9e\xd1\xf8=Hc\xfc\x0e\xb9\x8b\xdf1a\xf1;f)~gM\x85\xcf\xbe\x8aNQ\x11\xcc+\x8bz\x8axVm\xa7\xa6\0B\x03\xbc\x962J\x7f\xc9\f?\xfbV\x10\xe8[\xc1`\xde\nb\xb2V0\x9e\xb5\x82\b\xdf\n\x02\xa1\x15\x84B+\xf4\x96\x9b\b\xf3\xad1\x84o\x91%\xf2V\x196k\x99\xe5\xb2\xd6\x19\xd2\xb7\xd0\x10\xd0J\xc3hK\xdf<\xdc\xbc\xdd\x1c\x1e\xde\xaf\xb7\x87#\x7fx\xbd~\\\xb7\xd7\xbf\xee\x1f\x1e\xff\xbdy<l\xaf\x8f\xff\ro\xae=\''),arc=a("x\x01\xb5}\xdbv\x1bI\xae\xe5\xbb\xbf\x82\x8f3k\x8dzx\xbft?\xb9\xab\xca\xeejU\x95l\x97$\x96\xe7\x8d\x92R6\x8f)\xa6\x9bTH\xa2\xbf~23\x10\x01`\x03\x91:/g\xd5j7s\x03\x99\x89\0\x10;\xee\xa9?\x1f7\x87\xc7w\xf5\xfe\xf1\xf7\xea\xf1\xb0\xbd=\x0e\xa6\x7f\x1b\xbd\xf9\xa9~x\xa8\xf6\x8f\x83\x9f\xea\xef\xa7\xc3\xf6\xcb\xd7\xc7\xc1\xff\xba\xfd\xdf\x83\xd1j9\xfb?\xed\xbf\x8b\xee\xdfU\xfb\xefj\xd8\xfd\xbb\x18\xbc\xbd\xabo\xaa\xc1\x9f\xa7\xe3c\xf5p\x1c\xfc\xba\xbf\xad\x0f\xdf\xeb\xc3\xe6\xb1\xba\xfb\xdb`\xf0v\xb7\x1b|j\x9fs\x1c|\xaa\x8e\xd5\xe1\xa9A\xf9%\x87j\xf3\xb8\xad\xf7\x83\x9f\x1b\xed\xbf\x0f.\xbf\x86\xc1\xef\x9b\xd3`0\x1a\x8c\xc6\x7f\x9f,\xff>\x9eto\xc8\xfaW\xfb\xed\x7fB\xf5\xeb\xcf\x83\xe9d8\x9bf\xf8\xfa\xf7p\xdc|\xa9\x06\x93\xc5p\xbe\x1aL\x97\xc3\xd5\xf4M[\xae?6\x0f\xd5\xe0_\xd5\xee\xa9z\xdc\xden\xde\xbc\x0b\xbb\x1dB\x9b\x87\xed\xee\x04\xe0\xba\xea\xca\xfd{u\xb7\r\x0fo~}\xdc\xec\xb6\xb7o\xf7_v\xd5`\xf8\xe6\xd7\xe3\xbb\xedKu\xf7a\xfbx\xfbup\xbf\xd9\x1d\xab7?}\xdd\x1c6\xb7\x8f\xd5\xe1\xcf\xeaq\xf0\xcb\xcbc\xb5\xbf\xab\xee>\xd5\x0f\x9b}g\xc4?\xffY\xbf\f\xceF\xf3\xf9\xe0l<\x9e\rF\xc3\xe1p\xb0\x9a\x8c\x06o\xae\x1a\xbd\xc3n\xbb\xaf>\xd4\xc7m\xe7\x85\xb3F\xc8\xf0\xe5\xd7\xed\xed\xb7}u<\x0ef\xc37\xd7\xd5\xe1\xd8\xaa\f\x87\xe3\xbf5Ox\xf3G\xdd\x98Z\xfd\x8fF);d\xb0=\x0e6\x83\xc7\xc3\xe6\xaez\xd8\x1c\xbe\r\xea\xfb\xc1o\xdb}\xfdx\xfa^\x9d5J\xbb\xc1\xdb\xf7\x83\xcd\xfe\xee\xff\xd6\x87\xc1\xb6y\xc01\xdc\x1c\xb7w\xdb\xcda[\x1d\xff\xf6\xe6\x97\xe6Ew\xdb\xfd\x97?o\xbfV\x8d\x97;+\xfe|l\xd47\x87\xbb${\xf3\xd3\xe6\xfb\xbf\xa2\xd3\x17\xa3\xe5\x9b\xbf\xe8\xf7l<y\xf3\xf6x\xdb\xfa\xf3\xd0\t~\xae\xd2\xd5\xd9x\xb8x\xf3\xe7\xe3\xdd\xbf\xd6\x83\xc5\xbc\xfdq\xbd\x1e,\x97\xcd\x8f&\xa3\xdbx\xa4\x8c\x9e\x8cfo~\x1aL\xc6\x83\x7f\f\xd6\x7f\r\xc6\x8be\xf3\xe3\x8f\xc1\xf1\xfb\xa6\xf1\xdd?\x06\xff\x1c\f\xe9\xbf\x7f\xb4Z\x13\xadU\xbd\xdc\xee6\x0f\x9d\xda\xaa\xd5\x19-\x17\xad\x15Qw\x1au'\xb3Y\xa7\xfb\x9fP7\x8e\xbc\xd9u\xda\x8b\xe1`:\x9f\f\xc6\xcb\x19\xeb\xcf\xa2\xfel6\xef\xf4\xf7\xe1\xe1\xa6\x8d\xe8\x97}w\xc7x\xd9<\x7f6^\r\xe6K\xd2\x9fk\xfd\xbbz\xb7\xdb\x1c:\xdd\xa60g\xa3\xd1\xacQ\x1f\x0e\x16\x8bYT_D\xf5\xe5r\xd5\xa9\x7f\xaf\x0e\xb7m\xc5\xe8\xf4W\x8d\xfej\xb0\x9c5\xea\xc3IT_F\xf5\xf9|\xd1\xa9o\x1e\x9a\x1b\x8eML\xba\x1b\xa6\xd3\xe6\x86\xd9`>\x15\xe6\xaf\xc85\xe31\x177\xe6]{\xc7l\xd2\x15x4c\x07M\x87\xe4\xa0\xce\xab\x8dE\x9bC\xb5\xdfU\xf7\xf1\x86\xf9\xb2\x8b\xe0`\xbcZ\r\x16\x93h\xd4t\xe4\xdc\xc1\xefh<\x1eo\x99\xcf\xf8\x16\x8a\xeb\x84\x8a\xbd9\xb6V\x1d\xbf\xa5rO\x9bj6\x99\xae\xd8(\x8a\xf0l9\x8d\xaf\xd8\x85c\xd2m\xfc\xdf\x14x6\x8c\x0e\x9dNu.\xdc6L\xb3\xe9T\x9b$8\x1bM\x17M\x9djHj8\x8f\xda3m\xfa\xd7\xd3\xf7\xaf\xd5>9s\xdcDl\xdcX8i\x9d\xd7j\xcf\xf5\xb3\x1b\xdfo\xeb\xbb\xf4\xf0\xa1~\xf2\x022w\xb79~\xedT\xcfF\x8b.\xae\xe3U\xeb\x8fE\xd4^\xea\xac\xf9Q\x1d\xeaX\xbe\xa8;k\xfe\x97r`\xba\xd2\xba\xf5>\xd6\x88\xd1p\xd4\xd80\x99\xb1\xe6l\xa85\x1f\x9f\xe3C\xc7\xf3\xd6iMH\xb2\xe2\b\x14\xbf\x1e\xaa*\x07\xaf}\x7f\xe3\x81\xac<\xd6\xca\xf7u\x88\xf9\xddpd[\x17&\xac9\x01\xcd\xedS\xc55\xa1-\xd54\xd7\x9b\xd9T\xeb\x1e\xb7/QuI\xaaK~,T\xc9c\xf5D1\x9b,\xc8\x82\xfcT\xa8\x8d\x15gez\xae\xf0\xc2\x02\xaa\xfa\x96<;es\xb3\xee\x12\xd3lW\xefu&\xccF1\x13f+\xc8\x84\xeaa\xab\xd4sV\xa6;\xe6C\x9d\xed\xbb\xb6)\xe9\fY\x0eF\x8dZ\xc31\xd3UL\xf7\xf9H\xabV\xff\t\x9b]\xaa\x19\x1d\xd94)>YE\x9e\x9c\x8f\xb5\xf2\x97\xb6\x11\xaf\x0e\xa5GC\xf4\x9a\xf6\xfb\xd85v\x1dq\xb4)4]5Y1\x8e\x19<\xa7\xf85Y\x18\x89u\x13\xfd\xdc\x96\xadc\xb1\x869R\xb6\xcfg\x9a\xc5\xde\x92f\xf3\xc8y\x93\x07\xa9\xd2\xcf\xe7Z\xed\x9f\x91\xa3;\xb51\x13\xd6\x9c\xc2\xb6 \x8a\xfb\x89\xb9\xb0\xa5\xe5\x11\xbfv\xa9\x15\x7f\x8e\x01hk\xcd|!^\xbb\xd2\xaf\xfd%\xaa\xb5\x05\x9e7\x01Jj\x0b\n\xd2|4\xea\xd4\xde\xb1\xdal9a5\n\xd0\x82\xa2\xff>y\xfb\xac\xab\xd2\xd3l\xddb\xac\xad\xfbW,m\x9bM\xf3\xa9x-\xb4u\xbf\xc6fn\xd45sKVK\xd5i8\xec\xd4\xfe\x1d]\x1cc1\x1d\x0bE\x88\xc5y|mW\xda\xb9(\x06T\xa4\xdfXm6\xe1X,RsF|\xfa{T\x9b4j\x8b&U\xb3\x1aD\xe2\x0f\xf1RY\xd6\x95\xf6\xdd\x85l\x16\x17\x93U\xf6\xddr\xa8\x0b\xf1A\x84\xace.z\xde\x12b\xf11?\xaf)\x95z\x1e\xc4\xe2S|^\xdb\xd6\xcf\x97\x9c)\xcb\x89~\xed\x9f1\xb6\xd1\xbey\xdb\xca\xa7\xe7Mu\xae\\r\xc2\xcfV\xec\xbd\xe5L\xbf\xf6*\xba\x85\x9e7\x15/\x86\x9aq\x1d\xf9w\xd8\xf9O<\x8f\xa2\xb1\x9a\xc6\xfa\xbe\x8e\xafm\xdd\xb2\x12)\xb0\x84N\xc5_Qm\xd5=M\xa8A\xbd\xf8,k-g\xca\n\xea\xc5\xff\x8b\xb6M\xbaz\xc1O[\x8dt\x1e\xdf4=\xf1o\xd5#w4&m\xa9\xe7M\xa32\x8c\xfeh\xef\x81\xde\xe0MsK\x7f\xbb\xba\x9a\xb8o\xe1\xce\xc9xI\xafiX+\xbf\x86\xa25\x9d\xa7\xce\xc9\xedv{\xbb=\xdc\x86\x07zQ\xd35h\xf8n\xba\xe4\x86f\x05mRh;\xbb\xc7\xa6\xa7\x9ez\xabg\xa3\xa6yl\xa5g\xd4\xf3[\xa5\xce\x84\xec\x99q\xf1gM\x0f\xa2\xa9\xd2\x8d\t\x8b1\xdd\0\xcdS\xec\xd54\x84\xdd\xf6\xf9f\x93\xb6\"\x92-\xd0\x99\xb8\x89\x8c\xbd\x8c\x8a#\xce\x8f\xd5J\x93\xc4m|\xe2\xb0S\x9c6u9=q4\x84\x9eD\xec\xf44}\xe3Ns\xc5\x1d\xb5\xb6\x13\xa2[\xdcX'\x86\xf4\xf2\xb9x&D\xf3\x9e\xf3i<o\x1b\x96\x16\xfem\xb0m\xba\r\xdd\x8f\xdd\xe0~GwB\xcb\xf4%\xbfc<\x1ev\xe6\xf0K\xa0[\xf15y\xb7\xd5\x1b\t\xb3g:\x1a\xdb\xa8\xd7\xb5\xe5\xb3\x99\xd0\x83\xa8\xfd\x17eD;F\x1c\xa1\xeeB\xbb\xf7\x1b?s6\x94\xef^\xeag\xeeJ\xef^ir}\xe0\xb2,\xe6\xa2\xcc#\b\xd6^\x97\x99\xf5 T5\x07u\xda\xf4\xa2\xa4&t\xf9\xbe\xe7\x8cj;\xf6mJ\xb1*\xf6\x1a\xf2C[\xd5iS\xb7X5\r\xc5\xa8<\x07n\xf1&M\x0f\x91\xf5f\xda\x8f\xd4\xf3\x1f\xc7\xe4\x9b\xcb'B\x07=uA\x9aJ\xd7\x10\xc9\xa2\xa1\xae\x15)B]\n\x834\xb8i\x1f\xb9\\u\x9d\xc8\xa8\xb9\xd4/\x7f\x8aM\x01\xf5~Xm\xa5\xa9\xfb\x99\x93y1\x14\x8f\x1b\x0f\xf5\xe3^\xa2\xde\xa8{\xdeP\xe8\x8d\xb4\xde)\xe95i6\xd5\x16\x8e\xc7Z\xf5GtO\xf7\xc8\xb9\xd4\x9b$wO3\x172\xe1\xc4>nC\x84]\x9fnL\xb7\xa4\xc1\xd4|H\x84\x1bc\xb4\x9a\xd2\x94H\x93\xa4i$\xdb\xf2\x9b}>3\xad\xff\x82\xd4\xad\xa0\x1eiG\xb5\x8f\xdb\xdd]\xa4\x8d\xa6\xcb0ZF\xafL\xc6\xb1o<\x9a\xc3h3\x0e\xf6\xef\xea\xe7=\xb9\xa8c\xf4Y\xc7\xe8\xb9\xecsH\xe0<\xc6nF>qL\xde\xe4\xed<kC\x0e\xb7\x83\xd3f^'\xd2\xccd\xd2U\xf7\xd9D\x90^\xee\xfcR\xd3x\xdfN+\xa5\xaer\x9cAj\x12\xa4\xb58\x8d\x1fFsh0Ni\b\xd3\xb2\xc3\x8c\x1b\x96\xd1\x1cz^\xf7\xbb\xfa\xb0MO\x1eQ\r\x1cr/w4\x87\xdc>Vl\xcb\xb4kU\xdb\x91\xc6X\xdc\0\xed\xc5m84\x03\xf8\xdbSj [>m\xfeo\x9eM\xa7\\\x1f\xadF\xdcr\x1d\xb7\xdd<[\xe7\xd3U\x9cT\x98p\xcfk\xb4\x80Y\x854\xed\x92\xf3\xaf\xa9\xc2m\x837iG\xa5\xd4\xe0\x8d\x16@P_\xc2\xb6\xb9\xe1\xa1\xe6^B\xd3&\xb6\xf49m_9\xa5\x04I\x1d\xe9\xf4\xaa\xf6\xae\xce\xba|W\xe3\xda\xf6\xaeq34\xe2\xbb&\x85\xbb8\x83\xdd\xdb\xa0\x9f}\xbf\xe5\x8a?m*B\xd7\x8au\x8a@b\xf7;\xa98\x16\x8a\x10\xbef\xda,\xf5p\x9a\x86q:\xec\x04\x93\x11\xc5b\x01\xb1\xbb\xdb|\xf9\x92Ftm\xacg4l\xcdqXy\xfai\xfe\xcb\xbd%u\xae\xf5\xacG[\x83\xaaCu\x978{\xd4\xb0\xd7\xb8i\xd2'#\n^\xeaC\xcf&\xb1N4\xb3B\x9b/\x87\xcd\xf7X\x94\xae\x966>\x9f\x8a\xee\xef(\xf5\xa7'3\xa2\x9bf\xda\xb7zL\xfa\xdd\xd3\x9b\xe8\xb4\xcdMT\x9f\x0el\x0f\xaa\x8b\xd9\xcd\xe6H\xa9\xd8\x16\xa8\xe9\x90\xb7\x13\\iff\xb4\x9c\xf9\xb9\x98\xef\x1a\xcf\xe3]mO\x92\xef\x9a\xfbw\x89\xbe\xe4<\xce\x1e\xaeD\x9b\xbd\\\x14R\x98o\xf3r8u\xc9\xbb9\xe7.\x0bv\xbb\xed\xf7\xe3\xf6H\x1c\xd7\xb6\xe5\xcb\xa5\xb4n\x0574Qz\xfcZ\x87<7\x18\xfb\xc6\xab\x15Oa\x8cR\x17<\xf5\xd4\xd3\0?s\xe9\xaa\xa3\x97\x86-\x9a\xd1\xf6,U\xca\x15V\x94\xc3\x86fu\xda^C#\x1d\x8fZ2\x9a\x926\xb4\xf1\x9b\xdb\xf0H\xdaM\xd4Z\xf5I7\x96K\xea\x10\x9a\xd8\xeb\xbe\xdfU\xb1\x9dl\xfb$\xdd-cq\x0b\xc4\x85[\x8f\xb3fv\xa9\xf1\xcf\xa4\x1d\x9f\xa6\x06'u\xa2\x93\xf6\xc3\xe6\xf6@\xdc8\x8a\xd3\n\x93n\xfa(=|\xa9\xd5o\x0eU*l\x93\x88\x8d\xb5\x93q[\xd8\x11i\xaf\xb4\xf6]\xfd\xb8\xb9\xcdMM\xdb\xa6\xcf\x9b\xfe\xe8\xb8\xb5\x9e\xe26\x1e\x02/\xdem\x9bJ\x95\xe2\xdcT\xf6\xee\x86\xd5D\xdc\0\xecvH\xedRC0\xb3\x86\xfa\xc6\xed\xfc\xdf,)C\xacn\x9b\x85\x91f::>|\x16\xdb\xf0\xf6\x86!\xa9\xe3lh\xd8\x7f\xd9\x1c\xc2\xc3n\x13\x1eS\xa7\xa2\xf5\xfft\xc8!\x1b\x0f\xc1\xff\xf5\x97fB2vu\x9b\xfa\x1d_\xd1\xcd\x89Em\xf0\xff\xed&\xb9\xdf\x89\xedxh\xaa\xc1\x03\x90a'Il8N]\x90\xac\xff\x96&o\xda\x11\xef\x8c\xbb\xdc\xe3q2c\x11\xf5\xea\xc3\xdd}3-\x97g\xfc\x9a\x8e\xcf\xb4\xf1\xc6\xa4\x9d\x8c\xa0fr<\x81>\xc4ob\xe8\xd9\r\xbd\xe5D\xc88\xadI\xe4\xb9\x0b\xd6N\x13\x18\xd3\xa1x\xf8\x14,\xbf\x88\x96Ob\xd7a5\x9f\t\xdd\x14\xa6\xf9,\x19\xff\xd0t\x9c\xc2.[?#\xeb\xb9W0N\x93\xf4i\xa1aS\r\xc4\xf0q9\xe5.\xfc8M\x8a'\xc2\xbfk\x1b\xdc\xe31\xb6l\xabY7\xd34\xc9}\xab\xf1\x14\x87/\xe8\x97\xf1\x94;\x02\xe34{\x9dH\xa7f\xedv,\xde\x92Bcr;k\xd9\xa9\xa7)\xec4\x85Q\x93\xd9q\xe4\xb9\x1a\xf20a<\x03:k\xda\xb5f%\xafa\xe8X\x99\xe6\x8b8\x04m:\x15\xa9\xad=\x839\x88_U\xed\x1bM\xba\x91\xe8\xbcy\xcbH\xa9\xe7\x96\x99\xc9L\x8coS\xf2\xa2\xf6\x86\xb9C\x8c\xd9\x13w\xa0v0u\x8f\x06'\xb3\xf1\xa8\xf8\x8a\x8akS\x8fAy\xfeF\x976\xcd\xe3\x98\xd2R\xd7\xfcn\xfb\xb4%b\xa5\x04\xee\x96]\xc6\x85\x87\x0b\xa2\xcfO\x1e\xaf\\\xdd\xb7\xc0\xf2y\"\x18o\xc8\xae\xe4\x87+WjS\xf2,\x1a<^\xcc\xa7\x99\x17\xa4\xd1\x96\xb0^\f\xb9\x8c\xdf\xd3\x80\xb4[d\x12T\xdf\x8eM[2\x92\x83S\x1b,mVO\xc4rI\x98\xecE\x19 \x83\xb2\xb2\n\xaf\xbc\xa1\x90\xce\x1b\xc1\xdc\x93y\x9cK\x99\t^0/`'\xf5\xb94%\xb4xz\xb7\x88\xd8N\x87\x8dxx\x8aI\xf1\x8b2?\xcf\xbe\xa3\xf1y.\xbfi\xc6i\xc5a\b\xf3\xf9\xb9\x96S\xaf\x12\x83\xd5\xae\xc0t\x83\xd9fz\xf8l:\xd4\x8f\xa7\xce\xebm^\xadO\x13\x80\x1d\x83\xcfx\x14e\xec\x17=\x8bl\xfdr\xe1\xe7\xdb-W\\1\xfbVd\x92\x9c\x062\xfb\xa9\xcdG\xc7\xfc\x81\xc5]\xd0v\x069\xd1\x9e]\x94(\x9cC\xdbMC\xb5\xb3\x9d\xc5\xca\xc8\x1d\xc0\x9e\xca\x98g\xbe\xd1\x9c\x11M%\xc8yp,\xc3O\x82hyY\xa7h\x10\xf7\0\xa5A\xd4\x03\xb4y\xa6:i\xc5D\xe3\xba\xce\xa1\xe2\x19\xa823\x88\x1eW\x1f+\xa4&h\xcbE\xedZ\xdan\xb6\x04\x1e>]D_\xee\xea\x1f\xd5\xfeKZ\xfc\xed\xa6{\xc6\xa6m\xcbK\x18lw^\xc7@\x0f\xe65*\f\xd2\x94*\xac\\\xaf2\x15\x1c\xf8LL\xa6\x15\x13\x19n\xe9\xcb\x9f\xd4V\xc8\x0e{j'\xb0Z\xe5\xbe1\x97y\x1e\xd7\xc6\xc7\xc5H\xdd\xaaH\r)R\x0bK\x7fy]C'N^\xe0\xc0\xc4I\x96_~\xad\x0f\x92\x0e\xc4\xba\x14\xfa\xffB\x14R\xacva1sh9g\x8a\xa1\xcdKT\xa2*\xf1:\x95\xd1\x9e\xd2hD${\xecq\xcd\xc5\x84\xb4i\x10\x84\xd9\xa2E0\xa4\x97\x12&\xd3\x98L\x15\xa0\xb1<\xaakw$\x1cC7\xf7\x10\xa77\x9aaE;_\xd4e\xe5\xc4w\xa3`&\xf6b\xb1\x17\xa2\x06\xb2~\x07$\xeb\x8aq \xeb\xce\xdd~\xd3C\xd8=n\xbf\xefN\xc9\x8e\xb4]e\xee;E0o\xb9\x021\x9bnTehI\x14m\x9e.h\xce~sx\xdcnvw\xdb{Zhi\x06g\xed\xa4[\xb7\xc8\xeb\xd7\x89\x93\xee!\xca\x9e\xd0\xb0\xd0\xda\x88>AZ\xcdE\x832\xd5A\xed?ko\xe8\xb6^\x15\xea\xfe/p\x03su\xa9%P\xf6Kv)x\xbf\xc2\xe1w\xee\x91\xe1\r\x895DO\xf4\xf5\x86{/\x82\x9bW\xa0\n\xbaAT&\x91\tif\xc26\xf39\x13^u\xfc\xaf\xa2\x8d\x19Q\x1bc\\(6Z5\xe3b\xbb\xdbJ\xfb#/\x10\x1c\xeao\xd5^.\x13\x8cf\xc3\xb8L0\xf4{V\x87\xea\xcb\xf6\xc83\x89}]\xab\xdc<q\xed\x9b\xf2>\n\xac\x7f<\xa8S<\x9dwJ\x18\x9eNMvh\xda\xbe<a>ji\xaf%v\x9b\x039-\x998\x8a\x19\x99[$Q?\xd2:W)\x03j\xd9\n\xf0\xa2\x1cf@n\x8f\xf8\xd1\xdc\x16!\x7f%]1\xedR\xd2\x9dM\xe3D\x01m\x12\xe2\x8dEq\xf7X;K\xb6\xf0s\xf1\x97\xc74C\xe3w\xc4s\xb7NMGQ?Pn\xd81\xddR\xec\x97\xcc\x17b\x1d\n\xde2\x19\xc5\xf0<*\x8e<k'\xf8\x9a\xa6tX\x18\x94\x89Q\xcat\x98F)\xf3\xf2\x18H\xcev\xadR\xc7\xda\x1697\x1cfX\xdc\xd3\xc8x\xe3\xf3\xf2\xf0\xad\xe24\xec\x9b\x8dH\x8b\x84\x82\xb8\xd2J!\xea\xe6\xb5pQ\xc8\xb3\xc9(\x8d\x96&\xe5\xfe\x8bxx\xb9\xe1\xcdy.\xb49\xcd\x8b}FY+\x98\xd1\xb1V\xe4\x0e\xb8xx\xb9\xbb\x9e\x9b$\x7f\x02\xc8\xb4v\xa9\x9c\xd8\x7f-\x176'\fG\xa9g\xd0<\x1f\xd1\xa8\xb6\xda=\xc6\xea\xd1\x11K\x93\xb4iY\x10\xdd\xf2\x98{\x97rU\xde\xd4\x89\xd4\x9bz\xaeU_\xaa\x99cn\xaa\xddDl\xdd4E\xd5M\xa9(h!\x1d\x1fxI\xbd[\xf8_\xda\xa1~\xf6:\xfb\xe4\xac\xf3y\xbb\xb2SdE;)]N\x9aL\xd1\"\x83\x974\xb51\x9f\xd8\x04\xce\xabb<\x9b@\xfd\xdeY\xbb\r\t\xb4\x97\xb4\xd0\xdd\xf5M\x1bz<44I=\x87Y\xe7\x9f\xe5hh\x1c\x9a;\xe2\x8a\xfc\x12u\x88=c\xd9K\xab\x15\x91\x1f\x0ff\xba\xa6c4*\xd2\xccyq\xd0?/\x17\xfa7\xe8\xbb\xb5\xf3\xb0\x98\x98yz\x9a\xcf\x14t\xf67\xab,\xc3v\xcc\\~z\xa5\x9b\xe1\x9e\xbeUn\xb8mZ,\xcb}\x1aA\x0b\xedF\xb0\xb6W3/\x0e=~\x83\xde\x92\x9c\xb9\xc7\xe86\x89\xf3u\xb3\x8b}\xe6\xb8|\xdeT\n[QRs\xd9\xce\x94\xff7\xda\xca\x9c\xceH!\xaf3\xe0^\xec\x8f\xc8\xbdH\x98\xdd\xc8tcjK\x1f\xeb\xa4\xda\"\xc6\x93\xafu\xb1+\xe1w\x11SC\xc7i\xf9St\xdd\xc4v-\x9c\x05\x17\xbe\xa7z\x15m'\xf7\xb7\xbb5\x8b\xd5\x8a\xa7\xc0{\xc6\xb7Y\x1b':z*b\xa6B\xcb@e\xde\x9fR}\xb9k\x9ag\xdaR\xdf\xb4\xe1\xd3\xd1(\xae-a\x12\xa5\xac\x10#\xd7rBp?\x8a\xcb\xfc\xfa\xf4X\xe0g\xf7\x8c0\xa7\xb3\xd4a\xbd\xdb\xdeR27\xeb\xa9g\xcb&`M\x0b\xb3\x98\x8f\x0b\xd3\xb0<\xcb\x94\xf6U\x17\xfb\xc2\x86\xa4\xa87'7\x7f\x99q\x0e'?\x8fsF\xfe\x8cT-&\x02\x85\x17\x0bU\xe5\x93\x99\x17^\xa6\x1e\xe9\xb4\xcc\x99%\xa2\xf5\x18%w\xec\xd8.\xee\xd5\x8d\xfci\xe4\xb7\xa2\xe5JS\xa5r\x8f\xbc\xd1\xcf\x93*\xfch\\ Hy,\xdc#\x12\x18\x9d\x99:\x8c\x9a\xbf\xb9\xd3X\x1a\x15\x89L(\x91H&o\xd5\xc1\xa45c\xa7y\xcb\x1b)K\xe3\0\xb9\xad\xd2\xcc\xc3\xc8Q\xec\xb8\xed\xd3Og\xdd\xe9\x1e\xd7\xa2\xd2\xdcD\xa9V\xedE\xeb\\\x1a\xda\xe7]\x89\xa59p\xb9E\x11\xcd\xdf\xd5_\xda\x8a\xb8\xaf3\xe5\xb4\x9bF\xe4\xe9\x0e\x93\xfe\xba\xcb&j@i\xeeI\xdd \xc9\x01o\xa0\xb6\xae1\x86\x9b\xba\xa6\xcbz6\x89\x89?\x9b\xf9}\xc2/\x86nE\x1b\xb0\x84z\x99[\x18\x1aM\xa6\x8e\xd8\xd8N\f\xe4\x1c\x15\xd3\x95\xa5A\r\x07\fs\x88\xf6C\xc8-\xb2HYM\x96\xea~\xf3\xa4\xeb8\x8f\xc5\xe9(\xd3\xb9\x15\rd7\xa1\xbf\x18\x17[\xc7_\x02\x9d\xfa\xe2\xc3\x8d\xbf\xec\xef\xc4\xa9\xc8xL\xf2\xbc:\xec\x7f\xde<n\xf8\xea\xc3f\xdb\xf4<\x9b\xf9\xd0\xd9\x9b\xf3\x0f\x7f\r\xde\x0e\x9agO\x86\xe9wl\xce\x05\x10\xdd$\x01\xea\x8b2\xf4^\xfe\x8e\x8d\xb6\0\xa4\xef\x18\xbe\x90\xbf\xf1\xa5r\xac$\xd0\x9cr\x02\x8b\r\x94\0T\x83+pr\xad@\xe2f\x02\x01D\x8ec\xe0\xa3\xf8}\xd9\x04`\x9c/\xc8)\x12\x91\xa5d\xfcjp6\xcb\xbf\xa9\x98\f\xc8b2\xca\xc5d\x8c\x8a\xc9\x80.&\xe3\xa9\x98\x8c\x10_\n\xa4\xa3}\xbe\xben&:\xd2\xef\xb5\xc0?\x0f\xba\x93\xcatA\xc6\x0b\x84\xedd0\b\x97\x05\fkp\xc3\x1a\x9c\xb0\x06\fk(\x845\x98\xb0\xa6\xb5c\x81\xc4\xf2\xe6\xeb\xa7v\xe5\x96~?\x8b\xdf'\xf9\x9blg\x80\xadLXT\x11\xb5\x87\0(6\xa1P\x8f\x12\x8a\x95)\xe2\xef\r\0\xd5\x8aP\xb7nE\xd9\x85\x01\\\xbb\xdc\xaaF\"\x1b\x18\x12@t\b\xf5CDB\x8c\x13\xc1P\x07\t\x85\x8a\x18\xd1\x8f\b\xc8*I\b\xd6\xcb\x04\xbb\x953\nE\r%\0\xaa)\xa1^]%\x91\xad\xb0$\x80ZK\xa8_uI\x88\xf5\x97`\xac\xc4\x04\xeb\x9a\x1cAQ\x9d#\xb0F\rY\xb1\t\xc1\xdaM\xb0S\xc5\xa3$`0\x82\x9b]\xa1\x9c]\xa1\x94]\xc1\xcd\xae\xd0\x97]\xc1\xcf.C\x05\x04k>\x88\xe0\x13\xd6\xebg\x04N\x06\0\x8e \xd4\x12E\xac\xbb\x82(\b\0\x97\x11\nD\x91P$\x8a\x88\xbf7\0\x10\x05\xa1.QD\xd9\x85\x01\\\xbb\\\xa2 \x91\r%\t \x94\x84\xfa\xa1$!\x86\x92` \nB\x81(\"\xfa\x11\x01I\x14\x84 Q$\xd8%\x8a(\x14DA\0\x10\x05\xa1\x1eQ\x90\xc8\x12\x05\t\x80(\b\xf5\x89\x82\x84H\x14\x04#Q\x10\xac\x89\"\x82\x82(\"\xb0F\rI\x14\x84 Q\x10\xec\x10E\x94\x04\fFp\xb3+\x94\xb3+\x94\xb2+\xb8\xd9\x15\xfa\xb2+\xf8\xd9e\x88\x82`M\x14\x11|\xc2z\xfd\x8c\xc0\xc9\0@\x14\x84Z\xa2\x10N\x10l!Qp\x9e\x14\x01o(\x11\x92\x87\x10\xbe\xf7Q\xa0\x11)r\xb9D(\\\xf8h\xd9t\x97Z\xa4\xdcf\x80\x94B\x1aH\x91\x9f\x0bR\x03\x13B\xca\x80s\xa4\b\x88G\x88>\xba\xa8\xa4 \t#\x0f)\x99KFBC0\x92D\x81\x96\xa4\xc8\xe3&)\xb7\x04%\xa5\xc0RR\xe4S\x95\xd4@\xbe\x922$-)\xd3\xcc%$\x82\xbe\x04\xbavu%\x91I\x18\xd9L\xca\x1cJ\x13\xe2\xe0\x869\x94\x93<\xbc\x92\xe4\xa17\xc9C9\xc9\xc3\xabI\x1ez\x92\xdcP\x9f\x94i\xfe\x13\x92'\x97\xb3\x9e]\xf4\xe4\xa3\xc0\x89Rd\x891#\x82\x16\x19\x03\xa7\xb3\0(Q\b\x90\x10\xb3\xe8\xbd\x87\x01\x19\xb2\xc0\xa5\xc2,\xbe\xf0\xb0\x92\xb1.\t\xb2\xd4f\x07\xcb 7X\xe0g\x06\xcb1/X\x02\xd4\xc7\x02 \xbe,\xf8\xe8`\x92\xf4\x18D\xca\x13\x12\x97\xf0\xb2\\\xd0\x1dc@v,\xf0\xa8\x8e\xa5\x96\xe8X\x064\xc7\x02\x9f\xe4X\x8e\x14\xc7\x12$8\x96hz\xcb\xb8 \xb7\x8c\xad\x1d=Il\f\"\xad\xb1\xc4!\xb5\f\x05'\x84\xa1\x94\xae\xa17]CO\xba\x86R\xba\x86W\xd25\x14\xd3\xd5\x90\x18K4\x85e\xfc\xc9\xe1\x96g\x07;y\x18P\x17\x0b,q\xc5\xb2\n\xd6\"\0\xdcJ(\xf0UB\x91\xac\"\xfe\xde\0@S\x84\xba\x1c\x15e\x17\x06p\xedr\xa9\x89D6\xd0$\x80(\x13\xea\x87\x98\x84\x18_\x82\x81\x8b\b\x05\"\x8a\xe8G\x04$\x05\x11\x82\xfc\x93`\x97|\xa2P0\x0f\x01@;\x84z\x9cC\"K8$\0\xb6!\xd4\xa7\x1a\x12\"\xcf\x10\x8c$C\xb0f\x98\b\nz\x89\xc0\x1a5$\xb1\x10\x82\xacB\xb0C)Q\x120\x18\xc1\xcd\xaeP\xce\xaeP\xca\xae\xe0fW\xe8\xcb\xae\xe0g\x97\xa1\x0e\x825oD\xf0\t\xeb\xf53\x02'\x03\0W\x10j\x89\x82\xac\x13L\x91\x10pZ\x82\x81+2\x8cdA\x82\xf7\x16\x01\xbaH\xb0\xcb\x17$\xbc\xb0\x88o\x9eK\x19If\xa3\x9a$\x10\xd6\x04\xfbqMR\fl\xc2\x817\x12\f\xc4A\xf0G\x83H\xeaH\x10rG\xc6]\xf2 \xa9`\x8f\x84\0}$\xd8\xe3\x8f$\xb3\x04\x92$\xc0 \t\xf6)$I\x91C\x12\x8e$\x92p\xcd\"\x84\n\x1a!dmt$\x91$\b\x99$\xe1\x0e\x95\x90(\x98\xf0\x04?\xf1BO\xe2\x85b\xe2\x05?\xf1Bo\xe2\x85B\xe2\x19JI\xb8\xe6\x14B\x9f\f\x07<\x1b\xe4d\x11\xe0\x95\x04[b!c\x04\xb1$\x04\x1c\x98` \x96\f#\xb1\x90\xe0\xbdE\x80X\x12\xec\x12\x0b\t/,\xe2\x9b\xe7\x12K\x92\xd9\xf8&\t\xc47\xc1~|\x93\x14\xe3\x9bp \x96\x04\x03\xb1\x10\xfc\xd1 \x92X\x12\x84\xc4\x92q\x97XH*\x88%!@,\t\xf6\x88%\xc9,\xb1$\t\x10K\x82}bIR$\x96\x84#\xb1$\\\x13\x0b\xa1\x82X\bY\x1b\x1dI,\tBbI\xb8C,$\n&<\xc1O\xbc\xd0\x93x\xa1\x98x\xc1O\xbc\xd0\x9bx\xa1\x90x\x86X\x12\xae\x89\x85\xd0'\xc3\x01\xcf\x069Y\x04\x88%\xc1\x96X\xba\x97\nZ\x89\xd7\xe0\xbc\b\x02\xa5\x10\x88\x84\xd2\xc1\xef\xf1\x1a\xc8$\x82.\x95t\xa2\x0b\xbc\xf6\frI$Jl$#\x0eq\x8c\xa0\x1f\xc5(\xc3\x18F\x14\xa8#\x82@\x1c\x1d\xf8\x11\xae%iD\0)\x83P\x970:\x99\xa0\x8bx\rd\x11A\x8f*\xa2\xc4\x12E\xc4\x81&\"\xe8\x93D\x94!ED\x14\t\"\xa2\x9a\x1e\xba+A\x0e\xdd\xf5\x1a\xe4\x92\x18\"\x80\xb4\x10Q\x87\x14:A\0\xd7\x07/\x85B1\x85B!\x85\x82\x97B\xa1'\x85\x82\x9bB\x86\x04\"\xaa)\xa0\xbbz\x82\xba\xfa\f\xd7'\xbc\x86\xaa\x1fA[\xf1c\xba\x8a\x9aO\0\xb8\x89P\xa8\xfb\t\xc5\xca\x1f\xf1\xf7\x06\x80\xeaO\xa8[\xff\xa3\xec\xc2\0\xae].\x05\x90\xc8\x06\x90\x04\x10AB\xfd\x10\x92\x10cH0\xf0\0\xa1@\x04\xf1\xf2#\x02\x92\n\bA.H\xb0K\x06Q(\xd8\x80\0\xa0\x03B=> \x91%\x04\x12\0#\x10\xeaS\x02\t\x91\x13\bFR X\xb3B\x04\x05-D`\x8d\x1a\x92\x18\bAf \xd8\xa1\x86(\t\x18\x8c\xe0fW(gW(eWp\xb3+\xf4eW\xf0\xb3\xcbP\x04\xc1\x9a#\"\xf8\x84\xf5\xfa\x19\x81\x93\x01\x80'\b5D\xf1\xcf6\xc7F\xf9wvu\x02\xa4\x8f\x18\x95\xaeO\x18y\x86\x01\xed\x14\xc6\x93?\x18I\xae`$z!_\xc7\xbf\xf9p6N\xd7\xf4w\x1a\x12\xf0SR\x98\xa4\xeb\xa4\x90\x80X.\xd0\x8a \xaa\xc6j\n\xaa\x114\xaaD\x90\xa8L0\xa8\xff<x\x9b\xdd\xfes\xda\x89$\0bQ\x06\xa4\xef\x195!\xfc9\xcdX\t \xf9\x98\x91\xe4cF\xa2\x8f\xf9\x9a\x88-\x03\\W\x7fn\xabi\xc6\x9b\x1a\xba\xca\xbf\xa9\x14\f\xb0y\x19#\xf7\xe4\x87%\xbf$ :W8\x87\0\xf0\x10\xa1\xe0&B=_\x91\xc8:\x8c\x04\xe05B\xd1u\x04\xa3\xff\b\xd6N$\x10<\x19\xd1k,\xf0\x1a5\x84c\t\0\xef\x12j]\xacrV\xbf\xc58\xbb;\b)\x9d\x1d\x01tvD\xd1\xd9\x11u\x9d\x1dE\x8e\xb3\xa3\0\x9d\x1dQ\xe3\xec\b\x1bgG\x18\x9c\x1dAtv\x87^c\x81\xd7\xa8!\x9d\x1d\x01tvD\x1dgw\x02tv\x07\x82\xb3\xdf\xb5~^\xe6\xdf\xf4\x02\x06\xc8\xbb\fH\xc72\xca&0F\xeed y\x92\x91\xe4DF\xa2\xff\xf8\x9a\\\x97\x81Mn\x8c\xdf\xa5O\xb2\t\x80\xace\xc0\xe9u\xbc\x13\x9f\xe8\x10\x98\xeek\xbc\xcbg\xbe\x05\x02\x9d\x88w\xf4Q,qM\xd6f\x80\"0\xca\0\xb7\xcb\xef\xd2\xa7\xfc\x04\xa0\xfb\xb8\xef\xd4\xe7\xda\x04jZ\xfew\xf2\xa4\xab\0uO\xe0]>8)\x10h\xe2\xdf\rj\xf9\x1b-\xac]\x83j\xc7\xa0\x1a\xdf]\xbb\x1d\x90w\xf9\x8b\x13\x02\xd1\x9d\xdaw\xe9L\x1d\x03)\x87\xd9\xaf\x87\xa6\xee\xcc\xd2\xef\xc4\x13\x19 \xbf\n@vh\t\xfew[\x13\xa8\xb5\xfew\xae\t\fPn1 }\xc1(\xfb\x821\xf2\x05\x03\xa9\xcc\x8c\xa480\x12s\x8b\xaf\xc9\t\x19\xd8\xc8\xdfh\xed\x06\xad\xdd\xb8\xd6n\x1ck7h\xed\xc6X\xbb1\xd6n\xc0\xda\rZ\xab\xfb\x1f\xff\xc6\x8e\xc7\xbf\xdb\x1eqV\x0eX\x9c\xe0Z\x1f\x1c\xeb\x03Z\x0f\x1d_\xc6M\xa9\x82)UP\xa5:o\xc7\x84\xb3\xfc[\x93\xcf\xb9\x1e\t2j\xb8\xe6<\x8f\xff\x18p\x874\xe7<\xeac\x84\xea\x06\x03\x9ar\xce\x07\xdc\xce\x9cg\x86a \xd5\x04\x06l;y.\x19F`\xcc0\f\xea&\xf3\x9c\x19\x86\x11h(\xcf[\x86\xe1\xdfha\xed\x1aT;\x06\xd5\xf8n`\x18\xc6\x8dM\x89a\x18\xd0-\xf4\xb9\x18\x9f\x9d\xe3\xd0\xec\xdc\x1d\x95\x9d;\x03\xb2s\x1c\x8b\x9d\x17\x86a\xe7f\x04vn\x06_\xe70\xee:o\x07T9\xea'\xcc\xc6\x93\xcd;Iz\x17\x05\x18\x1e\xa3d^~+\x85W^\tY\xafd~\x05P*X\x17\x94\x10\xaa\x85\x92A\r\x912\x11r\x05CV*\x19T!-s\x92W)\xd8<\xd6b[\xc7\x94\x1cR^\xc90\xcb\x95\x10+\xa1\x14\xd6\x05\xb8\xc7\t\xf5k\x05\xad\xfb\x0bZ\xf7\x14\xa4P\x8d\x95J_Y\xb1r+\x19\xd4s)\x13U^\xc1P\xfb\x95\xcc#\x02\xa5`9A\x89\x81\x1e\x94\xccg\n\xa5\x82\xa4\xa1\x84\xc8\x1fJ\xa8\xa9D\x8aN~M9\xf50\x83\xe5\x9a\xdf\xba\xc9\xc5Q\xbeH\xf3\x8a\x02QS\x8a\x19\xbf\x96\x17\xeb<J\xf9\xad\x9bs\x9b\xe6\x8b4\x07\xc4\x88\x98\xee\xc9\xa0\xfek\t(H\xe8<\xa1\xa7\xec\x90\xdfrq\x190\x91\xfc\x8dO\x0f\x8e4\x82\xa5uO\x0fj\xe1\xb5AD\xe1\xf9\xb4\xddT#\xe8\x06{\xdaNKJ\x0e\x11R\xf4J>\xb3\xa6K\x8d\xfe1g\xd6\x92 \xfaB:\x89\x10tR\x82]'\xe5\xe9\t@\x84\x93\xf2\xfcD.\x95\x9e\xa0@\xd8qR\x94\x94\x9c$\xa4\xe8\xa4(:a\xa9\xd1I\x84:N\x12\x85V\xae\x92\xb8q\x98\x12\xfan\x13\xe8u\x01\x97.\x14\xb0r\xa4\xc4\x8d;\xa5\xd0s\xaa\x90\x17]\x8b:\xc6\xc1\x9a\xa0<\xbf\x19g\xfb\x04\x95\xc4\xb1\x91\x90\xce&\x04\xdd\x9c`\xd7\xc1Qxm\x10\xe1\xd4\bHw\x12\x82\x8e$\xd8qa\x94\x94\x9c'\xa4\xe8\xb6(:a\xa9\xd1U\x84\x1a']\x88\x11\xf1\x05\x8e\x88/pD|\xe1\x8e\x88/\x9c\x11\xf1\x05\x8e\x88/\xcc\x88\xf8\xc2\x8c\x88/`D|\x81#\xe2\x8b6\x9a\xd3\xfc[w\xd3. \x82\x19\xbe\xcem\xd6E\x1b\xb5\\\xf2\xbf\x06g\xf3\xf4\xfbs\x8e\xe6E\x0e\x1b\x03\\\xbc\x8c\xd1`7\xbf$\rv\x13\x10\x9f!\x9cK\0x\x98Pp3\xa1\x9e\xafId\x1dN\x02\xf0:\xa1\xe8z\x82\xd1\xff\x04\xeb l\"\b\x91\xc8-\xa3.0\xc6\xc4k\x17\xb5LD'\xb7\x8a\x13\x05\x888\xe5fr\xa1\x01\x88\x98i$\xb5\0b\xa7\x17`\x12*\x9c/\xa2(Q\b\xa5\x14A<\xa5\xc8\x0b\xaa\x94\xdb\xc8J)\x84W\x8a0\xc6R\x86\x81\x962\x1dm)\x81\x90\xeb3\x8a\x8e\x9f0\xf8\xc5\x13\x8a\x8e\x82H\x03}DobQ\x91\x10\xfa\xe0\xde\xc2A!5\xfcc{\x8e\x14\x92DH0S\xf2cD\x9e0\x06Y\xc2\x02\xc8\x11\x16x\x19\xc2R\x9b\x1f,\x83\xec`\x01\xe6\x06K03X\xa2\xf3\x82q\xc8\ny\x84\xcbx\x043\xa2p\x80\xcb\x88E6\xc83M\x13\xc4D&\xc8sN\x0b\x83A\x16x\xa7\x9c\x8c\f2 \xe3\x18\xff\xe8u\x11|\x02 \xf2\x84B\xd8\t\xf5bN\"\x1bp\x12@\xb4\t\xc5P\x13\x8cq&X\x07\x99@\x88p>\x1e\xa3\x0b\x8c\xb1\xf5\x0e\xc7h\x99\x88j>J2Q\x80\x88g>[\xb2\xd0\0D\xd2\x9c,\xd1\x02\x88a\x041\x80j\x18.\xe2\xa8q\b\xa7\x16BT\xb5\xd0\x0b\xae\xd6\xb01\xd6r\b\xb5\x16b\xc4\xb5\x14\x03\xaf\xa5:\xfeZ\x06i\xa0\x84\x97\x05\xefaR\x80\xd0\xcb\r\xa5\"RD\xe1\"S\x14.\x12F\xe1\"o4\x0e\xe9\xa3\x856\x8b\x94\x1c\x92I\xc90\xa7((\"\x9b\x12\x02y\x94`\xc8\xa0\x04{\xb9\x93d6k\x92\x04\xf2%\xc1\x98)\t\xc7\x1cI\xb8\xce\x8e\x84B^\xf0\x19\x18(;\xe6\x82{\x02\x06\x84\"\xfe|Ld\xa2\x11\x11s>8\xb2\0\x04\xe2l\x8f\x8d\x80\x04bK(F5\x0e\xa3DP\t\x80\x98\x12\n!%\xd4\x8b(\x89l@I\0\xf1$\x14\xc3I0F\x93`\x1dL\x02!\x96y\xc8\xac\x0b\x8c\x91\xf4\x06\xccZ&\xe2\x98\x87\xcb\x13\x05\x88(\xe6\xf1\xf3B\x03\x10C3z\xd6\x02\x88`\x041\x80\xb1\xbc\"\x80\x04@\0\t\x85\0\x12\xea\x05\x90D6\x80$\x80\0\x12\x8a\x01$\x18\x03H\xb0\x0e \x81\x10\xc0\xbc\xedS\x17\x18\x03\xe8m\xfa\xd42\x11\xc0\xbcEr\xa2\0\x11\xc0\xbcgr\xa1\x01\b\xa0\xd91\xa9\x05\x10\xc0\bB\0?\xb4\xb1K\xdbS?\xe4\xb8\t\x84b&\x10\xb5y\x90a1\x0b\xc3`\xda>\xc8H\xde'\xc8P\xde(\xc8\x10\xed\x14d\x80\xe2\xc2\xc8F\x94a\xa3\xd7]>\xe4\xb5|\x06\x9c\xd5\x97\x0fr-\x9f1\xbd\xce\xf2\x81\xd7\xf2\x19\x81\xa5\xa1\x0fi-\x9f\xaf\xf5\xa2\xc9\x87\xbc\xabe\x99\0^\x17\xf8\x90\xd7\xce\x18\xa0\xf4\x12\x80]H\xfc \x97\xc6\x04\xc6\xeba\f\xeau\xc4\x0f\xbc\xf2\xc5\b\xec\xd4\xf9\xd0\xaeq\xf1o\xb4\xb0v\r\xaa\x1d\x83j|w\xed.\\~\xe0\x15*F\xf4\x12\xe5\x87\xbc\x16\x95\x81\xbc\xab\x85\xfc\xfaQ\xec{\xfd\x88\xfb^?\xba\xfb^?:\xfb^?\xe2\xbe\xd7\x8f\x85}\xaf\x1f\xcd\xbe\xd7\x8ff\xdf\xebG\xd8\xf7\xfa\xa9]I\x1e\xe7\xdf\x9a)?\xe95cF\r\x13~\xca\xab\xc3\f\xb8\xfb6>\xf1:0#\xe4Y\x064\xef}j)o\x92\x7f\xebMV\x9f\x80\xe82|\x95\x13\xfeS\xf6=\x03N\r\xfc$}\xcf\x98\xae\x81\x9f\xd0\xf7\x8cC\xcd\xfc\xc4\xbegD\xd5\xccO\x82\x87?\t\n\xfe\xd4\x92m\xc6?\xebl\xff$)6aQED\x92\0\b'\xa1^LId\x03K\x02\x88.\xa1~\x88I\x88q&\x18\x82M(D<O@N4\0\xb1\xf7& \xb5Ld\x01\x01\x90\n\x84z\xf9@\"\x9b\x14$\x80\xcc \xd4O\x0f\x12b\x8e\x10\x8c\x89B\xb0\xce\x16\x9cQ\xfd\x843\xaa\x9f\xf2\x04\xaa\xd6\xc0\f2\x13\xa8I\x10\xbd+\xd2\x88\0H#B\xbd4\"\x91M#\x12@\x1a\x11\xea\xa7\x11\t1\x8d\b\x864\"\x14\xd2(/^N4\0i\xe4-]j\x99H#\x02 \x8d\b\xf5\xd2\x88D6\x8dH\0iD\xa8\x9fF$\xc44\"\x18\xd3\x88`\x9dFy)VG}\x8dE\xfe\x8c\x1a\x98Ff\x1d6\x0b\xf4>\xa5\xb1\x07cJ\x95\xf6)\xb9\nNz9\xfb\x94\\Y!\xd5\xbc}J\xae\x10\xd3\xce\xd9\xa7\xe4\xc9d\n:k\xc2\xbe\xccMG\x01\xca\xa4\x940\xa6\xa6\x94\xb9\t*\x15\x9c4\x95bLV)+\xa4\xacT1\x89+\x85&}\xa5\x10\x92X/\x8c{\x99\xb7\xf6\x9d\xf6\xd9\xd76\xc9\xed\xaf\x8a\x93\xf8O8-\xf4'\x9e\x16\xfaS\xadEi\x10U\xd5\xc1\n\r\x1aU}\x18\ba\xa3.\n\x81\xb7\b\x11\xdcv)Ga\x97f\x14viFa\x97\xfe(\xec\xd2\x1b\x85]\x9aQ\xd8\xa5\x1d\x85]\xdaQ\xd8%\x8e\xc2.\xcd(\xec\xb2%\x9bi\xfe\xadk\xc1\xa5\xa6\x15FM\xbe_f\x02a\xc0\xcd\xecK\xa6\nF\xf4\xde\xb5\xcbL\n\x19\xd8H\x837\xc6\xb7i\xac8\xcf\x80\xef\xda\x8d\xe7\xda\x8dqm\x1e.\xf2\xf3\xacg7\xe8\xd94`\xcc7\xdd\xd6;\xc1\x88\x97y\0\x99\x01\xf5\xd2\xca\x94\xaa\x82s\xa9\x97z\f)`\xafXr\x14)P*l6\xb22e\xadlY\xbf\x9e\xbe\x7f\xad\xf6\xbc\xfb\xe2\xb2\x1dY\xb2\xb86\xa6\xd7\xbe\xa1\xb5ghm\xfc\x0f\xc3K!0\xc6\xa6\xf1\xa5\xd0\xc10\xe4\x01fV9\xa8\x0bc\xfc\xc1\xf8\xfd\xe0\x1e\x05\xbe\x1c\x1c\xab\x87-F9H\x85`\x1e\x1e|\xcf\x04\xcf3\xc1x&\x94<\x13\x8cg\x82\rc\xc0\x94}\x96\x17'ua\f\x17\x1be\xd2;\xf2\xf1\xc0\xac\xa5\xcf\x07\"\x8c\f\xe8\x9c\x10D\x99\xe3\x16}F\x10a\xc3\x8apJ\x10qp\x89>'\b\xb0`J\xdd\xc7\x07\xd4\xe3L\xd3\xc7\x07\x01\xb0\xa7\xdb\xc7\x07!\xf2\xa8\xee\xe3\x03\n\x8c\x1a\xd1\x8d)\xe2\xc6\x0f\x1d\x12,\xa1=\x91\xdb\x14#\xb7\xf1#gH\x97\xe0B\xe06n\xe0\x90\x83S/AUQ\xd5u\x80\x07X\xbb*\xdf#\x86\x9c\x13\\vIUt\x89\xcb\xd5$\x02\xc2&\xd4wVUp\x96\xe1\xef\b\xd7F\xb1\xf6\x0b[\xf7\x94\xaa.\x96\xaa\xf6\x03]bw\x92\xfa%3<O\xb0\x1bo\xc3\xf8\x11>X\xc4/\xee\xc1\x8fm\xa1\x15\x88B\xa7)\x88\x82`T\x83\xff\xd6\xd0\xe3\xe4Ptr\xf0\x9d\x1cz\x9d\x1c|'\x87B\xfa\x04\xb7\xae=\x1b\xe4d\x11\xbf\xa8^[\"|\xabZ\x14\x89\x9b\xa7I\xa1i]\xa4\xd0\xf7\xad\xd4\xf0<,\xe5\xc6\xcfRh[\x1d)\xb5n\x95Rt\xae\x94\x99vHO\x12L=\x18\xdb\xa4\xd2$\x81\xab\xe0\xb4O\xce$\x81++\xb4U\xde$\x81+\xc4v\xcb\x99$\xf0d\x9b\x82{6}\xc9b\xda3){5W6\xaf\xe4\xca\xa6/Wl;'\x85\xbd\xa9\xb2\xe9I\x15\xd3\xf2\xa9Q\xac\xe6%;\xc0u\x1fY*A\xd5\xe7Y\xdb.*\xe1k\xae\xad^q\xad\xdfRJ\x05l/\xa5\xac\xcf\xf5U\xaf\xebm\x0b*\x84u\xe1\xa6\xba\xcfQ\xf5\xab\xbe\xa8_\xf1E\xdd\x97f\xc5VV\xea\xf4\xf9\xc3\xb6\xb8R\xd8\x93m\xb6\xf5\x15\xc2C\t\xefs\xd5\xa1/\xa7J\xad\xb2@\xbd\xb6Y\x88C\xe1\xb6\xd0gSx5|\xe1\x95\xf0\x85\xbe\xf0\x85\xffF\xf8B_\xf8Bo:\x87\x1e&y.\xe0\xa7\x12\xde\xe7&\xdb\xd2_\x89O\x9c\\\xe1\xd7M\xae\xf0\xc3&W\x03\xef\x9b&W\xce\xe7L\xae\xf0K&W\xe6#&W\xe6\xfb%W\xf0\xe9\x92+\xfcj\xc9\x15l\xc1\xb8\xc2\xdd\x17W\xf9T\x03\0P0}\xaa\x01P\xaf\x88\xe6T\x03\b\xa0\xb0p\xaa\x01`,\xf6F\x9ej\0\x10\x1c\xe0\x9d\x0f\xb8r\xcf\x07\\\xe9\xf3\x01\x1e\nNq\xce\x07x\"\xcf=\xfe\xf9\0O\n\x8e\xf2\xce\x07x2t\x99=\x1f\xe0I\xc0y\xc5\xcd\xf3W\xe5\xcd\xf3Wr\xf3\xbc\xc5\xc0\x85f\xf3\xbc\x15x\xee\xf36\xcf[\x19\xb8\xcen\x9e\xb7\x12t\x1bn\x9e\xb78\xb8\xac\xb0\xd7\xfc\xaa\xb4\xd7\xfc*\xef5\x07\0\x1c\xa5\xf7\x9a\x03\xea\xb9\xc8\xec5\x07\x018\x07\xf6\x9a\x03\x8cnQ{\xcd\x01\x04\x87x\xbb\xb6\xaf\xdc]\xdbW\xb8k\xdb\xc7\xc11\xee\xaem_\xe8\xb9\xa9\xb4k\xdb\x97\x83\xd3\xfc]\xdb\xbe\x14]\xe8\xed\xda\xf6e\xe0\xd0\x9e\r\xccW}\x1b\x98\xafx\x033\"\xe0R\xd8\xc0\x8c\xb0\xe7F\xbb\x81\x19%\xe0:\xdc\xc0\x8c8\xbaKo`F\x14\\\xe4\xee\0\xbe\xf2w\0\xa7\x15\xc8\xb7\x16\x01\xb7$\x18\xdc\x92`\xcf-If\xdd\x92$\xe0\x96\x04\xa3[\x12\x8enI\xb8vKB\xc1-\x04\x83[\bE\xb7tO|\x8b\xd7\xe0\x92\b\x82C\"\xe8\xb9#J\xac3\"\x0e\xae\x88 :\"\xa2\xe8\x86\x88j'D\f\\\xd0\x81\xe0\x80\x0e\x83\xe2_\x8b/\xac]\xe3\x17\xd6\xae\xf1\x0bk\xd7\x03\xef\x0bk\xd7\xce\x17\xd6\xae\xf1\x0bk\xd7\xe6\x0bk\xd7\xe6\x0bk\xd7\xf0\x85\xb5k\xfc\xc2\xdau\xfb\xed\xdcl\xf9{\x1d\x8fk\xf8bn\x86/\xe4o\x1d\xd8kw\xae\xe5\xda\x99`\xb9\xc6Y\x95\xeb\xc2T\xca\xb5\x99?\xb9\xc6I\x93k\x9c)\xb9\x1e\xf0\x97\xf0\xae\xf3\x94\b\x03TP\x06\xa4\xd1\x8c\x9a\xed\xc9\xd7y\x8e\x83\x81d\x1c#)\n\x8c\xc4(\xf05Y\x9b\x01\x1a\xa5M\xf9\x9a\xa6'f\x04\xc8\x90U\x98Ti\xeeA\0^RUNR\xc9y\x05\x061\xd3*\x93i\x95\xc9\xb44S\x90\x81Z\xfeF\x93k\xd7\xc2\xda\xb1\xb0Fc`\x84\xcf\xb812\r\xe5\x19\xc0\xec\xe71{r\xb4\x183\xe7h\x04\x11\xa9\x80\xb9\x14\xdc\xd4\tN\xea\x04L\x1d\x18\xec2nR*\x98\x94\n*\xa5\xd6-\xeb\xcc\xf2o\xbd=e\x9dY\x87\x01g\x0f\xf4Z\xb2\x0ecz\x0f\xf4\x9aY\x87\x11\xd8\x7f\xbdN\xac\xc3\xd7z\xf3\xf3Zl\xf4Z\xe3\xee\xae\xb5\xbb\xa5k\xed\xec\xe3Z\xe3\xe6\xadua\xc7\xd6\xdal\xd3Z\xe3\xde\xac5n\xc8Z\x8b]\xfak\xdc\xa5\xbf\xc6]\xfakw\x97\xfe\xda\xd9\xa5\xbf\xc6]\xfak\xb3K\x7fmv\xe9\xafa\x97\xfe\x1aw\xe9\xaf\x13c,\xd3u\x9574\xad\xf1\xd3\x93k\xfc\xf4\xe4\xda\xfd\xf4\xe4\xda\xf9\xf4\xe4\xda\xfb\xf4\xe4\x1a?=\xb96\x9f\x9e\\\x9bOO\xae3a\xe4\"\xd4BX\xa3\xc9\xb5ka\xedXX\xa31\xfe\xb7(\xd7\xe6[\x94k\xfc\x16\xe5\x1a\xbfE\xb9\xce\x84\x91\xfd\x1c\x840\xa0\xd1\xc15:8F\x074:\x14\x8c\x0e\xc6\xe8`<\xab\xbf\xf7\xb4ng\xb0rV\x9f\xb0\xb6\x9dL\xbd\xfa\xdc-D\x8d\xf2E\x9a\xe7b$-91\xa2f\x05\x19\x16S\x81\f\xa6\xf9?F\xf22\x12Cy\x1a\x8f!\x9a\xbbc \xad\x12e\xa4\xa1\x95\xe5,\xfdNMN\x06T\x93\x93Q\xd1\xe4d,59\x19\x80&'\xe3\xb9\xc9\xc9Hjr2\x90\x9a\x9c\x04lx2\xfd3/\xd60\xa2\xbb&\x9faY\x86\xf5\xec\x97c>\xf3\x02\f#\xd0\x94|\x16K-\xacD\x9ee y6#\xd4$\xce\xf9:vP\xb2\x82\xd2\xaeL\xb1\xf2\xf2\x88@\xdcrU^\xb9\xd4\xea\x07\xa3\xa6\xb4\x95)meK\x8bK\x1a\x9f\x07[\x91\xfa[]?\x1a\0\x8e\xe0}\xee\x96=\xf2\xbd\xb5)j\xed\x17\xac\xf6\nV\x9b\"\xe0\xfa\x05\x0br%a(-U0b\x02\x97{8\x19\x11=\x9c\x1c\xce kQ0\x15>\xf8\xd5;x\xd5;\x98\xea\x8ds\xfa,\xb0\xf5>\xd8z\x1f\xa0\xde\xe7\x89gD\xd0l=\xf5\x8c\xb0[$3\xf9\x8c\x12,\x1cL?#nJ\xa3&\xa0\x11E>\xcb\x07u\x12y\xe8\x83:\x80z\xf4f\x0e\xea\x80\0\x88\xce=\xa8\x03B\xa4<}P\x07P \xbf\x88J\xde \x04+\x11\xc1\xc0\x85\x84\xba\xf5\x8bdN%#\t\xd64\x82\x911\b6\xb4A80%\xa1z8\xf79-\x1d\xa8:\xa6\xd6\x13\xe0\x01\xd6\xae\xca\xf7\x88\xa1\xd1\x04\x97]R\x15]\xe2\xb2*\x89|oU\xbe\xb7\xaa\x82\xb7\f\xd3FX\xd0-\x01\xc0\xb9\x84\"\xf1F\xb86\xcf\xab}_\xd5=N\xa9\x8bN\xa9\xfd\x92\x97h\x99\xa4\xbe_\f?\x13\x8c$\xadW\x95\0v\xe8:\n\x82a\x8a\xe03`\xe8\xa1\xbaP\xa4\xba\xe0S]\x89\xccIZ \xc2P B\xe4v\xb9\x04\xe4\x80X>\xb3\b\xe4H\xdc\xc2{\xcb@\x8e\x10]`\x17\x82\x1c\x91)*.\x059\x02d\xfe,\x11\xe4\xcf\x18\xf0?\x0b\xbc&\x80\xa5\xb6\x15`\x194\x04,\xf0\xdb\x02\x96cs\xc0\x12h\x11X\0\x8dB\x16H^d\x10+7K\xa0u`\x81[\xf1Y\xec\xd4}\x16b\xf5g\t\xd6q\x96\x18\xfac\x11\xb4\x17,\x80&C\xac\xfe\xa9\xaa\x8e\xab\x82\xf6I\xae\xb1U\xd1k\xa6\x05\x11\x92^\xb7U}ns\x9b\x12\x96\x16\x9dZ\x15\x9dZ\x95\x9dj\x9a\x95,\x11-\x0bc\xd0\xb8\xb0\0\xdb\x97,\xa9\xbdg\xd7E\x97\xd6\xfd\x8e\xab\xfb\x1cW\x17]SjqX\xc1\f\bX\x84\r\x0fK\xb0\xed1\xcb\xcbV\xe2\xb4@Y\x16<\xd2\nE\x9e\x0e\xfdl\x1c\xfa\xd88\x14\xd9\xb8\xd4&\xb1B\x99\xaeC\x99\xae\xa1q\xda\xb4\x7f\xf5l\x9c~?\x8b\xdf\xfc\xc9\xd5\r~mu\xe3|h\x95(M<-\x02\xcf\b\x9c\xf0\x16|8\xa1\xf6\r\x91\x1a\xc5\x1b\"\xf0\x8c\xc0\to\xc17\x10j\xdf \x02)^#\xd0g\x17=\xb9O\xc0\xb7J\x91}uF\xc4\x8b3\xf6\xec`'\xe7^|%\x0b\xec\x0bc\xe2\x89\xb7E\xe0\x19\x81\x13\xde\x82/!\xd4\xbe\x81\xf2S\xbc\x82\x90g\x83\x9c\xcc]\xf8\x96\x04\xdb\xd7\xf0\xdf\xf8\x1dk\xe4\xd9 's\x17\xbe\xc6\xfe\x8d\xdf$I\x7fGt,\xaf\x9f\xe1\xfa\x04\xfa\xf8x\xfc;\xa2\t\xcf\x7f\x80p\xac\x80g\x04Nx\x0b\xbe\xc0\xfc\x01B\x12\xdc4\xff\xa5\x0f\x9e\xdc\xc0\x92\xef\xcd`\x97\xdf\xd3\xfc\xd6MK\x03\xa8\xf5R\x86\xf5Z\xc3\r\xae\x19\xdf\x88?\x87s\x83\x7f\x0e\xe7\xc6\xfds87\xce\x9f\xc3\xb9\xc1?\x87sS\xf8s87\xe6\xcf\xe1\xdc\x98?\x87s\x03\x7f\x0e\xe7F\xb8\xfcF\xcc(\xdf\xe0\x8c\xf2\x8d3\xa3|\xcb\x7f\x1a\x8b\xae\xbf\t\xd97\xcfk\xb7z\xbc<\x93\xe07\xd4\xf2\x9f\xa0\xcf;\xcd$\xf8\r\xb5\nO\xd0'\xa8\xf33\b\xfef5\xfd\xe7t\x8d\xe7\xf1\xfb\xe6\x96\xd7\xc0\xe2#\xf1+\xdfC#\x04\tzD\f\x1b\x13\xf0\x943Y\xd6\x8aj\xf0\"\xf0\x93\xc0!~\x95\x13\xbf\xca\x0bF\x05\xc3V\x85\n#\xb0q#\xe0\x055N\xa8\x81\x86\x99\xd6.\t\xbc@Wp$J\xa1\xc2\xba|\xa6G?\xec\x055N\xa8\x81\xd6\x99\x13>Y`\xf6Bfc\xec^HG$\x8d\xf5\x9aW\x89\xbe\xb8\xba'W\xd7\x14\xc0mt\x93\xd4\fDf\x80c\td+=\xc1\x87<;\x0f~q\xf4N\x8e\x1e\xda\xed\xb5\xdcY\x96\x87%hv\x16\x18\xbb\xb3D\x1a\x9e\xc1g\xef\xe1/\x9e\xe6\xc9\xd34\xc6\xb3\xc4Z\xafv@&\xfb\xf4\x0eH\x8d\n\x8b\xb1\x8bB\xc0\x0bj\x9cP\x03-4}\x96$\xd0{\xe5\x92!\xb0W\x0e`a\xa0\xe9\xe0$\xe4\xc5\xe8\x9c\x8c\x0e\x1ai\xbb<I\xa2\xb7\xae%s`\xeb\x1a\xc0\xc2J\xd3?J\xc8\x8b\xd19\x19\x1d\xb4\xd2\xf6\x98Hr?\xe0?\x96w\x9f\xa7<\x18\xd0\x7f\xce\xfc^\xcfp0j\xba2\xf7y>\x83\x01X?\xbe\xe7\xe9\x0bF\xd4\xfa\xf1}\x9e\xac\xc8\0y3_7Y\xbc\xab\x8e\xc7v\xf8\xbd$H\xaaWX \xd8\x7fp\xef\xee?\xb8w\xf6\x1f\xdc{\xfb\x0f\xeeq\xff\xc1\xbd\xd9\x7fpo\xf6\x1f\xdc\x8b\xed\x06\xf7\xb8\xdd\xe0\xde\xddnp\xefl7\xb8\xc7\xed\x06\xf7\x85\xed\x06\xf7f\xbb\xc1=n7\xb8\xc7\xed\x06\xf7\xf8w\x13\xef\xa1\xc30Wp\xc4\xa8\x7f\xf1\xa5;r\x94\x7f\xa7\x11y\x06\xd24\x10\x03\xea8\x11\xc11\xf1\x0e\x06\x80\xc7\x11\n\xcfL\xa8\xf7`<\x1b\xe5\xc1\xf0\x12\xf7d\x94+s^(\xff.\x8a\xf9\x93(\xde_C\xf96\xe0\x8a\xfb-g0\x03d\x80\0l'\xfd\x9b\xcc`\x81q\x063\xa8{\xee\xdf8\x83\x19\x81\x1e\xfa\xb76\x83\xf97ZX\xbb\x06\xd5\x8eA5\xbe\xbbvG\r\xdf8\x83\x19\xd1#\x9bo9\x83\x13\0\xe7*]\x18,\xf7NU\xfa2\xa7\x80\x853\x95\xbe\xd8\xc6\xc1;Q\xe9\xca\xd0\x13\xee\x89JOX\x17\xe0\x1e'\xd4\xaf\x15\xb4\xee/h\xddS\x90B\xa8\xdd\xd3\x92\xae\x10\x12\xc0;,I\xb2\x87n\xb20\xff\xd6\xb5\xfb\x01\xa6\x063*f\x043\xa6?p\xfa`\xe6\xff2\x0e\x1f8}\x10\xb3}\x19Q\x1f8}\xe8N\xfb\xcd\xd2\xefdc\x06\x845\x11\xdb\x8bB\xed\xb1P{\xb7P{\xa7P{,\xd4\xbeP\xa8\xbd)\xd4\xde\x14j\x0f\x85\x92\xf3J{Q\xc0=\x16p\xef\x15\x90\x17\x1b\x87\n\x80\xa2zK\x8dZd\x0b\r\x0b\x8d\x1a\xf5\x8b\x8f\xcb\x8c\x1aFG\xe8EF\x05\n\x97\xe4\xe1\xa7.2:\xc7\f?\x93\x80\xbfw1T\0x\xc8\xfb\xda\x85\x16Y\x0f\xc1\xb7.4\xea{\b\xbet\x010zH\x7f\xe8B\x81\xc2C\xfc\x99\x0bUd\xf4\x90\x19\x02g\x01\x9c:\x1e:0z\xabx\xe6\xd8Sp<\xe7\x9d8\xf6d\x05/z\xe7\x8d]\xa1\xf1\xa8s\xdc\xd8\x11I\xef\xc2ac\xc7i\xc6\xd3\xfeQ\xe3$\x8e\xc4+<M\0\xf8\x98P\xcf\xbb$\xb2~%\x01x\x94P\xdf\x97$D/\x12\x8c\xfe#X{\x0e'}\xf7y\x8eW\x17\x19\xfdd\xe6xIP\xc3\xbcn\x8dS\xb2u\xfb\xb2\xac\xfc,~\xf3x\xa0\x16}\xca\x1a\xfb\x94\xb5\xd3\xa7\xac\xd54\xdaT\x81\xf8\xfe\xccR\xe9\xc5y\x1aM\x03/\xf8\xf4\x93\x01\xc0\xb0\xd2\xa2Q]<\xb4[\x97\x0f\xed\xd6z\xa2*\xd9\xa6'\xaa\x1c\xf4\xc5}\xed\xc9G\xa1\0\xbd\xabC5NTM\x11\xc7\x12\xc8\x89\xaad\xa9\x9c\xa82\xd8\x8b\xf3\xb2\x93\x87\x81\xdd=KL\xb5w\xd8\xb5v\x0f\xbb\xd6y\xaa'\x19\x96\xa7z4\xf0\x82O?\x19\0\f,-O\xd5='G\xeb\xbe\x93\xa3Z(LV\xf8s\x01\x7f)\x18p*\xe1P\x1c-\xb4\xa5r\x0f{\xd6\xfea\xcf\x9a'\xb0\x92\xad<\x81\x05\xc8\x8by\xc5\xc9\"`kq\xcd\x8e:\xd8\x8d\x81\xb3\x99\x02\xe8\x01\x80\xa6\x83>\x1aU\xa7}\xb4\x88_\b\x82t\xeeG\xa3\xf9\xf0\x8f\x86\xf3\t \r\xd31 \r\xa6\xb3@\n\xbdA\xe0\xd6\0n\x81i\xf9\xc6\xa0\xb4\x1c\x83x\f\xf5J\x81w\xa8u\xd7\x14q\xf3\x88\xa8yu\xe5\x1aT\xb9\x06U\xe5\bT\xa5\b\xa8?\x87\xa1%nl*?6\x95\x1f\x9b{\x04L\xa0\xbe\xb8\xb9\xa4\xa6Z@\xf6\x15\x81\xad\x01\\\x9fm\xcb\xde\xd9\x96\xbc\xb3u}\xb0\xf5}\xb0\xf5}\xf0_\b\x18\x8do=\xa5\xdd\x19\xc0-\xdc\xae\xef\x11\xe9\xaf\x84(\xf4\x01\x01S\x9e\xbd\xfb\xa6\xbd\x9bz\xfb\x9e\xf7\xef\xdd\xbaX\x1b\xc0}]]\x8eZ]\x8aZ\xedF\r\xff\xac\x8a\x16\xfa!\xad]\xd7\xd5n\x81\xbe\x1b\x80\xc8]\x13\xc1\x7fP\xed`\0\xd7\x11\x07\xd7\xef\x87\x1e\xbf\x1b\xbf\x1c\xdd\x07\x1f\xdd\x07\x1f\x0b\xe4v\xecy\xa1\x05z\x94\x83\x01\\\xebB9\xfe\xa1\x14\xff\xe0\xc6?\xf4\xc5?\xf8\xf1\x0f~\x95\x0e^\x93\xf3\x94\xf7\x17\x12\xf0\x8c\0\xef\x97%\xe0\x84\x1a\xa9\xc1\x06\x94\x0b\xaa\x05?\xd0\x86\x1f\xae\x0f\x7f\xb8\x11\xfe\xe10\xbf\xf7w\xb1j\xf7\xefb\xd5y\xb04R\xf7># \xfa)\xb8e\xa6v\xb7\xcc\xd4\xa5-3\xdf\xf3\x8a\xd0\x8c\xae\xf3\xc2E\x02NB\x19\x1e\xfb\xdd{b\xbc\xbf\xb0?BJ}\x11m\xb6\xa0\x05\x12\xfd\x18\x92M\x85lW\xdd?\x8a_g\xb3\x05\xcb\xe2Mwy\xe7\x86\x04SO\xc1H\xa4i\xf6a\x07\xef\x96L.V\x92\xb2\xc4\x91\xa8jl\xe4G\x17,\xbe\xe8X|\x91 \x1dG\xf6\x8a\x11\xd1\xdfTA\x0e\xdd>\xef\xfc[OI\x1cr\x0f\x96\x01gz\xe2\xa06qgLOJ\x1c\xb8\xb7\xca\b\xcc6\x1c\xf2\x0e\xed|\x9d6\xc8& n\xde\x99\xf0e\x97\xe8\xb3t\xbd\x1dP\xa5:\xa4\xce\r_\x0b\xcb\x19\xcc\x863\x14\xed\xe6k2\x9b\x01\xb2:\x03\xf2\xa7t~Fw\xe2'X\xb5\xf3o\x88\xcc\x93\xaf\x1f\x06\xe3\xf4s/~\xc6g\xf1u\xcc\x17q-\x9e\xcdhti\xbe\xfe\xce\xdeL4\x91\xdd\xc9{\x8d\xb3\xce\xe3`\x9a\x7f\xca\xe7g4\xb0\xd9\x01\n\x1b\xbc\x10\x04\x1b\x82\0!\xd0-\x12\xc3\x18\x99\x80\x91\x89\xedO\xbe|\xe2b\x9c\xc4\xcfh%_g\x83\x12\x14\x15DE!\0j\x0b\xa1Pe\b\xf5\xea\r\x89l\xe5!\x01\xd4 B\xb1\x1a\x11\x8cu\x89`]\xa1\b\x84Z\x95&\xc2d\xa0\xd5\xe4\xd8L\x81\\\xc9\xe8Z\x87\x99@'\xd6$1\x01'\\G\x9d@\x881\xa1\x10\xe8\xb4\x11\x11\xae\xbd\xba\x15E;\xbc\xf6\x8a\xb0\xeb\xb9_W\xd0\br-\x8d\xd7{\xbc\xd6\xf5\x95@]i\x13\xe8\xd4\\\x12\xe9\xeaK\xd3\x95\x106\xac\xc8\x11\xb5\xb59\xe2\\y\xe9\xda\xab\xd7i\xe1I\x179x~\x0b\xc5\xd0\x87B\xe8\x83\x17z\xbf\xd6\xeb%'@\xdd\xb4\xd0$\x90fr\xb5\x0bNx\xad9\x01'i\x13\xce\x7f\xbf@\x03@\f\xfa\xaf\x17\0\xea\x11\x83\xfd\xe3\x05Z\0\xc4\0\x7f\xba\0`$\x06\xfd\x97\x0b4\b\xc4 \xffp\xc1\x040E\f\x11db\xa0k\x9d\x1d\x04:\xd9A\x12\x93\x1d\x84\xeb\xec \x102\x80P\xc8\x80\xb4\xbf\x18\xae\xbd\x8a\x1dE;\xbc\xf6\x8a\xb0\xeb\xb9_\x13C\x04\x99\x18\xe2\xf5\x1e\xaf51\x10\xa8\x89!\x81\x0e1\x90H\x13\x03m\xb8\x85\xb0!1\xe0_\r\xd0\xda\\\xfb\xe9\xda#\x86\xb4\xde\xaa\x8b\x1c<\xbf\x85b\xe8C!\xf4\xc1\x0b\xbdO\fz\xa5\x15P7-41\xa4eV\xed\x82\x13^kb\xc05\xd6\x8c\x0bGIz\x900\x92\x84\x94!UH\x99K\x18R\xc1\xa1\r)F\xf2\x902C!Rh\x88D\n\x81N\xa4\bIE\xc8 \xeb\x94D\x13\x8c\x10\t\x9a\x91(d\x9c\x14yy'\xe56\xfb\xa4\x14rP\x8a0\xdb\xa4\fsN\xc8\n\xa8K+\x02\xdb\xf9h\xb9\xe0\xbbW\x9f\bt%D\x82\xb4\x04\xba\xf7Q 0)\x02\x1aS\"\x8f\xcc\xa4\x02P\x9a\x10}w\x93\xc6\xd0\x9b\x909$'\xa4\x82\xcf$\xea\x12\x9e\xda>\xe1\xb9.\x94#\x12^I\xc5\xd0\x9b\x8a\xa1\x9c\x8a\x05Rt6N\xb8\xb2\x9ed\x05\x9aT\xbb&<W\x9e|\x14\x88\xd3\xdd2AR<\xd6`\x8e3t+\xc1IY\x8dT\x92\x82\xee\x07kT\xdc\xeb\x9dU9\xbagU\x8e\xf9hJ\xbe\xd7=\x8et\xc4?\xe8\x88\xb8|\x82\xe5\xbb\xac\xedd\xb5'\x13O\xcb\xf9\xad\x8f6\xc5\xabK\xbc\xd6sK\tt\xa6\x8e\xa2\xe8\x1a\xae\xd7y\xc6.^\x7fn\xa6\xef\xd55\xb5n\x1a\xe4\x96I\xe1iB0\xce\xf6M\x8c(\xe24{\xf8\xd46\xa8D\tO\xb9\x15e\x80\x9aN\x06\xd4~\xcd\x8c\x8aM\x9a\x19K;33\x90\xf7Zf$o&\xcd\b\x9d\xcb\xcb\xd7i\x9be\x02(\xb0\xcbd\xbd\x94Uh}\xdea\xcb\x80g}\xe5X\xaf6\xd0f\x10\x8bT\x99\"U\xa6H\xb5\xfc\x8d\x16\xd6\xaeA\xb5cP\x8d\xef\xc6\xdd\xad\x1976\xe5}\xac\x19@\xaf\xc2\x97\xff\x9e\x07\\w\x9e\xb9k\x95\x81\xd4\x9f\xca\x80\xeaDe\xd4\xecLz\xe6\xeeR\x06r\x1f)#\xb9c\x94\x11\xea\r\xe5\xeb\xd4\x05J\0%\xc5<Y\xcf\xdd\xa3g\xfeZD\x06\xf4\xf6\xfag\xf86DFM\xbf\xefY\x7f\t\"\x83\xba\x07\xf8\xccI\xc1\b\xf4\xf5\x9e\xbb\xaf0\xe4\xdfha\xed\x1aT;\x06\xd5\xf8\xee\xda\xdd\xa5\xf6,\xbe\xa7\x90\x91\xf4\x19\x85\f\xe8\x8e\xe5sN\nr\xeb\x8b8\xf6\xf2\x82\xc7^^\xf0\xd8\xcb\x8b{\xec\xe5\xc59\xf6\xf2\xe2\x1d{y\xc1c//\xe6\xd8\xcb\x8b9\xf6r\xea\xb8,\xffNu-\x03\x89\xcb2\xe0\xec=?).\xcb\x98\xdee~\x12\\\x96\x11\xd8\x18\x7f\xca\\\x96\xaf\xf5\x96\xf1Sn\xa4\x86\t\x90\xc2\n\xcd\x87\xe3\x02'\xf7\x8c\xc0\xc99\x18p\xf2N\x03\x9c\xf0\b\xc0\xc9\xec\xfb?\x99\xcd\xfe'\xb1\xc3\xff\x84\xdb\xfaO\xee^\xfe\x93\xb3\x81\xff\x84\xbb\xf6O\x85\xad\xfa'\xb3?\xff\x84\x9b\xf2O\xb8\x13\xff\xc4\r|\xf2k\x9ep\x1ek\0\xec\xd7\x13\xce\x80zE3\x13\xce \x80B\xc2\x843\xc0\xe8j5\xe1\f \x94Xw\xd9t\xa9\x8dZ\xe5\x96\x1a\x93+\xa1\xc5RW\xa5R{\xb9F\x12\xd7\x1f\x95\xef\x8f\xca\xf7Gm\0\xb78u\xd9\xf0\xbadx\xed\x9aWHL\x12\xfa\xb6c\x8a\x12\xeaF\xcd$k6O\xe4+cPZ\x16@\xd6\xb2\xc0\xf3\x04K\xad3X\x06\xfe`\x01\x96\x9a%\x184\x96\xe8<f\x1c\x9cbNb\x1b\xb7x\xcaU\xc9-\x98\xd6B\xd0\xe7\x96\xaa\xc7-^~\xb3\xb0\xe4\xb3\xaa\xe8\xb3\xaa\xe8\xb3\xda\xc3J%\xad{\x0bT\xf7\x14\xa8.\xd9\\H}\x96\x17\xcb\x84\x15\x80\x05\xa5pc5\xf81\xe0\xfe\xdd\x0f\xee\xc3e \xf5\xe1\x18\xb0=\xd0\x1f\xaa\x0f\xc7\x98\xe8\xc3ePwK\x7f\x88>\\F\xa0[\xfa\xa3\xeb\xc3\xe5\xdfha\xed\x1aT;\x06\xd5\xf8n\xec\xc3e\xdc\xd8\x94\xfbp\x19\xd0=\xe3\x1f\xb9\r\0\0\xac\xd5m\0\xa2NAL\x1b\x80\x02\xebc\xdd\x06\0\x8a%\x836@\xc3\xb5\x01\xdc\xe2\xd4e\xc3\xeb\x92\xe1\xb5k^! \xd0\x06\0\f\xa1\xd1m@B\xa3\xc7-\0\x05\"\x14\xe2\x93P\xa7\x98$\xb2\xc5L\x02\x1b\x1f\x92\x80\x03\b\xc52\x12\x8c\xf1\x89pm\0\xb78u\xd9\xf0\xbadx\xed\x9aW\x88\x0f\t}\xdb1>\x84B|\xd8O>\b\x05\x13\x12\x88\x95\x948\xc5\x16b[t)\xb4q\x13Rp\x8e\x90\xa0\x0f\x84\bc\xc8\xa2\xda\x05\x8bE\xae\xfb\x0bV\xf7\x15\xac.\x9a^\x88\xadP(\x97\rc,$\x1c\xe7_\xf6w\xe7\xd5a\xffa\xb3=\x1c\xd3\xc5\xcf\x9b\xc7M\xfb\xfb]\xbd\x7f\xfc\xbdz<lo\x8f\xff\x1f\xbcCKx"),arb=a("x\x01\xbd}[w\xdb8\x12\xe6{~\x05\x1fw\xcf\xd9\xcc\xeaNi\xe6)\xdd\xe9\xcct2\xddq\xa7M)\xda7\xd9\x96\x13\xade+\xa3\x8bm\xcd\xaf_\x80\xa8\x1b>\x14\xd5o{\xfaL\x86\xfa\n$\x81\xba|U\0A\xfa\xcf\xe3j\x7f\xfc\xb0{:\xfe\xb6>\xee7\xb7\x87j\xf4\xb7\xfe\x9b\x9fw\x8f\x8f\xeb\xa7c\xf5\xf3\xee\xc7y\xbf\xf9\xf6\xfdX\xfd\x8f\xdb\xffY\xf5g\xd3\xf1\xff\x8a\xff\xd6\xed\xbf\xb3\xf8\xef\xac\xd7\xfe;l\xff\xad\xabww\xbb\x9bu\xf5\xe7\xf9p\\?\x1e\xaa_\x9fnw\xfb\x1f\xbb\xfd\xea\xb8\xbe\xfb[U\xbd\xdbn\xab/\xf1j\x87\xea\xcb\xfa\xb0\xde?\x07To\xb5_\xaf\x8e\x9b\xddS\xf5>\xb4\xfe{u\xfd\xfdT\xfd\xb6:WU\xbf\xea\x0f\xff\xde\x1b\xfd\xbd7i\xef \xed\x9b\xa7\xcd\x7fN\xeb_\xdfW\xa3ao2\x11x\xfe\xdb\xe9\xb0\xfa\xb6\xaeF\xe3i=\xaa\xc6\x93\xe9l\xf6&\x8e\xee\xf7\xd5\xe3\xba\xba\xde<\xae\x0fo\x7f\xdam\xef~=\xae\xb6\x9b\xdb7\x1fN\xdb\xadJ\xaa(\xa9X\xb4z\xdcl\xcf*|\xb3X\xb7\x8a\x88m\xde\xa46\xef\x9e\xbem\xd7\xd5\xdb\xfe\xf8\xcd\xaf\x87\x0f\x9b\xd7\xf5\xdd\xd5\xe6x\xfb\xbd\xba_m\x0f\xeb7?\x7f_\xedW\xb7\xc7\xf5\xfe\xcf\xf5\xb1\xfa\xe5\xf5\xb8~\xba[\xdf}\xd9=\xae\x9e\xda\xfe\xfc\xf4\xd3\xee\xb5z;\xe8\xf5\xc2?\xfdi5\x9bM\xaa\xd9\xa0_\xbdiB\xb3\xfdv\xf3\xb4\xbe\xda\x1d6\xad>\xde\xf6{=\x85\xaf\xbfon\x1f\x9e\xd6\x87C5\xee\xbd\x99\xaf\xf7\x87\xd8\xa4\xd7\x1b\xfc\xad\x17Z\xfd\xbe;nn\xd7\xff\x1f\xac\x96\xd4\xb59T\xab\xea\xb8_\xdd\xad\x1fW\xfb\x87jw_\xfd{\xf3\xb4;\x9e\x7f\xac\xdf\xfek\x1d\xcez\xf7\xcfj\xf5t\xf7\xbfw\xfbj\x13N>\x9cn\x0e\x9b\xbb\xcdj\xbfY\x1f\xfe\xf6\xe6\x97p\x93\xbb\xcd\xd3\xb7?o\xbf\xaf\x83\x8a\xdb\x1e\xfcy\f\xcdW\xfb;\x96\xbd\xf9y\xf5\xe3_I\xeb\x93\xc9\xec\xcdW:\x1eM\x06o\xde\x1dn\xa3B\xf7\xd5d:|\xf3~\xcd\xbf\x82.\xeb7\x7f\x1e\xef\xfe\xb5\xa8F\x83x0_T\xfdA?\x1c\x05'\x8f\x16a'\x1f\x06\xa3\xfd\\\r\x07\xd5?\xaa\xc5\xd7j0\xee\x85\x83\xdf\xab\xc3\x8fUP\xdf?\xaa\x9f\xaa\x1e\xfd\xf7\x8f\xd8j\x98Z\r\xa7\xb3\xb6\xd5\xfa\xf5v\xbbzl\x9bM\xea`\x9ea5\xac{\xa1#\xa3\xd4z\x94Z\x8f\xc7\xe3\xb6\xf5\x7fN\xbb\xa0\xc7\x9bm\xdb\xbe?\x9cT\xc3\xd9\xb4\x1a\x87\xff\x9fL\xc7\xe9\x841\x9d\xd0K\x9dx:=\xdeD\xbb~{jOy\x1bn\xdf\x0b'\f\xab\xbaG\xfd\x99\xe4'\xdc\xed\xb6\xdb\xd5>5\x1e\xf4Z\x7f\xa9F\xc1\xaau\xecxl_\xa7\xf6\xd3v \xbfW?\xd6\xfb\xdb\x18*\xf1\x84\xe1,\xb6\xaf\xea\xd9\xb0\x9a\xcc\x06\xa9\xf945\xaf\xebi\xdb|\xf5\x18N8\x04\xcb\xb4'\x8cC\xfbYh\x1b\xfe7\xa5\xf63R\x0f]\xbe\x1dpr\xbfxB\x18\xedp2\xab\x86\xbd\x81\x8cx\xd4\xcb\xcf\xf8\xb1\xda\xaf\x9f\xb6\xeb\xfbt\xc2`\x1anQ\x873F#=\xa3\xef\x9c\xa1\xf7x\x1b\x9a\xb6\xe7\f\xea\xbe\x9e3\xc8\xd5\xb4:\xc4n\x1d\x1e\x92\xe1\xc6\xd5`4\x0b,\xa1v\x18\x91\x99\xc7uj\xffc{:$\x1d%\x03\xd4\xe1J\x93\xd4r\x94\xbb\xcdm\xe0\x9eU\xea\xc8$\xea?(\xa6\x1f\xda\xf4\x87\xc9#F\xe3\xbc\xf3\xdf\xcf?\xbe\xaf\x93qC\xc3\xc9\xa4\xed\xf5\x80\xb49\x9a\xe4\xd7\x0e\xba\xdf\xec\x92\xea\xdf\xceZg\xeb\x07\x85\xf7\x87\xd4g2\xed\x80lu\xd8\xae\x0e\xdf\xa9'Q%A\xf7#\xa3\xf7i\xae\x91\xff\xae\xf7\xbb\xe4\x96\xd1\x8dG\xe1ju\x8c\xa7\xd4v\x96\xb7\xdd=\xad\xc9\xfe\xc1\xb9\xa2\x07P\xbbq/ow|\xd9\x91'\xd6\xb1\xe5h\xa2-\xfb\xd0\xf2\xfb~\x9d\xae\x19\x18\xb4\x1d\xd9h\xdc\xd3\xd6`\xbd\xfb\xddi/\x8d\x839zCm:\x84\xa6\x9bg\xben?]wZG\x02I\x8dGy\xe3\xc3\xe65Yb\xd8^y\xdc\x0bC\xab\xa9)\x04\xe6a\xfdLf\x0b\x9d\x0b]\x18\x8c\xf5\xaa\x10\x92kq\xcda\xeaAm\xf4PC\xbco\x9e\xb8\xbb\x836\x18G\xf5X\x1bOs\xdf\xb9\xddmwO\xda\xe1a5\bv\x1e\x8d\xa9\x17\x10\x89\x87\xf5\xe3FOx;\x88Z\x9e\xe6\xa7Lz\xb9\xd3ocfi\xfb\x1dT\x17yj\x16\xec\x96\xdcx\xd2\xcf\x9b\xae\xffsZm9@\xfa\xbd\xba\r\x91\xe1\x8c\xae;\xc8\x1b\x7f\x8b\xd9}\xbd\xef\xba4X0$\xf6C\x9b\xfbb\xf3zF*T\x8e\x9d\x8c\x98\xd1\x06)\xb4\x93\xae'\xc3\xd6\xe5\xeb\xb6er\xf9\t\xd9p2\xa9\xdb\x96\xef(8\xa2s\x8eg\xeaC\x93I\xde\xee'R\xd9(\xb4\x9b\x84\x7f\xd9\xd0\x93:o\xf7s\x1a\xd1\xa0\xbd\xf1\xa4\x8d\x1f\xba1\xb3\xe8 u\xf1=\x11\xd5\xa4J\x9d\x93\x0b\xce\xf2\x0b\xfeb\xa2g\x12<\x9b\xdb\xd5\xbd\xbc\xdd\x07r\x99\xc8M\x93IO\xdb\xf5\xf3\xfb\xfe39K?i\xa6\xa7tW\x0fr\x9a\xff\x97\x19q\x1d\xe9\x9d/\b\xd9\xefW\xcaJ1\x04F\xf1z\xdc\x0e\x02\xeb\xa3\f\xf8m\xb8\xda\xd8\xe8\xb0\x06\x9b|\xa2;\xf7\xe3\x9dc\x9a\xe0vl\x93~\xbfm\xf7oj\xd7\x06\xdf\xcc\f\x99\xf3\x1b\xf5\xf07j7k#j\xd6\xd7\xe0\xaf\xc1(\xbf\x8b\xb2c\xec\xd7\x81\x1f\xa5\xe5,o\xf99\xa9\xb1Nv\x9ei\x96\x99\xf6\xf2N^Y\xfb\xf5\xd5~S\xb0\xcb\x1fr\xc1A\x0f\xae8\xc8\xd5\xf3E\x86\x13]\xd1\\\x91\x83\xa6%\x9f\xdf\xab?)\xa3\xc4\x1e\x8e\x07j\xe8\xe9(\xef\xe1u\xa2\xb0^\xeb`\xaa\xc5\xe98\xef`SI\x81\x13\x1cg\xa4\xe6\x9bB\xa8\xcc+J\xa8m\xc3\xbe\xba\xf6\x14\xec\xb2\xb0\rg#s\xebi~\xc5\xaf6\xf8f\xe6\xce\xb3|$\xcb\xc4\x0fm\b\x8c\xd5cg`\x92\xff#\xc9 \xf7\x9b\x19\x14\x157\xa1^\x7fX\x1f\xa5\x10y;l\xfd\"T\"\x81\xcd&u\xa2\x9e\x19\x97\x8c\x1467\xe1\x1c\x93uS\x9c\r\xea\x99\xa8\x7f6t\xefb\x8a\x97`\xbfp\x9b\xc0\x9d\xa1\x02\x91\xdb\x8cr\xfe\\\x1dn7\x9b\xdb\xcd\xfe\xf6$\x85\xe7\xb07Ji\x90\x87\x03\xe9\xea\x14+\xe2C(\xe5\xb9\xa2\r\xd10n\xa5ok\xea\xda\xa4*+7\x19~\x7f@\x95\xdbP+\x88\x19\xe4\xae\x95\x84n[?\x84\x8c9\x9a\xa4:f\x06\xb5\xc6\r\xe9g\x94\xc8<\xfa\x13\xa5\x8a\x19Yu\xd4\x96U!\xc5\x91VRe\x1d\xf4\xcd\x97\xec\xf7\xa0\xd6\xb83w\x1f\x86dR\xcb5\xfb\xbd~~Q.^\xd25\xa7\xe6\x9a\x83\\\x07\xf7\xd4\xcf0\xf0\x10\x99\xe3T\xc1\xb4\x83\xf9w\xb5\t\xa5E{\xb0\xad\xee\xb7t:d\xaeo\xd4\xf9A<;&-{\xabQ\x1e\xb0\xdf\x85\xc2Ce7\x9aMM\xef\xc7\xb9\x93m8\xb4C\x85;\x19J\x1a\xec\xf7&y\xbb\xffKW\x9c\xb6\x9d\xaf\xc9\x0f\xb91\xd8\xee\x81\xb47\x8c\xd9x4\x1d\x9a\xdbO\xf3\xcbn\xcd\xedc\xfcH\xbbY\x9eB\x1e\xd5\xc6\xb3\x96Gd\xe8\xfd^>t\xaaH&i\xe4C\xd3\x10\x8aD*&\xa9\x8a\n\xd3\0m\t\x05\xe2\x0f\xbay\x9c\x01\xb1\xe1\xb41\x16\x18\xc9\xc3\xa9em/;\xca\xd3\xdd\xde$\xa7\x88i\xc3q\xde\xf0@\xf7O\xd5Jt'm\nf:\n!E\x8d\x86\xcc0\x9e\x91\x8d\xfau\xae\xa7S\xea\xe78\xe9\xc9*t\x9a\xfb\xf7sj8Iz\xea\xd9\x01A\x81\xf1b[Nb\xd4r\xcb\x01\x84W*\x8c\xdb\f\x1e/:1\x83\x1f@x\x9dS\xd30\x8cV\xa3Y\xd4\x0e\x06\xb9\xa2\xfeK\x97\r6\xad#\xc3\x04\xe7\x1b\x91C\r\x98+GS\xe1J%\xa46q\xd4a\x9e\x16s\xdb\x84\xce\xe0\xa9\xd8\x80h\x86&\xc2\xa1\x9ek\xd7U\xfa\xa1\xde\xaf\xa7\xdc\x93\xb1syC\xc4\xfd\xb6d\x98\xd64Y\xe5[L\x1c*>n\xb6w\xc4)a\xa2WG\xf6\x99$\x0e\x89\xa7p\xa9\x9c\xaf\x18\xdc\xed^\x92\xdf\xf7\x89[\x861Dh\xd6\xdd\x9f\x80?\xcb\x14}\x14Sz\xd0\xd6(\x16\xcc5u\n+\xe68\xb7\r\xcbCD?m=:\b}\xd2\xf9T\x9fk\xe6>\xf9\xc1}\\\x9d\xe2\x1a;\xf1]p\x86a\xac\xd3\xe4\x14\xc8(g\x9a\xfe\xb4\x13\xe2\xc9@\xab\xa5\xfe\x04\xe6?\xf7\xdb\xdd~C\x97\x9e\xb6Yt\xd2N\x0f\xeaHB\xed\t@F\x87\xb5vf8\xa1\x01\x8f5\x8b\xf6'\x90OnO\xfb\xb0\x04pK\x8e\x17l\x14&\xdb\xb1\xea\x19\xb3\xd9\xb8\xb0\xe6\xa0k\x93\xdba\xd3.\xd9Iz\x0b\xa4;\bW\x96\xbb\xd4\x10\x02\xbcx\xa3>8ls\xe28\xc6\x8e\x9c\x04\x9c\xf5\xed\xb4\t'<\xee\x8e&\x95\xc6)\xc2(\xbaz\x9fO\x82\xbc\x13Oj{''\r\xdb\x93\x861\x8b\xc8I\xc3\x8e\x93\xd4\x89\x83\xc9\xc3Y\x91T\xf4,\xc8;\xf7\x1bN\x13\xd3\xe4\x87q\x1aV\xf7\xc8\xe8\\\x9dK\xeb-\xb7\x9eP\xebq\\\x8a\"\xc2\xaa\xc1\x8ea\x19Nj\xa1P\xe1\xf5c\xfe\x0bm\x06\xec(5\x98\xf1n\xf5\xed\x1bM\x0bgm\x11\x11\xe8x62\xba\x9dy\xede9-\x165\xc3\x94B\xe4\x14\xae\xc8\xf3\x15\x94\x18N\xeb\xfd\x9a\x16\xb1\xc2zK(\xb8\xc2\xdag\xe0J>\r\xf3IX\xbe\xfd\xb6_\xfd\xa0\xc1\x8c\xa3\x17\x87\xdb\x8c':A\xe9s\t>\xa4[\xdd\x84\xe5\xe4u\xb2C\xaf\xd5d\x14\xc4u\x82\xd4zT\x95\xe5Vk\xbe\x9b\xd5\x81\x96\0\xc6\xb4|4\x9b\xc9\xf2Q\x7f:\xf6\x9d\xd2\x9cU\xa7\xd3F\xbd\xa19m\xe2\x9f\xa6\xbe\xe29\xf3\xb4\xeepf\xe3b\xa57s\x05\x1fJ4\xf2\x83\xedv\xf3\xe3\xb0IIq\xd4\x9a)\xcc0\x06\xb2p\xd5\xe7Z^\xce\bf:~\xdf\x9dd\xa1\xb1n\xa7<q]\xbc\xa6e\xb7\xfe\xac_\xb9\xcb\x04B\xacC\xce\xfd!?\t\xb1b\x01\x1e\x8cJ\xebC\xd3qK\xdb\x83Y,\x1c\x89\x98f`\xa4\xd5\xed\xe9H\x84\xd1.X\x04\xa2\x89E\x954\x87\xb5\xbdT\xa2\xdfo\xd7\xaf<\xf2\xf6\x94I\xbcC\x8fN\x81\xaa[S\xc9(-\f\x8f\x02IN\xc6\xa4'\xae\xb8\xb9\xf5\xe3\xeavO<\x19\xbc8\xc6\xe20:\xff\x80\xa2w\x06\xebE7\xfb5\r6\xb0T\xdb\x95\xb8\x16\x16\xa3\xb0m\r\x0bFw\xbb\xe3\xeaV\x12OL2\xe3\xe0\xc0\x83X\x9aR\x159\xe8\xc1\xda\xed\xdd&D\x15\x1bz<nO\x18\xb5\xe9\x93O\0\xa2\xdbs\x96\xea\x87\xc9o\xdb\xa3\xa0\xa4z0\xa3\xd6`\xac\xdb\xf5]\xf0?\x9afL{\x9c\xd4\x03\xcfS{\\[==}[\xedO\x8f\xdb\xd5\x89\xd6\x84\x92\xd1Ry]\xd3I`\x81\xdd\xb7\xb0\xba\x99\xca\xe1>\xaf\x91\x85\xc2f\xc8#\0\x13\xdc\xae\xf6\xba4\xd5^<Trl\xdeA\xaf\b\x85\xc7\x82\x12g\x86\x12\x07\\\x95\xcc\xa8\x96zGK@\x938\xfd\x9d\xf55\xcb\x0e\x06\xbc\xda;I\xd4\xbc\xdb\xdf\xdd\x87%>Y@\x8c\xca\x9c\xc5\t\x9b\xae\x7f\r\xf8\x11\x87,\xa2\x98\xc9j\xb1\x922\xe0G\x1d\xb2\xec\xa1\xad\xdb\xb5\x8f\xb8\xe4\x19\xa2\xb0\x9e\x90j\xf8a\x07\xf7\xfds\xea{\x9aS\xcc\xe2\xd4\xa9&\x9d\xf3S\x8e!\x17\xf6\xfb\xbb\xc7PI\x9d\xb6\xdc\xf9qt\xfc\x90\xbcF\xba\x866\x18\xc1\xa2\xc9\xca\xb0d\x9c+k\x8d=\x18\xc1\x94\xe9.\xa6\xdf\xc3\xc1\xce\x9c\x86S\xd3\x1c\xa78F-ul=\xec\xe9lrP,\x86\x9b\xd6qj\x12\n\xba87\x19O\xc8\x07xQ\x9c\xfb\xbdK\xfd\xa6\x9a\xbb\xd6\x9a{\x80\x8b\xe2!\xb9\x85'\x84\x81\xa5i:\x91\x1e\x10\xc6\x07:u\xcc\xbaI/o\xa1\xbc\xfc5\x0bBZ\x9a\x0b}\x98\xd2]\xde\xe2dXI\x8d\x16\xde\x87c\x89\x8e\xb7\xd0\xa3\x95R\x88\xcc\xf3\xe3S\x16\xe2\x10i\xce3\x96\"\x02\xd3\xece\x12kQ\xb8\x85\xf4G#\x8a\xfac\xf8\x92\x1b\xcb\xa2O6XY\xfc\xc1\xb1r\xb5~\xb7y\xde\x10\xbd\x06\xe7\x8e)\xa5}\x923\x1c\xfb\x17W\xcd\xc8\x95gT\xebH[^J\x06\xae\xd7E\xe5i\x97*\xf5\xea\xa2\xca8\x9d\x87\xe6\xb2\x02\x0770kq\xd3\x0eM\x9e\xcd\x1dx2\xe6\x19W&\xad\xed\xa3+\xc3\xf9\xed\xfc5r\xac\x9d\xc0\x96\xf6\xca;FF\x8bk\x93`4\x19\x8a\xb0\xbe\x19D|\xde\xed6\xce,lG\x8d6f\xbd\x1a\x02O\x8a\x9d\x0e\xb3\xc5\xa8\xe2\x0e\xaa&\xdb\x1f0\xb4\xb8\xb4\x93\x1f\xecd\x1c\x1d\xe3\x97<\x1ce)\x7f\xda\xd1\x9b\xf7!\xa3\xafx\xc91-\x82+%s\xe3\xecY\xa35\xd8\x90g\xba\xf1\xb1\xca\x18\xd4?\xaa\xe9$\xde\x10\xc0UR\xbbT\xab\x13\x9fb\b\xa6\xcc0\x03\x18\xf6\\\x7f\xb8\xd5\xf8}\xdb\x1d\xc0b-\xf1\x05\xbbn\xc8\x15\0*\xe7\xf7b\xc0\xed\x9ayk\xb2i\xa9%\xa6s5p\xcb\xfdqA\xa20/\xf7G\x0bB\xdb!\f\x19Y>\xc7\x0e\x8d\xa9*\xb1\x8b\xe9\xa8\xcf\x9f\xb5?\xe6YQg\x8f\xb4$\x94\x1e\xc5\x07\x04\xe3\x0ec\xe5e[\xb7\xc3i\xd4\xab\xbdh\xbdj\x14\xe7\xfd`0mn\x8b\xb0K\x04!\xeb\x95\xa8\xfeP\xf9\x17\xe4?K\xce\xb3\xdd\xfdw\xfd\xf4\x8d\n\x98\xf8Pb\x14*\xc7z\xe4\x0f\xf5\x8b\xe9\xb9<\x10\x99v\xf0\xe7?\xd1RQ\x97\x03x\fV\x04;p\x9b\xae\xbdu\xfa3\xe6\x81\xcc\x89z~\xee\xb0\xf1\xa5yc\xe8\x1b`oG\x1d\t\xc2\xb3\x96\x06\xa3\xb5\xd6\x98\x8c\xe5\xd1\x15?\x1e\x01\xf7\x91\xe7$\xd3\x8e\x13\xae\xbf\xef\xf6\x96\x1a\xc6\xf5\xb0p|) \xcd@\xcd\xd33\x1c\xa9\xd8\xd7fH\xb6o\x17/\xff\x99yY|\xea\x15(\xb0\xc8\xd6=\xaa\x07s\x1d\xa6B,\xd0No\xeag\b\xd3o\x9b\x81\xa0\xdf\xe25:\xab\x11\x7fAF\x1b\xda}\x0f\x87S\xbb,\x91V>\xfaq6\x10\x97\x03\xfb\xb2\xf6V\xe8QI\xca\xa8\xb1\xb341\x94&\xde\xd5\xd9\xd8\x14x\xea\x8a\x18\x1eTN=\x9e\xb6\xc7\xcd\x8fmZv\x0b\x04\x1c\xa6\x1c\xe3v\x15\xb3C/f\xfal\x02\xa9\x8bY\xb5\f\xe4\xa7\x93\xd3\x0e\xd6\b\xab3\xc7\xcdj{\xb7\xb9O\x0fl\xfamh\xb7\xe2z\xec\x07\xc69O\xcbR\x1e\xc5\xa7n\xc0\xac\x92|\xac;\xeaCb\xd4\xa4\xd0\x1e2A\xfbdg\xe8\x04\xabPw\xc1\x1d\xc2\xdd]5$\x14\x17\\\x91O\x8aAH\xb5\x96O\xd1\x13\xdd\xc7\xdc\xd9\xd1\xfe\xd6\f\xfa\xc2\xf4\x80\x9f\xe4\x98\xd6\xf28\xa7\xab\xf1\xc9D\x95\xf1\x87\xc1\xb0#\xf5\xafl\r\xc2\xda\x9fv\xd4\xb2\xbf\x9a\x9e\xa4)\xd0\xd0I\xfafsW\x989w\xed\xf0\x12\xcb\xf2c\x85\xfd\xeea\xfdd\x1f.\xc4\x05\xea\xf6\xe1B\xafvK\xae\xfd\xfa\xdb\xe6\xa0+\x8e\x17j.IW\x1a\x87f\xbb\x06\x06\xa2\xce\xf9r\xd6\x96\xfd\x18\x05k\xf3\n\xfb)$CYco\x9f\xc3\x861O\xc7\xb2\xbcV\xf8\xa6\xad\x8b\xd8-Q\x9f\x92\xa2\xf2\xa9M/-bu\xf8\xf0\xcef?z\xb47)\xfd@\x12\x94\xb9\xb6$\xa7\x82\xcd\xb8\xb1\xadm$\x93aGF\xa9\xd7\xb4+Iw2\r&\xed\xc6.]\xe0F#\xfdr\xe4i\x7fW\xa1.%\x9f\xcd\xc3\xb1\xe8\x1b\xc0\x0e\xa1\xa2f-*\xdd\x11\x9de\x1f\xba\x8a\xe2i\r\xe8\x98\x8f7\x86\xd40r\xe0\xc8\xe7\x023\x95\xa1\x99\x8c}\x1a^dA\xd3<e\xc1a\xb6\x15\xa4H%\x96\f\xfe2\xef\xe4L\xa6\xa9\xa7k\xd6\xa9\xfe\xa8\xcf\xf1\xbb&\xb6\xff5=\xa1'\x8d\x9eG\nsg3\xc8^E\xfb\xe4\xf4Q{\x91\x8fM\xed\xd1\x9d\x8f\xc5\xe1-5\x91\xbf\x0f\xbbW\\\xb2\xc9\x17\xaf\x13\xd4E|H}n\xe3\x83\xca\xf9Kc\xcd\xf4\x9e\xea\xf3\xb0\x9e\xd7\x95\x03?C\x8a\xb2U\\\xd7\xc2\x85Z\xea\xc2\xf4z\xd2\xa7\xe9\xefz{LQ\xd2\xee\x8d\x8b\xbb\xa1\xa6SW1G-<\xb3\xc7\xfcEl\xe8^\xd4\xac\xce\n\xcf\xc5\xc2\xda\xdb\xb0?\xec.\xb3r\xdd\x98\xa1\x16\xcbK)\xfc\x1eO\xe4\xbd\xbd\xb4\xe3\xa2]\x0e\x1e\xf9\x93\xd2\x8d\xa9\xe1\xda\x05\xc9\xf1\xac\x9b\"\x8be4r\x9c\xf1\xd4)\xa0\x98\xb13/\xa6x\xb5\x9b\b\xf1.wf\xe5\x81w\xd1\xb4S5(\xe6\xc7\xa6r\r\\\xb9\x0f\x9cI\xcbo\xads\xd6\x83I\xa1Q)\xd2-\r\x12\x9f\xd9\xddi\xea\xcc\x03bA\xe1\xb3VI\xb1R\xc1\"]6\x0e\x96k\x032\xc3\x1b\x94$\xc5+\xe06U\r:\xd2\x89\xac\xde\xeb\xeb\r\xc4\xe3\x91\x15f\x93r\xe9A\xcb\xad,1\x1b\xaa\x1awdr\x93g%\x8bw\xe5\xd9_\xb3\xd4\xd9\xb6\x9e8\xd3)\x1e\xaa\xad\xa0b\xe3IX\xb9\x8d5\x88g\xdd\xe0:\xdfW[\xda\xff4#\xc3\x96\xa1\xc2\xb93\xae\xae\x9b\xc49k\x13\xe7\xa4H\x9c\xe2\xd0Nm\xdcn\xf9\xee\x97\x13k.-\xcd2H[Z\x8e{\xdd4\xd5\x94O~.P\x0f\x07L^\xdf\xfb%\x8e\x18\xd6>z\xa3\xbaxV\x90\xb2,\xe4\x9bY\x95\xdd\r\x86\xeb\xe6F\xfb\x14YY`\xf5/\x04\x96\r\x94\x18U\xde\xacA\x1a\xe3RHw$\n\x17\x16\x1a%>\xac\x9d9\xf9\x88\x19%di\xda\xd5\xdf\xd6\x16u\xfb\x84\xb9\x18\x03;\x85u\xfd\x8a\xb7xu\xd1\xdb\xcf:b\xb3\x88\xd65\xe4\x93^\xbb{\xea\xc9\xce\x1c\x82|s\xbb\xd2M\x05!\xa9\x8cCz\x9a\x8e{\x1d+\xb6\x1aW\xb2\xa3\xbbk^\xb2/XjB+\x98v?Y1\xf9\xb1k\x80f\xf2\xd3\xb1\x04\xbe3\xcdI\x93\x17V\f\xbf\x94\xc4I\xabzv\x83q\xc9&\xc5Y\xecF\xb3\xee:\xf8\x9d\x8d\xe2\xae\x1aO\x1a\xdb\f\xc6\x15\xe7\xa47*<HN\xd0\xc5d-8;\x9e+|\xd6\x9e\\\xc8\xecRA\xc2\x04\xcb\xecW\xeb\\\x88\xcd'\xac\xfeD^\x98\xdc\x0e5\xf9\xf30\xdbP\x8f&~(\xd5?L\xea\xb7\x9b7u\xdaG\x05\x8aLr\xe3\xa6\x97\xde\xac}/m\xd0\xd5\xa7\x82\xa4\xe5Qb\xd7\xf4\xdf\f9q\xb4\xf3\x14H\xf6=\x96\x91\xc03\x1c\xb3\t\x12G\xb0\xdd}\x8b\xb1\xf9\xb4;\xf20\xe2\x06\xd58\x8c\xe1\xcc\xd7\xd4\x0e\x9e\x87\xa6x\xa8\xcbx\x10\xae\xc8N`\xba\x98\x95\xed\x89.B_4\xf5\xc5\xe6\x01\x1f\xc7\xbd\x1e\xb5\xbfD\xfc\xad\x18\xb8M\t\xf5\xc4\xaf\x01\xd7\xc7\xefy\xaa\x1c\x95\x95.;\xab%$\x9a\xee8\xcbNj\xb5\xc2\x10\xe4I\xb3rQ\x7f\xa8o\x80e\xd5t\xa89\xdar\xbaW\xe6(\xa9x\xed\xeao\xda><\xea\xcc\x98\xbf\x9c\xe8m4}\xf7\xf2\x97\xa7;\xf3\xd2fz\x8b\xf3\xd3z\xff\xf4~u\\\xe9\xaf\xab\xd5&\x94\xa3A\x9b\xd37\x9f\xae\xbeV\xef\xaap\xed\xc9\x98\x8fS\x8a7@R\x95\x05\xa8BU\xe8\x9f\xb1\xa0\xe7\xe3\x94\xc8\r`\x95\xa7\xf0\xe7\xf8\xf4\x8d\x8f\xe9\xa6\n\x98\xc02\xa8\xb8\x9d\xc1R\xda2@\x96\x86\rN\xba5H\xda\x95`\x80Dx\n\xfc\x11\x8ey\x8c\xd7\xf6\x98tb\0;F\x81\x1bs\xad\x06\xc7\xd8\xb8cl\x9c168\xc6\xa6c\x8cM1F^\x910H\x9b\x01\xf4\xf7<\xf8\x19\xf7wQ\xb5/O\xa7\x1f\xcb\x10\x16rL\x9dW@\xbb)\x98y\x91\xf5m=\"\xf0\x14\xc2\x91\x1b\xd0\xea\xb6\x01\xac\n\x14\xd5k+F*P W\x81\xe2\xac\x02EX\x05\x8a$\x15\xc8\xefg\xd3\xdf\x17s|\xb6\xc7\xac\x01\x01\x8c\x06\bKML4\x11\0!E(\xc4\x15\xa3\x18\\\t7\x11F\0\x84\x19\xa1n\xac%\x99\t8\x02\xc0#\t\xf5\xdc\x92D\xa5o\x92\0\x1c\x94P\xdfKI\x88\xaeJ0\xc4$\xa1\x10\x98\t5\xd1\x99\x80\xeb\x02\x808e\xd4\x0b\xd6$k\xf0&\x8d\xab\xa4\xa6[IM\x97\x92\x1aWI\xcd%%5\xbe\x92\x8a\xa0&8\x8f\xec\x04\x9a\xf0N\x80\x8d\xf1\x84\x98@'\0\xa2\x9d\xd02\xe4\x93\xc0\x8b\xfb$1\xc1O\x000\0\xa1\x1e\r\x90\xa8\xe4\x02\x12\0!\x10\xea\xb3\x02\t\x91\x1a\bF~ 8'\x89\x04>\xe3\b_\x108\x17\0\x10\x07\xa1%{\xa4\x806\xecA\0\xb0\x07\xa1\xc0\x1e\x8c\"{$\xdc\xb0\x07\x01\xc0\x1e\x84\xba\xec\x91d\x86=\b\x80\xc0 \xd4\x0b\f\x12\x95\x81A\x02\b\fB\xfd\xc0 !\x06\x06\xc1\xc0\x1e\x84\x02{$\xd4\xb0G\x02\xae\x0b\0\xd8\x83Q\x8f=\x92\xac\xc1\x9b4\xae\x92\x9an%5]Jj\\%5\x97\x94\xd4\xf8J*\xd8\x83\xe0\x9c=\x12h\xd8#\x01\x96=\x12b\xd8\x83\0`\x0fBK\xf6H\x02\x8f=\x92\xc4\xb0\x07\x01\xc0\x1e\x84z\xecA\xa2\x92=H\0\xecA\xa8\xcf\x1e$D\xf6 \x18\xd9\x83\xe0\x9c=\x12\xf8\x8c#|A\xe0\\\0\xc0\x1e\x84\x96\xeca\x94`(\xc4\xa2\xc0#V\x04d\x92\x89\x90Q\x8c\xd0\xd0\x8aE\x81[\xac\xc8%\x18\xd3\xc0\xb0\x8cE!\x8a\xac\xc8\x0b%+/\xe3\xc9J!\xa8\xac\xc8\x8f,\xdb\x02\xc3\xcb\xca\x80\x88\xac\b\xd8\xc8\x88\f%\x19\xf4\xdaG\x81\x9c2\x91\xc7P\xa6A\xe3\xde\xbd\xe9\xd6r\xf3\x17Zn.j\xb9\xe9\xd6r\xf3\x97Zn.h\xb9`2+\xcb\xe9\xccH\f\xa7\x19\xd4\x12\x9b\x81\r\xbbY\x14(\xce\x8aJ\x9e3R\x8f\xec\x8c\xd80\x9eE\x81\xf6\xac\xc8\xe3>+/\t\xd0J\x81\x05\xad\xc8\xa7B\xdb\x02\xf9\xd0\xca\x90\x14\xad,gF#yvu\xf2\xe2\xa2g\x1f\x05\xb6\xb4\xa2\x922\x051\x84\xa9\x18\xd0\xa5\n\x80,\x8d\0\xa9RD\x86(\x15\x03\x9aT\x81K\x92\"6\x14\xa9\x18\x84\xae\n\xbc\xc0Ui\x19\xb6*\x83\xa0U\x81\x1f\xb2*\xc7\x80U\t\x90\xa2\n\x80\x12E`\bQ\xb0k\x0f\x0324\x02\x8f\nE\xdc8\xf7l\xbat\xd9\\\xd4esA\x97M\x97.\x9b\xbf\xd0e\xd3\xa9\xcb\x82\xfaT\x92\x13\x9f\xe0\x86\xf6\x04\xb3\xa4'\xa0\xa1<\xc5\x80\xf0TP\xd2\x9d \x1e\xd9\x89\xd0P\x9db@t*\xf0hN\xa5%\xc9\xa9\f(N\x05>\xc1\xa9\x1c\xe9M%Hn*\xc9\xa9M\xf0gg\xfc/\x0ev\xf60\xa04\x15\x94\x84\x96\xc6j\xd8\x8c\0\xa02B\x81\xc7\x18E\x12K\xb8a0\x02\x80\xbe\bu\xb9+\xc9\fq\x11\0\x91F\xa8\x17f$*c\x8c\x04\x10`\x84\xfa\xd1EB\f-\x82\x81\xa3\b\x05\x82J\xa8a\xa7\x04\\\x17\0\xf0\x12\xa3\x1e)%Y\x837i\\%5\xddJj\xba\x94\xd4\xb8Jj.)\xa9\xf1\x95T\x90\x0f\xc19\xf3$\xd0\xd0N\x02,\xe7$\xc4\x10\x0e\x01\xc06\x84\x96T\x93\x04\x1e\xcf$\x89!\x19\x02\x80a\b\xf5\xe8\x85D%\xb7\x90\0\x88\x85P\x9fUH\x88\x94B0\xf2\t\xc19\x99$\xf0\x19G\xf8\x82\xc0\xb9\0\x80@\b-\xd9\x83zg\xe8\x83\x11\xe0\x0f\x86\x81@\x04F\x06!\x81\xa1\x10F\x80C\x18vI\x84\x84\x86E\x18\x81\ba\xd8\x0b\x11\x96\x951\xc2\x12\b\x12\x86\xfd(a)\x86\t\xe3@&\f\x03\x9b\x10l\xe8\x84\x90\xeb\x12\x01B\x11\xd8c\x14\x126\xc5\x9d\x1a_c\xcd\x05\x8d5\x9d\x1ak|\x8d5\x175\xd6th\xac`\x16\xc6sj!\xd4p\x0b!\x96\\\b2\xec\xc2\b\xd0\x0b\xc3%\xbf\x90\xc4#\x18\x12\x19\x86a\x04(\x86a\x8fcXV\x92\fK\x80e\x18\xf6i\x86\xa5\xc83\x8c#\xd10\x9e3\r\xa1\xcf\xc5X_\n\xe4\\\"\xc06\f\x97tC\x9d1t\xc3\b\xd0\r\xc3@7\x02#\xdd\x90\xc0\xd0\r#@7\f\xbbtCBC7\x8c@\xf00\xec\x05\x0f\xcb\xca\xe0a\t\x04\x0f\xc3~\xf0\xb0\x14\x83\x87q\xa0\x1b\x86\x81n\b6tC\xc8u\x89\0\xdd\b\xec\xd1\r\t\x9b\xe2N\x8d\xaf\xb1\xe6\x82\xc6\x9aN\x8d5\xbe\xc6\x9a\x8b\x1ak:4V\xd0\r\xe39\xdd\x10j\xe8\x86\x10K7\x04\x19\xbaa\x04\xe8\x86\xe1\x92nH\xe2\xd1\r\x89\f\xdd0\x02t\xc3\xb0G7,+\xe9\x86%@7\f\xfbt\xc3R\xa4\x1b\xc6\x91n\x18\xcf\xe9\x86\xd0\xe7b\xac/\x05\x12\xe8f\b\b\x8f\x1e`3B\x92\xb475d\x93~\x03\xd5$\x10\x88\x86@\xa4\x99\x166$\x93~\x03\xc5$\xd0%\x98Vd\xe8%\xfd\x86PI\xa0\x17(IR\x86I\xc2!H\x12\xe8\x87H\x92a\x80$\x14\b%\x81@'-h\xc8\xa4\xfd}\x8d\xbf\x81H\b\xf4h\xa4\x155p\xfd\xc6\xd3K\xd3\xa9\x97\xa6C/\x8d\xa7\x97\xe6\x82^\x1aW/\x05m$4'\x8d\xf6\x97\xa1\x8c\xf6\xb7%\x8c\x160t\x91~\x03Y$\xb0\xa4\x8a\x16\xf7\x88\xa2\x15\x18\x9aH\xbf\x81$\x12\xe8QD\x92\x94\x04\x91p\xa0\x87\x04\xfa\xe4\x90dH\r\tEbHhN\x0b\xed\xafg\x18\xd7\x0b\xfc>\xe3o\xa8>\x12X\xd6\x1e\xc9\x85\r\x1b\x10\0t@(\xf0\x01\xa3H\b\t7\x8c@\0P\x02\xa1.'$\x99!\x05\x02\xc0\xfb\t\xf5\xdc\x9fD\xa5\xff\x93\0\x02\x80P?\x02H\x88!@0p\x03\xa1@\x0e\xe9\xa7a\x87\x04\\\x17\0\xf0\x03\xa3\x1eA$Y\x837i\\%5\xddJj\xba\x94\xd4\xb8Jj.)\xa9\xf1\x95T\x10\x05\xc19S$\xd0PE\x02,W$\xc4\x90\x05\x01\xc0\x16\x84\x96t\x91\x04\x1e_$\x89!\f\x02\x801\b\xf5(\x83D%g\x90\0H\x83P\x9f5H\x88\xb4A0\xf2\x06\xc19q$\xf0\x19G\xf8\x82\xc0\xb9\0\x80<\b-\xd8\xe3\xa7\xea]\xfc\xdb\0|Lg)@\xf1\xae\x80U\x9a\xa2z]\xc5HU\n\xb0\"\x14a\x1d(\x92\x86\xaf\xbf)\x04\x05h\xa2\x1f\xf11\xf5V\x01\xdb9E\xb5s\x8aQ\xe7\x14\xc8M\xa88wZ\x11\xee\xb4\"\xa9\xd3\xf4\xfb\xbd\xd1\xe8{\xd4\xe8{\xd4\xe8{W\xa3\xef\x1d\x8d\xbeG\x8d\xbe/4\xfa\xbe\xd0\xe8{\xd0\xe8{\xd4\xe8\xfb\x18\xaac\xee\xf9\"~\xa4\x8e\x8e\x97\x06_\xe6t\xf4\xdeF%c\x89\xf4\xcc\xd8\t\0\x05\x10\nZ \xd4S\x05\x89J}\x90\0\x94B(j\x86`T\x0f\xc1\xb9\x8e\b\x04E%t\x8e\x036*K\xc0\x12[\xa0\xf2\bu4\xd8\xbe\x8fi5\x98\0\xd4`BQ\x83\tu5\x98D\x8e\x06\x93\x005\x98\xd0B\x83\t.4\x98`\xd0`\x02Q\x83-:\xc7\x01[\r\xb6\xc0\x12[\x14\x1aLh\xa1\xc1\x0fQy\x9cf>\x88\xe2\fBJ3HN\x19\x02[\xce\x10PHC\x10e\x07\x81\x94\x1e\x04b~\x10\x80\x14\xa3\xc8J\xf2\xe5\x07\xfeP\x9c\x01\xa8\xd7\n\xd8N+\xaa}V\x8c\xba\xac\0\xf7X\x11\xee\xb0\"\xa9\xbf\xfa\x9b\xba+@\xfa\x93G\xf1\x8b\xd9\x04dcY\x17j\xa7O\xfce\x88\xab\xf6\xb5\xa7v\xf3N\xadE\x0bc\xacKc\xacKcl\xc4\xdb>\xf0\x97\xaa\f`\xbb\xa5\xa8\xf6J1\xba\xbd\x02|wE\xf8\xe6\x82\xec\xa4\x86\xf9\xc0_\x050\x80\xbd\xb7\xa2E\xf9\xf3\x81_\x9c4@\x9e\xbc\x14\xe7>)B\x85\xae\x02d[\x01\xe8ON\x19\xe3\xeeM|\xed\xf3H\xfc\xc0_\xa7\xb2@V\xe6&\xf8\xa3a\xb5\x8fHh\x1f\x91\xcb>\xba4\xf6\xd1a\xb0\x8fH^\x1f\x0b\xde\xfaXP\xd6G`\xab\x8fHT\x1fc8\x8e\xb8\xe7\xab\xdcI>J8*\xe0x\xcdG\x1b\x8e\x8a\xe5^\xf3Q\xc3Q\x11\xf0\x9a\x8f\x1c\x8e\xfa\x9bz+\0\x87#\xff\xb6\xb25\xf6\x9ec\xd1\0^\xef\xd7N\xefm *\x88CZ\x17CZ\x17C\xda\xd9c\xec\xe1\xce\xed\xd0\xce\xe9\xd0\x0e\xef\r\x81\xa0x\xd1'\x0e\x04\x05P\xab\x12\b\f\x9c\x8c\xf0\x84\x9d>\xb9\x9d>9\x9d>a\xa7O\x1d\x9d>\x15\x9d>\x15\x8a<e\xbe\xf1)\xce\xb6\x87r\x9c\xcfz>\xe5slE\x8b\xb9\xce'\x99Y+\xe0\xcep>\xe9|Z\x11R\xac\x02\xa4X\x014\xd0>\x89{*@\xeei\x80\x92\n>Y\xf74\x98\xba\xa7\x829?|R\xf7T\x04\xf8\xe1StO=\xc6\x1e\xee\xdc\x0e\xed\x9c\x0e\xed\xf0\xde\xe0\x9e\x8a\x17}b\xf7T \xa7\xa8O\xd1\x1b\x07\xacQ\xf6F\x05\xb2>\nj\xfa(\x18\xf7Q\0\xe8\xa3\xe0\xd2GADo\x82\x10\xaf\xf2\xef\xb3=\xc6>\x9e\xcb\xde\xd8\xd4a<9\x83\xc1\xa93\x99\xe7\xdfY\x83\xd2\xd531x}&\xf3\x03 k\x82\xb1\x90\t!,2\x19D\x88\x95\x19\x93g0xe&\x83\x10\xcae\x8e\xf3f\rJ?\xce\xc5e\x8cerp\xf9L\x86^\x9e\t1\b\xadp\xd7\x01_P\xc2\xee\xaf\x06\xba\xbb<\xd0\xdd\x85\x81t\x84q\xd6\xe4\xd2X1\xb83\x19\xc4\xb9\x95\x9d\xfcH\xc1\xe8\xcfd\x1e\x11d\r.G!\xd2C&\xf3\x99\"k\x82\xa4\x91\t\x91?2aN%Vt\xee\x80/\xa8\xa1\xe4\x9a\x7f\xc7e\xdb\xfe\x94\x8fy\x82\xa2\x80\xadb\x05\x0es\xd7aM\xc7\x0bs\xbc\xb4\xc7\xccP\x02\x18\xd6a\xcc.^\xd2R\xf0\xbf\xdb'\x82\xdc\xe0\x8cW9\x97W\x91\xf7D\xb9\x7f\xf9{\xa2\x88z#\x92\xd7*\xf3k.\x10X\x16\0\xf4\xafx\xab2\x17x\xe3\x95W\f\xf3\xa6g\xf7\xca\xce\xf0\xed\x80\x8c\x122\x18T\x91\xcb<\x85Xp\xee\xdfk\xe1\xc3\xcb\x0e\x18\x86\x93\xc9.\x0f\xcaS\x1a\x04\x82w\xda\xf9\xc2\x1d\x1d5&22\n$\0T\xc7\xa8\xa7\xb4$\x9b\xe35\x17\b,\x0b\0\xbaJhW'=\x85$\xc9\x19\x9b\x9e\xdd+\x97\xc3\x8f\x7f\x14\x96\x13\xaf|\xc2\xd0\x004\xd7S\xc0\xa91\xec\xd7\f\r\x96W\x13\xfa\xd9g\x83\xc03\0\xfe\xa2\x8d\xf9\x9d\x97\x06\xf4I\xdaw\x05\0\xfd&\x14:O\xa87\x02\x12\x95\xc3 \x01\x8c\x85P\x1c\x10\xc18*\x82\xf3\xa1\x11\b\xe3\x93Ed\0`|\xf9\"2\xa0\xde\xf8\x8aEd\x10\xc0\xf8`\x11\x19`\x1c_\xb6\x88\f \x8e\xcf\x84\xcf\xbb\x0e\x18\xc7je8b+s\xc7m\x1b8\xa3\xb7b\xd4\x81\x95\x15\x9a\xb0\xc2B\x1fV\bZ\xb1\"\xd0M\xfa\xf9\xae\0@\x1f\x84\x82&\b\xf5t@\xa2r\xf4$\x80q\x13\x8a#&\x18\xc7Jp>J\x02\xf3\xf1}\x8eC\x1b\xc9q\xbe\x80\xf0Y\x06\xa4\x80\xb3\xa2\xf0\xd9\x0eC\xb1|E\xe1\xb3v^\x11X9\xf8\xcc]\xd6\xdf\xf9\xfa\xc7\xe7\x98\x11\xf48_4\xfa\fy@`]\xdb\xff\x1c\xd9_\x8e\xbf\x9a6K\x83\xc3\xc2\xfeggM\xff\xb3P\xde(\x07@\x819\xe5\x01\xea\xa9\xb2\xa0<\x10\x80R\x81\xf2\0F\xf5f\x94\x07 (Z\xaa8\0@\xe5^\x15\x97\xcb\xe6\xa8\xb3\x05\x02_\xf1\x94%\xb6@\x83\x14e\x1d\x0b\x8cF\x8di,\n\xf6\xb1\"0\x92\x15y\x96\xb2\xf2\xd2\\V\n6\xb3\"4\x9c\x95\xa1\xf5\xac,7\xa1\x95\x80\x1d\xf3\x97\x9c=\x14,\xda\xf9\x92\xb3\xd3`\xeej~\xe1\xa2_\xdd+,\xdd\xb6ho\xff\xdd_\x96\nbL\xae\x18\x18\\\x05`n\x15x\xc6Viij\x95\x81\xa1U\x80fV\t\x1aY%\xb9\x89\x15\x07\x03\xdb\x976K\f\x8c\xdb\xf1\xd2f!\x9e;\xda]8\xd8W\xe7\xdc\xa5\xd3\x0e\r\xea\xbd\xdb\xc8\xb2\xa4DcK\x02\xc0\x90\x84\x82\x15\t\xf5LH\xa2\xd2~$\0\xe3\x11\x8a\x96#\x18\xcdFpn3\x02\xc1`\xf2\x1e\x1b\0`*\xef=\xb6\\6G\x9d-\x10\xf8\x8a\xa7,\xb1\x05\x1a\xa6x\r\x8c\x05\xd9\xaa\x8a1N\x8e\x83\x8dr!\x98*\x17z\x16\xcb[\x94\x86\xcb\xe5`\xbf\\\x88f\xcc\xa5h\xcd\\\x9a\x1b5\x97\x81m3\xe1u\x17\x0e\x96\x06\xa1g\xf0\xac\xc9\xbc\xc3*\x8b\x0e\xfck\xc7u\x96\x1d\xed\xd1'ra\xe9\x1a\xa4[\xe3\x14\x8c\x80;0\f\x8e\xc0\xb0\xe7\x02,+\x8d\xcf\x120;\xc3hp\xc6\xd1\xd4\x8c\xe7Ff\x14\xcc\xab\xef\x8c!\x02&u\xdf\x19\x03\xe1\xbc\xd0\xe0\xa2@\xbe\x16g-\x8b6h\xae\xf2U+\x96\xa4\xd5\x06c'\x02\xc0L\x84\x82\x95\b\xf5\x8cD\xa2\xd2F$\0\x13\x11\x8a\x16\"\x18\rDpn\x1f\x02\xc1<\xb2f\x04\0\x18\xc7[3\xcaes\xd4\xd9\x02\x81\xafx\xca\x12[\xa0Y\x8aE$\x16\xc8\x04s\x94\x03`\x95|\x82\t\xa8g\x95b\x82\t\x02\xb0\nL0\x01F\xabd\x13L\0\xc1*\xb2\x1d\x19\0\xb0\x8a\xb7\x1d9\x97\xcdQg\x0b\x04\xbe\xe2)Kl\x81V)v\xf3\x92\xe0*\x1ad:\xe6c:K\x012\x83\x02\xd6\x02\x8a\xeau\x15#\xbd+\xc0*W\x84\xb5\xadHR\xb4\xfe&\x1d\x0b\xa0[C\xaepk\xc8\x15n\r\xb9r\xb7\x86\\9[C\xaepk\xc8U\xb15\xe4\xaa\xd8\x1ar\x05[C\xaepk\xc8\x15\xee\xd4\xba\xaa\xd6F\xf1\xeb\xdcDW\xf2\xe4\xd0\0\xe5\x86\xf3+\xfb\x8c\xd0`\xfa`P\xc1|\xef\xf9\x95>\x02T\x046\x95_\xc5\x87}cV6?\xe1S \xeb\x90\xa0\xa6C\x82\xf1\xbd\x05\x80-\xef\x82K\x9f\x04\xe1\xb7\x01\x04\xe0\x17\x01\x18\xc0MR\x7f\x98}\xc9\x7f\xe0\xbe\xe4?\xdc}\xc9\x7f8\xfb\x92\xff\xc0}\xc9\x7ft\xecK\xfe\xa3\xd8\x97\xfcG\xb1/\xf9\x0f\xd8\x97\xfc%>R\x1f\xc9q\xee\xba_\xf2\x87\xe7\x8a\x16\x9e\xfaE\x1e\x93+\xe0n`\xf9\xa2\x0f\xc4\x15\xc9w\xdd|\x91G\xdf\x02\\\xcbz\xd9\x17!.\x03X\xce\x12\xb81\xe778\xae\xc6\x1dW\xe3\x8c\xab\xc1q5\x1d\xe3j\x8aq5\x10\x99_X\xf7\xf2{.OK\xbe\xb4\xefB\xf0\xf1\xd2\x1e\xb3\xdf\b`<\x84\xb0\xd4\xc4X\x92\0\x186\xa1\xde\xd8IT*\x80\x04\xa0\x05B}U\x90\x10\xf5A0\x18\x9bP\xb0\xb8,\x7f\rs\0l\xef-\x7f\xe5\xb2\x06\xaf\xd9\xb8:i\xbau\xd2t\xe9\xa4qu\xd2\\\xd2I\xe3\xeb\xa4p\x14\x82so\x91\xf5\xbc\xdc\xea\x0b\x04\x96\x05\0\x1eT,\xdf\xb1 i\xd7\xb8\x11\x01\xa02B=\x95\x91\xa8T\x19\t@e\x84\xfa*#!\xaa\x8c`p#B\xc1\x8d\x12j\xdc\x88\0p#F=7J\xb2\x06\xaf\xd9\xb8:i\xbau\xd2t\xe9\xa4qu\xd2\\\xd2I\xe3\xeb\xa4p#\x82s7\x927\x16r\xab/\x10X\x16\0\xb8Q\xf1\xc6\x82\b\xf2\r[rcg\xc3\x96+s\x95\xe8o\xd8r\xc5\xa8\xd0\xee\r[n\x93B\xb9\xce\x86-W\x86\xce\x97\xefD\x18z0:b\xe7N\x04\xafE\xe3\xdf\xab\xb9\xa0\xdb\xe6\xaft\xdb\\\xd6msA\xb7\xcd_\xeb\xb6\xb9\xa4\xdb\xd2}\xad\x10\x9c8\xdf\x90\xe1y\xde\xc2\x87\x97\x1d0:\xb7\xbf!\x83\xc4\xd7qzBu\xdf\xb5LO\x14\xa0\x82_\x01\xa7@\xbd\xb6\xd3\x13\xc5\xf2\x02\xf5Z\xa7'\x8aHq,\b\xbdl)\xbf\xf3\xca\xf4:F\xa1\xf4\xfcs>\xd2\xeb<\xde\x14u\x06\xcd\x91\xa5\0\xd4\xa1\x82K\x1d*\b\x05\x8e\x02\xfc\xb6\x0b\x03\xf1e\x97\x01\x1fS\x1f\x15\xe0\x97]\x04\xc8^v\x11\xd4\xbc\xec\"\x18\xbf\xec\"\x80\xbc\xec\"\x88\xbc\xec\"\b\xbd\xec\"\xbf\xf9e\x17\x06nw\xdb\xf6\x15\x8a\x91\xfcn\xa7T\"\xb7m\xd78\x1a\x9eQ\x19\xc0\x1b\x8d\x9dQ)\xa63*m\xc8N#\x808\x8d \xc5\x10\xbf\x9f\x7f|_\xdbNld\xfb\xcb\xb5\xbc\x03\xa3\x80<\xe2fd'\xaf\xfe\\\xcb\x8cL\x01\xe7]\xa4k;#S,\x7f\x17\xe9\x1agd\x8a\xc3;J\xd72#S \x7f%\xe9Zfd2\xc6\xbd\x19\xc0\x1e\xc7\xc8o\xad\x18 \xa3`\x86\x0f\xeb\xc7\r\xda\xffd\xe4'\xbcp\xfeN\xb1\xa0\xc5\xb6\xa3k}\x93X\0\xd8a,\xb8\xecD\x10\xa4\xb0\x10\xbf5\xcc\xbf_\xcc\xf1\xd9\x1ec\x7f\xcb\rQ\xd7\xb2\x05\x879%\xdf\x82\x03(\xf0\x9f\xb3\x05\x07D%\x13\xe6[p\0EN\x84-8\0\xe7\xec\x98o\xc1\xc9Q\xc3\x93y\xe9\x0b\xa8\xc7\x98E\xe9\x0b\x02\xe0N\xb7\xf4\x05!\xb2h^\xfa\x02\n|\x9aPCI\x04\0\x17\x11\n\xf4J\xa8\xc7J$*\x89\x96\x04\xc0\xb6\x84\"\xe5\x12\x8c\xa4DpN\xbe\x04\x02\x03'\x14\xc2\x90\xc1\x8c\x8b\x13X\x9c\xbav5\x81\xd4\xcch\xa7&\x1c\x92fA\xc9\xd4$\x01\xba&\x149\x9b`_G\xc8\xde\t\xdd`\xc0\"\x8f\x13\x8aT\x91`\xc3\xe8\x04\0\xad\x13\xeaq;\x89J\x82'\x01\xb0<\xa1>\xd5\x93\x10\xf9\x9e` }B\x81\xf9\x13\x8a\xf4\x9f\xd0=\x8e{\xef*\t\xb3\x01\xa3^JH2'/$\xc1\t[\x9e\xdc;\xbai\x82D]\x8c\x8c\t\x83P?k\x90\x10S\x07\xc1\xbeS@\x12I\xe0\x0b\x02\xe7\x02pG\xe8%\x96|\xef\xa3\xf0\xb1\xb3\xf7\xd1\x95a\xaa\xe9\xda\xfb\xe86p\xd2\x8e\xb3\xf7\xd1\x95\x15)\xc8\xdb\xfb\xe8\n!\x1d9{\x1f=\x99MM\xceD\xda\x95\xb9i\xca\x9fH\xbbbLY\xdd\x13i\xb7I\x91\xbe\x9c\x89\xb4+\xc3Tfd\x96\xd7-\x8cdne\x98\xdc\xac\xcc%v\xdb\xc0ItV\x8c\xe9\xce\xca\x8a\xa4g\x85\x05\xad[!$@+\xc24hd\xc8=\x99(O\x89\xf6\x1d\xab\x0e\xf8\x82F\x8b$\x99\xc9\xfeB\xa3^\xc2\xcc\xc4N\xda\xb4rL\x9eVV\xa4P+\xbc\xa4\xf1\"\x9d\x1a\xd9\xc6'\xab\"\xb5ZY\xc1\xa5Fh\xd3\xac\x851\xd9Z\x99\x9brm\x03'\xf1Z1\xa6_+\xebH\xc2\xb6I\x91\x8a\xad\x10\x13\xb2\x95aZ6\xb2\"9\x1b\xd9\xde\xd7\xdc\xfe\x82\xca\x8bt\x9d\xc9\xdc\xa4m@/u\x1b\xf1\xc9?\xebt\xa1?~2\xb7\r.\xe7\xc2\"\xb1[YGz\xb7M\x8a$o\x85\x97\xdc\x13\x13\xbe\x11\xbd\xf8\xf0\xb9\x03\xbe\xa0\x9d\xb2\x10h\xda-\x18c>\xe65L\x01\xf8\x19\xba\0\xd9J\xa6\xa0f\xf9R0^\xb3\x14@V!\x05\x91\xa5GAh\xbdQ~\xf3\xe2.\x01\xba\xff<\x07\xa0\xdf\xb0\xff<G\xbd\x11\x94\xfb\xcfs\x01\x8c\x05\xf7\x9f\xe70\x8e*\xdf\x7f\x9e\x830>\xd8\xc9\xed\xa00Ro'\xb7#\xf2\xc6\xdc\xb1\x93\xdb\x91\xc2\xe8\xdd\x9d\xdc\x8e\f\xf5\xe0\xec\xe4v$\xa0\x91l\x9bs\x81\x816\xcam\xce\x85\xc0\xd3\x84\xbb\xcd\xb9\x90\x81\x16\x9cm\xce\x85\x045Pls.p\x18\xbd\xee\n\xce\x01\x187\xec\n\xceQo\xc4\xe5\xae\xe0\\\0c\xc5]\xc19\x8c\xa3\xccw\x05\xe7 \x8c\xaf\xd8_\xeb\xe20Z\x7f\x7f\xad+\xf4\xc6\xde\xb9\xbf\xd6\x95\x83&:\xf6\xd7\xbaR\xd4\x8b\xbb\xbf\xd6\x95\x81\x96\xccVS@@3\xb8\xd5\x14`O\x1b\xceVS\x90\x80\x06\x8a\xad\xa6\x80\xe3\xa8a\xab)\xa00R:\xf9]\x89\xc0H\x19\x86\x912\xec\x8d\x94e\xe5HY\x02#e\x18G\xca8\x8e\x94\xf1|\xa4\x8c\xc2H\xdbF\xef\xf07\x8c2\x810\xc6\x04z#L\x92r|\t\x87\xd1%\x10\xc7\x96P\x1cYB\xf3q%,\x1f\xd5\xdc\xec\x1f\x9c\xe3\xfe\xc19\xee\x1f\x9cW\xde\xfe\xc1\xb9\xb3\x7fp\x8e\xfb\x07\xe7\xc5\xfe\xc1y\xb1\x7fp\x0e\xfb\x07\xe7\xb8\x7fp\x1e?\xa9K\x1b\xb2\xe6\xf25]\x05\xb2\xf2U`\xfd\x16\xca\x1c?\x802w\xbfz2w>u2\xc7\xef\x9b\xcc;>j2/\xbed2\xc7\xcf\x97\xcc\xf1\x9b%\xf38]\xef\xf7\xfb\xfc\x83\xd7*\x14\xe1\xa1*\x92\xadY(lV*\x14\xe4\xf5\tEd\xc9A!\xd9\0\xa7\x10\xed\x80S\x80\x17\x1c\x04\xc9\xe7\x02s\xdc19\xaf\xb2\xd6\xebb`\xf2m;\x83\xb8\x033\xb3\xe1Z1\xf3i;m\xc9\xdfw\x13@\xbe\xe3&H9V\x9e\xd8\xd6l\x91\x8d,/\xcde\n\xab\0,\\\xcd\xe3dU/\xb6+\xc6\xb9\xf3G\xb5\xf3\xcc\xb5+\xcc\x05SO#(\xed\xc8\xd3L\x83\x14V\xc3\r\x98sg^7\x8f\x939\x19\xde\t5pr\xd6\f\xe7v\xae\xa6X\xbe:8\xc7Y\x99\xe2\xb0T8\xd7\xf9\x97\"\xd9\xa2\xe0\"\xb2\x17\xf5w!\xec\xa5\0E\x8d\x02\xd9G\x02\x055\xae%\x18;\x91\0\xe2D\x82p\xe7\x14I\x9d\xd3\xdf\xfcu@\x06\xe2\xda$\xf7\\\x16$\x05\xc8\\DP\xe3!\x82\xb1\x83\b\0\xfe!\xb8\xb8\x87 \xec\x1d\x02\xb0s0\xb0\x12\xb6]\b\x11)\x90\xe7\x83ENC\x8a\x16\xf9`!$\xa4\0\xe4\x83\x85R\x90\"Y>X\b\x01\t@>;\xd6\xdf-\xff\x88\xc6\xe3\x9aJ\x8f\x8fy\xe1H\0^\x9eS\xc0.\x1f\tZl\xd8^\xe4\xabo\x02\xe6\x1b\xb6\x17\xc5\x86\xed\x85Y\\c\x84\x89G\x9a\xe82\xda\x02\xd7\xce\x16\xc5\x82\xd9\"\x12\xcf\x94Oe\xdeQ 3\x8f\xa0\xc6<\x82\xb1y\x04\xc8}Jq1\x9b \xe4S\n\xb0\x95\x18`\xbe\x11\xb3\x18\xba\x11\xd3\x9d\xecqN7\x0b\x97n\x16\x0e\xdd,\x90n\x16\x1dt\xb3(\xe8fQ\xd0\xcd\xa2\xa0\x9b\xb3=\xc6>\x9e\x8b\xde,\r?-\x91\x9f\x96\xc8OK\x97\x9f\x96\x0e?-\x91\x9f\x96\x05?-\x0b~Z\x02?-\x91\x9f\x96\x91\x9f\x06\xdcs\xe6'\x05\x9co\x82--?)\x96\x7f\xfdk\x89\xfc\xa48|\xe7k)\xfc\xa4@\xfeE\xaf\xa5y\xb0\xb1\xc4\xa7\x19K|\x84\xb1t\x9f[,\x9d\x87\x15K|B\xb1,\x1eK,\x8bg\x11Kx\0\xb1\xc4\xa7\x0eK\xe6'\xf3\xdb>_X\xda\xf2hY\x94G\xcb\xa2<Z\xe6\x14U\x0bZTGK\xb7:Zbu\xb4,\xaa\xa3eY\x1d-q\xd9\x7fi\xaa\xa3%VG\xcb\xa2:Z\xda\xeahYTGK\xbf:Zz\xd5\xd1\xb2\xa8\x8e\x96]\xd5\xd1\xb2\xac\x8e\x96Eu\xb4,\xaa\xa3%\xb2\xd5\xd2\xb2\x95(\xe0d\x8f\xd1\rO\xae\xd7\x9d\x1c\xaf;\xa1\xd7\x01[)^x\xe3\xa9\xf0\xc6S\xee\x8d\xb2\xf4\xca\x03\xc9\x97^\x01\x05.r\x96^AT\xb2R\xbe\xf4\n(\xf2\x13,\xbd\x02\x9c3U\xbe\xf4\x9a\xa3\x86\xb3\xf2\x979\0\xf5\xd8\xabx\x99\x03\x04\xc0c\xee\xcb\x1c DF\xcb_\xe6\0\x14\xb8-\xa1+\xb4 \xb2\x1c\xa1@u\x84z\x9eG\xa2\xd2\xfdH\0>H(:\x1c\xc1\xe8u\x04{\xae\x87l\x98P\x88$\x063^L\xa0\x8dJB\x90:\bF\x9ad\xd8\xe1J\x12\x95\x84\xc9\x02\x875I\x04\xd4I(\xf2'\xc1\x05\x89&\x1c\x994\xa1\x86N\t\0N%\x14\x895\xc1\xbb\xe2.;_O>\xcf\x92\xcc![\x92 \xe3\x12\xdcA\xbb$-\xb8\x97p$`\x82\x91\x85\x13\x8cT\x9cP\x87\x8f\x93\xe0T\0n\xe8\x9c\xba\x83\xe4\xd4\x15$'7H:\xd8\x9a\x84~\x04\x9d\xfc\b\x02\xf2\xb6OQx\xf4\xc5S\x94R\0,\xee?E)\xa5%\x97\x17OQJ\x012z\xf9\x14\xa5\x94\xe4\xbc^<E)\x04\x86\xdd\x15\x03\x82W\x81\xc7\xf1*-i^e\xc0\xf4*\xf0\xc9^\xe5\xc8\xf7*\x01\xcaW\x01\xb0\xbe\bV\x8e\xf5\x91\xfbU\0\xf4\xaf\x02\xcf\xb9UZ\xfa\xb7\xca\xc0\xc5U\x80\x8e\xac\x12\xf4e\x95t\xb83\xe6\x04\x11@@\x1b<\xcb\f\x82[\xb2P\x10yO%\x98\"\x8c\xc4\xc9\x12*-\x13\x85\x919\xb9B\xa5\x90.T\x80\x19C%E\xd2\x10\x11\xe6\r\x11\x98\xd4\xa1\x18d\x0f\x15`\x02\x11\xc9\xce\xbb\xe9\xaeS\x9d~&Q\xb1\x93LT\x88\xf9D%\x1d)E\x1b\x14YEE\x98XT\x82\xb9E$\x98^D\xe0d\x18\x91\x9d<\xac+LO\x17\xa3\xf1t!\x1aO]\xd1\xd8\x91sT\xde\x19\xad\xa7\xceh\xcd\x93\xcfM\xf8\x8f\x1f\x9f\xdc\x88\x92F\f\xe8\x87\xb4o\xf0\xeb\xd97\xee'\xb3o\x9c\xefd\xdf\xe0\xc7\xb1o:\xbe\x88}S|\x06\xfb\xa6\xf8\xf6\xf5\r|\xf0\xfa\xb6\xfa.\x03\xb8\xad\x1e\xec\xb1\xf7\x88\xe8\x96J3\x04\x1e\n\xc0=\x9b6\x9a#\xf0P\0\xfe\xd9\xf4\xb7#\xbf\x97\xd0\x83\x03\xb9\xd7h)\xb2\xfd\xbc\xef\xdd\xcd\x96\xbe\xf0K[\xc9\x8c,\x17\xac\x8d\x91\x896\r\x90zl\x015\xabA\xc5\xac\x16\x13R4`\xb2\xb5\x01\xc8\xa6\x06!\x9b*r\x0f\x7f\x9a\xe5\xbe\n\x97\xde\xae\x0f\x87\x8d<8\xbbO\x7f;\x89\x8f\x99\xae\x04\xc8\xfe\xf6\x11\x83\xf0\xa5\x87\xfb\xf0\x1fo\xa1\xbdoy\x90\xf1\x1d^o\xe7|\x89\xe2^\xf9L\0\xf7\xab\x13\xf7JQ\x02\xc8_\xb2\"\0\xfej\xca\xbd5\x1cQ\xf6C\xa5\xcf\r\x1fd\xc8\n\xe4o\xca>\xe4\xe9M\xd1\xe2\x01\xe7C\xa6-\x05\xf3\xa7\x9e\x0f\x9a\xbd\x14\x81\xaf\xba>\x18%>\xa0\x12\x1f\\%>d\x19C\xb0\\\xb1\x0f\x1d\x8a}0iA\x90\\\xd5\x0f\xa8\xea\x07\xd8\xd9;\xf4`\xd0\xad\xb7\xb3\xd7\x979\x1a\xef\xd8\xd9\xeb\x8bK;x;{]\x19Z\xc7\xdd\xd9\xeb\tw\xben\xd0|\x9d\xbbm\xdd\x06\xa5Q\xbd\xdd\xb6\xae\xcc7\xb5\xbb\xdb\xd6\x15\x82\x03x\xbbmI\xf6\x14\xffB(e\xb7\xa74\\\x03$C[\xc0\\\xc9\xc0\xf2\xb7F\t\xd8\xc5cz\xaa\xb6\x8b;B\x07|\xac\xca\xda\xc5\x07\nz\x9c\xabzg\x1f(0&\xdd\xe3+'\xc0\\>\x01\xafx\xca\xb9\0\xe0n\x84\x96\xb74F6\xf75\xa8\xb9\xb9A_\xdd+\x9c}\x14\xfabEe\x87\x041\xdd\x11\xcctF\xb0W\xe7\xdc\xb3\x87A7TPv\"\xb9\xae\xe9A\x02\xcc\xed\x13\xf0\x8a\xa7\x9c\x0b\0\xeeJhy\xcb,\"\xcc\x9d3\xdct \xc3_;\xaes\xee\xc2\xa1W\xb9\xb0\xec\x1c\xc5\xa2\xe9\x16!\xa6C\x84\xbc\x16g\x9dK\x04n\xcfpy\xe3\x14\xe7\xe6\xbe\t0\xb7M\xc0+\x9er.\0\xb8g\xf1G\x0fX \xa1\xce\xb7\x94?+<\xc8\x80W<\xe5\\\0p\xcb\xe2\xef\f\x93\x80\xea\x02\xbf\xc4\xb3\xc2\\\xd2B\xdb\xf5\xfd\xd1\x1c\xf1d\xc74\xbf\x93\x91X\xf0\xb6\xfd3\xa1\x8e\xc4\xf9\xd3\xd1\x06\xda{\xa7\xec\xf3\xcd\x0eV\xc2\xf3rG\x92\x95\xba\x85\xfc\xe0\xdd\xfd\x90\xaf\x8cY\t\xdd\xc8\x93\xf0\x9fo\xf7d\xb6\x13\x8e\xfc\xc7\xea\xd6\xbd\x9d\xben`A\xef\xfd\n#W\x97\xdas\xed;\xe1\xdf\\\x1a2\x90\xad\x9b\xe7 6\xcd\xde\xf6\xcd\xc1\xa2i\xf9.\x94'\x82\xd3\x92\x16\xde\xc9\x90\xe8w\xbey\x81@\xfe\xcb\x03\x19\xe8\xbc\x03B\x12S*ex\xfe\xd6\x07\x81\xf0.\x07\xa1\xb0e\x82\xd0\xec\xed\r\xc2xW\x9e\x05\xe7\xb2',\xfd^\xc0\xef%\xfef\x0f\xcc@\xb3\x8a\x94\xf0gV/\xdd\xec\xb9\xd2\xf0x\xd6\x99\x8c\0y\x98<\xc369A\x8b\xddB\xcf\xf9$H\xc0|\x0b\xd1\xb3\xf9\xf3\xaf\x82\xc8<\x89\x91\x9d=\xc6\x1e\xee\xdc\x0e\xed\x9c\x0e\xed\xf0\xde;w\xfb\xd2\xb3)\xf0\x04\xc9\xb7/=k)\xc7\0{&\xa9\xf5\xa5\xd2\xf9\xe3\x8bn\xac\x14 \xdfB\xfa\x02\xdb*\x05-\b\xf9E7U\n\0\xe5\xe8\x8b\xd9R)H\xf6M\xc1\x17\xddP\xc9@\xee\x14/\x95\x95\xad\xb1\xf7\xfa\x87\x81\x05\xf0z\xbfvz\xef\xcc\x8c_\xcc\x1f\x05f\xa0\x18\xd2\xba\x18\x92:\xc5\x0b:\xc5\x8b\xeb\x14/\x8eS\xbc\xa0S\xbct8\xc5K\xe1\x14/\xe8\x14/\xe8\x14/\xe8\x14\xafF\xad\xaf\xa8\xd6WT\xeb\xab\xab\xd6WG\xad\xaf\x9eZ_Q\xad\xaf\x85Z_\x0b\xb5\x9e\xc1\x11\xce8\x84sF\xff9\x88Mq)\xbd\xc0\xcd\t\xbf<\xdd}Z\xef\x9f\xaeV\x9b\xfd\x81\x7f\xbc_\x1dW\xf1\xf8\xc3\xee\xe9\xf8\xdb\xfa\xb8\xdf\xdc\x1e\xfe\x1fl\x014)"),ara=a("x\x01\xbd}[w\xdbF\xd6\xe5\xbb\x7f\x05\x1eg\xd6\x1a\xf7\x90\xe0\xbd\xfb\xc9\x1d'\xdd\xb1\x938v$\xd1\xfc\xde(\t\x969\xba\xc0!E)\xea_?\x05\xd4\xb9\xee:\xa0\xbf\xa7oe-\x07\xdc\xbb\0\xd49ujW\xd5A\x01\xfa\xe3q\xbb\x7f\xfc\xa9}x\xfc\xb5y\xdc\xef\xae\x0e\xd5\xf4o\xe3W?\xb4\xf7\xf7\xcd\xc3c\xf5C\xfb\xede\xbf\xbb\xf9\xfaX\xfd\xaf\xab\xff]\x8dW\xcb\xd9\xff\xe9\xfe]\xf4\xff\xae\xba\x7fW\xa3\xfe\xdfI\xff\xef\xa2zs\xdd^6\xd5\x1f/\x87\xc7\xe6\xfeP\xfd\xfcp\xd5\xee\xbf\xb5\xfb\xedcs\xfd\xb7\xaazswW}\xea\xaev\xa8>5\x87f\xff\x94P\xbd\xd5\xbe\xd9>\xee\xda\x87\xeam*\xfd\xf7\xea\xec\xeb\xb1\xfau\xfbRU\xe3j\\\xff}6\xff\xfbl\xd6\xdfA\xca\x9f?\xec\xfe<6?\xbf\xad\xa6\x93\xd1\\\xe1\x8b_\x8f\x87\xedMSM\x17\x8bzQ\xcd\x96\x8bY\xfd\xaa\xb3\xee\xb7\xed}S\x9d\xed\xee\x9b\xc3\xeb\x9f\x1f\xb7w\xbb\xabW?\x1d\xef\xee\x14\xad\x18\xdd\xde\xef\xee^\x14\x7f\xb5nz\xfb\x7fm\xaew\xc7\xfbW\xb9\xd4\x9b\x87\x9b\xbb\xa6z=\x9e\xfdm\xf6\xea\xe7\xc3O\xbb\xbf\x9a\xeb\xdfw\x8fW_\xab/\xdb\xbbC\xf3\xea\x87\xaf\xdb\xfd\xf6\xea\xb1\xd9\xff\xd1<V?\xfe\xf5\xd8<\\7\xd7\x9f\xda\xfb\xedC_\x95\x7f\xfe\xb3\xfd+\x9d<_U\xaf\xeb\xf1\xa2\x1a\x8f\xc6\xa3j\xb9\x9cT\xaf\xceS\xb9\xfd\xdd\xee\xa1\xf9\xbd=\xecz_\xbc\x1e\x8fF\n\x9f}\xdd]\xdd>4\x87C5\x1b\xbd\xbah\xf6\x87\xae\xc8hT\xffm\x94J\xfd\xd6>\xee\xae\x9a\xff\x81\x16\xcb\xee\xda\x1d\xaam\xf5\xb8\xdf^7\xf7\xdb\xfdm\xd5~\xa9~\xd9=\xb4\x8f/\xdf\x9a\xd7\xffn\xd2Yo\xfeUm\x1f\xae\xffo\xbb\xafv\xe9\xe4\xc3\xf1\xf2\xb0\xbb\xdem\xf7\xbb\xe6\xf0\xb7W?\xa6\x9b\\\xef\x1en\xfe\xb8\xfa\xda$?\xf75\xf8\xe31\x15\xdf\xee\xaf\x99{\xf5\xc3\xf6\xdb\xbf\xb3\xeb\xe7\xb3\xc9\xab\xcft<\x9d\x8e_\xbd9\\u\x1e\xddW\xf3\xe5\xe4\xd5\xdb\x86\x7fu\xce|\xf5\xc7\xe3\xf5\xbf\xd7\xd5\xa4\xee\x0e.\xd6\xd5b\x9e\x0eR|w-\xc2\xf1=\x19\xcf^\xfd\x90\x8aT\xff\xa8\xd6\x9f\xabz6J\x07\xbfU\x87o\xdb\xe4\xbd\x7fT\xff\xacF\xf4\xdf?\xbaR\x93\\j\xd2\x1f\xfcV5\x7f]\xddm\xef\xfbb\x93\xd4|\xe3q5\x19\xd5\xd5|\xbe\xc8\xa5\xa7\xb9\xf4\xb4\xce\xd7\xfc\xf3\xd8&7^\xde\xf5\xe5\xc7\xd3i\"\xc6)\\\xbb\x13\xe6\xf9\x84Y>a6\xca'<\x1c\xef/\xbbf\xbdy\xe8O\xa9S-f\xd3Q5_P\xf1\xb9/~\xdd\xde\xddm\xf7\xb96\xe3\xea\xf5rUMS\x83.\xd2q_z\x91K/\xa9\xee\xdf\x9a\xfdU\xd7C\xba\xe2\x8b\xae\xf2\x93\xf4?s\xf1e.\xbeX,\xfb\xe2\xdb\xfbt\xc2!5J>a\x9eNXV\x8bz\xa2\x95_y\xdf\xf4\xd6\xe6\xd0\xeb\xed\x9du\xb6\xce\xab\xba\xbb\x07\x9d2\x1d\xf9S\xbem\xf7\xcd\xc3]\xf3%\x9f1\xad\xbb{\x8c\xbb\x06Jg\xac\xf2\x19\xe3\xe0\fs\x93\xbeZ\xa3\xaaN\xb6\xcb)\xb5\xf7\xd2\xf6\xd0U\xebp\x9bO\xa8\x97\xa9\xc9g\xc9Q\xda\nSj\xe4\xf9b\x96\xefqw<\xf4\x85\x97\xf3\xae\x01R\xfdg#*9\xf5As\x95Dg\xdb\x17}=M\x15\xa9W\xd585i\xea\xd0\xb9\xf4\xcc\xd7\xfd\xeb\xcb\xb7\xafMn\xd9i*\x99jP/\xeb\xbe6}\xe9\xb9\xbfv\xf2\xfe\xae\xcd\xceOB\xd6\x85\xda85\xd1x\x94\x03sJ\x8d[Sk\x1d\xee\xb6\x87\xaf\xb9&\xf3Y\xdfT\x93T{\xb1p\xe9]\xf2\x9ff\xdf\xe6\xb0I._\xf4Q\xc3a0]\xf9\xa2\xedC\xc35\x1e\xa5\xf6[I\xc1\xd9\xc8\x17||n\xc9\xc3]\xc1Y\xad\x05\xc7P\xf0\xeb\xbei(D\xfa\xbb\xa7\nKYh\xbb/\xed1\xc7\xf7\xb8\xbb\xe8\xc2\xdc}\x02\x05wO\xee\x9a\xab\xb1\x18?\x9b\xfa\xa2\x87\xdd_\xd9\xf6QWr\x96\xba\xe4|I%\xa1;\x1e\x9a'j\xaf\x14\x19\xaf\x97\xe9\xa6\x0b\xbd*\xf4\xc5Fb2_w\xba\x9ahe\x17\xd0\xcdw\xe4\xd4\xd4\x9b^\x8f\x179\x18\xb9\xec\xd2\x07\xcdU{\xd7\xe6:$\x87wQP\xcf\xc7\x9d\n\xe6\xc2\xd0\x05\x0f\xcd\xfdNO\xe8\xc3&\xc5\xa4=c>\xf2\xb1~\xd7\x8d&}\xacO{\x0bSMf\xe3i.:\xf6E\x9b?\x8f\xdb;\xee\x17\xe3:\xf7\x8c\t\xb9n^\xfb\xc27\xddh\xde\xec\x87.\r\xad\x97\x06\xf2C?\xde\xf5-\xd8\x05e\x8a\xa2\xe9\xa2\xeb\xa2t\x02\xb5\xe1\x8a\x94uK\xdd?\xc5y\x17\xeb\xcb\x91\xc6\xfa\x9c\x1aq>\x1e\xf7E\xdf\xe4^1\xeb\"h\x96\xae3\x9f/s\xb9\xb9/\xf7\xcf\\n\xd9\x15[.\xbbA'\x17\xa3\xb6\xeb5>\x15\xfb\xa1/6\xcfr8\xefe\x87\xee\xcb\xfaY\xd7}\xc1\xb7z\xbdE2S\xae\xb7\xf2\xb7\xfd1\x17\xebj7O\xe3\x07\x17[\x8c|\xb1\x9f\xb2'\xbbRIV\xa4\xd4\xd8\xdf\xf3_9Pj\xd2j\x95\xb8E\xed\x0b\xfe\xdbT.\x19&\xd7\x83\xe1\xeeg-6Y\x9a\xca\xf18\xd7\xeb\xe1o\xd5;\x12\x9e\xfe\xb6}\xd7\xe3\x823\xef\xbc\xf7\xb93uw\xed*\xc7\xa5\xb8+\xf5}\xea\xb7\xea\x17\xd3\x12)\xc2\xa5\x18\x8cg\xbf\x92\xe7\xbar\xcbTs)\xb7\xf47\xfd-\x97\xab\xbb\xee3\xab\xbaY\xa1\x94\\y\xaf|\xc8m;\xcam\xbb\xd2\xb6]Bk\xfc^\xf1Da>\xd2\xd6XBk|\xcc\xad\xd1\r\xb5I\xe7\xdd\xf5j\x7f\xbdOd\xca\x04\x82o\t\xfd\xe4\x8f\x1c\xf5\x8b\xbe\x82\xb3\xd1Rf\x1e\xcb\xa9w\xe1\x19\xdf\xba\x8b*u\xcdr\xe6kx\x9e\xaf7\xa2\x80\x99\x1b[\xa0w\\Tf\x160\xb7U\x84VY\xe7\x82\xe3\xbe\xe0\xaa\xeb\x97\\p\xe9\xaf\xf8\x99\x9a\xa5\xaf\xe3\xcc\xdcy\xe5M\xd9\xe4\x0b.\xc1\x94\xd5\xc8\x17\xfb/\x8e\xc1\xaeM\xf4\xae+\x9e?\xf4\x97\xfd\xad\xbaL\x13\xf3\xdb\xe6Q\xe6\x1cuW\xd1Tv\xd2\x0f\x18t\x0eO\ril\xbdL\xa7\x98\xf1u\x9am\x9b\x8c\xb5=W\x93\xf0.f\x9eR\xd3m\xba@\xe0\xdb\xc8l17\xc6\xf6p\xb5\xdb]\xed\xf6W\xc7{\n\xafI\x9aHLM/^\xc1\xf8t\xec\xe6\xbd\x874a\xe7\x89k\x92\xcdY\xcf\xbe^\xe4I\xc5j^\x95s41~\xbc\xc8S\xb4\xc9X\xa7h+\x18\xab\xb6\x1ar\xa9p\n\0\x1eIV0\xa7\xb8\xd4\x11\xad+8\xe9f\xe7\xb9\xe0\xca\xab\xc5U\xc5\xa3dW0U\x98\xaf\xd8\xcfm\xdc\xfc\xb6\xe2\x11=\xf5\x8cY\xd7q\xe9\x92\xfd\f\xcb^3;\xa0\x9b\x04w\xd7\xec\x06\x0f\xb9&4\xe6\x17\xeaji\x02\x95$!\x8d\xbdu\xd2\xb5\x9e\xfb\xa5\xda\xa5iD\x7fpW}\xb9\xa3\xd3\xa1\x07\xde\x90\x0e\xa7s\xe7\xfd\b\xa57\x82iF\x8e\x96\x14$\xaf\xd3\xb4|\xb14u\x9f\xf9\x1a\xed*\x9a_\xe5\xd1\xbd\x93\xd9)\x95\x9c\xfb\x92\xff\x8f\xea\x9e\xaa\xdc\xd7\xbd^\xccM\xe1\x85w\t\xcdw\xa7\xd9%\xf3\xb1\xa9\xc0\xd2_6\x0f\xea\xd3\xec\xbc\xba\x9bdII\x10\xc8{\t\xe6U\x1a\xa1\xa6j\xfc\x18Z\xeeAn\xde\x19o\x0b\xc2d0\xcf\x19i\x82;Mc\xa8\x96\x84\xa9\xe0\xb7l|7\x13\xab\x93\x0b\xa7i \xd5\xb28\x9f\xc8W\xed\x8b\xa6b\xc9\x1c-:\xf5]5OQ\xd2\x98:\xf2q3\x9e\xf9ry\x96\xd4\xaf7R7\x9ew\xfd\xa0\xa6\x92\xd0J4\x0b\xcc&\xd5\xa9\x07\xce\xa6s*\t}\xebX\xc9\xb2\xa7\xeb2\xa6'\x8c\x97\xbe1\x9fT\xac\x92\x8b\xea\xb9)\xb9\xf2\xa3\xdd\xb3\xd63\xc5\xdc\xd48\xb4\x1e\xf9k\xfeE\x02L\xbeO\x1dB\x8bB\xf7z\xa1\xa2S\x8a{[\x81\xba\xf6\x8e\xfa\x0f\x95M\x03xZ\xca\xa5\x91sZ/\xa9$\xb5\xd2\x94\x15#\xa9\xa4\x8a\xd1\xac3.\x8d\xf1\xd3Q\xd7\xcf\x17t\n/\xb8hZyI\xcb\xdd\xae\x13\xe5\xe4I\x92\xb0\x05\x87k=\x0bn\xa0\"\xfcz\x91\xef0\x99\xae\xcc\x1dx\xf21\x1d\xab\n?\xee\xee\xaei\xd93\xaa\xc6\xe9\xf2\xb3$#\x93\x9an3\x871%'\x05\xae\xdbg\x9a\xa7\xafr\x84N\xea\xba\xd7\xc1|\x0eD\xb3\xae\xc4\xbbJ\xa5\x15h\xa7%\xb3\xf9\x88JC<w+\xd8\x94\0\xba!\xdb\xbban6\xee\xd6l\\\x9e\xdc4\xa6 \xf8\xd2\xa5\x9fx>\x9d3M\xe9\xac\xc9D\x97y\xe39\x8c%/\x8d,\x1a\xba\x11T\x07\xda\xf1\x1cV:_\xee\xda\xfd\xeeAzX7\xb7\x99\xf5mF\xfda\x0eQ~h\xb4.\xb3nxH\xbe\xe8\xf5h\xceU\x81\x91\xe4\xea\xb8O\x8b\xfc+\x0e\xba\xba;k\xd6\xfdoEm\xc6s\xe8z<\xd5Q\xed\xb0\xeb\x93r\xbc\x82\xe8R-\xf5\xd4\xdce\x01\x13\x06N\xce\xe8h\xd8u\xea\xc9\xbc_\xa4\xe8Y\xa0W7\xc7]:\xe3\xbe\xd5\x19D7\xaaw]'\xf5\xde\x11y\x8cg\xdb<\xeav'\xf5\xd5\xb3\xc1\x9eN\xaaS\x0f\xd1\x93&\x03'i\0\xa7\x89}\x7fVm\xce\x82Q\xe7\xcb\x8e\xc7\xb71\x8do\xcbN\xf9\xa9\xaf.f\xd8\x94\xae\xf44\xd5k\xa9\r\xb9\x80\x86Li6M2\xa4\x91--\x9eS\x98\xd7S\xae\n4\xe3\xf5\xf6\xe6\xa6\xe1\xee\xdaO\xb3:)^\x1a\xdf\xae\xa2\x138_V\xd7\xd41\xccR~\xcc\x13q\x9f$\xe9:S\xb3o(S5\xea\xf2\x9aUN$Q\xff\xe0\xf9\xf6\xac\x96,\xd2\xf6f\xbf\xfd\x96\x8d\x99uQ\xdc%\xb6\xc6:o\x1c\xf3\xd4{Bw\xbaL\xd9\xe2\xe6Q4a\x95\xaf\xde\xc5q.>\xad\xca\x89V\xdf|\x97\xdb\x03I\t\xa7\x88\xd2\xa59E4\xe6\x199F\xa5\x9c5\xa3E\xfct43g\xcd\xe3\xb3\xca\xec\xdb\xd4\xac:\xc6\xcb\xc5@0\x9b\x10\x9b\xe5h^h\x88\xf1\xc4}\xc9rww\xb7\xfbv\xd8\x1d\xb4zI\x82S\x9f\xe6\xd4\xd4\x98g\xf0\t\x90Vz\xfc\xda\x1e%\x99\xd8\xcb\xc6*'\xbe\x17\x94Z\x1b\xaf\xa0\xa7qN@t\xb5^\x92\xaev\xb3\x84\x05yb\x85\xbdf\xbf\xe5DP\x97kMS\xf9\xc9x,i\x84\xf1\n\x9ai{u|\xa4\xe2\xddH\x95\xe8\xcel-\x0e\x19\xbc<;\xffr\xd7\xe4\xb1sEwXv\xf9J\xae\x10\xcc\xb8u(\xe9\xfc\xd3\xa9\xf6\xb4\x9b\xc8\xd6|\x87\x85/~\xbf\xbd\xda\x93V\xa6\x96\x9buB\x96\xea?\xe3\x11n\x05\xd9\xa1\xcb}\xc3\xe6R\x1ei\xda\xf5\xe0\x19\xb5\xc4\n\xf2C\xd7\xed\xe3\xf6J\x86\x9eN\x1efi\x860\xe9\xd6\xb04G\xa9G\x90\xa2\xbd\xde\xa5\x9e\xc5\xad=\xa63\xa6\xee\fP\xbb\xbd\fT\x94g\x9dt\xab\xbb\xd5\x98JC\x83]\xa5\xe7*)\x8b\x9dU\xa5[\x14\xf4\xa3\xfa\xb2\xa6\x04|=\xc2$\xea\xf1\xe1f\xbb?\xde\xdfm\x8f\xd9\x8a\xd5$\xb7[\x9f\xee\x9c\xd2I\xd0\b\xedMJc\xde\x92\xd1y@\xec*2\xe5{@#\\m\xb9\r8\x88\xba\x19\x0f7q=\xc2\x0eq\x8f\xba\xb8L\x15b]\xacyV\xc2\xc5\xdfP\xca\xa7\x1fiWc\xcd\x96\xd4\xb5$us\xb7n\xf7\xd7_RFO\xd2\x85\xd3N\xf8\xd3r\xcd$Wk~\x8e!\xc9\x13\xb3R\xc5\fJ\xcd\x8f3$\xe1\xa1\x85\xfb\xacG\xd7\xac)fz\xba/\xcfi7\x9a\x07~\xc8U\xef\xd6*iq?\xd7q\xb2\xe6'\x19\xbd\xe4\xe6\xaa\xdf\xa7\xa9\xd4\xf1\x8e\xeb>_\xe4\xba\xcfM\xdd9\xb9\xcfs\xd7\xad\xc9\x8a&\xb7\xa4\xe6\xe1Yf=\x85E\xd3u7\x02\x1f\x0e~\xed4\x99\x99\x13p\x91\xa3\xa6\xd2Jg\x92\xa6\xfb\xbc\xd2\xa9\x8b\xb4\xb7\x16\xeft\xa7K\xebw+\x8e\x19\xad\xb6j\xce~s\xd5\xdbF\xa3\xab\xee\xfb\x86\xd4\x04\xf3\xdfi\x8cKO\x02\x93Z\x1fh\xf0\x9d/i\xa8\xeeS\xc6\xf9!\xc6kx\xee\xf1\xb3\xeb\x87}\xcbNS\x9d\x96\xe3\xa5+.\xeba\x156^\x14wq@\xfd\xe35\xd4hkd$\xeby7\xdfe\x15\xc1\xd2\xc7\xa2\x0b\xd2\nf\xb6\x1c\x15\xb7\x90\ni\x9f\xe2\n\xf5\xa9\x90\xb1\xbf\x05\xe7|\x9c\xb5\x92\xfbAk9\xd9|\xbd{\xda\x91\xc8.\xe7\xb9*\xab\xac\xb5\xe1\xc5\xd57ze\nI\xb92'\x8fA\xf15\x8d\xbc\xa4\x99}\xe1K3\xa4\xd0\xcaj\xb9(\xdc\"\t8\xb8\xbeM\xc5\xe1\x1dd1\xa6w\xd0\x15Y\xd0\xba\xb2r\xed\x9fR\x19\xdd\xef\x16\x87\x9d\xca\xdaUl\xd9^\xbeb\xdch\xfd\x8cz\x1c\xdb\xa2\xc2o\xadXN\xe2\xd20\xb0\x983\xa0\x95\xc5\xb3F\xc5{\xd7v\x19\0\x93\x90*\xee`Z\xc2\xb9u\x1e\x87\xb5\xb9|\x1f\xd0\xfd\xe5\x17\xc5\xe5%q\xef{$'\xf0\xb1\xf6\xf28 \x8d\xeb\xf4\xd4\xa2x&\xc0e\xddcE\xd3`K\x1a\x15S\xa0\xbe\x86N\xb9\x98\xf3)\xfc\xd8_\x14.\x99kR\x94E\xf5\xcdLC*\xbfX\xcd\xc2h\xb82\xbdw4\xdc{\xb9\xa14\x104m\xc8\x13\x80\xd7\xa0\xf9\xbf\xa1\xb19Q\x9f\xfa\x8c\xcd\xd4\x8b\x87X\xcd\xb5mY\xcdW\xc3M\xbb5\xb3BS#TC\xce\x9dc\x8df\xb4Q\xc3\xa6\x9f\xd1\x8c\x1f\xb4B\xfclh5\x1a\xae\x90\x99\x15\x92\xe0v\x03^=\x1d\x8847m\x1b\f5\xed\xf0:\x7f\xc9\xf9\xaa\xe9lZ\xb4\x96\x9663\xb0S\xd2 \xf9J\xe3{\xda\x03\xd1M\xf0P\xf8\x17\xb9\xf2w\xed\x7f\x9a\x87\x1b^\x97\xf7\x8f\x86\xbb\tFl\xe9'\xad\xb9>\fA\x1d\x94\x87]E;\xd5\xb9\xf2\xf6\xc1W\xd1\xcbA\xd7L\xf2m0\x9cQ\xa3m\b\xc5\xda\xf0\xc6v.\x192\xb0wI\nR\xad\xcey\xc8I\xd9Z\xda\x13Mk\xf1t\xd9&\xd11\x9a\xff\x0b\x82\x87\x1f\x90\x14c)U\xfd\xeck\xbb\xcfu\x19\xf5\xd5^\x15!/\x93Gc\xa4yf\x86VJ\xdb\x9aa\xcb\xb4m\xdcL\x7f\xc0(\xba\xec\x9fv\x15\xa5\xc9)\xd7&\xe0\xf3\xc3\x82\xf9L\x13\xee\xc5\xb8`\xeam\x07\x06\xac\xb8\x84\x8c\xc8\x99\r\x16\x90\xb3\x89\xdd\xdcp8\xf6y\tJ-ORR?-\xb2&\xbay\xa1\xf0\xa4\xea\x93q\xe4\xe0\x9cDK\xdb\xe9\xc8@a\x9d\xda\x99\xc2\xf3:\x9cG\xdd\x1f\xef\x1ew\xdf\xeer\xe2-MF\x93\xd7\xbb\\\xd3j\x11\xfb\xc5\xe8\0;fqBU\xa5\x8d\xe4\xb1d1\xc3\xa1uOJ\xcf<\xee\xb6w\xd7\xbb/_$\x04&\xcb\xac\x1c\xe3Q<)\xf2\xa3\xb1\xcc\x8b\xba\xf9\xcah\x1e\x8f<v\x1e\xa5\x0f\x87\xd1\x93\"{8#\xca\xab\x94I7J\r\xc8\xc0\x8f8{\x14\xe5\x1e\x9a<\xfaI\x11\xcf\x1fW\x85\r2Ms'\xc8T\x7f<x\xc2\x95Y\x18\x8c\xbe\xbb0x0\xdd\x90\x9e\xe5,\x06\x0b\x1fM\xbf\xe2\x80H\x99\x91\xd9r20\xf0\xab\xd6;\xf7O\xe2\x05\x90i\xad\xbc\xfa\tf\xedf\x03WZ6\x0f\xed\xe2\xd2\x96\xa5\x87\n\xfb\xf6\xb6yp\x8f\x16\xc6\xc9\x80\xfe\xd1\xc2h\x19N\xb7\xf6\xcd\xcd\xee\xa09\xc7\x13\xf3-\x19\xad\xb4#\x9a\xfd\x19\xd8\x13u\xb9\xe7U\x9bw`\x14\xaa\xcd9\xf6c\x1a\nu\x07MgA'\xb03I\xaf\x15\xa1iDD\xa3r\x1e\x8fO\xa6\xa3\xe7\xf1i<\x18\x04\xad\t\x02~\xb2\xb4*\x83@F'\xd3\xaa22\xa1\xcasY\x130Z\x16\xae;\xcdU\xa6\xedG\xbae\xa9\xee\x83\xa0\xce#C\xd4>?>\x9a\xa4I49\x97\x99\x9e\x1d\x81\xe74_\xb2\x1b\x81\x8a\xb9*\xceSj\x9a\xa7\xd8G\xad\xc58bf\xdc\xe4\xc6\xfe\x19K<+h\xcc\xda\xa5\x17\x81n\xedb\x9ef\x16C\xa0]J\xe5!p\xea\xb6\x7f\x14\xc3\x88i\xa7\xef\x8f9^\x8b\xb5\xfcP\xb2Bc\xd1<\xc1\x1fZ\xce\xfe\xc7\xcav\xff\x901\x8aGQm\xbb\xaa[e\xcf\xd8g\xec\xc5Pl\xe6\xf1\xc3C\xb1D\xbb\x96\xae\x87\x17\xfb\xa2\xeev\xe21\xdc7dbn\xc4\x97\xa6\xf1\xa7\fuN\x97\x89y]\x8c\x04b)\fN\xce\xdc\x81\x99\x93YG\x9dXQ\xcf\xc7\xb4\xe4m\xee\x1e\xa9\x9b\xf4\xdd5o\x1c\x8a<\xf3(\x93N\xf7|\x7f\xb0s<\xb7n\x8a\x95D\xb3^tC\xf1tx\x8a\xe5\xdccm\x1d\xc86\xdc\xe7\x87\xf39%=\xca;\xab\xf9Iv\xe1{\xf5\x0b\xa7\"\xbb\xddrC\x12Y\xe4\xcf(vf\xab2\x7f&zm\xe2\xf85\xf5p\xbb_\x10or\xad\xe9\x06\xde?\xb3\xa8\xcb)\xf1\xcc\xccZ\x93V\xee\x93ff\x0f\xf59\xd8$\x84\xe9\x11\xd2|h\x8e\xee\x16\x8e\x8b\xacivS\x1a6\xdb\x9dY\xe7\x8c\x8d\xa6\xc5:\xfb\x1eesaVw\xb3x8\xf9\x05&\t]\xf2\x1b\xa3s\xb5$\x9b\xe5\xdd\x05\x9a\f\xd5\xe9\xa1\xd7jV\xe6\x1ct\xae\xe5\xc6d+U\xd0\xc5d\x147\x83\xac\x8c\xe0\x8b\x81\xb2v\xc9\xd8Op\x92\x8f\x86\xd6R\xbf\x98\xa10oX\x9d\x97\xcb\xb4\x99l\xe0\xfe\xba\xbd\xcb\x13\xe9\xc94\xb7\xea\xb4\\\x8b\xf0\xc8\xd9e\xd5\xff\x1b\xc3\xa6\x043\xa8\x88\xd9\xc93\xb4\x9e~0\xc9\x0f\x9aT\xce\x8b\xdc\x87HN\xd1YN+\x0f\xf5\x16\xbb\xd6\x1c\x98\xddH\xb3\x1a\xc7\xcb\x04zQ\xceX8{\xaf\xf38\xde\x05\xd6I>\xa6\xe5\xd4\xf9\xd4\xad*Y3|\xafWm\xdd\x18\x91\xd6`\xf5hp\xc1\xf0G\x91\xdb=\xd1\x0fE\x0b\x0b\x9f\x9e\x18\xeax/\xcdu\x1a\xa5y\xdb\xfe\xa8K\xb7u\xe1\xbc\x184\xa3\xd5\xd0w!1\x1d\x98S\x89\xd1fg\xf5\x90\xd1G#\xb76}\x03\t\xa8\x19=\x8eL\x8b\xaa+\x0e\xe74s\xcc/',\xe6CiZ\xdf\xb3\xba\x99`\xb1$\x91\xbc\r\xa6.'\x94\x8f\t\xa6^\xb2\xec\xd1\xe8w\xcb\x9e\xc9\x80\x1f\xb5\xb8L\xa7\xe7\x83\x99\xc2OE\x8d\xc6]\xc4-\x17nWq\xa1\x9a\xc5Y\x94p\xb6\xcf\x0e\x8bI\x9e\xb1\x83fx\xf3\xc2\n)lG\xaf\x19\r_\xdd\t\xf3y\x9c\x85z#9\x173}\x1c\xc8\xe7|\xd0\x9a\xd88\x9e\xc4\x8b\x99\xff\xc0\xcaJ\xf7\xa9\xcd\x87\x96J6)9\xb0\x80\x17\x15\xb7\x86.\xb3\x9dv\xe7<\x8a\xcfm\xd1\x7f\xa7\xb9\xbd\xec\x86\xcd\"Mc\x97\xb65\xbd\x88Q/\x07\xc6\x15\xccA\xf4cK=\x1b\xec]\x0fF\x80zy\x9e\xf5\xbb\x83\xc7\xe1\xcc\xe7\xb1X\xdb\xd0\xd2\xc6l{\xc4\xea\xdf\xb57]\x87|h\x1f\xd9\x86nG\xaa}\x99\xa4\xe8\x04n\xf2V\x0f\xa7ED!\xfcd\x98E\"8\x81F\xbdT\x19\x1d\xf4\xba\xfd\xad\xf5\xaa\x7f\xdbg6\x8d\xc7\xb0\x9b\xe8\x11\r\xed\b^\fT\xaa\xa1\x15\xa6\xd4\xbf\x9c\x8fI\x90\xda\xdc\b\xadq\xa6\xc3\x03\xea`\x10\x99\x9d\xb78\x19KaZ\xa4)\x174q\x1d\xca\x80\xd9\x04O~\xce:1\x9bS\xb0Z?\x1e\xe9%3}\xa1\xf2\xc7\x87k\xf3&f~5\xf3}\xb3\x7fx\xbb}\xdc\xea\xaf\xdf\xb7\xbb4\x0b\xad'\xf5\xf8\xd5\xfb\xdf?Wo\xaa\x1f\xbai8\x1f\xe7\xa1\xdd\0\xd9W\x16\xa0y\xa9B\xffJ\xc73>\xce\x03\xb8\x01\xac\xfb\x14\xfeP\xbd\x9e\xf2\xf9\xb4*4\x80\xe9U\x06\x95\xb03X\x1e\xac\f\xe0F_\x83\x93w\r\x92\xf7 \x18 +\x9d\x02\x1f\xcd\xf1Y\xaa\xfb\x82\x8f\xd9'\n8\x1b\x19>\xef\x9e'\xf21\xd9\xa8\x80\xb5QQ\xb5Q1\xb2Q\x01o\xa3\xe2l\xa3\"$\x98\x06\xe9\xa5_\x7f_tS&n\x94u\x12$>\xde\xa4Br\xcc\x95\x17\xc0T\x931\xf3\x82\xaa\xba\xe0\xd8u\\>\xa6\xab(`]\xa0\xa8^[1r\x81\x02\xde\x05\x8a\xb3\x0b\x14a\x17(\x92] \xbf\x9f\x8c\x11\xcf\xe6\xf8\xc5\x1e\xa3\x07^J\x0f\xe4\"\xa67\x11\0]\x8aP\xe8W\x8cb\xe7\xca\xb8\xe9a\x04@7#4\xeck\x993\x1d\x8e\0\xe8u\x84F]\x8f\xa8\xb2\xff\x11\x01\x9d\x90\xd0\xb8'\x12\x89\xdd\x91`\xe8\x93\x84B\xc7\xcc\xe8G\x04L\x17%\0\xfa)\xa3Qg\xcd\x9c\xe9\xb1\x04@\xb7%4\xea\xbbD\x95\x1d\x98\b\xe8\xc5\x84\xc6]\x99H\xec\xcf\x04c\xa7&\xd8\xf7\xec\f\xda\xee\x9d\x11\xd3\xc73\xb0\xc1\b\xc6\xdeN\xe8P\xc0G\xfd>3\xa6\xf3\x13\0\n@h$\x03D\x95Z@\x04\b\x02\xa1\xb1*\x10\x89\xd2@0\xea\x03\xc1^$2\xf8\x84\xb6?#\xf0R\0\xa13\x03\xf5\xc8\x1d\xda\xa8\x07\x01\xa0\x1e\x84\x82z0\x8a\xea\x91q\xa3\x1e\x04\x80z\x10\x1a\xaaG\xe6\x8cz\x10\0\xeaAh\xa4\x1eD\x95\xeaA\x04\xa8\x07\xa1\xb1z\x10\x89\xeaA0\xa8\x07\xa1\xa0\x1e\x19\xfd\x88\x80Q\x0f\x02@=\x18\x8d\xd4#sF=\b\0\xf5 4R\x0f\xa2J\xf5 \x02\xd4\x83\xd0X=\x88D\xf5 \x18\xd5\x83`\xaf\x1e\x19\xb4\xea\x91\x11\xa3\x1e\x19\xd8`\x04\xa3z\x10:\x14\xf0\x91zd\xc6\xa8\x07\x01\xa0\x1e\x84F\xeaAT\xa9\x1eD\x80z\x10\x1a\xab\x07\x91\xa8\x1e\x04\xa3z\x10\xec\xd5#\x83Oh\xfb3\x02/\x05\x10:3P\x0f\xe3\x04#!\x16\x05\x1d\xb1\x14\x88\x89\xa3PQ\fid\xc5\xa2\xa0-\x96\n\x05\xc6\x140*cQ\x90\x1aKEzc\xf9Rt,\x0b\xcac\xa9X~l\t\xd4 \xcb\x81\x10Y\n\xd4\xc8P\x1fC\xd4\xe8\x92EA\x9c\x1c\x15)\x94)`d\xca\xa2\xa0U\x96\x8a\x04\xcb\xf2\xa5jY\x16\xa4\xcbR\xb1~\xd9\x12(b\x96C%\xb3\x9c\x973\xc3XM3\xb0\x116\x83n\xc2\x1e\x86\x12g\xa9\x93]3\x12;C\x1b\xc5\xb3(\xc8\x9e\xa5\"\xed\xb3|)\x80\x96\x05\x15\xb4T,\x85\xb6\x04\xea\xa1\xe5P\x14-\xe7\x95\xd10O\xa1\xcb\x9eC\xf4%F\x87\xdb%\x90LA\x8c`*\x06r\xa9\x04\x88\xa5!P*\x852B\xa9\x18\xc8\xa4\x12\xa1H\nm$R1\x10H%\"yT\xb6\x14G\xe5@\x1a\x95\x88\x85Qy\x94Ee@\x14\x95\0I\x14\xe2c\x80\x199T\f\xc4\xd0\x10\x91\x14\nm\x84P1\x90A%\"\x11T\xb6\x94@\xe5@\0\x95\x88\xe5Oy\x14?eP\xfa\x94\xf1\xc2'\xb8\x95=\x01\x8d\xe8\t\xb6\tz\b\n\x9e\x12'\xbaU$vB\x1a\xa9S\f\x84N\x89H\xe6\x94-EN9\x908%b\x81S\x1e\xe5M\x19\x147e\xbc\xb4\t\xfe\x148\xe79\xc0^\"l\xc8\xf3\x81\xa0e[\x8d\x9a\x11\0RF(\xe8\x18\xa3(b\x197\nF\0\xc8\x17\xa1\xa1ve\xce\b\x17\x01\xa0Z\x84F\x92ET\xa9WD\x80X\x11\x1a+\x15\x91(S\x04\x83F\x11\n\x02\x95\xd1\x8f\b\x18i\"\0t\x89\xd1H\x942g\x14\x89\0\x90#B#-\"\xaa\x14\"\"@\x85\b\x8d%\x88H\xd4\x1f\x82Q|\b\xf6\xca\x93A+;\x191\x9a\x93\x81\rF0\xaa\r\xa1C\x01\x1f\xe9Lf\x8c\xc8\x10\0\nCh$/D\x95\xdaB\x04\b\x0b\xa1\xb1\xaa\x10\x89\x92B0\xea\t\xc1^L2\xf8\x84\xb6?#\xf0R\0\xa13\x03\xf5\xa0\xda\x19\xf9`\x04\xf4\x83a\x10\x10\x81QA\x880\x12\xc2\bh\b\xc3\xa1\x88\x10iT\x84\x11\x90\x11\x86#\x1da\xae\x14\x12f@I\x18\x8e\xa5\x84Y\xd4\x12\xc6AL\x18\x065!\xf8c\x81\x18=a\x04\x04E\xe0HQ\x884\x92\xc2\bh\n\xc3\x91\xa80W\xaa\n3 +\f\xc7\xba\xc2,\n\x0b\xe3\xa8,\x8c{i!\xd4j\x0bAF\\\b\xd9\x14\x11\x8e\xf2\xc2\xf0`\x97\x88\x04\x86(\xa30\x8c\x80\xc40\x1ci\fs\xa5\xc80\x03*\xc3p,3\xcc\xa2\xce0\x8eB\xc3\xb8W\x1aB\x9f\n7<\x17\xc8K\x89\xc4\xbe\r\xe4\x86*c\xe4\x86\x11\x90\x1b\x86An\x04F\xb9!\xc2\xc8\r# 7\f\x87rC\xa4\x91\x1bF@n\x18\x8e\xe4\x86\xb9Rn\x98\x01\xb9a8\x96\x1bfQn\x18\x07\xb9a\x18\xe4\x86\xe0\x8f\x05b\xe4\x86\x11\x90\x1b\x81#\xb9!\xd2\xc8\r# 7\fGr\xc3\\)7\xcc\x80\xdc0\x1c\xcb\r\xb3(7\x8c\xa3\xdc0\xee\xe5\x86P+7\x04\x19\xb9!dSD8\xca\r\xc3\x83]\"\x92\x1b\xa2\x8c\xdc0\x02r\xc3p$7\xcc\x95r\xc3\f\xc8\r\xc3\xb1\xdc0\x8br\xc38\xca\r\xe3^n\b}*\xdc\xf0\\ /%\x12\xfb6\x90\x9b\xfe\xa6Fl\xf2o\x90\x9a\f\x82\xd0\x10\x882\xd3\xc3Fd\xf2o\x90\x98\f\x86\x02\xd3SF^\xf2o\x10\x97\fF\xd2\x92\x99RX2\x0e\xb2\x92\xc1XT2\x87\x92\x92Q\x10\x94\f\x82\x9c\xf4\xe0G\xf8m\xa4$\xff\x06!!0\x92\x91\x9e2\"\x92\x7f\x83\x84d0\x12\x90\xcc\x94\xf2\x91q\x10\x8f\f\xc6\xd2\x919\x14\x8e\x8c\xa2ld\xd4\x8bF\xff\xcbJF\x0f\x18\xc1\xe8\x7fo BQ,28\x10\xce\x91P\xf4\x84\x91\x89\xfc\x1bD\"\x83\x91Dd\xa6\x14\x88\x8c\x83<d0\x16\x87\xcc\xa14d\x14\x85!\xa3^\x16\xfa_O`\xf03\xfc~\xc1\xdf\x91\xf7\x021\xc8!l\xd4\x80\0\x90\x03BA\x0f\x18EA\xc8\xb8Q\x04\x02@\x12\b\r5!sF\x14\b\0U 4\x92\x05\xa2J] \x02\x84\x81\xd0X\x19\x88Di \x18\xb4\x81P\x10\x87\xfc\xf3#\x02F\x1e\b\0}`4\x12\x88\xcc\x19\x85 \0$\x82\xd0H#\x88*E\x82\bP\tBc\x99 \x12u\x82`\x14\n\x82\xbdRd\xd0JEF\x8cVd`\x83\x11\x8cjA\xe8P\xc0Gz\x91\x19#\x18\x04\x80b\x10\x1aI\x06Q\xa5f\x10\x01\xa2Ah\xac\x1aD\xa2l\x10\x8c\xbaA\xb0\x17\x8e\f>\xa1\xed\xcf\b\xbc\x14@\xe8\xccR=\xfeY\xbdIw\x93cv\x94\0\xd4\xdf\x15pN\x13\xd4\xf8K0v\x95\0\xe2\bA\xc4\x07\x82\x90\xf9\xf2\x9b\xba\xa0\0\xe7]`\xf11\xd5V\x01[9E\xb5r\x8aQ\xe5\x14\xf0M\xa88WZ\x11\xae\xb4\"\xb9\xd2\xf4\xfbm\xe7Q\xd2\xc0\xb7\xe2Q\x05\xbc\x82\xbe\xf5\x1eUT+\xad\x18UZ\x01\xae\x9c\"\\9Er\xe5\xf47yT\x80\x0b\xd1\xb3\xb7]'\x95\xe3\x8d=\xf6\x9a\xfd\xd6\xf6J\xc6\xb2\xe8\x19\xdb\t\0\x07\x10\n^ 4r\x05Q\xa5?\x88\0\xa7\x10\x8a\x9e!\x18\xddC\xb0\xf7\x11\x81\xe0\xa8\x8c^\xa0\xc1k\x046\x05\0\xce#4\xf0`\xff\x16\xa6\xf5`\x06\xd0\x83\x19E\x0ff4\xf4`\xa6\x02\x0ff\x02=\x98\xd1\xc2\x83\x19.<\x98a\xf0`\x06\xd1\x83=z\x81\x06\xaf\x11\xd8\x14\0z0\xa3\x85\x07\x7f\xea\x9c7\x1e\xcf\xf8\x07\xeb\x83\"\xe44\x838\xc9P\xd8h\x86\x82,\x1a\x8a\x88:($\xf2\xa0\x10\xe9\x83\x02\xe4\x18E\xb6\xdd\xbb\xcc|L\xd5V\x80j\xad\x80\xad\xb4\xa2Zg\xc5\xa8\xca\np\x8d\x15\xe1\n+\x92\xeb\xab\xbf\xa9\xba\x02\xe4\xbfd\xd4}\xe7\x90\0K6X}\xfa\x9a\x9f\x05\xa2\xea7A\xf5\xcd[\xb4\x06D\x9b\x9a\xc2\xa6\xa6\xb0i\x97\x82D\x8e9\x9c\x04p\x93OAM|\t\xc6SN\x01dB)\b\xdf[\x90V'C?\xf1W\0,\xe2G-\x81\xed\xb0%\xa0\x8c[\x82\xe0\xc0%\x84\x8e\\\x02\xd14\xd7 \x1c\x89\x82\xd0_\x922\x8d\xbb\x97\xc9\xc2O\xfcu\x0f\x03P\xe3\x1a\xc0Ns\t~\xd7uL\xea\xa4\xef\xa4_*@\x01\xae@\xb0\x1axg;\xa5b~\r\xf0N\xbb\xa4\"\xd2 \x82\xe4\0\xd7\xdf~\xa2\xff\xae\xeb\x8e\x13\xae\xf9\xd6\xcb\xef;\xe9\x8e\n\x04\xa2\xfb\xcevG\xc5\xbc\xd4\xbe\xd3\xee\xa8\b\b\xec;\xee\x8e\xfa\xdb\xcb\xea;\xee\x8e5\xffn\xec\xb1\x9f\xd1\xbd\x93\xdeh\x80rF\xf7\xce\xf6F\x83ioT\xd0O\xf3\xdeioT\x04\xa6y\xef\xba\x1e\xa1\xc7X\xc36\xacP\x1bT\xa8\xc5{CgP\xbc\xa8\x13w\x05\x05\xfcL\xf3\x9dt\x04\x01\x8e\xc6\xe5G\f\x8ac\x18\x03\xc7 \x06\x8e\x18\x03\xb0zP\xbc\x88\x8dc\x11\x1bG\x17\x1b\xef\xbb\xd56-\xc4\xde\xcbB[\x81`\xf9\xf8\xde.\xaf\x15\xf3\x8b\xc6\xf7\xb8\xa8V\x1c\x96\x8a\xefe)\xad\x009V\x80\xc6\xd4\xb7\xf1~|/\xe1i\x80\xd2\xb1\xefmx\x1aL\xc3SA\xef\xed\xf7\x1a\x9e\x8a\x80W\xdfw\xe19\xe5\xda\xb6^\xac\xde\xfb\xf0T\xb4\xd0\xa6\xf7\x12\x9e\n\x84\xa9\x89\xf7\x1a\x9e\x8a\xf8\x84\xc4{\tO\x01\x8e\xf6\x18\xebx\f\xebx\f\xeax\xc4:\x1e\x07\xeax,\xeax\x04]}\xcf\xd1(\xbf_\xec1\xd6\xf1\xa5\xac\x8d\x1d:L$;\x18\x82\xdaqQ|\xbb\x02e\xa8;\x1a\xa2\xdeqq\x07pE\xb0/8\x12\xba\x85\xe3\xa0\x87X\xce\x84\xae\x83\xa1\xdf8\x0e\xba\x90\xe7\x82\xde\xe4\n\x94\x1d\xcb\xd3e\x1fs<t7\xc7a\xcfs$vBK\xb6q\x88`\xd7t\\\xd4\x03\\\x81\xd3\xe1\x87}\xd7qq\x17qE\xb0\xb78\x12:\xb7\xe3\xa0\x9f[\xee8\0\x9fp\xc3\xf1{n8\x9ev\xc3\xf1\x84\x1b\x8e\xdfw\xc3\xf1\x94\x1b\n\xfdp\xa4\x97\x12K\xbd\f\xc0'\xdcPj\xcd/]\xda\xb6\x96c\x9e\x14)`g\xb1\x02_\xc8\x8c\xf6\x97n\xd9*\xc7\x1bSf\xe3\x93\x8d\xbf\xd8u\xaa`A\xf2\xf2\x97\xce\xb0\t\x17x\xf1\xd9\xfb_\xac\t\x8c\xc9{\xa2\xb5\x07\xc0\x98\xe8=Q\xcf\x19\xb3\xe4\xadJ\x0fl\xf0\x14\xb4\xb2x\xab\xd2\x13\x91\xbd\xf2\x8a\xa1\xb7\x07-/^1d\xc2\x1ad\x9c\xe0`p\x85\xe7\"\x87X\xd0\xb8\xc5\xc2\xeb\x18\xde\xc4\x17AG9\xaet\x97\xa5#\xa7AG\x88|\x81\x0e\x1c\xe8\bLg12\x0e$\0\\\xc7h\xe4\xb4\xcc\x19we`\x8d\xc0\x06OA\xe7\x10Z\xba%\x13\x91C2\xf3\x82\xf6\xa0\x13\b-\xcc\xff\xad\xcf\x7f/\xf8\x98\xeb#\0\xe7\xbf\x05p\x8b\x13AM\x8d\x05\xe3\xc5\x89\0\xb2\b\x11D\x16F\x82P\xfe[~\xf3\xaa\x84\x80\\\xbf7\x05\0\xf5&\x14*Ohd\x01Q\xa5\x19D\x80-\x84\xa2A\x04\xa3U\x04{\xd3\b\x04\xfb$\x89\f\0\xd8\xe7\x93\xc8\x80F\xf6\x15Id \xc0>H\"\x03\x8c\xf6\xb9$2\x80h\x9f\xe9>o\x06`\xb4\xd5rh\xb1\xe5B\xbbm\x81\xc0zK\xa3\x0f,Wx\xc2\x92\x85?,\t^\xb1\x14\xf8&\xff|S\0\xe0\x0fB\xc1\x13\x84F> \xaa\xb4\x9e\b\xb0\x9bP\xb4\x98`\xb4\x95`o%\x81\xde\xbe\x0f\x9di\xa4\x87\x1f\xc4*\x05\xc8 \x05\xdcjF\xd0\xe2\t\xde\x07\xb1@\x01Y\x89\b\"\xcfn\x05\xa1\xc7\xb6\xf2\x9b\x17!\f\x9c\xc9\\\xe9\x83\f\x06\x06\xb0\xe3\x80\xc0\x17\xb2\x88\xf9\xd0\xab?\x1f\x7f6e6\x06\xdf\xf8\xd5\xdc\x07\xf7\xb4\x970\x91<\xae\x99\x97<@\xc1\x8b\x81\xe4\x01U\xfa\xd3K\x1e\xa0\xe8Y\x90<\x80\xbd\x8f\xbd\xe4y\xd4x\xdb\xcf\xe2\x10\x8d\xfc\xae\xb38\x07\xac\x11\xf8\x8c\xa7l\xb0\x046H1\xadc\xc2x\xd44\x8dE\xa1},\x05\x8dd\xa9\xa8\xa5,_6\x97e\xa1\xcd,\x85\rg9l=\xcb\xf9&\xb4\f\xb4\xa3\x7f\xc9yZ\xfa\t[t\xf0%\xe7\xa0\xc0E\xe8\xf9u\x88~\x0e\xaf\xb0\t\xcbb{\x0f\xbc\xfbK\xac \xa6\xc9\x15\x83\x06W\x02\x9a[\x89\xa8\xb1\x95-\x9bZ9hh%\xb0\x99\x95\xc1FV\xc67\xb1\xe2\xd0\xc0\xf6\xa5\xcd)z\x04\x1bw\xe0\xa5\xcd\x82\xbe\b\xbc\xbb\x0e\xb0\xcf\xc1\xb9\x9b\xa0\x1c6h\xf8n#q\xd9\x89\xa6-\t\x80\x86$\x14Z\x91\xd0\xa8\t\x89*\xdb\x8f\bh<B\xb1\xe5\b\xc6f#\xd8\xb7\x19\x81\xd0`\xf2\x1e\xdb\xd4\x19\x8cM\x15\xbd\xc7\xe6\xb9\x0b\xf4\xd9\x1a\x81\xcfx\xca\x06K`\xc3\x94\xaf\x81\x11\xe1\xb2*\xa6q<\x0em\xe4Ih*OF-\xe6K\x94\r\xe7yh?Ob3z\x16[\xd3\xb3\xbeQ=\x07m\xebH\xd3\xc4\x1e\x87\x96\x062jpW\xe4b\xa0U\xd6\x03\xf8\xe7\x81\xebl\x06\xcacLx\xb2\f\r\xf2\xad\t\nF \x1c\x18\x86@`8\n\x01\xe6\xca\xc6g\x06\x9a\x9dalp\xc6\xb1\xa9\x19\xf7\x8d\xcc(4\xaf\xbe36\xf5\xb6c\x93\x86\xef\x8c\x01yQxp] \x9f\x8b\xb36E\x19l\xae\xe0U+br\xb6\xc1\xb4\x13\x01\xd0L\x84B+\x11\x1a5\x12Qe\x1b\x11\x01MD(\xb6\x10\xc1\xd8@\x04\xfb\xf6!\x10\x9aGrFSg06N\x943\xf2\xdc\x05\xfal\x8d\xc0g<e\x83%\xb0Y\x8a$\x12\x13\xb2\xc0d3\xfc\x02\x13Ph\x95`\x81\tT\xd9*~\x81\t(\xb6\n,0\x01\xf6\xad\xe2\x17\x98\x1e5\xad\xe2\xb7##\x1a\xb5\x8a\xec\xde\xf5>[#\xf0\x19O\xd9`\tl\x95r7o&~\xef\x1ad%\xc7t\x96\x02\xd4\f\n\xd8\x16PT\xaf\xab\x18\xf9]\x01v\xb9\"\xecmE\xb2\xa3\xf57\xf9X\x80m\xf5z)\xc7T[\x05\xa8\xb6\n\xd8\xda*\xaa\xb5U\x8cj\xab\0\xd7V\x11\xae\xad\"\xb9\xb6\xfa\x9bj+\0\xec\xd4\xfa\xbd\xb2d\x83\xd5\xe7'\x87\x06\x88\xaa\xdf\x04\xd5\xb7\x0f\x06\x15D\x9b\x9a\xc2\xa6\xa6\xb0\xa9\xb5\xc7X\xc36\xacP\x1bT\xa8\xc5{\xc3S;\xc5\x8b:\xf1\xf39\x05\xd0\xad\xb8I\xea\xa3\xd9\x97\xfc\x11\xf7%\x7f\f\xf7%\x7f\f\xf6%\x7f\xc4}\xc9\x1f\x07\xf6%\x7f,\xf6%\x7f,\xf6%\x7f\x84}\xc9\x9f\xcc\xab\x18\x9f\xf0-\x8cO\xe1\x0b\x18\x9f\x82w/>\xe1k\x17\x9f\x06\xde\xb8\xf8T\xbcl\xf1\t\xdf\xb3\xf8\x84\xafX|\xea\xfc\xa8\xc7X\xc7\xf3\xb0\x8e\xe7A\x1d\xcf\xb1\x8e\xe7\x03u<\/\xeax\x0e\x8f%?\xb1\x1f\xe5w\xf7r\xc3\x92\x8e\xd7\xe6xc\x8f9\x06\x040\xadMX.bZ\x85\x000\x9b\xd0\xc8v\xa2J\x07\x10\x01^ 4v\x05\x91\xe8\x0f\x82\xa1\xe1\b\x85\xd6\xcb\xe8y\x01\x84\x06\x9d\x0f\x1bt>d\xd0yh\xd0\xf9)\x83\xcec\x83\x8aV&\xd87\xb5$\xd6|\x93\xad\x11\xd8\x14\x004\x7f\x91Gc\"+\xae\x89\x01\x02\xc0e\x84F.#\xaat\x19\x11\xe02Bc\x97\x11\x89.#\x18b\x80P\x88\x81\x8c\x9e\x17@h\xd0\xf9\xb0A\xe7C\x06\x9d\x87\x06\x9d\x9f2\xe8<6\xa8\x88\x01\x82}\f\xc8\xbe\x7f\xdfdk\x046\x05\x001P\xec\xfb\x17\xc2o{\x92\x1b\x07\xdb\x9eB.tb\xbc\xed)\xa4\xd1\xa1\xc3\xdb\x9e\xc2\"\x85s\x83mO!\x87\x91c\xb8\xf3\x01\xf8\x84\x1b\xce\xbf\xe7\x86\xf3\xd3n8?\xe1\x86\xf3\xef\xbb\xe1\xfc\x94\x1b\xcaH\xb3$\xc4\x9b\xdf\x81\x10\x05\xc9:\x867\x030\xc6a\xbc\x03\x81\xe8\xb3~\x814\xe2c?\x8b?\xd3e\x91\0\xc1\xa6\xbb3\xb7\x18\x12\xcco\xaf;3K A\xe0\x15\xc33Y\xf8\xc8o\xbfW\xee\xac\xeb0R\xf3\x0f\xde\xd23\xdf5\x14\r\x8c\xe6N\xa0\0L\xbc\x04\x97\x89\x97 \xbc\xab^\0\xdeT\xcf@\x9a\x81\xafj>\xe6\x15\x8e\0\xbc\xc2\x11\xc0\xadp\x045+\x1c\xc1x\x85#\x80\xacp\x04\x91\x15\x8e \xb4\xc2\x91\xdf\xbc\xc2a\xe0\xaa\xbd3\xeb\xd23^C,\xa6\xf4\xdb\x96m\xd0\x1a^B\x18\xc0\xc6\x87\xa0&>\x14\xd3%\x84\x9e\xceA#\x80\x04\x8d \x85\x89__\xbe}m\x1eL\x95w\xc6\x9c\x9d_\xee\x9f\xe9\x0b\x1b\x82\xb4\xe6Z-Z\xd8\x86\xcd\xd3\x06\xcd\xd3b\xf3\xc0\x12D\xf1\xa2\xd9x\t\xa2\0\xb6\x12/A\xc4\xc6\xbd1`\x8f6\xc2k\x1ag\xf1k\x1ag\xd5\xa1\xb9\xdfQ\xfb\xcf\x19;\x1a\xfe\x88\x17>\x06\t\x913\xbb\xabP1\x9f\x069\xc3\xfd\x83\x8aCf\xe4Lw\n*\xe2\xf2!g\xdd\x0b\xb1\xe2\x88\x17{L\xf5U\xc0\xec\0\"L\xf6\x9c\xb0\xa6\xf8='\x80\x82\xfe\x05{N\x80*\x95\xd0\xef9\x01\x145\x11\xf6\x9c\0\xec\xd5\xd1\xef9\xf1\xa8\xd1I?\xc5\x044R\xccb\x8a\t\x04hg8\xc5\x04\x12U\xd4O1\x01\x05=\xcd\xa8\x11U\x02\xa0\xa7\x12\n\xf2Jh\xd4\x89\x89*{2\x11\xd0\x9d\t\xc5\xbeK0\x8a\x12\xc1^|\t\x84\xbe\x9dQ\x90a\x06\x9d\x16g\xb08\xb5\t=\x81\xd2\xcch\xa0\xcfD\x95\"\xcdD\xa9\xd4\xc4\x80\\\x13\x8a\x9aMp\xec#T\xef\x8c\xee\xd0\x15\xa8\xe3\x84\xa2Td\xb8\xc5\x9b\xb4\xa1\x8b\xda\xe1\xb0h\x87\xc2\xa2\r\xc3b@\xea\x89\x8cc\x06E\x9f\xd00:P\xfe3\xbaG\xbb\xf7\xa1\x93p4`4\x1a\x122\x17\x8c\x0b\x998b\xc9cx\xc7p\x98 \xaa\x1c+\x88\x80\x01\x83\xd0x\xd4 \x12\x87\x0e\x82\xe3\xa0\x80A$\x83\xcf\xe8\xd3\x97\x02\x801\x85\xd0``\xf1\x9b\xfdD\x8f\x83\xcd~!\x87C\xcd\xd0f\xbf\xb0@0\xec\x04\x9b\xfdB\xae\x18\x82\xa2\xcd~!\t\xc3Q\xb0\xd9/\xe2\xec\xd0\x14\xacyC.\x1c\xa6\xe25oH\xe3\x905\xbc\xe6\r\x8b\x14\xc3W\xb0\xe6\r9\x1c\xca\fg\x074\x0b\xa3RY\x0e\x077\xcb\x85Zf\x0b\x04\x8afi\xd45\xcb\x15\x02f\xc9B\xd6-\t\x03\xa0\xa5P\xe8\f\x87\x83\xa1\xa3\xfc\x90h_*\x8a/\xd6\x9c\xf0h1H:.\x1a*\xe3\x97\xa7b:\x186\x83\x97\xa7\xc2s\x8b!4zy*\xbaj1\x9c\x1an\x17\xbb\xb4\x18Z-Wh\xa9}{)\xaeB{\xc2\xe1\xed\xf7\xc2\xb4=\x1d\xa6\xed\x890\x1d\x1a\x84m\x91S\x91\\\f\xc8\x96;\x11\xad\xc5\xe0l\xb8}\xec\xb9\xfd\t\x97\x17\xc3\xb5\xe3\xc2A\xdb\x80\xd1\xd0m\xe8c|\xd6\xf1D}\xe2\xc1\xdc\x16\b\x86tK\xe3\xc0n\xb9\x81\xe1\xdd\x16)\x06yK\x9e\nO\x1c\xf0\r\xf5\x1c\xb7\xd6\xcb\0\x8cS\x80\x81Wl2}n\xbe~p\x8e_?8\xc7\xaf\x1f\x9cW\xd1\xd7\x0f\xce\x83\xaf\x1f\x9c\xe3\xd7\x0f\xce\x8b\xaf\x1f\x9c\x17_?8\x87\xaf\x1f\x9c\xe3\xd7\x0f\xce\xe1{\x02\xe7\xf8&\xfc\xb9\xec\xc8\xe63\xfc\x8el@\xc1\xba`G6P\xa5\x9d~G6\xa0h1\xec\xc8\x06\xd8\xdb\xeewd{\x14\xbc\x90At\x85\xdf\x06\xcd\x17\b\xb6AG\x14xfh\x1bt\xc4\x97>\n\xb6AG\x14z+\xda\x06\x1dq\xdeo\xc16\xe8\x80\x02\x0f\x1a\x06\xddh7\x16\xf3\x85\x8a\x8d\xc5%\x01\x0e\x8c7\x16\x97l\xe9\xbcbcqI\xa0\xe3\xca\x8d\xc5%\xe3\x9dVl,.\bp\x98\xe0\xe8.\xd9\xb8\xcbW\xf0\x1bw\x01\x05/\x05\x1bw\x81*\xfd\xe37\xee\x02\x8a\x9e\x81\x8d\xbb\0{\x9f\xf8\x8d\xbb\x1e\x05od\x10]\x81\xbbe\xf9\x12\xe1n\xd9\x98\x04\xff\f\xef\x96\x8dK\x94\xde\nw\xcb\xc6$\xfa.\xde-\x1b\xb3\xde\x93\xe1n\xd9\x90\x04\xbf:\x0e\xdd\xab;N\xf9R\xb0\xe3\x14apf\xb4\xe3\x14\xb9\xd2\x81\xb0\xe3\x14at\x1a\xee8E\xdc;\nv\x9c\x02\f\xce!\x14\xddBw2na\x04\xdc\xc20\xb8\x85\xe1\xc8-\xcc\x95na\x06\xdc\xc20\xba\x85qt\x0b\xe3\xde-\x8c\x82[\b\x06\xb7\x10\x8an\xe9\xafh\x9c\x92\x7f\x83K2\b\x0e\xc9`\xe4\x8e\xcc\x94\xce\xc88\xb8\"\x83\xe8\x88\x8c\xa2\x1b2\xea\x9d\x901pA\x0f\x82\x03z\f\xcc\xbf\xe8L\x9f\x8f\xf8\x98\xccV\x80LV\xc0\x9a\xab\xa8\x9a\xaa\x18\x99\xa9\0\x9b\xa8\b\x9b\xa7H6M\x7f\x93Y\x02|\x90\x97\xa0/$\xd7\xa2\x80\xfbP\x88\xa0\xc5\xfb\xd3\x17\x92JQ\0\xbeg$\xb8|\xffC\x10Z_)\xc0\x9f\xb6b\xa0\xdb\xbb8\x1e\xf3\x0fN\b)\"\xdf\xf3\x13\xc4\x7f\xcfO`\x93\x0eRP\xbe\xe7'\x88~\xcfO \xfd\x9e\x9f@\xfc=?\x01\xe4{~\x8c\xf8\x05\xd7\x85\xec\xc3\xacW\x04\xb8\xd2Ma\x18\xa7!,\x12\x1af\xbf\x9a\xa7\x98\xe6\x19LI\xfel\x9e\0\xf2\xd9<AJ[9{0cKv\xb2\xea\xb9\x90<\x81\x02.j\x04-VD\x17\xf2!=\x05$:\x04\x91\x8f\xf81\xd2\xda\x9a\xb5\x85\xd3\xda\xd8Em\xd4\xf6m\xd1\xf6\xf8!=%\xca\xa0\x90\x0f\xe9)R\x84\x80\xec\x11\x9567+q1\xe9h\x8f\xd1\x9dn\xa1\xad\xa8ir\xc1\xb8q\x05\xf0\xd6(.\x8d.H\xe1fZ&\xd3\xef\xb5\x91\xb55\xca\xda\x1aem\x1d\xca\xda:\x90\xb55\xca\xda\xba\x90\xb5u!kk\x90\xb55\xca\xda\xba\x935\x12\xe4\xb5\xc8\x9a\x02\xc1\xb7\xe5\xd6V\xd6\x14\xf3\xdf\x96[\xa3\xac)\x0e\xdf\x96[\x8b\xac)\xe0\xbf-\xb76\xa9\xde5\xe6w\xd7\x98\xd4]\x87\x99\xdcu\x90\xbe]c\xcev]$j\xd7Evv\r)\xd95\xe6a\xd7 fk\x163\xe1m\xd9\x06\xad\x81\x84\xea\xda\x0b\x99\xa2E\xeat\x1d\xe5K\xd7\x98$]\x17\x99\xd1u\x91\x0e]\x8b\x8a\xd1GC\xd6&\xf1\xb9\xc6l\xe7\xbaHq\xaeM^s\x8d\xc9\xccu\x98\xc1\\\x07i\xcb5\xe6*\xd7\x03\t\xcau\x91\x95\\c*r\x8d\xf9\xc7\xb5\xe8\x8d\0e\xe2om\xb2}kL\xf1\xad\xc3\xbc\xde:H\xe6\xad1\x83\xb7\x1eH\xdb\xad\x8b\\\xdd\xbaH\xd0\xad!+\xb7\xeesn\xdc\x99%\xd1&\x80\x11\xbf\x8cm\xcc\xb3\xb5\r>P\xdb\xe0S\xb4M\xf8\xe8l\x13<\/\xdb\xe0C\xb2M\xf1dlS<\x0e\xdb\xc03\xb0\r>\xf8\xda\xf4O\xbbf|\xccc\x98\0n\b\x13\xd4\x8c`\x82\xf1\0&\0\x8c_\x82\xcb\xf0%\b\x8f^\x02\xf0\xe0\xc5\x80\xf6\xee\r\xea\xd3\x06\xf5i\x13\xea\xd3&\xd0\xa7\r\xea\xd3\xa6\xd0\xa7M\xa1O\x1b\xd0\xa7\r\xea\xd3\x06\xf4i\x03\xfa\xb4\xa9l\xd9\x06\xad\x01}\xda\x84\xfa\xb4\t\xf4i\x13\xe9\xd3\x06\xf5iS\xe8\xd3\xa6\xd0\xa7\r>\xa3\xd9\x98Y\xd6\x06gY\x9bp\x96\xb5\tfY\x1b\x9cem\x8aY\xd6\xa6\x98em\x8c\xd8mP\xec6\xa1\xd8m\x02\xb1\xdb\xa0\xd8m\x06\xc4nS\x88\xdd\x06\xc5n\x83b\xb7A\xb1\xdb\x04b\xb7\xe9\xc4N\xf8#\x1ar\f\r9\x06\x86\x1c\xd1\x90\xe3\x80!\xc7\xc2\x90c\xd1\xd2G\x1f\xcc\x92Jgy\xf0\xa9t@A\xca\x82T:P\xa5\xa8\xf9T:\xa0(o\x90J\x07\xd8\x0b\x9dO\xa5{\xd4H\x9e\x7f\xc5\x05\xd0H\xfc\x8aW\\\x80\0\x19\f_q\x01\x12\x05\xd1\xbf\xe2\x02(HcF\xb7\xd8\x82(\x92\x84\x82R\x12\x1aE\x1eQe\xf8\x11\x011H(\x06\x1c\xc1\x18u\x04G\xa1\x87b\xca\xcf>\\Or\x0fD|\xc9\xe2\xd4&\xf4\x04\xaa,\xa3\x83\x9e\b\xf4\x96\x89Rt\x89\x01\xe5%\x14\xe5\x97\xe0\xd8G(\xc4\x19\xdd\x15\0H2\xa1\x91.\x13U\x8a3\x11\xa0\xd0\x84\xa2L\x13\x8cZ\x9d\xe1\x16\xadh\xc36h\x87\xbd\xdd\x0e\xc5]\x1b\xc6\xdd\x80\x92\x13\x19\x07%j:\xa1a\xf8\xa1\xbag4\x90\xf8L\x1c\xb1\xe41\xb4\xff8l\xffq\xc8\xfech\xff\xf1\x94\xfd\xc7\xd8\xfec\x1cp0\x1e\xb8/\xec\x8c\x10\x83Q\xa1\xfc\xc2NADcC\xf8\x85\x9d\x82\x83\x11\"\xf8\xc2N\xc1\xe08Q|a\xa7\xc0a\xb4\x10\xc2\f\x18\x8a\xc1\x98\xa1D4l([\x8e\x1c\xca\xc1\xe0\xa1D<~(\x8fC\x8820\x8a(\x01\x03\x89\x10\xdb\xa0\xf5q8Q\x02F\x14%\xa2\xe0V\xb6\x8co\xe5 \xc4\x95\xc0@V\x06cY\x99\x81p\xc6a\xc6<\xf2t\x1d\x1a\x1f\x85\x16\xe5\xa3k4C\xde\xc2Q\xc7\x10\xa7\xbc\x15\x8c=\x86+\x87\x1f%a\x04R\x02\x07!e\x06]\x89C\x91\x10\xbb\b\x83\x01I\x89hLR\xb6\x1c\x96\x94\x83\x91I\t\x1c\x9c\x94\xc1\xf1I\x9860\xb0\x1dj\xb6\xf6d\xeb\xb4'b\xb9\x1d\x8a\xe5\x81\x11K\xf9\xc1X\xc7qK\x89\xa1\x90\xc6\xd1K\x88`\0\x13\xee\x18\x94?\x0e9\xe8x\xd2A\xc7\x13\x0e:\x0e9\xe8\xf8\x1d\x07\x1d\x07\x1dt\x1c\x8c`?\xb6m+\xfd\x16A:\xe6'7\x02\xb8\x8dl\fg\x0f\xdc\x14\0\x9cMhx\x89\\\xf4\xa6\0\xe0\x12\x84\x86\x970\xee\xbe\x89Q\xb8\x98\xa5\xc2+\x8a\x8fn\"\f\xae\xa6Dx\xad\xdc\xa47\x05\0W!4\xbc\x045\xeeM\x89\xc0E\x18\x0e\xafB\x81pS\"p\x15\x86\xc3\xab\xf4As\x83\xbf\xe1\n\x19\f\xcf\xcf\xdd\xf2\xa6\0\xe0\n\x84F\x97\xb8\x94.<e@\xff\xa4\xe4%\xfe5\xc9\xcb\xf0\x0fI^\x06\x7fC\xf2\x12\xff|\xe4\xe5\xc0_\x8e\xbc,\xfeh\xe4e\xf1\xf7\"/\xe1OE^U:\xeb\xb8\xaan\r~\xebld\x98\xd6;zN\x06n\xb1D|6\xbd\xa9\xa3gg\xe0\x16K\f\x9cM\x7fm\xd6\x9eO\xd0mY*\xbeF??\xe8?\b~}yG\xdf\x04\x1fO\x0b\x12\x18Y\xc5\x8e\xf9\xb7>\xfd\xd7\x18Q\xc0\xddZ`y\xb47#\xe0\xc9\x1c?\x9bc\x8d\x07\xfb\xa1\xfb\xe2\x1b\xf7\xd1\xe7\xed\x1b\xb7\xe8\x1e;\xd0\xd4\xd9\xeb!\xa0a\xed\xfd\x12\x8b\xab\x9a\xd1'\x04\x9e\x110\x16e\xe0\x05k\x8c\xb6\x11Z\x1a\xe8\xdeh\x1b;\xd0\x18H\0\x18Hhh\xa0\x7fA\x8a\xab\x9f\xd1'\x04\x9e\x110\x06\xca\xfb?\xbe\xc6h`\xf9\xfe\x0f\x13\xc5V\xc8q\xc9XS\xcb\x01%\xa2b\xa3\xcb\xcd\x95b\x97RO!\xfa\x1c\xa2\xd6\x11\x8a\xbe\x84\xe6\x15.1T\xe9\x17\x9c\xe4\x8f\x117>)\x06\xc5\x92\b\xfdQ\xcc\xc6\xd8B!\x9e\x02\xec9\xc0\x8c\x1f\x04{\t\x8cA\x1f(\x11x@\x16\x11\xe8\x02!\xac\x0f\x14D'(\x13{A\xf8\xc2\r\xc2<E\xe0s\x04ZO\b\xf8\x12YU\xf8B\x99\xd2\x19n\xb7\xe7\xd8\x81\xc6\t~R\x03hh\xbc\xdf0\xca\xe6d\xf4\t\x81g\x04\x8c\xb1\x19x\xc1\x1a\xa3\x91\x84\x96\x06\xfa\xad\x85c\x8f\x1a\x13a\xce\x85ph$lPd\x1b\b~*\x90\xe7\x021\x86\x12\xf2RT\x1dMe\xb8\xb4\xd5\xef\x17\x1c{\xd4\xd8\n3C\x84C[a\xd7!\xdbA\xf0S\x81<\x17\x88\xb1\x95\x90\x97\xa2\xeah+\xc3\x85\xad_\xc0\xca/U\n\xf3\xbb\xe6p\xd8\xc9n\x94/\xe9?~\xd7\xefK\xb7p\xaf\x19\xdf\xc1t\xee\x0b\x9a\xf5\xc5\xce_h\tu\x03w\xbc\xa9\x1a{\xcc\t2\x01x\x13\x99\x02\xe5w\xe8nl\xba\xc3`f\x0b\x99\x80\xfe\xe3t7\x9a\xd6P\x04>Bgg\xf2\xc5,~`\x06\x7f\x83\xae\xa0\xd3\xc0\xf6\f6\x05\0^ \x14\\\xc1h\xe0\x0f\xa2J\xa70Qz\x86\x18p\x0f\xa1\xe8#\x82\xd1Q\xb8L\xbd\t\x97\xa97'\x96\xa9\xc4\xa1\xf3\x82w%\xf9\x04xW2\x84\xc1\x9d\xd1\xbb\x921\x17\xb8v\xe0]\xc9\x98.\xdd\x1c\xbd+\x19r\xe8\xf2\xf0]\xc9\x88\xbc\x19\x80\xa1\x11\x1c\x176E\xf46 5\xc8\xadq\xf5-\xfa\xf7\x16\x9dz\x1bz\xf26p\xdfm\xe4\xb3[t\xd4m\xe1\x9d\xdb\xc2%\xb7\xf9/\x16\xf31\xd6\xb0\r+\xd4\x06\x15j\xf1\xdem\xf85\xcb[\xfb\xb7\x8a\x19\x91?U\xcc\x80\xfc\xa5b\x02^\xec1\xd6\xf1\xa5\xacM\x1c\xec\xb7'\x82\xfd\xf6D\xb0\xdf~/\xd8oO\x07\xfb\xedw\x82\xfd\xf6D\xb0\xdf\x9e\n\xf6\xdbS\xc1~\x0b/\xeb\x86\xf0\t'\xb4\xdf3\xb4=mh{\xc2\x90\x81\xd8\b_\xd6\rI\x88\x98\xe8e\xdd\x88{\x19\x80O\xb8\xa1\x8c\xae~\xaaE\xf3\x94\x07YK3 kO\x01\xcc\xc5\f\x9ck\xa9@k\x04\xa9E\x15jc\xe9i\xfb\x89\x10\x1dc\xfa\xb4\r\xd3\xa7\xed\x89\xf4i\xab\x89\x01\x02\xc2dh;\x9c\fm\xbf\x97\fma\x81Jh\x90\"m\x87R\xa4\xed\xe9\x14i\xeb\x16}\x84a\xda\xb4\r\xd3\xa6\xed\x89\xb4i\xabk\t\x02\\\b\xdf\f\xe1p\x07O\x867rE\xcc\xfd\x8a\xbcm\x1b\xe7m\xdbSy\xdb\xd6,\x16\b\xc9]\xe9\xa6\0\xe0\xaa\x84\x86\x17\xcd\x9c\xb9&\xe6e\xdb0/\xdb\x9e\xc8\xcb\xb6\xd2?\b\xa0\x91u \x0bhY\xa0z\xec\xae\xf9\xf2h\x8ed\xeb\xbe9A_\xee\xb1`\xf2\xd6\xf61b\xdc\xad\xca\xab\xed\xa3s\xf8\xc5\xff\x80\xa1\x11'b\\F\xb4\xe0\xf55)\x0b\xd2\x8d\x02\xe6\xca} \xde1\x94\x83\r\xb9`\x8df\xf9o\xdb\xab&\xf4\x83\xbe\x14dAw\xb9\x92\xd7V\xdf\xf7o\x05\xcd\xf8\xd8o\x0b\xd8\xeb;A\x02\x04\xfb\x03\xf6\xee\x8d \xc1\xfc~\x80\xbdy\x1fH\x10\x19Q\x05\xa1\xb7\x81\xe4\xb7\x7f\xd0\xbfO\x19x\xdew\xbe\xe7\xa4\xba\x01\xc8\xf7\x06`\x97+D\xb3v\xf2\xe4\xbe\x0bK!9\x1a\x05\xb0Wo\xf0v\r\xde\xce\xffAhA\xcdbW1\xf3\xa7\x9f\x05\xe4\x87\xc4\x02\xc8\xc3aA\xe4/;3rc\x8f\xa9\xb5\x14\xf0q\xc00?\r\xaf9\x06\xba\xbf\t\xcd\x1e\x96?\x04-\x80{\x93PP\xb5J1~\x83P\0\xf8\xd4\xab\xe0\xf2V\xa1 \xfcm[\x01\xf8\xc5A\x06d\xe6/-\xf7\xa71\xe9`\"\xfa\xe0g\x1b{\xe9\x93\x06\xe0\xb80P \x92{\xd9\xa1\xc8\x01\xe8w(\x02\n\x9d%\xd8\xa1\bT\xd9m\xfc\x0eE@\xb1\x03\xc1\x0eE\x80}W\xf2;\x14=j:\x15\x01\x10\xea\x84B\xbc3\x8a}\xcc?l\xe1\xe6\xca\xe85\x16\xc3.';!\x01\bk\xd4\x845\n\xbba\xb1\x13\x12\x89\xb2C\xfa\x9d\x90\x80b\xd7\x84\x9d\x90\x1e\xbe)\0\xe8\xa9\xd1\xa4\xd1s\xd8ge\xb7\xe2\xd45%\xf6\xde`\xb7\"Pe?\xf6\xbb\x15\x01\x8d{4\xecV\x04\x18\xfa\xb6\xdf\xad\xe8\xd1\xa2\x97g\xf8Ot\xc7\x01\xfb(vzB\xa1\xe73\x8a\xdd\x9f\xf1H\x03\xe4\x0b\x99\xdci\xfc\x172\x01\x05\r\b\xbe\x90\tT\xa9\x01\xfe\x0b\x99\x80\xa2\x06\xc0\x172\x01\xf6\x1a\xe0\xbf\x90\xe9Q\xa3\x01\x04@\x8f#\x14z\x1c\xa3\xa8\x01\xfey$7fF\xaf\xb1\x18j\x80|\x89\x13\x80\xb0FMX\xa3P\x03\x8a/q\"Qj\x80\xff\x12'\xa0\xa8\x01\xf0%N\x0f\xdf\x14\0h@\xf4\x18\xd6s\xa8\x01\xf29\xce\xa9kJ\xd4\x80\xe0s\x9c@\x95\x1a\xe0?\xc7\th\xac\x01\xf09N\x80A\x03\xfc\xe78=Zh@\x86\xffDw\x1c\xb0\x8f\xa2\x06\x10\n\x1a\xc0(j\0\xe3\xa1\x06\x18\xd0*\x81\x85Q\x0f,\x87\xaa`\xb9P\x1bl\x81@!,\x8d:a\xb9B-,Yh\x86%A9,\x85\xfaas\xe2\xa6\x8d,\x8c=\xd7r\xd8\x7f\x1dW\xe8J\x90\x80\x9701\xdcu|J\xa14>\x8f\x19\xc2'\xea\xde\x9c\xa8{\xac@q\x1e3\xa6\x035\n\xf2\x98!W(S\x94\xc7\x8c\xc8\x9b\x01\x18\xb5j0i\x1f\x95(t\xcb'N\xa7A \x15\x1a6\x948\r\x0b\x04z\x16$NCn@\xdb\xa2\xc4iH\xa2\xce\x05\x89\xd3\x88+5\xcf\x90\x7f\xc6n=\xc4\xfaT\xa8\xa0\xe5P\x0b\x1dW(\xa2c\x03]\xcci\x897\x15?\x96\xa5\xdf\\\x01\x07\xb2\x04:0\xf8\xf2,1F\xf4\x1c\xee\xbf5K |A\x96P\xd17\x87\x92\xb09\xcc\x7fH6\x83g\xf8\x9b]\xe7A\xe7\x15K]\xa4F\x9b\x99\xdfk\xc9\xeb\xe4\xdf\x9b\xea\xf5\xc2\xf2\xfc\x97E<\xa8n \xfc\t\xbe\xd1\xfa\x84\x1f\xc8|\x86\x02\xcfX\xe0\x85\x0b\xd0K\xe2/R\x80\x01\xb7\x80\xf3 \x16\xc5\xedG\x05nN\xf8\xf1\xe1\xfa}\xb3\x7f\xf8}\xbb\xdb\x1f\xf8\xc7\xdb\xed\xe3\xb6;\xfe\xa9}x\xfc\xb5y\xdc\xef\xae\x0e\xff\x1f\x04\xd4\x9c\x97"),aq$=a('x\x01\xbd}Kw\xdbH\xd2\xe5\xde\xbf\x02\xcb\x99sF=$\b\xbe\xbe^\xb9^\xee\xb2\xaamK%\x91\xe6\xb7\xa3%H\xe6\xe8\x01\x17)\xc8\xc5\xfe\xf5\x93@\xc6+o\x06\xe8Y\xcd\xe9n7y#\x01f\xde\x88\xbc\x91/@\x7f\xbel\xf7/\xbf5\xcf/\xff\xae_\xf6\xbb\x9bCQ\xfdc\xfc\xe6\xe7\xe6\xe9\xa9~~)~n\xbe\x1d\xf7\xbb\xfb\xaf/\xc5\xff\xb8\xf9\x9f\xc5x\xb9\x98\xfe\xaf\xee\xdfy\xff\xef\xb2\xfbw9\xea\xff\x9d\xf4\xff\xce\x8b\xb7\xb7\xcd\x97\xba\xf8\xf3xx\xa9\x9f\x0e\xc5\xef\xcf7\xcd\xfe[\xb3\xdf\xbe\xd4\xb7\xff(\x8a\xb7\x8f\x8f\xc5ew\xb7CqY\x1f\xea\xfdk@\xf5\xa7\xf6\xf5\xf6e\xd7<\x17\xbf\x84\xd2\xffU\\}m\x8b\x7fo\x8fE1.\xc6\xe5\x7fM\xc3\x7fg\xfd/H\xf9\xeb\xe7\xdd_m\xfd\xfb/E5\x19\xcd\xa6\x02\xaf\xfe\xdd\x1e\xb6\xf7uQ\x8dg\x93Y1-g\xb3\xf1\x9b\xaeu\x1f\xb6Ouq\xb5{\xaa\x0fg?5\x8f\xb7o~k\x1f\x1f\x15+"\xb6}\xda=\x1e\x15}\xb3\xae\xfb\xb6\xf7\xc6\xdf_\xb6\x8f\xbb\x9b\xb7\xcf\xf7\x8fu1z\xf3\xfb\xe1\xb7\xdd\xdf\xf5\xed\xa7\xdd\xcb\xcd\xd7\xe2n\xfbx\xa8\xdf\xfc\xfcu\xbb\xdf\xde\xbc\xd4\xfb?\xeb\x97\xe2\xd7\xbf_\xea\xe7\xdb\xfa\xf6\xb2y\xda>\xf7\x15\xf8\xe9\xa7\xe6\xef\xe2l<[\x14g\xe5xQ\x8cG\xa3Q\xb1\x9cL\x8b7\xd7\xa1\xdc\xfeq\xf7\\\x7fj\x0e\xbb\x9e\x81\xb3`T\xf8\xea\xeb\xee\xe6\xe1\xb9>\x1c\x8a\xe9\xe8\xcd\xaa\xde\x1f\xba"\xa3Q\xf9\x8fp\x877\x1f\x9a\x97\xddM\xfd\xff\xc1O\x91\xa6\xdd\xa1\xd8\x16/\xfb\xedm\xfd\xb4\xdd?\x14\xcd]\xf1\xc7\xee\xb9y9~\xab\xcf\xfeU\x87\xab\xde\xbe+\xb6\xcf\xb7\xff\xbb\xd9\x17\xbbp\xf1\xa1\xfdr\xd8\xdd\xee\xb6\xfb]}\xf8\xc7\x9b_\xc3\x8f\xdc\xee\x9e\xef\xff\xbc\xf9Z\x07\x86\xfb\x1a\xfc\xf9\x12\x8ao\xf7\xb7l{\xf3\xf3\xf6\xdb\xbf"\xe9\xb3\xf9\xec\xcdg\xfa\\\x05\'\xbe=\xdct\x8c\xee\x8b\xd9b\xf2\xe6\x97\x9a\xbf\x052\xe7o\xfe|\xb9\xfd\xd7\xba\xa8\xaa\xee\xc3j]\x8c\'\xcb\xf0)\x84u\xe7\x12\x0e\xeb\xc98\x04I1)\x8b\x7f\x16\xeb\xcfE9\x1d\x85\x0f\x1f\x8a\xc3\xb7m\xa0\xef\x9f\xc5O\xc5\x88\xfe\xf3\xcf\xae\xd4$\x96\x9a\xf4\x1f>\x14\xf5\xdf7\x8f\xdb\xa7\xbe\xd8b\x1c\xdc3\t\xd7\x8f\x8b\xd9r\x1cKW\xb1\xf4t:\xedK\xff\xd56\x81\xc7/\x8f\xb1\xfc\xa4\xa8FUQ\xcdK-?\xa5\xf2\xa3X\x87\xe7\xf6\xe9K\xe7\xd6\xfb\xe7\xfe\x8a*T\xa2Z\xce\x8a\xf9\x88*3K\x8b\xdf6\x8f\x8f\xdb}_\xb4\\\x16g\xcbe\x7f\xf3\xf9\x94J\xcfc\xe9>\xbe\xba\xe2\xdf\xea\xfdM\xd71\xba\xf2\xe3\xb2\n\xb5\xaf\x8a\xc5|\x1ejS\xc6\x0b\x16\xf1\x82\x05\xb5u\xfb\x14\xae8\x04\xb7\xf4W\xcc\xca.f\x8b\xf9b\xae\xd5_\xa6\xe4\xf4\xcd\x8d\xc1\xd7]1_\x86\x06\xce\x8ar6\x91+\xaaQz\xc5\xb7\xed\xbe~~\xac\xef\xe2\x05\xd5,v\x8b\xd0\x8d\xc3\x15U\xbcb\xec\\\xa1\xbfQ\xce\xe3%e_-\xba\xa4Li\xda\x1e\xbaZ\x1d\x1e\xfa\x0b\xba\n\x05\xefT\x956\xa3"\x1fO\xe7\xc4\xd3c{\xe8\xcb\x86\x9f\x1c\x15\xd3\xc0\xe34T\xa8/Y\xa51s\x13\xa4f\x1b\x8b\x06\xfe\xc7\x8bQQ\x96\x93b\xdcy\xbf+=M\xab\xfe\xf5\xf8\xedkM\x9e\xad\x8a\xf1|\xdc\xd7\xba\xfb__z\x96\xde;p\xbfk"\xf5\x15E\xdax\x14\xeeM5!\xe7\x96\xf3E\x8c\xde\xc7\xed\xe1k_\xf8\xac\xf7l\xa0~\xa4qV-RF\xfeS\xef\x9bH_\xd5\xdf\xb9\x9a\x07\xc2\x17\x8bXv\x99\x96m\x9ec\xaf\x98M\xbbh\f\xdcr\xc1\xe9(-\xf8\xf2=\xdes<\xef\n\x86zI\xc11\x14\xfc\xba\xaf\xe3=\xc7\xb3>\b\xab\x99)\f\xce\xbbk\xda\x18\xe1\xa1I\xddm\xa7Zr\x02%w\xaf\xf1\xaee\x88\xd4E(:\xea\x94#\x16\xad\xd2\xa2\x87\xdd\xdf\xb1\xe4\x82\x9ao\xee\n]\xf2P\xbf\x92\xcf\xa8]s\xbd+t\xc7Z\xa3\x92\xefk\xd8\x9aCW\xdf\x11\xaf\xe5\x8c\xcaN\xb4\xec"\r\x9c\x9b\xe6\xb1\x89uX\x94\xa29\xdd\xcd\xfb\xc2\xd0\t\x0f\xf5\xd3\x0e.\xe8\xe2r6\x93+f\xa34\xde\x1f\xbb\x8c\xd2\x07\xf1\xb8#n\x1aby:\x8e]i6N\x8b\xd6\x7f\xb5\xdbG\xee\x1b\xe3\xd1\xbc\xef\x1d\x93 <}\xe12-|\xdf\xe5\xf1z?tkp_H\xe1\x87>\xe7\xf5\xbdt\x1eI\xa9:\xc7\xd0\xdd\xc9\x87\xcb\t\xf5j\x12\xb2\xd1\xa2\x0f\xf7E\xa9\xe1>#\x1f\xce\xcb\xb2/\xfa\xb6/\xd9\xc5Ow\xb3\xd92\xea\xe3\x8c\xdc7\x9b\xcd\xfbR?qH\x86b\xe1\x86\xec\xe5\xd9<\xbd\xd9\xcf\xb1K.\xfb_\x9d\x195\x9c-\xd2\x82\xbf\xc4\xfbu"\xde\xfd\xa4\xdco\x99\xfe\xec\xaf\xe6gCG\xe7bsr\xd2l<\xee\x8b\xfd\xa6\xc5\xa6!\x93H1r\xd0\x9ct\xe0]d{\xde\xd7n\x1e\x82\x99k7/\xd3\x82\xff\x8a\xc17\x0e\xf7\x9bO\xb5\xb5s\xcew\x1d\xeb\xa1\xd8\xef\xb1X\x97\x0e\'\xa6C\xcd\xa1C\xbd\x8f?\x1brP\x17f\xe6v\xd3\xf4W\xcfc\xb9\xeev\xf3\x99)\x06\xae\xf8C{\xfc,d%)F\xaeX\xf6:\xfc\xa1\xf8\xb72\xbc,\ru\xe0\x88\x0f\xaa5\x8b\xc0\xab)\xb8Lk\xf71\xd6n\x1a\xc9\xab4m-\xc0\x19\x9f\x8c\xcfF\xca\xca\x02\x9cq\xa1\xf7\x0b%\x92\x1b\x96i\x15/Y\n\x02/\xe3\xa9\xde\x90\xfbH/5\x1f\x8a?m\x05\xa7\xe3\x89\xa4\xeeE\x95\x12x\xc5\x9d\xae#p\xa6\xf7\x83\x8eq\xad\xcc,\x13f\x16\xb3\xb4\xe0j\x88\xc2\x05\x0e2\xd6\xec\xba\xb3\xd0\x8e\xe5\xc2\x94\x04\xaf|6\x1c.5\x14\x16\xcb\xb4\xd8&\x16\x9bB\xb1\xe5(m\xf0\x7f\xb3\xeev\r\xae\xb4\x18\x8c\x1e\xbe\x84q\xf9C\xfd"#\x8eY\xd7Q\xaa.Yv\x15\x8d\xea\xbb\xe4\x81!y\xf1K\xb8\xc4\xa6\xd7)\xa5W\xf5\xe6r\xe2\xfe\x8a\x8eR&e\xfc\x99N\x85\xe5g\xb8\x0b-bLm\x0f7\xbb\xdd\xcdn\x7f\xd3\xc6\xe1e\xe8\x89\x93\x10n\xd3\x91i4\xe4\xa6\xb6\x1b\xf7\x1e\xc2\x80\x9d\xc7\xadg\xe3P\xbb\xcez6\x8fC\x90\xe5\xac\xc8Gh\xd2\xfa\xd0\xa1\xfb\x01ZH\x8f\xd2\x14HSqt\xd3\xb79\xe4\xe9\xc5\xa2\xcfS}\xc1E\x1a\x9a_\n\xca\x91]\xc1\xa9\xe9\x8dKrhE\x9d\xf6&\xb9\xe3d$w\x1c\x8fF\xe9-om\xc9\xa9\xf1\xeax4N\xefY\'\xf7,g\xe6\x9eeJ\xc0\x9dJ\xc6\xa4\xcf\x05\xdd\x9d\xfe(va\xf4\xd0\x7fx,\xee\x1e\xe9J\xc8O\xf7\x1cage\x18\rV\x8b\x89\xf9\x91*\xad\xf8W\xa3\xd5I\xb5\xa7id\xed\xb4\\i\xa4z<\x02\xaf\xfd\x9f\x18y]R,C\xb5\xec\x80\xba\xcb\xc1\xc9o\xc7Qn\xe8<\xe1\xb7\xab\x89\xf9\xedE\xfa\xdb\x8f\xf0\xdbR\x8e\xdc\xc5\x93\x80\'-\xb7\xe8\xc8\xe56\x8f\xc1Y\xcf\x9aO\xba,\xaf\xe5`\xf0\xd7$\xae\x9a\x1bW\x8d\xcb\xf4\x8e\xdfDI\xca@\xdc\xb4\xb4?\x0e\xba\xf8W\xece\x15\x15\x9d\xd8\xbbVi\xa8\xc8t)\x04\xde\xc4\xder\x9a&\xbe\x83\xad\xe7d66%\xc1;4\xe4\xeb{_\0\xc30d2\xa2\x92\xe0\x9b\xb60\x83\xden\xe4T\xcd\xc8\x8bc\x18\xa0\xbf2\x9b\xb1\xdbMMI\xd0\xc7\xef\xb1\xe4\xa4/9\x1f\x99{\x960>\x8fC\xdeq\x17\x19\xd5\xa22\xe5\xc0CG\xa9eGf\x15r\x9f\x16-S2\xff\xa3N\xafJ[\x8e\x05qY\x89 \xaa\xect\xe3\xf3q\x10\xa8I\xd5i\xfa\x82.\xe1\xa9U9"\xd5\x8d\x9e\x9a\xcdh\x95$\x88\xd4|QR\xe1\xa9s\x7f\x95\xdbiE?\xd0O\xb5\xf9\x07x\xb4^\x8eTo_v\x8f\xb75G\xc48x\xb8\n\xfd\xaawlw\xc9\f\xb2G\x9c\xfc\xdf6\xdful\xdd\xf7\xc70g\x99\x8e\xa8\xe93\x98\xbf\xc8\x8c{\xda\xbb(\x90\x14F\xf7S\x1a\xe8\x8fq\x10\xdc\xcdT\xc3J\xcf}\xe2\xfen\xca\xb1\xa8\xe8\x02\xa2iLy\xef\xae[h\xe2Qs\\S\xea\xa2\xb0\\\xcadb<\x83\xacq\xa4\xf9\xcc\xd9\xac\xeaEB\'4\xe3\x19\xcch\xee\x1e\x9b\xfd\xeeY\x92K7o^v\xf9\x9f\x8bC\xb28\xd470\x82/C\xa8\x18\xb1\x9aA\x98\xdf\xb4\xfb0\x9b\xbf9Rf\x9du\xf3\x8di\xff\x7f\xec\x81e\xaaZ}\xfe:\xec\xfa\xa5\xb7>\x83M\xfb5\x95r\xa4\x19l<\x87\xb8\xe7E\x18\x89\xbfP\xab.\xedU\x8b\x99\xb9\b:\xc1}\xbb\x0b\x17<5:T\b1M\xbaR\x8d\xa7t\x11$\x97\xee\xa2\xberrQ\x98\xa7\x85\x8b&]?\x92\x8b&\x03\x17\xed\xed\xf41\\U\x86\xf8\xd2\xab \xc5\xdc\xed4\x91uz\xa7\r\x99B\xc1\xc7\xa1\x82\xe0\xbc\xb0\x88\xc6c\x9c\xb0\xcc\xb0\x18\xf7\x86r\xce\xa5\xc1s\xb7\xdb\xfb{\x9a\xdaU\xbd\xa7C\x9cN\x8d\xa7\xe7K\xaf<\/\x85US\n\x8e\xa9\xa9\x10\x0f\xb2\xd3\x05\x90\xae\xff\xd4\xfbZ\x16B\xca\xb0\x96\xd1-\x84T\xe39]\xc6\x1d\xae\xa2\xcb\xc2\xda\xeb\xfd~\xfb\xed\xab\x84m\xf0\xf3\xd4L\xe8\xc6<\xaa\x9e\xd0\x0f}\t\x0b\xc05\x85\xc6\xb4[&\xedV\b\xfb\x15\x8cX\xbc*\xf21T\xef\xb1/\xdb\x03\x85!\xaf\xfe\xcct\xf5g\xbc\x98\xfaq(W\x8d\xabxU\xb7\xfc\xa1W\xcd\xfc\xab4:\xba|\xd4\x85o\xb7h"\xdc\xcd\x07\xc27Y)\xeb\xe3w\xaeA\xc5Cr\x19\xbc\x87\x85\xdb\xdd\xb7\xc3\xeeP\x98\xb5\x86e \x9aW\x9d\xc6<:\xb7k\x8a/_\x9bVV\t\xbb!\xca2\x8c\xf9\xa6\xaa\x12\xcbq\xe1N\xf4EGC\xd3\x83\x8e\x8e{\xa9\x10\x1d\xc51up)-\xef\x04\xf9\f\x1d\xa4\f\xebes\x96\x89%\xb8h{\xd3\xbeP\xe1Y_z\x12\xd2\x8b\x96\x86u\xb98\xe8\xbe{\xac\xff&\x1d\x8a\x97L\xba6\x90\xec\xe28Z\xf3F\xb7&\xdai\xe8\xa4\xea"\x8c\x8b\xcf\xd3\xe2O\xdb\x9b=\xe9b\xe8WA\x90\'aj6\x9bP\x04/a\xb9\xe7\xcb\xbe\xa6\xa6\x8e\xa7\xb1*c\xe3\xea%\xac\xf7\xdc6/\xdb\x1b]\xd7\r\xf9\xa8\xeb\xe6\xe5T/)G\xb0\xeaz\xbb\x0b=\x8a\xdd\xdc5\xb7[\xc4\t\xcd\xed\'S\xfd\x05 l{NIa\xe9h\x1a\x02\xa9\f"6\xafFT\x18<uS\xdf\x86\xe0\x8b\x13\x07\xde\xe3(\x97U\xc1\xc5qU\xb4}\xbe\xdf\xee\xdb\xa7\xc7m\xfbB\x8cN\xfaVW!\xcb\xb3\xcfJ\x1c\x127\xf7a]2\x8eu\x97]\x1f_v\xb3\xa5e\xb7\x9e\x19\x8b\x83\x03n\xb6\xcc\xbf\xe3\xddr\x94\xf5\x83\'\xd0\xc2\xde\xc2bX\xf2\xf0C\xca\xbf\x8d\x8b8\xfdB\xc4T\xa7>e\xc9\xd5\xe0\xc1\xef\xfe\xf6.,\xcf\xc9\xda\xdfYH\x0f!V\xfa\xd9\'\xa5\xeb\x92\xf7%d-D\xe7\x9e\xd9\x82H\xc9\xdb\x13\xb2\x82\xa1\x85\xbbU\x82\x10\x8f\xdd\xaa\xc3\x9c"\xad\xe4\xfd\t\xa9\xf8\xc7X\xf1nDF\xb3u\x1ah\x94\x13q\x93T\xfd)\f\x99\xdaG\xae{\xf0j_\xf7\xb1\xaeq\x96\xbcX\xcf\x83\xd3m,:\x89\xa3\xd3\xd9R\xe7Le\x05s\xa1\xdb.\xd5\x1e\x0e0%\xe2\x11e\xa7\xfa\xe9\xf4\xc5\xce\xc8\xbb!m?\x1fgZ\xb25l-\xdd\x8d\xe8\xc3\f\xbf\x9byL\xab\xb8\xb2X\xf2J6W\xbb\xd1u\xe4\xbe\xda:\x9d(e-\x9b\xd2kHja[/\xe8\xf3\x81=\xd4\x8d\xbf\xa6c]\x16<\xe3A$\xaf\xa8%\xbdOV\xd6\xba\x8d\x18[\\\xa6\xb6\xaaef~\xcb\xfd\xe2\f\xb4u\xab\xdaa\xe6\xecX\x15\x99\x8fd}\x8f\xe7&a\xf4\x86?!\x15\xd2\xbed+D}\xe9\f"`\x93\xb4V\x96q\xb0\xb5\xbcd|\xbb{\xdd\xddj\xd0\x04\x95\xec\xb7_&s\xff\xe6\xca\x8d\xdcyYN\xdc\xb2oA\xe5y5x9\xae|&s\xde\x03\x93H\x8a,\xa4\xc1\xdd\xcd\x92\xda\xd0\x0f\x1cM\xe5\xcd\\\x0b\x7fA\xe6\xa3\xfd^\x93Q\xfa\xaeV\x9d\xb4\xda\xb9i\xee\xab\xb4Z\xff\x0f\x0e\xbb\x16\xad\xb7m\x98L\xfd\xc2\xa9w\xf5\x82\xcc\xbf\xcc\xaa\xd1\xed\xb8\x90\xd6\xa5\xfc*k\x80\xfc@J\x12W\x07|,\xf1l\xee\x1e\x8bO\xe2b\xc4,\x8d\x7fYz\xc7\xea\xc7%x\xac\xbc,\xe8\x87$N\xbb\x0e3X\xd4\xe7\xa2\xc9\xc6\xa0qV7F\xee\xf3`P\xa93\xda\x9f\x95\xdbWs\xba\x86w\xeei-\xb8on9\xce\xba\xafT\xdf\x0e+\xa4\xf2\x95\xaf#7y\xb7\r\xca\x8eQ ~\x92(\xb0\xc1_\x8d\\^>`k\xe3:q\xbaP,\f\xb1\x80\'\x9e\rj\x1frI\xe6W\xae\x8d\x0e\xfeN\xf4EY\xfb\xc6\xeat{O\x1d\xf9v%\x1c\xdb\xf0\xb3V\xc7l\xed\fV\xc8\xac\x1b\x18\x99\x9dW\x03a\x96\x0e\xd1\xd8U\xcb\xd1x\xa0\xab\xa3\xab&a^\x81\xae\xd2\xd2f\xbcuJ\x14d\xd5\x11\x99\x0f7\xca\xc4\x9e\x16V\x1e\x9b\xff\xd4\xcf\xf7TxD+G\xf3\xcaW\x83KSo\xde\xc9@\xf5\x93}\xaa\xccI\xd4C\xec\x9eU\xd6\xbf=\x95\x8d+i\x83\x81<\xa0\x80}t\xfa\n\xf8\xd6t+\xce\x12C\xbdjo\x9a\xccK\x8ax_\xed\x81\x8e\xa3\xec\x028\xc6\xcd\x7f\xa7q#\x9b\x1b\x187\xbc+u\xf5\xb5\xd9[5\x18\xe5\xfa$\xe3D\xd3F\xb3\xdf\x85\xcd\x14\xcf\x9ad(\x9e\x1d\x10\xe1?\xb5\xac\xd9\xa8\xc2\xd2\xb3y\xbc\xf3m\x16\xeb\xb3~\x14Z\xfa\xe9 U<\xc96Pm\x89\x974\x97Q\xa4\x80\x8aM\xec\xa9\x84C\xdb\xaf:\xd0\x9euh\xec\xa2\x17&\x1e\xe0f4\xaa0\x19\x16\x07\x87 ZZF\x1fCEu\x1c\'E\xc1\xeb<dzj\x1f_v\xdf\x1e\xe3\x1aZ\x18&w\xf3\xd1p\x97j9\xf29\x81\x8cJ\xa4\fj\xa9\xb8G6\x13\xb1K\xb3V\x84\x85\x97\x97\xdd\xf6\xf1vwG\x9b,\xbd\xec\xf6\xe69\xa4<\x19\x03e\xe3\x07\x1e\x06\xf1T4\xcb5P\xfd\x85; \x10\xa9\xc3\xa9\xfdd\xdeO\x15\xf2\xc4\'Z\x9dK\f\x89\xf5\xd081\x1d\xce\x9bl0\x1b\x18\xd0\xbb\x17t\x8b\x9e\x03\x17\xdc\xe4#\xd1I>N\x94}\x18S\x9a7c\x86\xca\xb6\xd8\x9db0\xcc\x06\x86\xdb\x1f4\x18,\xf7c?/\xfdn*\xc2\x93\x9cL3\xcc\x89\xab0-\x1e:v%n\xe5\xbd\x81}\xf3P?\xdb\x1d\x82q5\x89;\x04\xa3\xb9;\xb6\xda\xd7\xf7\xbb\x83\xae#\x9e\x18\\I\x82\xd2\x1ehNS\f\xa5\xec\xdfA\xaa\xa5\xc1(\xd5\xbcR\xde\x86\xec\'k\xe5\xfdB`w\xaeCW\xcd\xb2\xb8T\xed\xd0\x90,\xfdQ\xff\xde0/Ii`\xc2\xd8\x98\x100\x9br\x18\x02\x92\x92\xcc\xad%\x1d\x95\x03\xe9\xcbH\xbb\x94\xc5^TE\xfe\xe8\xa8\x90\x1e/\xea\xd3\xcc\xb4\x9c\ff\xe9__\xe2|~h$.\x03;\x9bu\xbb\xa1]?\x12\\\xe4\xf3s\x19\x98z\xa3\xd9~\xecn\xb6I\x85\xf2q\xecI/\xa6\xadq#\xb0[\xbdZ\x8c\xa7\xbe\x048\xb3 \xbbk\x9d\xa5=g^\xe3\x8d\xad%{\xa8\x97~\x98h\x125\x92\xe1\xce\xd0bD>\x10w\x16#dw\x10\xa4\xa8\xdb"\xc4\xb2\xa2\xd4N\x13\xcby5\xd8=?f\xa3\f/\xf3J\x94\xe7\x12:?\xb1\x88\xe2\xf4\x89N\xd0\xa1O\xc8\0<\xbby7\xfa\x1elh\xba\xf8*\t)Kx\xdcPHH\xb6\xb5\xe3\x81)|\xa2\x15C\x93\xe6\xd9\x98f\xb5\xf5\xe3\xcbV\xbb\xd2h\x91\x8dv8]\xbc\xe8\xf8\xd2l\xcac\x10N\xf48h2\x9a\xea\xd6O\xa7\xb1\xa9C\xa3\xa9\x84\x1a;,\x9d\xfb\xe3\xbb\xa7\x96\xf3E\x7f&\xa3\xdf\xf7\x9f\xf9\xbdz\xa7\x9c\x9c\x95sZ]\x1c\x14\xc5l]\x8c\x0f\xa1\x94\xcb\xc1\xa1\xd2\xafN\x04\xcf\xaa\x9c\x1f9\xdd\xa2\xab\t\xce\x11\x17\xe1fjF\xa7A\x1d\xf7A%i\xe40\xe9uf>\x99\f:\xecO\xab}\x13\x9aq\xd8cc\xe23\x9e\xee%\x19\xbe\xdbd+\xf3\xb18\x1f\xe5\xcbfp#\x9a\xc1\x99\x83}H\xd2\x1ff\xf8\xc6\x8b\xd9\x18\x98\xb28\xadO\x17\xf4\xed\xad\xfa\x05\xf8\xa59\x80\x9b\x0f\xad\xd2,l\xc6VC\x8b\xb1F\xd0\x86\x06)R\xd6\xca\x82,\xdbV~\xa2\xfc\xc30\xd97t\xea09\x95\x13\xd6_\xb7\x8fq\xd0|6\x8f^5\'\x921Wv\xcb\xe4&Q.\xfbD9\x1b\x9c\x017\x033\xe0\xb9s\t\x8f!\xcd\xf2\x06\x8f!qqC\xc4\xc6_C\x1e\xd0\x1c\xee+\xb0\x04qj4S;j\\\xe6#\x14\xd9\xf94+\xe0\xe6\xacV\x96G\x94{\xeaUrIG\x7fu\xaaSma\xe6\xdc\xcfo\xc7\xd5@i\xec%\'\xba\xa1\ba\xc6\xe9\x89\x1cW\xf1\x0e{H\xcet\xac>\xac\xdeWa\x0bo\xe2\xb5\x82\xa3"\xcf\xe4NF\xd4A\x94\xb4\xd9\xae\x8e\r\xb4\xb9\x85\xfc\xe3O19\x9cC\'\xdf\xddP0\x87A\xf0Y\xd5\xed\xd6\x97\xc5b:\x1aX\x84\xd5\x8e\xc5G\xab\xb3\x19\xa9\xac\xce\xe0\x9a\xf9\x92W]\x86\x97\x9c?h\xf0\x9bY\xceb1\xd0\xbb\xf2\x95\xc0n\xf8<\xd0Y.\xb3\n\xd1\xd8\xd2\x1e\xfa\xcd\xa5\x04\x07\xa4<\x8a5;\x81\xd9\xb8N\xeb%\x83\xba\xc5\xc0z\x97\xddK\xa5\xbc\xb5\xd4c\xf2YqYT\x91\xb1%\xee\x0ep\x18k\x1dl2_\xf8\xce\xfa\x0f\x887\x8f\x18\x07W\xbf!Wy\x93t\x91n;\xe0\xe6\xed\xe2\xf9h07?d~*\xa9\xd7\x9a#\x95\xd9B\x8c\x9d\xc0\x96\xa3e\x1f\xf5\xdd\xea\x91[#Te\xc9>\x03\x9d\xea\xd9\xcc0d^\x8fK\xc2|:!\xab>\xa5f{:\x11\xab\xff\xd8\xdcw\xfd\xf0\xb9y\xe16tgF\xed\xf3\x1dY\xec\xbb+\x19\xf3|%C\x84!\xdf.\xa2\x15\x07\xbc\x80\xb4!TF3]\xe8"g\x01\xef\xce\xf9\xf4u\xf6\xc4?k\xb8I\x01\x8b\xd2oF\xfd\xf25k\0\xc4\x9c\xc4(8\xa1\x9f\xd1\f%\xd1\xac.\xb4\ra\x8f\xc7\xe2\xa09Di2h\xee\x0e\xba\x84\xa1@9\xcf\x95\\F\xb6&?\x9e-\xfaav9\x98\x1d\x7fm\xe9\xc1/}\xc6\xf1\xd7\xe7[\xf3pd|Z\xf2\xbc\xde?\xff\xb2}\xd9\xea\xb7O\xdb]\x18w\x96eU\xbe9\xff\xf4\xb9x[\x84{O\xa7\xfc9\xa6s\x03D\x9e,@#Q\x85\xde\xd9\xcf1i\x1b\xc0\x92\xa7\xf0\xc7\x10\x01\xf2\x99~T\x01\xd3\xa5\f*1g\xb0\x98\xa0\f\x90$\\\x83\x13\xb7\x06\x89\'\t\f\x10EN\x81\x0b\xf3\xf9\xaa8[\xcag\xe2\xc4\0\xb6\x8d\x02_w\x1b\x84\xfc\x99\x89\x15\xc0\xb6QQm\xa3b\xd4F\x05\xd26*\xcemT\x84\xd4\xd2 \xbd\xe6\xeb\xf7U\xd7S\xb8\xc2\xeb\xf0e\xc2\x96M\xd1?\xb2L_\xa8\xfa\x06\xd1\x9a*\xf8\xad{\xa8\x82>\x9bGH\xcf\xe6\x15\x81\xad\xf9\xe9\x16)i]JZ\x87\x92\x16)i\x07(i3J\xda\x8c\x92\x16(y\xb5-\xfa\x1e\xfc\xc9\x9f\x8f\xa6!\xb4\xe7o\0\xad&c\xb1\x88\xe9^\x04@\x1f#\x14:\x1a\xa3\xd8\xdb"\xfe.\x03\xa0\xdf\x11\xeav\xbeh3=\x90\0\xe8\x86\x84z}\x91Ly\x87$\x03\xf4JB\xfd\xaeIF\xec\x9f\x04C\'%\x14zjD/\x100}\x96\0\xe8\xb8\x8cz\xbd7\xdaL\x17&\0\x82\x96P/r\xc9\x94\x87/\x19 \x86\t\xf5\x03\x99\x8c\x18\xcd\x04cH\x13\x9c\xc6u\x04m\x7f\x8f\x88\xed\xf4\x11\xb1=\x9f\x10\xec\xfe\x04;\x1a\x10-F\b"\xe0\xa9A\xb4\xb4X\xc5\xd6\xa5\xb8\x1d\xa6\xb8\x1d\xa2\xb8u)nOQ\xdc\xfa\x14\xb7>\xc5\xadG\xf1k\xc6\x86\x11\x91\b\x1c\x91\x04\x94\x13BsM\x89\xdd\xdch\n\x01\xa0)\x84\x82\xa60\x8a\x9a\x12\xf1w\x19\0\x9aB\xa8\xab)\xd1f4\x85\0\xd0\x14B=M!S\xae)d\0M!\xd4\xd7\x142\xa2\xa6\x10\f\x9aB(hJD/\x100\x9aB\0h\n\xa3\x9e\xa6D\x9b\xd1\x14\x02 \xe0\t\xf5\x02\x9eLy\xc0\x93\x01\x02\x9eP?\xe0\xc9\x88\x01O0\x06<\xc1i\xc0G\xd0jJD\xac\xa6D\xc4j\n!\xa8)\x04;\x9a\x12-FS"\xe0iJ\xb4\xb4X\xc5\xd6\xa5\xb8\x1d\xa6\xb8\x1d\xa2\xb8u)nOQ\xdc\xfa\x14\xb7>\xc5\xadG\xf1k\xc6\x86\xd1\x94\b\x1c\x91\x04\xd4\x14BsM1,\x18a\xb1(\xa8\x8b5\x81\xc4$&\xd4\x19c|\xe7\xa3\xa08\xd6\xe4\xca\x8e)`\xb4\xc7\xa2 @\xd6\xe4\xa9\x90\xb5\xe7Rd\xad\xa0G\xd6\xe4\x8b\x92-\x81\xcadm O\xd6\x04\x1aeL\x17.j\xd4\xca\xa2 Y\x89\xc9\xd3-S\xc0\x88\x97E\xa1{Y\x93\xd7\xc7\xac=\xefh\xd6\n\xbd\xcd\x9a\xfc.gK`\xbf\xb36\xec|\xd6\x96\xf6@c\xb1Jg`+w\x06\xb6\x9aga\x14>ks\xd4\xcf\x98\x8d\x04\x1a\xd4\xd3Acn\xdd\xa6\xb4\xc3.k\x7f\xe0\xb2\xf6\xa4\xcb\xdaa\x97\xb5?tY{\xc2e\xed\t\x97\xb5\x83.{\xf5\x994\xf2i\xd0\xa3K \n\xa95\xe5j*\x88\xd1R\xc5@I\xd5\0:j\f\xa8\xa2bz\xe7a\xa0\xa0jp\xf5S\xccF=\x15\x03\xedT\x83\xa7\x9cj\xcduSm\xa0\x9aj\xf05S\xed\xa8\x98j\x01\xbdT\x03\xa8\xa5\x18.\x1c\xcc(\xa5b\xa0\x93\xc6\xe0\xa9\xa4\x98\x8dF*\x06\xddM\r^gSk\xde\xd5\xd4\x06\x1dM\r~7S;v2\xb5`\x17SK\xda\xc1\x04\xb7\x8a(\xa0\xd5C\x01\xad\x1a*\x88Z\xa8\x16G\t\x052:(\x98\xa7\x82bl\x9d\xaa\xb7C.iO\xba\xa4=\xe1\x92v\xc8%\xed\x0f\\\xd2\x0e\xba\xa4\x1dtI;\xe0\x92W\x8f1\xa3w\x82\x1d\x1d\xa2P\xeb\xd4\x90+]l\xac\x919\x02@\xe3\b\x05\x81c\x14\xd5-\xe2\xef2\0t\x8dPW\xd4\xa2\xcd(\x1a\x01 g\x84zZF\xa6\\\xc8\xc8\0*F\xa8/adD\xfd"\x18\xc4\x8bPP\xae\x88^ `4\x8b\0\x10,F=\xb5\x8a6#U\x04@\xa7 \xd4\xeb\x11d\xca\xbb\x03\x19\xa0/\x10\xeaw\x042b/ \x18\xbb\0\xc1i\xfcG\xd0\xeaQD\xac\x18E\xc4*\x11!(C\x04;\x1a\x14-F\x80"\xe0\xa9O\xb4\xb4X\xc5\xd6\xa5\xb8\x1d\xa6\xb8\x1d\xa2\xb8u)nOQ\xdc\xfa\x14\xb7>\xc5\xadG\xf1k\xc6\x86\x11\x97\b\x1c\x91\x04\x94\x15BsM\xa1\xea\x19Qa\x04T\x85a\x90\x15\x81QW\xc8\xf0.G@Y\x18v\xa5\x85\x8cF[\x18\x01qa\xd8S\x17\xb6\xe5\xf2\xc2\x16\xd0\x17\x86}\x81a+*\f\xe3 1\f\x83\xc6\x10|\x91!Fe\x18\x01\x99\x11\xd8\xd3\x192\x1a\xa1a\x04\xba\x01\xc3^?`[\xde\x11\xd8\x02=\x81a\xbf+\xb0\x15\xfb\x02\xe3\xd8\x19\x18O{\x03\xa1Vq\b\xb2\x92C\x90\xd5\x1c\x86Pt\x18wT\x87LFv\b\xf1t\x87LmV\xd5\xd6\xa7\xbc=Ay;Hy\xebS\xde\x9e\xa4\xbc\x1d\xa0\xbc\x1d\xa0\xbcu)\x7f\xcd\x991\x12D\xc81#\x04E\x88\xe1\\\x85\xa86F\x85\x18\x01\x15b\x18TH`T!2\xbc\xcb\x11P!\x86]\x15"\xa3Q!F@\x85\x18\xf6T\x88m\xb9\n\xb1\x05T\x88a_\x85\xd8\x8a*\xc48\xa8\x10\xc3\xa0B\x04_d\x88Q!F@\x85\x04\xf6T\x88\x8cF\x85\x18\x81.\xc1\xb0\xd7%\xd8\x96w\t\xb6@\x97`\xd8\xef\x12l\xc5.\xc18v\t\xc6\xd3.A\xa8U!\x82\xac\n\x11dU\x88!T!\xc6\x1d\x15"\x93Q!B<\x15"S\x9bU\xb5\xf5)oOP\xde\x0eR\xde\xfa\x94\xb7\')o\x07(o\x07(o]\xca_sf\x8c\n\x11\x12Th\x92\x12\xc2*\x84\xb06\x91-\xfd\xaf\x1a\r\x8a\xdfA\x81"\b\xfaC \xaaO\x0f\xbf\xc3\xef\xa0<\x11tu\xa77\x19\xd5\x89\xdfAs"\xe8)N\xb4\xe4z\x13qP\x9b\b\xfaZ\x13m\xa84\x11\x05\x9d\x89 \xa8L\x0f^\xc0w\xa30\xf1;\xe8\x0b\x81\x9e\xba\xf4&\xa3-\xf1;\x84y\x04\xbd \x8f\x96<\xc4#\x0e\x01\x1eA?\xbc\xa3\r\x83;\xa2\x18\xda\x11M\x03\xbb\xfff\x95\xa4\x07\xac\x8e\xf4\x80U\x91\b\xa0\x86D\xd4Q\x90\xde`\xf4\xa3\xff\xee\xa9Goh\xa1j\xadGi;Hi;@i\xebQ\xda\x9e\xa0\xb4u)m]J[\x87\xd2Wd\xc0\xe8D\xff\xfd\b\r\xc7\x91J\x04\xf3qJ\x8ck#\x11\x04\x80F\x10\n"\xc1(\xaaD\xc4\xdfe\0\xe8\x04\xa1\xaePD\x9bQ\n\x02@*\b\xf5\xb4\x82L\xb9X\x90\x01\xd4\x82P_.\xc8\x88zA0\b\x06\xa1\xa0\x18\xf1\xeb\x05\x02F3\b\0\xd1`\xd4S\x8dh3\xb2A\0\x049\xa1^\x94\x93)\x0fs2@\x9c\x13\xea\x07:\x191\xd2\t\xc6P\'8\x8d\xf5\bZ\xfd\x88\x88\x15\x90\x88X\x05!\x04%\x84`GC\xa2\xc5\x88H\x04<\x15\x89\x96\x16\xab\xd8\xba\x14\xb7\xc3\x14\xb7C\x14\xb7.\xc5\xed)\x8a[\x9f\xe2\xd6\xa7\xb8\xf5(~\xcd\xd80\x82\x12\x81#\x92\x80\x92Bh\xa6)?\x15o\xc3\bd\xc4\x9fy\xb0"\0\xa9\x80\x02\x965E\xcdhF0\xe2J\x01fB\x11&A\x91\xd8~\xfdN\x1dS\x80\xeb\x8e\x0b\xfe,A\xc4\x80\xad\x9c\xa26\xa8\x18\xa3\xca)\x90\xfaPq\xae\xb4"\\iEb\xa5\xe9\xfb/=\xa3S\xfe\xcc\x8c\n\xc0\x8c\n\x900*\xa8aT0fT\0aT\x10aT\x10bT\xbe3\xa3\f\x84\x0e\\q\xcd\xd7\xe6\xf3\xc6~f%\x17\xc0(5c\xf4wO\xceJ\x02\xa26\x1a2\b\0F\b\x05Z\b\xf5\xb8!SN\x10\x19\x80%B\x91*\x82\x91/\x82S\xd2\b\x04\xe6"j\xe8\x8b\xc0\x1a\x81M\x06\0\x9b\x84\xe6\x94FC\xc6k\xff\xf8\xa9\xe55\x02\xc8kD\x91\xd7\x88\xba\xbcF\x93\xc3k4 \xaf\x11\xcdx\x8dp\xc6k\x84\x81\xd7\b"\xaf=jy\xed\x815\x02\x9b\f@^#\xea\xf0\xda\x1b\x80\xd7\xdf:J\x97\xf2\x99\xee\xa5\0\x11\xa9\x80\xe5PQ\xfd5\xc5\x889\x05\x984E\x98/E"U\xfa\x9dX\x12`+\x19\xf17~\xe7\x9d\x01\xa8\xb6\n\xd8\xda*\xaa\xb5U\x8cj\xab\0\xd7V\x11\xae\xad"\xb1\xb6\xfa\x9dj+@\xfc\x83Kg\xcb\x92\xbe[[\x8d\xb5\xa77\x15Z\xc0\xab}\xed\xd4\xde<Il@lR\x9d5\xa9\xce\x9a\xd4\xd8\xcfX\xc3\xc6\xadP\xe3T\xa8\xc1\xdfN\x9fQ7xV\'z\xf9\xa5\x01\x90U\x0e\xe11\xe5\x9e\xf7&\x9b\xbf\xc7l\xfe\x1e\xb3\xf9{7\x9b\xbfw\xb2\xf9{\xcc\xe6\xef\xb3l\xfe>\xcb\xe6\xef!\x9b\xbf\xc7l\xfe\xbe\x8b\xe1\xf1\x94?s6\x17\x80j\xab@\x92\xde\x055\xe9]0N\xef\x02H\x1a\x17D\xd2\xb8 \x94\xc6\xe5;\xd5V\x80\xe43\xd6\x96c\xd6\0^mk\xa7\xb66f\x15\xc4&\xd4Y\x13\xea\xac\t\x8d\xfd\x8c5l\xdc\n5N\x85\x1a\xfcm\x88Y\xc5\xb3:q\xcc*\x80,\x82\xec\xbe\xef\xc6\xebbl\xb1\xd2\xad[\xe9\xd6\xa9t\x8b\x95n\x07*\xddf\x95n3"\xdb$\x16\xce\xbb\xb9-\x05\xed\xb9Lk\x15pz\xd1\xb9\x9d\xcc*\x96\xf6\xa2s\x9c\xc2*\x0e\xbd\xeb\\&\xae\n\xa4\x9d\xe9\xdcH\xea9J\xea9J\xea\xb9+\xa9\xe7\x8e\xa4\x9e{\x92z\x8e\x92z\x9eI\xeay&\xa9\xe7FR\xcfQR\xcf]I=w$\xf5\x1c%\xf5|@R\xcf3I=GI=GI=7\xd1x\x8e\xd1x\xeeF\xe3\xb9\x13\x8d\xe7\x18\x8d\xe7\x03\xd1x\x9eE\xe3y\x16\x8d\xe7Y4\x1eea\xe2\\&z\nd\x8b(\xc9\x0b?L$\'0\x04ub\xf3\xe2;)\x90\x87zb\x86\xa8Ol~\x07H\x8a`_H\x8c\xd0-\x12\x1b\xf4\x10k3.O`\x88\xca\xc4\x06](\xb59\xc1\x9b\x14\xc8\xe385\xe7},\xb1C\xc8\'6\x8c\xf2\xc4\x88\x9d\xd0\x1a\x9b\x01\xf8\x04\t\xcd\x8f\x1a\xda\x9cnhs\xa2!\x03\xdd8)r\xaa\xad\xd8\xb9\x13\x1b\xf4sk3]>\x81\xa1\xf7\'6O\b\x92\x02\xb9&$f\x90\x87\xc4\xe6+ER\x04E#1\xa2~$\xc6TJ\xac\xe9\xe8\x0b\x06\nLb\xcb\xb4\xe6\x8f~\x91\xb4\xe4\xcf\xbc>\xaa@\xb24\xca\xf0\xca|^\x9b\xcf\x1b\xfb\x99gd\x02\x98\xa9\x16c\xe9\x1f\xdd\xe01\xc6\x1f\xc9j!\x0f\x96\xff\xe8Z<\xe5j\x1f\xd3E\xf4?l\xdb\x18\xd3\xe7L\xcb\x04\x80V\xba\xcf\x99&\xb6\x15\x02k\x046\x19\0\xcd\xcf\x1e\xc9L\r\x03D\xe4Og\n\x1b\xf2\xa8b\xdaZ\xe4%{T\x91\r\xb6\xb9\x86\xa2\x04\x06\xa2R\x9bG\x97\x05W>\xbc\xf6\xe1\xcd\0\f4&\xb6\x9cLk\x1e\xa04+\x82\xc4B\x1f\xf3\xf8B\x92\x07\xfa\x18\x9b\xa3\xce\x19\x92\t\0z\x19\xf5\x88\x8d\xb6\x15\x02k\x046\x19\0\x04\x12\x9aS\x17\r\x03\xa4\x19#\xd2\x15MGl-RDhFN\xf7Gc\xf9g\xe4\x85\x8a\x06\xe0\x85\x11\x01\x92\x84&\xa8\xc9b\x82q\xea\x12@\x92\x91 \x92m\x05\xa1\x85\x11\xf9\xcey\x88\x80X\xbf\xb7\x19\0\xf5&\x14*O\xa8\xd7\x022\xe5\xcd \x03\xb4\x85Pl\x10\xc1\xd8*\x82\xd3\xa6\x11\b\xed\x93E`\0\xa0}\xe9"0\xa0^\xfb\xb2E`0@\xfb`\x11\x18`l_\xb2\b\f \xb6\xcft\xae\xb7\x030\xb6\xd5\xda\xb0\xc5\xd6\xe6\xb6\xdb\x16pZo\xcd\xc8\x81\xb5eLXc\xc6\x875\x02+\xd6\x04\xdc\xc4\xafo3\0\xf8 \x14\x98 \xd4\xe3\x80Ly\xeb\xc9\0\xed&\x14[L0\xb6\x95\xe0\xb4\x95\x04\xa6\xed\xfb\xd85\xad\x92\xcf\xe9\xe2\xf3Gi\x90\x02\xc9\xc6\xb7\xa0\xd9\xf2\xf4Gi\x81\x02\xb2\x99-\b\xd7[\x91Xe\xfd\xce{\xda\f\\\xd9\xcf\x94*\f`\xb3\x84\xc0+\xd9\x8b\xfc\xd8\xe5\x06\xf9\xfc\xd9\x94\xd9\x18|\x93n\xb5~\xb4\x89\x811\x91\xbc*\x05\x80\xc0T\xf2\0\xf5\xa8\xcc$\x0f\f@*H\x1e\xc0Ho"y\0\x02\xd12J\x04\0(\xf7F\x89\xa9m\x85\x9c\xad\x11\xf8\x8c\x97l\xb0\x04:$\x1b6\xb2\xc10j\\cQ\xf0\x8f5\x81\x93\xac\xc9\xf3\x94\xb5\xe7\xee\xb2V\xf0\x995\xa1\xe3\xac\r\xbdgm\xa9\x0b\xad\x05\xfc\x98>X\xed\xa1\xe0\xd1\xc1\x07\xab\x9d\x02+\x97\xf9\xb5\x8b~v\xef\xb0q\xcb\xa2\xbf\xfd\x87\x8d\xd9*\x88q\xb9b\xe0p5\x80\xbb\xd5\xe09[\xad\xb9\xab\xd5\x06\x8eV\x03\xbaY-\xe8d\xb5\xa4.V\x1c\x1cl\x9f\x06\xcd1p\xee\xc0\xd3\xa0\x99y\xe5\xb0\xbbv\xb0\xcf\xce\xb5\x1b\xa7\x1c:\xd4{b\x92m\x91D\xe3K\x02\xc0\x91\x84\x82\x17\t\xf5\\H\xa6\xdc\x7fd\0\xe7\x11\x8a\x9e#\x18\xddFp\xea3\x02\xc1a\xf2\x1c\x1c\0\xe0*\xef9\xb8\xd4\xb6B\xce\xd6\b|\xc6K6X\x02\x1d\x93=C\xc6\x86d9\xc78\'\xc5\xc1G\xa9\x11\\\x95\x1a=\x8f\xa5%r\xc7\xa5v\xf0_jD7\xa6V\xf4fjM\x9d\x9a\xda\xc0\xb7\x89\xf1j\b\x07O\x83\xd1sxRd5\xe0\x95\xf5\0\xfey\xe0>\x9b\x81\xf2\x18\x13\xa91\x0f\r\xe2\xd6\x04\x05#\x10\x0e\fC 0\xec\x85\0\xdbr\xe7\xb3\x05\xdc\xce0:\x9cqt5\xe3\xa9\x93\x19\x05\xf7\xea\xd3e\x88\x80K\xdd\xa7\xcb\xc0\xb8\xca\x18\\g\xc8\xe7\xec\xaaMV\x06\xdd\x95?\x91\xc5\x96\xb8\xda`\xfcD\0\xb8\x89P\xf0\x12\xa1\x9e\x93\xc8\x94\xfb\x88\f\xe0"B\xd1C\x04\xa3\x83\bN\xfdC \xb8GV\x94\0\0\xe7x+J\xa9m\x85\x9c\xad\x11\xf8\x8c\x97l\xb0\x04\xba%[bb\x83L0\xab\x14\0\xaf\xa4\x13L@=\xafd\x13L0\x80W`\x82\t0z%\x99`\x02\b^\x91S\xc7\0\x80W\xbcS\xc7\xa9m\x85\x9c\xad\x11\xf8\x8c\x97l\xb0\x04z%;\xb1K\x86O\x9dC\xe8t\xe9\'\xf1\x85\x02\xe4\x06\x05\xac\x07\x14\xcdN\xaa~\x12\xde\x15`\xca\x15a\xb6\x15\x89D\xebw\xe2X\x80\xad\x9c\xdc\xfc\xa4gP\x04\xe03(\x028GL?%gP\x04K\x8f\x98~2gP\x04\x81\xa3\xa4\x9f\xe4\f\x8a|\xe7\xd3\x13\f\xa4\xe7\xa8>\xf5\xfb\x98l\xab\xd3\x85\x95O\xbac\xa9@\xbe\x9c\xf2)\xd9\x9bT\xcclH\n\x98\xae\xac|2[\x8f\x82\xc0z\xca\xa7~\x93Q>c\r\x1b\xb7B\x8dS\xa1\x06\x7f\x1bw\x0b\x05\xcf\xea$\xfb\x82\x02\xa4\x0b9\x9f\xb2sT\x17\xe6\x9c\xf1\x05\x9e3\xbep\xcf\x19_8\xe7\x8c/\xf0\x9c\xf1\xc5\xc09\xe3\x8b\xec\x9c\xf1Ev\xce\xf8\x02\xce\x19_\xe0I\x9aK\xb3\xb7\x7f\x89\x1b\xfa\x97\xee.\xfe\xa5\xb3u\x7f\x89\xfb\xf5\x97\x03\x9b\xf4\x97\xd9\xce\xfc%n\xc7_\xe2\x1e\xfc\xa5Q\xb3K\x14\xb2K_\xc3.;g\xc8\xf5\xd7\xd8\xaek\xb7]\xd7N\xbb\xae\xb1]\xd7\x03\xed\xba\xce\xdau\rg\xdb.\xd9\x19\xf2}%;\x10\x97\x9d\xbaN\xf8\xf3\xc6~N\x8f\xe8^Z\xf5d,\x161\x9e$\0\x9aM\xa8\xd7v2\xe5\x04\x90\x01X \xd4\xa7\x82\x8c\xc8\x07\xc1\xe0lB\xc1\xe3\xb8\x1cv\xe9.\x87]\x9eX\x0e#\xdb5\xde\xf3\xda\xe5\xe4z\x98\x93\xeb!N\xae]N\xaeOqr\xeds\x92\x05\n\xc1i\xb4\xe8\xfa^\xe2\xf55\x86\xc1&\x03 \x82\xb2\xe5<6DvM\x18\x11\0\x94\x11\xeaQF\xa6\x9c22\0e\x84\xfa\x94\x91\x11)#\x18\xc2\x88P\b\xa3\x88\x9a0"\0\xc2\x88Q/\x8c\xa2\xed\x1a\xefy\xedrr=\xcc\xc9\xf5\x10\'\xd7.\'\xd7\xa78\xb9\xf69\xc9\xc2\x88\xe04\x8c\xe4\t\x84i\xe2\xf55\x86\xc1&\x03 \x8c\xb2\'\x10\xc4\xe0\x9e\x1c\xbb<qr\xec\xf2G\'\xc7.O\x9f\x1c\xbb<qr\xec\xf2\xc7\'\xc7.O\x9d\x1c\xbb<qr\xec\xf2\xc4\xc9\xb1K8\xdbPy0\x06\xe2\xe0\xd9\x06\xaf\xc4\xb5\xff[\xd7\'\xb8\xbd\xfe\x11\xb7\xd7\xa7\xb9\xbd>\xc1\xed\xf5\x8f\xb9\xbd>\xc5m\x1e\xbe\xd6\bA\x9c\x1e\xf1\x98:\x91\xb7\xf6\x03r3\0cp\xfbG<\xc8|e\x1e\xfb\xb8\xc2\xc7>\xae\xf0\xb1\x8f\xab\xc2{\xec\xe3\xcay\xec\xe3\n\x1f\xfb\xb8\xca\x1e\xfb\xb8\xca\x1e\xfb\xb8\x82\xc7>\xae\xf0\xb1\x8f\xab\xae\x17\x8e\x17\xfc\x99\x07\xa6\x02$\x03SA\xcd\xc0T0\x1e\x98\n\0\x03S\xc1e`*\b\x1f\xf1\x16\x80\')\f\xe8\x04\xe5J\xa6T\n\xf0\x83\xc5\x02$\x0fb\nj&\x96\x82\xf1\xe3\x97\x02\xc8\xc3\x95\x82\b\xa3\x82\x10\xa3\xf2\x9dj+\x97\xdc4\x8ff\x0ey\xc5S,\xf9n+_ck\xea\xf4\xcc\xcdU:\xc5R\xd4i\x8d\x9dbiAlb\x9d5\xb1\xce\x9a\xf8\xf5\xf8\xedkm+\xb13\xce\xd8a\x90\xecdb\xc1Hc.m\xb0\x85\x8d\xdb\xa0&;\xf0s%S4\x05\xd2\x98R\\:\x82 \x14S\np\xdc3\xc0\x93\x1d\xe9\b{\xe3\xa2}\xba\xcap\xc5\x7f\xde\xdd\x02V\x82\x05>\xd4O;\xf4\x7fk~\xb5E6Z\x97\x8d\xd6a\xa3E6\xda\x016\xda\x8c\x8d6\xf3p\x0bA\xfc\xdd\xd4W\xdf9r\x85o\x1b\xb9r\xde3r%Gr\x98\xca\xf4H\x0e\xa0\xa0\x7f\xce\x91\x1c0\xe5J\x98\x1e\xc9\x01\x145\x11\x8e\xe4\0\x9c\xaacz$\'E\x8dN\xa6C_@=\xc5\xcc\x86\xbe`\0\xedt\x87\xbe`D\x15M\x87\xbe\x80\x82\x9eF\xd4\x88*\x01\x10\x9b\x84\x82\xbc\x12\xeai,\x99ri"\x03H\x11\xa1\xa8G\x04c\xc8\x12\x9c\xc6-\x81\xa0\xc0\x11\x85n\xc8`\xa2\xc5\x11\xcc\xda\\\xbbL\xa043\xeat`2\r1\xe1)5Y\\\x8ej\x9f\xa3\xda\xe7\b\xd5;\xa2;\xf4\xff\xce\x8d\xdfL\xcc#\xdc\xe0\xed\x1a\x97\xa2f\x98\fG\xe0\xc9\0\xbaF\xa8/ndD\x85#\x18D\x9fPP\xfe\xf4!\xe8\xb4\x93\xef140\x11\x10\n\xd9\x80Q/%D\x9b\x93\x17\xa2\xa1\xc5\x8a\xb5.\xb1\xed0\xb1\xed\x10\xb1\xadKl{\x8a\xd8\xd6\'\xb6\xf5\x03\xad\xf5:\xe3wl\xe1\x113\x05\xe6\x14B\x9d\xc4\x92\x9e\x85\x14W9g!]\x1b\xa6\x9a\xa1\xb3\x90n\x01\'\xed8g!][\x96\x82\xbc\xb3\x90\xae\x11\xd2\x91s\x16\xd2\xb3\xd9\xd4\xe4L\xa4]\x9b\x9b\xa6\xfc\x89\xb4k\xc6\x945<\x91v\x8bd\xe9\xcb\x99H\xbb6Le\xc6f\x13\x9a\x85\xb1CY\x1b&7ksS\x9c-\xe0\xc8\xbb5\xa3\x94[[&\xe8\xd6\x98\xf56k\x84>gM\x98\x06\x8d\r\xb5\'1\xa5)\xd1>\xec\xe5\xffP}\x82\xd1,I&6O\xc4l\x81\xd3\x8c\xbai\xd3\xdaO0^\x9fb\xbc>\xc5x\x96N\x8dm\xe7G\xe2\xeeD\xcf\xcb\x13\xac16\xfe\xcf4\'\bo~D\xaa\x97x\xad\x19\xb3\x84\xb5\r\xe4\n[$\xcb\x18\xd6\x88\t\xd9\xda0-\x1b[\x96\x9c\x8dm\xef\x87j\x96\xa8\xad\r\xd3ubs\x93\xb6\x01\xbd\xd4m\xcc\xad\xdf\x84\xf6\x84\xcb\xda\x1f\xb9\xac=\xed\xb2\xf6\x84\xcb\xda\x1f\xbb\xac=\xe5\xb2\xf6TWh\x87\xc5\xe7\xbb\xcf\xce\xd1\xcf\xe6\xd9\x10\xc0\xda\xb2\x81\xc0u\x97\xfdg#\xfeL\xd7*@"\xae\x80\xe5WQ\xbd\xafb\xc4\xa4\x02\xcc\x8d"L\x88"\x91\x05\xfdN\x91,\0)\xea\x94\xbfs83 \x07\xd6g)\0\rK\x0f\xac\x03\xea51;\xb0\x0e\x06h,\x1cX\x07\x18\x9b\x9d\x1cX\x07\x10\b\x88(\xb0\x10A\xa4"=%>sP \xc59%\xee\x99<z\xfcS\xe2\x9e\x15\x88\xf2N\x89{6\xa4,?%\xeeY\x80<c\x02\x06\x8d\x05i\xb4\xe7\xaeg\x19\x06\x14f\xe7\xaes\x83G\x9fw\xee:\xb7\x01u\xf9\xb9\xeb\xdc\x82\xb4\xe1\xb9\xeb\x1c\x07\xca\xc4\0\x84\t\x8et\xc9\xb9\xe6Y\n\0Q\xe9\xb9f@=\x8a\xb2s\xcd`\0r\xe0\\3\xc0HKr\xae\x19@ $\xa2\xc0F\x04\x91\n<L<sq \xc6=L\xec\x1b=\x9a\x86\x0e\x13\xfbv \xcd?L\xec[\x91B\xef0\xb1o\x03B\x13#\xf0\x9a\xd8\x90^=\x90;\x03\x04(\x85\x03\xb9\b{4\xe6\x07r\xd1\x02\xd4\xe1\x81\\\xc4\x91\xae\xf4@.\xa2@\x11\xc1@\x0e\xa1H\x0b\xfd\x92\xa1\x85\x11\xa0\x85a\xa0\x85a\x8f\x16\xb6\xe5\xb4\xb0\x05ha\x18ia\x1cia<\xa5\x85Q\xa0\x85`\xa0\x85\xdf\x84\x0e\xb4\xf4w4\xa4\xc4\xef@I\x04\x81\x90\bztDKNF\xc4\x81\x8a\b"\x11\x11E\x1a"\x9a\x92\x101\xa0\xa0\x07\x81\x80\xf8"\xe7\xb4\xf9\xab\xae\xe9c\xdaF]I\xbb\r\xc2\x87\'\x15I\x961\x146\x8b\x17\n\xf2\x92\x85"\xb2\n\xa1\x90\xcc\xce\x14\xa2Sr\n\xf0\x1a\x84 \xefd\xf7y%\xef9V \x99a\b\xaco7^\xe1\x8b\x8dW\xee;\x8dW\xce\xeb\x8cW\xf8&\xe3\xd5\xc0K\x8cW\xd9\xfb\x8bW\xf8\xea\xe2\x15\xbe\xb5xeVTV\xb8\x8c\xb2\x92\xb5\x13\x05\x9ci\xcd\xca\xae\x92(\x96N`V\xba\x1e\xa2\b\xccCV\xb0\xf2\xb1\x92\xe5\x0e\x01h\x92f\xbe\xf7!7.\x97\x04t>\x1b1\xff\xf2\xc25Eh\x9ah\x91\xe4\\\xa6\xc0\xf6`\xa6\x82\xe6\xa5k\x8a\xcayMA\xf4`\xa6@z2\x93!^t\xa09\xd5\xaa[i\x98\xcc\xf93\xcf\x9e\x04H\x8en\bj&R\x82\xf1!\r\x01\xe4\xd8\x85 r\xd6\x82\x91\xc6\xd6\xac\xc9xk|\x96\x1a\x8f\xa5&\xe3\x03_\x05\xa7\x86\x9c(y\x19\x9c"r\x9e\x99\x119z+Ql&\xf0\x12\x1b\xad\xfd\x8c\x91\xdd\xba\x81\xdc:\x81\xdcb \xfb\xd3\xefU6\xe7^e\x13\xed\x15\xcc\xae\xd7\xbd\x1a\xd2Q\xdc\xb5\xaa\xa1"\xac\x86\x8a$\x8eP\xd88BAv\x84"\xc2\xb7B\x12\x98\n\x91\x1a*\xc0\x1e\x10\xe4\xa3\x1c)^\xeb\x1a\xb4\0\xceQ\xe7u\xb2\xda,Xz\xd4y\x9d\xad+\x0b\x0eG\x9d\xd7\xba\x82,@z\xec}\xdd)\xdbl\xca\x9f9\xc1\n\xc0\xc9U\x80$\xb1\nj\x92\xaa`\x9cP\x05\x90d*\x88$RA(\x89\xcawN\xa0\fP\xf4N\xf5\xbb=\xb4\xbf.l\xd9\x1a[\xc3\xb2f\0\xaf5\xb5\xd3\x1a\xabi\nb\x13\xeb\xac\x89u\xd6D\xd63\xd2\x94\xb5Y9]\xe3r\xe9:[#]w\x124\xe7{\xb1\x02)\x90<\xf1!\xa8y\xe2C0~\xe2C\x804\xa6\x14\x97\'A\x04\xa1\x98R\x80\x1f\xfc`@V-\xd9-Fx\xc4u\xfa2\xf95\xbeG~\xed\xbeB~\xed\xbc=~\x8d/\x8e_\x0f\xbc3~\x9d\xbd.~\x9d\xbd)~\r/\x89_w\x8bv3\xf9\x9c\x8e>\xd7vy\x8e\xb0M\xafTc\xf9\xc2\xdeT\x84\x95J\x91D\x05\x1462\xa0 \xeb\x80"\xd2\xe1\x15\x92\x88Q\x88\x94J\x01\x16\x01A>\xca\xa9\xbd\x8d\x1e;\x15\xc0y\xa7\xf5&9`*X\xfa&\xebMv\x94Tpx\xb9\xf5F\x0f\x8d\n\x90\xbe\xbcz\xd3)\xd5B>S\x1d\x15 f\x15\xb0\x95VT+\xad\x18UZ\x01\xae\x9c"L\xaa"\x91S\xfdN\xb5\x15 \xcd\xb3\x1bP\xaaM?\x04\x1b\x8f\xf9\x8bD\x8a <\x043H\x12)\x02\x9b\xce\xad\x98\x19\x81iI\xee\xf2\x02H\xd7\x16D\x83\x87!\xd8\xf4\xd9\x98\xf1\xd7\x06\xc7_\x9bl\xc8\xb4\xe9\x87Lr\xb3&kg\xe3\xb7\xca\x0e\x99\x14\x94\xf8\x17\x04\x12\xa1\x1a\xb4c\b\xc4\xa9P\x11\xe9\x06\x8c\x80pm\x9c\x11\xd3\xc6\x8c\x9868b\xda\xb8#\xa6\x8d3b\xda\xe0\x88i30b\xdad#\xa6M6b\xda\xc0\x88i#\xeb\xea\xd2\xc3\xd3\x85u\x84Q\x96\x9c\xa5u\xb49\x02\x95.\xae#\x9cI\x15,\xaf#\x0e\xa2\x95.\xb0\x03l\xe4\x0b\x1e\xeaIQO\xc8\xf2\x87zR\x03H\x9a\xffPOjDq\x83\x87zR\x14d.\xa2F\xeb\b\0\xc1#\x14T\x8fPO\xfa\xc8\x94\xeb\x1f\x19@\x04\tE%$\x18\xe5\x90\xe0T\x13\t\x04a\xe4-\x91\xa4O%\xfb$)h\xfb\'!("\x04\xa3b2\xec\t\f\xd9r\xedd\x83#\xa0d\x02\x15%\x14\xa5\x94\xe0LO#\x8e\xa2\x1aQ\xa3\xac\x04\x80\xbc\x12\x8a\x1a\x1b\xe1&\xfb\x95\xc6\'\xaa9\xc1\x88\xa7\xbbdA\xf1%x@\x81\xc9\x9a\xc90\xe1\xa8\xc5\x04\xa3 \xa7[e)[\x8e4GC\x9b\x01 \xd2\x84zJM\xa6\\\xae\xc9\0\x9aM\xa8/\xdcdD\xf5&\x18%\x9c\xe0T\xc7\xedn\x96H^\xb6\x9d\xe5XP\xd0\xfd\r-\xc7\xec\xc8z\xb6\xa5\xe5X2q\xcf7\xb5\x1c\x13H|\xb6\xad\x95[\x8c\xd0+\x06Z\xaf\x06O\xee\xd5\x9a+\xbe\xda@\xf4\xd5\xe0\xeb\xbe\xdaQ\xfa\xd5\x02\xea\xaf\x06H\0b09@1H\x03j\x80L\xa0\x06/\x19\xa85\xcf\x07j\x83\x94\xa0\x06\xcc\nj\xc1\xc4\xa0\x9647(\x0e\xe9\xc1\xec`&]\x1bw63\xdc\xca\x86\x82\xa8\x80j\xc1la,\x9e<\xaa9\xcf\x19\xc6\xe6\xa4\r\xb5B\xe6P\x03&\x0f\xb5d\xf9CL\x98B\xc4`\xb2\x88b\x90H\xd4\x80\xb9D,\x8d\xf7\xa3\xcd \x9f\xcdi\xd6\xbc\xbc\xa2FL-j\x19\xc8.Z K0j\xc2\x1c\xa3\x16L3\xd9\xf6xF\xaa\x93l\xc4\xd6z\x18\xa4\x1c5xYG\xady\xe2Q\x1b\xe4\x1e5\xf8\xe9G\xed\x98\x81\xd4\x82IH-I\x1e\xdav\x7f(\x8f\xde\xefN\nd\x80\xa8<\x060M4\xa8\xdc\xdb`\xb1I\x06\xa0\xaa\x1aD\xffF0#\xfc\x97@\xf9\xbb\xfc)?\x02\xbe\x84\xff\xf0\xfa\xe6\x17qi\xc5@+\xafu\xf8"nR\xc0yk\xc6\x17\xeb\x16\xc5\xd2\xb7f|A7(\x0eo\xcd\xf8\xa2\xb4+\x92\xbc\x14\xf5K\xffw\tcc\xa2\xdc\xc1\xbb\x9e\xab\xccF\x06Z\\\xbb\xed\x0e\xa1\xd1\rno\xfa?\xc9\xa5@m\xee^\x8b3\x19\x88\xb2h\x81\xc4\x99\x8cZg\n&\xe2g@\xf10\x03\xeaaF\xcc_\x81\x8e\xc8\x9dlX\xf1\xf7p\xeb\xc7\xfap\xd8I\x96\xbc\xebd\xae\xe4\xcf\x8d\xfd\xcc.\x15\xc0\xf9\xbb\nw\xce\x1fS\xb8\xc3\xbf\xa0p7\xf0g\x13\xee\xb2\xbf\x95p\x87\x7f \xe1\x0e\xff*\xc2\x9d\xee\xc60\x90\xfa\x94\x96\x1c\xef\xac;\xc9\x9b\xf7x\xed}\xecq\x88z\xe7F\xc9\xd6\xbf\xf5[?\xb3\x8a\x0b`\xd49b\xbb\xf8\xa71\xe3g\r\x12\x02 &\bMb\x820u?\x01\xc6\xfd\x84\xd8?\x02\xde#\x0fq{\x92?\xa7\xfb&\x0ffsR\x80|#\xe5!\xdd\x9a\x14\xcc\xeeL2\x98\xee\xae<\xd8}IF\xe0\x851\x0f\xe6\xcfA=\xe0\x9f\x83zp\xff\x1c\xd4\x83\xf3\xe7\xa0\x1e\xf0\xcfA=\f\xfc9\xa8\x87\xec\xcfA=\xe0\x9f\x83z\xc0?\x07\xf5`\\\xfe\x80.\x7fp\\\xfe\0\xe7\xdd\xb9\xad\xdeyw\xd7\x06~\x19<\xef\xee\x16\xc8\xbd5t\xde\xdd\xb5\x83\x0f\xdd\xf3\xee\xae\x11=\x0bg\xd0=n\xd0\xdf\x83g\xd0\xdd\x02\xa7y\xc7\x808q\x06\xdd-\x82a\xe2\x9dAwm\x10<pr\xd9\x85O\xd0\x90GW\xdf\xe5)\x07?\x8b\xa00 YG\0s3\x03K\xaa\'\xa01\xb2\xd1\xf49\x8e>\xa3d\x11`J\xb8\x1afQS\xd6Q6\xc5L9T;\x02L\x89\xc4\x85\xaf\x03\xb8)\x9f\xc9%#\xa6Lt\xeb+\x02\xa6\x84\xf9c\xc7\x16\xd0\x12\x94.`\x98A\xf9\xc7\x1aS\x0b\x97\x7f\xac\xef\xfa#\x93t\xb7\x14N%#\xb5\xa5\xef\x80Km\x8ed\xa4\x052\xc9H\xcd\xa9$\xa46\x90\x84\xd4\b\x92\x90\x1a\x93\x17\x85\xa5\xa6tg\xbd\xb7y\xc4\f\xb22H\xc9i>N\x911\xc8\xc40\r\xc3\x1c\f\x11p\xba\xf5\xfa\xe9l6Q[\f$}\xc5\x9a\x05\xe3\x88\xd5\xb1\xd8\x10\xcco\xb6\xf7.\xd9\xa7#|kI_\xe1\x97X\xec9\xb5\xdc\xae\xc7\x88,\x98N\xb1\xad\x85~\xc8\xb3\x84\xbc\xf7\xf8\xb8\xf5m\xc9a\xb9\xdc\xfem{S\xcb\xb1(cx\x95*\xef\x8b\x9b\x82\x0f\x0e\x84\xcf\xe9\xd9\x82\0p\xc2V\x80\xab\xa3P\xb2\xda\xb2/\xec\xf55\xde\xb0\xc6\x1b\xd6\xce\xb3\x95\xfb$\xd7+f\x12\xbc\x80\xe9\xa3\x95{\x93\xca\x05\x81\xf3\x11\xfbB\x83s\xcf\x03e\x03$\xa4\n\fg2\xf6\x85f\xd0=g+\x03p3\x15H\xee*p\x9aS\xf7\xfdx\x82\xab\xd9 y\x8d\xcbU\xe3p\xd5 -\x8d\xfb\x98\xe9\xde\x8c\x06\x04I\x1f(\xddk\xdeg\xe0\x9b\xa1E&\x11#F\xfe2%5\x9dP\x1f3\xc1F\0\xb4\x91P\x88\x12F1\xf6\xbc=\xa1\xbd\xee\t%\xa5j\xf7\x97j\xf7\x97\xdc\xa0\xcc\xf6\x83\xd0\x90\x87g\xba\x1d\x04(2\x8f\xdbA\t|\x8fLb\xdc\x12\xea\x06o\xba\xa1\xc4\x11\x1cQ\x13\xa4\x04@,\x13\n\x01\xcd\xa8\x17\xd5d\x83\xd0\xd6\x1d\xa8\xa4a\x8d\xeb\x96f\xd8\x01\xcd\x90\x03\x1a\x97\xe6\x81\xc0\xc7\xbd\xa7\x14\x86.\0;O\t\xfa\ri\xcezD\x84\xff\xc2\x0bM\xdf\xa0\xb7mh\t\x02\x80\x1aB!b\x19\xc5\xbe\x91\xbc\xc2\x83\xfb\x86\xbc\xc2#-U\xbb\xbfT\xbb\xbf\xe4\xf6\x8d\xec\x15\x1eh\xc8\xfbF\xfa\n\x0f@\xd1/\xf0\n\x8f\x14\xbeG&\xb1o\x10\xea\xf6\x8d\xf4- \xdc7"j\xe2\x9d\0\xe8\x1b\x84B\xdf`\xd4\xeb\x1bd\x83\xbe!\xaf\rI\x1b\xd6\xb8ni\x86\x1d\xd0\f9\xa0qi\x1e\xe8\x1b\xf0\xda\x10\x80\xa1o\xa4\xaf\rI\xd1oHs\xd67"\xfc\x17^h\xfb\x86}\xf8\xde\x94\xb30\xd2dm\x18\xc3\x89-\xeb3\xf9\x93\xfe\xd2s`\xe5\xc3\xb9\xa2>Q\x8f\xfaD=\xfc\x1e5\xb0\xf2\xe1\x9a\x9d\xde\xe5\xad|x\xb6\xcc\xcb\xee\xca\x87c\xbc\xf7}\x94\xf5=k\xf3{\xa0\xf3\xfa\0\xe9\x87\xc6f{\x98\x85\xb1OZ\x1b\xf6\xcc\xc4\xe6\xf6O[\x02{)\xac\xfb8\xa44\'B\xa0\xf9\x91\x9b\x9b\xd3nnN\xb8q\xa8\'\xbb\xeb>\x9e\x11{\xb5\xb7\xee\xe3\xd8\xbe\xf9n\xcc\xfb\xb91\xfe\xe5\xdfJ\xfb|\x9c\xb6\xbc\x95%\x04\xfaN\xd4\xa6 \xbf\x92$\x01\x93\x83\xc1\x89\xc5\x1c\x0eNp> \x9c\x80r\x188A\xe5@p\x82\xd2\xa1\xe0\x04\xe37\x8cX\xf0J\x1ej\xa2\xef<\xf1KA\xe7!\xa8hZ\xc9\xceN\xfc\xbe\x06\xfb\x06~o\xe3\xb1\xb6\xc9hx5/\xe2\x7f\xc5\x17\xf1\xbf\xe2\x8b\xf8_\xdd\x17\xf1\xbf:/\xe2\x7f\xc5\x17\xf1\xbff/\xe2\x7f\xcd^\xc4\xff\n/\xe2\x7f\xc5\x17\xf1\xbf\xca\x03r\\{k\xab\xb1\xf6\xb0\xea\xfc\xea.5\xbf:\xeb\xcb\xaf\xde\xa2\xf2+\xae$\xbff\xcb\xc7\xaf\xd9\x9a\xf1k|,\x88?c\r\x1b\xb7B\x8dS\xa1\x06\x7f\xbbq\x9f\xf3x\xb5\x0f\x041\x92>\xe7\xf1j\x1e\x07"\x80\xbb\xed<\x02\xdf\x81\xe6\xef\xa6\x11\xdf\xb1\x11\xdf\xddF|w\x1a\xf1\x1d\x1b\xf1}\xa0\x11\xdf\xb3F|\xc7F|\xc7F|\xc7F\x1c\xa1\x11G\x13+G\x8c\x95#\xc6\xca\xd1\x8d\x95\xa3\x13+G/V\x8e\x18+\xc7,V\x8eY\xac\x1c\xcd^\xe5\x11\xf7*\x8f\xee^\xe5\xd1\xd9\xab<\xe2^\xe5q`\xaf\xf2\x98\xedU\x1eq\xaf\xf2\x88{\x95\xc7\x8c\xe6d*\xce\\\xebT<)\x85\xac\xc3T\x1cP\x87\xff|*\x0e\x86\xdc\x130\x15OQ\xf4\tN\xc5\x13\xd8x\'\x9d\xc2\x02\xea\xf9)\x9b\xc2\x82\x01<\xe6Na\xc1\x88\xbeK\xa7\xb0\x80\x82\x17\xd3\x19+\xbb\x12\xcfQ\xb17\x93sTX\x16}\x9a\x9f\xa2\xca\r\x8eg\xbd3T\x8e-\xf7ov\x84*7\xa0\x97\x9d#Th1\xbe\xce\x0e8\xe5\x06\xcf\xe3\xde\xf1\xa6\xdc\x06~\x1f:\xdc\x94\xdb\xd1\xfb\xd9\xd1\xa6\xdc\x001\x90\x1dl\na\xf0\xeb\xf3\xedy\xbd\x7f\xfe\xb4\xdd\xed\x0f\xfc\xe5\x97\xed\xcb\xb6\xfb\xfc[\xf3\xfc\xf2\xef\xfae\xbf\xbb9\xfc_PW\xf9A'),aq_=a('x\x01\xbd}Kw\x1bG\xb2\xe6^\xbf\x02\xcb\x99s\x86=@\xe1\xdd\xbd\x92mY\xed+\xb7(\xc9*R\xb8;\x88,R\x18A\x84\x1a \x05\xc2\xbf~\xb2*\xe3\xf9e\x14\xdc\xab{|\x8e\f|\x91U\x95\xf1\x8e\x8cL\x14\xffx\\\xef\x1f\x7f\xdd=<\xfe\xaby\xdcon\x0e\x83\xc9\xdfF/~\xde}\xfb\xd6<<\x0e~\xde}?\xed7\xf7_\x1e\x07\xff\xeb\xe6\x7f\x0fF\xcb\xc5\xf4\xff\xb4\xff\xce\xbb\x7f\x97\xed\xbf\xcba\xf7\xef\xb8\xfbw>xy\xbb\xfb\xdc\f\xfe8\x1d\x1e\x9bo\x87\xc1o\x0f7\xbb\xfd\xf7\xdd~\xfd\xd8\xdc\xfem0x\xb9\xdd\x0e>\xb4w;\f>4\x87f\xff#\xa1\xfa\xa8}\xb3~\xdc\xec\x1e\x06\xbf\xa4\xd1\x7f\x1f|\xfc\xf24\xf8\xd7\xfa4\x18\x8c\x06\xa3\xea\xef\x93\xe5\xdfG\xf3\xee\t2\xbe~\xd8\xfc\xfb\xa9\xf9\xed\x97\xc1d<\x9c-\x04\xbe\xfa\xd7\xd3a}\xdf$t9\\\x0e\xa6\x93\xe5x\xf2\xa2\xe5\xee\xed\xfa[3\xf8\xb8\xf9\xd6\x1c.>\xec\xbe\xad\x1f^\xfc\xfa\xb4\xdd*8 p\xfdm\xb3=)\xfc\xe2\xba\xe9\xb8\xcf\xd4\xdf\x1e\xd7\xdb\xcd\xcd\xcb\x87\xfbm3\x18\xbe\xf8\xed\xf0\xeb\xe6\xb9\xb9}\xb7y\xbc\xf92\xb8[o\x0f\xcd\x8b\x9f\xbf\xac\xf7\xeb\x9b\xc7f\xffG\xf38x\xf5\xfc\xd8<\xdc6\xb7t\xe74\x87\x9f~\xda=\x0f.F\xb3\xc5\xe0\xa2\x1a-\x06\xa3\xe1p8X,\x17\x83\x17u\x1a\xb7\xdfn\x1e\x9aw\xbb\xc3\xa6\x13\xc2E"*\xfc\xf1\xcb\xe6\xe6\xebCs8\f\xa6\xc3\x17W\xcd\xfe\xd0\x0e\x19\x0e\xab\xbf\xa5;\xbcx\xbb{\xdc\xdc4\xff\x03\xaa\xca\x82\xda\x1c\x06\xeb\xc1\xe3~}\xdb|[\xef\xbf\x0evw\x83\xdf7\x0f\xbb\xc7\xd3\xf7\xe6\xe2\x9fM\xba\xea\xe5\xeb\xc1\xfa\xe1\xf6\xff\xee\xf6\x83M\xba\xf8\xf0\xf4\xf9\xb0\xb9\xdd\xac\xf7\x9b\xe6\xf0\xb7\x17\xaf\xd2Cn7\x0f\xf7\x7f\xdc|i\x92\x88\xbb\x19\xfc\xf1\x98\x86\xaf\xf7\xb7L{\xf1\xf3\xfa\xfb?\xb3\xd4g\xb3\xea\xc5\'\xfa<I\x9c\xbf<\xdc\xb4\x12\xdd\x0ff\x8b\xf1\x8b_\x1a\xfe\x96\x849\x7f\xf1\xc7\xe3\xed?\xaf\x07\xd5\xa2\xfdpu=XL\xd2\x87d\xd8\xadF\xd8\xb0\xc7\xa3\xe9\x8b\x9f\x07\xe3j\xf0\x8f\xc1\xf5\xa7A5\x1d\xa6\x0fo\x07\x87\xef\xeb$\xbd\x7f\f~\x1a\f\xe9\xbf\x7f\xb4\xa3\xc6y\xd4\xb8\xfb\xf0v\xd0<\xdfl\xd7\xdf\xbaa\xa3\xf1pp\xb1\x1cT\xe3\xc5`6\x9f\xe5\xd1\x93<z2\\t\xa3\xff\xfd\xb4Kb\xfc\xbc\xed\xc6\xcf\xe7\xc9\x18G\xe9N#\x1d?\xcd\xe3\xa7\xc3<\x87\x87\xa7o\x9f[\xad\xde?tWL\xd3$&\xcbY\xcb\x7f\x1e>\xf3\xc3ow\xdb\xedz\xdf\r\x9dL\x06\x17\x8b\xf4\x80\xe9|0\xaf\xe6y\xf4<\x8f^\xd0\xd4\xbf7\xfb\x9b\xd63\xda\xe1\xb3Q\xb2\xacq\x9aR\xa5sY\xe4\xe1\xf3y\x9e\xfb\xfa[\xba\xe0\x90t\x92\xef_\xe5\x0b\x92\xb0\xe4\x82\xa5\x17M\xc7l\xb6\xbc\x8e\xddebw<h\r\x9c\xaf\x98\f\xfd\x15\xdf\xd7\xfb\xe6a\xdb\xdc\xe5\x0b&\xc9\x1dFIH\xe3\xe1D\xaf\x18\x05W\xe83\xaae\xbe\xa4ZL\xf5\x92\xca\x0bi}hgu\xf8\x9a\xf9N\xfa\x9aM\xd3\xc4\x94\xef\tix:\x9b\xe4Gl\x9f\x0e\xdd\xd8qk\x03\xd3\xa4\xd2\xe9\x90FN\xbc\xc5\xdc\xa4P\xb3\xce\x8a\x9a\xa5y\xa4\xb9\x8e\x96\xd3\xe4\xcdYY\x93\xa9\x9f\xfa\x97\xd3\xf7/M\xd6k\x92\xdch9\xe9f]M\xb3\xb2&3\x7f\xef$\xfb\xcd.\x8b~\x9e\xccl\x94\xee\xbd\x18\xb5\x91"\x8f&\xd5V\xa4\xab\xc3v}\xf8\xd2\r\xbeh%\xd2\xdez\xae\f.\xbc@\xfel\xf6\xbb,\xbdI7v\x92\xc6\xc9\xd8\xa5\x1f\xbb{\xc8.1J\x13\x18\xa6y\xabf\xa6C?\xf2\xf1\xb8S\xa9M\xe6\xaa\x8f\xe9\b\x06~\xd97\xf9\xa6I\xf2\xdd\xf3\x8dCLAyw\xbb\xa7l\xdf\xa3\xaa\xbb\xad\xaam:\x86\x91\x9b\x1f\xf9\xae\xe3\x8a\xee\x9a\xecn\xb1\xc8c\'~\xeca\xf3\x9c\x87\x92\0f\xed\xd0I\x1e\n\x1eyh~\x90\xd2\xaa\xa4\x86E\xb2\x81\xa5\xb8\xe3\x14\xdc\xb1\x11\xbb\xcc\xf6\x90\x06\x1b1\xcc\xc1\xd57$\xda6\x8aTU2\x97\xa5\x8e]x\xf5\xde\xec\xb6\xbb<\x89\xc5(\xdb\xc22_\xd0\r^\x82-4\xdf6\xe6\x82a\xb6\xccj\xb4\x94+fCo\xf1\xdb6\xa1t,.Z\x16\xa7)\xccLGY\x1c\xb3\x91\x1f\xda\xfc\xfbi\xbd\xe5i\x8f\xaa\xec\x1f\xe3E\x9e\xf6\xac\xf2\x83\xef\xdbL\xde\xec\xfbnM\n\x9cL&\x14>\x9aC\x97\xf2:?\xed\x86OFjo3\xd2\xe1\xb2\x1ae\xb7~$\xc3\xcc\xa2^\fU|3\xd2\xe1\xbc\xaa\xba\xa1/\xf3\xc86\x9a\xce\x87\xad\xad\xd3\x04H}\xb3\xd9\xbc\x1b\xf6S\x1e6o\xbd~9\x16-\xcf\xe6~\xd8\xcf\xc2O;\xbb\xe4\xdc\xf2\xd8\x85\x7f\xec/\xf9~\xb3t\xbfY\x1b\x9f\xf8~\xa4\xaf\xd9(3\xf2J\xed{\x9a\xb21\x0f\x9b\xb3\x92:+{;\xf8\xd5\f\x9bhJ\x98\x8f\xfcC_[\x1f\x98\x1b\xa1\xcc+?\xf0\x9f\xf9~\xcbN(\x95\xde\x0f\xf2\xddoy\xd8\xa2\xf5\xfe\x9121\'m\x8c\x17\xcbn\xd8\x7f\xe5a\x9d\xb1\xa5\xc43\xd4\x81\xa0\x8b7\xecx\xe9\xb1\x95\ny>\xf3B\xf9\xdd\ne\xa1\xc38\xa5\xd1c\xff\xa5\xc3\x163s7\xd0\xc4[\x1e\xd6\xfa\xce|h\x84\xbc\xf4\x03/mXh\xa3\x07Ko\x01\xdax\xa7\xba\x9dNTz\x0b\xd0\xc6{\xbd_\x9a\xd3|\xa8\x81nQy\xab\xfa\xa0\xc67\x9bj\x88Y\x8c\xfds\xff\x18H2N\xe1ei\xee7\xf1\x02\xfc\x18\x1b\xf3\x02\xd4Q\xe7a\x132\x17U\xf0b\xe6\x07^1\xc3\xad\bg\xc6N\x17\xa4\x92%\xb9\xf1u\x0e\x80\xdd\xb8\xe5\xd8\x88\x06t\xf2\x89-\xa6\xb5\xbf\x89\x0e\x03\x8d\xac\xb2\xb7U\xdd0\xe5c9\xf4\xec\xfew7l\t>\xb4\x84\xea\xe1s*\xca\xbf6\x8fRq,Z\'N\x92\xad\x96*\xf1e\xe5\xc3\xe9\xe7t\xc9\xd9\xf4\xba\x1c\x87\x0f\xd1"\xa5S\x7f\xfb\x94\x89\x8aw\xc9\x85\xe2,\x1b\xf2\xfap\xb3\xd9\xdcl\xf67O\xb9\xb6L\xa9\xb9J\x8cL\x8c\xa7/!3=\xb55\xef!\x15\xeb\\\xb4^\x8c\xaaiG\xbdh\x9d\xae\xbdb6(\x0b4a~4\x9a\xe6\x02m\xaaAv9\xf719W7\xa9\x90L\xcb\x90\x04\xa6\xa43\xcb\x05\xc8\x12j\x8a\xcfy`\x1e\xd7\xa5\xd3q\x1e\xb7\xf47\xbc\xc9\xdcM\xf3\xc0\x91\xde\xb0\xabl\\m\x9bG\xd2\xa3[K\xa7[\x8e\x86#\x7f\xcf\xc6\xdd\xb3\x9a\x98{V^\0w\x03J\xe4)\x98\xa5\xbbuwL\xa1f\x93\x8a\x87\xee\xc3vp\xb7\xa5+\xa1\xba\xb8\x97\xa0\xdf\xd6\xb3\x93\xf9\xd0<\x04\x8a\x8b/b\x8a\x93\xd6Jd\xd6SoW\x1b\x8d \xd5tl\xc6\xcd\xfc\xb8\xff\x97\xed\xae-\x02\xbb\xb5b[\x82\xc9X\xa8)r\x8d\xdb\xf9|\xeb\xca2\f\xca\x89\xad\x86\xfe\xb6\xfc\xd4q\xec{4\xee\x9bNq\x9eLJ8\x1e\x81\xaa\x1et\xdcda\xc7A\xe5GU\xe72+\xca\xcap\x04e\xdfw\x0e"iE\x07#A1\xfffw\xc9C\x93G\xeb\xd0\x89\xd7\xfe~\xc0k\xaa\xf1\xd8\xcer\xeaSY.\x85\xa6\xa3n\x96\xe3\x89\xbd!\xa8\x86\xfc([}\x95r\xc9t\xbe\xa4\x91\xa0\x98\'\xb2\x89\xccx[\x89\xf1-\xc1\x8f~\xb0jra>7#!0\x1e3\xe3\xa3\x9c\xaa\x92U\xc8\xc8\n\xd4\xf3\xac\xa9\xc0=\xbb\x02\xf5\x9c$\x17d\x1b\x9f\x9a\xa1\x95w\xb9?\xd99[\'^\x98q\\\xd3-\x86\x12\x0bM\xc4icS\xbb\x8c\x19\xb7\xab\xc8\x05_\xc3\xab*\x0e%\xb4\xa2M\x891[|R\xdf|Q\xd1\xe0i\xf0\0\r\xb5\xdd\x92\xbc{\xc2\xc2>\x81\xeb\xf4\xc9H\x83\xed\xe3f{K\xcb\x90T\xc9&\x17\x98\xa6h1\xae\xc8\x15f\x909\xf2\xb2\xffvw\xcc\xb6\xbe\xa4\xb9U\xc3\xd6\x90\xe6t\r\x18\xb1,\xb6\xa7\xad\x85\x8c\xdb\xb5\xc3BMd\x06\x86\xdc\xaeRS\x8b\'\x07\x9a\xb6TI\xe3\x97\xba\xd8\x1eq\xfd;\xa2\x82\xe1\xaem0q\xb9\x9c{Im\xe9e\xd6R\xa3\x19d\x8c\x13\xadd.\xd2\x84R\x88\x18ir\x1e\xcd`)s\xb7\xdd\xed7\x0f\x14N\x92D\x970\x19\xb0\xefC\xa3s\xe9\x96\xab\xad\xdbT3s\x01\xd8\xf9\xcd\xd3>-\xe4o\xb2\xc9\xb5\xcb\x9f\xb4\xe4\x99\xa6\xff\xcd\x86<!2\xf7\x11)\xba\xcb]\x87M\xd7r\xa3fA\xbbn\x1c\x99\xfa{\xc4%\xb3\xae(r\xf7E;\f\xe3.\xe3\xd9e\xc5h\x0e^p\xff\xb4I\x17|\xdbi\x95\x90\xd2^{Q\xca\xe0\x93\x11_\x04\x89\xa5\xbd\xa8\x9b\x9c\\\x94\xd4\xdb\xe6\xd66\x1c\xcaE\xe3\x9e\x8b\xd4~\x13W\xedUm\xc0\x93\xab8\xbdP\x05x\x97\x13\xc7\xb8]\x8fO+\x93\x16\xb9\xd2\x96\x81\xb4N\xab\x8a\x81\xa0\xbc\xd4<\xe3\xf2&\x85\xb1\x94][B\xc5.=\x07\xcd\xdd\xae\xef\xefiM7\xed\xc2\xd4\xb2+\fT\x9e\xcbh<\xf7\xc0\xa6]\xc55\xf6\x97pq\xed{\x1f\xad\xfb4\xfbFz \xa9W\xd9\xf5@\xc6#\x9a\x19\x97\xd0\x93\xa9\xf4\x86\xd6\xf7\xfb\xf5\xf7/bT\xe9Q9.\x8a\x9ds==\xa6G}N\xcd\xdf\xe6Q\xc2@\xaa\x98\xc6]\x05\xc33\x83\x14\xa2V\xf8y}\xc8\x868_\xf2\x02{!\xad\x9f\x11\x97\xd9h\x89r\xd5d\x9a\xafj\xd5\xacW\xcd\xe2\xabL)9\xcc\x06l\x16\x12\xa3\xc5\xbc\xc7\x80\x8dYM\xb2\x05/\xd4\xac\xb8\x1c\xefz\xcf\x9d\x15l\xb7\x9b\xef\x87M\xce~m\xean\x0b\xf8\xc5b!=\xa7\x11\x97\xe6rI\xd2\xd3\xe3\x97\xdd\x93\xf4\b\xdbH\xb1L%\xdf\xa4[fw\xd7,G\x83p\x91/\x91tLu\xcd8\xb1#b\xc7\x92:i\x95\x9a;\xe9\xfe\xd3T\xf5T\x9d\xf9,h4(i}\xf3\xf4\x98G/\xc7\xdd\xe8\xf1hnFC[.\x17\xddw\xdb\x86\xd2\xe4(_\xd2\xc6"\xea\x13\x8c\xb0\x8e\xd6\xd4\x91\x06\x8f\xab\x1ct\xc7|\xff\xb9\x1f\xfcm}\xb3\xa7\xc8\xd8\xde{B\xf7n\x8b\xd8n\xf8b\0\xab\x87\x86XM\xe1\xb3\x9bI\xb7\\\xe5\x99@\xcb\xf5v\xf7\xb8\xbe\x91<\xd3V\x13\xd3Ek\x8a)\xf2.\xf2\x03\xaa!\xf4\\o7\xc9\xa9D\xcf\xf9\x82ne/\x17@l\xdbsRJA\xbf\xcd\x19U\xd2\xd2|\xc4\x83AS7\xcdm\xb2>j\x8aV\xadjS\x8bs6\xa2fz5\xc4\x9e\xe8\xd3\xc3\xfdz\xff\xf4m\xbb~\xca,\\\x90\xc6\xe6\xaa\xb1j\b\xe2\xdf\xdd\xa7\xae$\xb5s[\x1fOi\xae\x9a\x8c\xe5\x11 \xff\x9b\xb5\x15?\xa8\xb6\x1a\x16n\xf0\r\x82aG\xe1hXq\xfd\xc1\r\x88\x97\xafh\xa8o@T\x954hs0\xde\xedo\xefR_N\x9a~\x93\xae\x97\xda\x06z\xf6\xe3\x8a\xf7#\xa4\x05\xa2\xab\xce\xa2\x0fR\xf1\xb6\x844.tp\xbb\xdc\xec\xaa\x9f\xd4p\x18\x13\x9b\xbc/\xc1\xd3\xbe|%\xce7K`\xbb.%a\xf3\x8eD\x17e\xf3\xc4\xbf\xa5z\xe9i\xcb3\x9fu3\xb7=\xfa\x8a\x9b\xf4\xdc\xcbXScs\xd1\xd5\xbb\xb3\xb1\xae\xf2\xaa\t\xac\x82n\xdb<{8\xc0bH\x87\xe3\xca\xc5\xc8$/_\x96\x92\xd7\xaa\xa2w\xad\x83\xbb5G\xbb\xdaL\x02\x9fN\xc9v\xb9\x83\xcd2\xdci?\xb6\x9d\xf6RW\x1d\x15\xf6\xb0SFK{y)4\x1fX?\xa91`\xd7\xbd\x17P?\xfe\x86n\x97\xdbi\x8b\xf1\xd4\r\x97%\xad\xc60\xb3\xaee\x8f\xc0\xd1k\r\x1af\xa9\xceA\xe3\x02\xe6\xfeT8]^\x97L\xbb\xa4\x12?\xa1Q/r\xf3\xf1O\x90\x9e\x8dcVz7\xc8,\xb7\x89o7?6\xb7N\xf6\xdd\xa6\x0be\xaa\xe2\xe6F4r\xe7\xe50\x1c\xfb\x12\x83;\xb7\x80\x17\x8bY,I\xbd\xb9\x95$HE\x9agx{m\xa3\xe1\x03\xa4\x04\xd7\x07\xd8\x85\x16>A\xd6\xa2\xdd\x16\x93\t\xf1\xed\xb2\xb4K\x97f]Z*\xcbO\xeb?\xd0X-A\xde\xf2\xb0\xeca\xdb\xdb\xb2\xb9\xa0\xc7\x9a\xd7&bwbmw\xe0f\xcb\x82\x01y\x80\x17\x92Lg\x18\xdb\xb3\xb9{k\xc9i\x07g\xb2\xd0\x853\x0f\x97v\xbb\x9f=\xb7\xddq\xee\xd2\xc4O\xd9\x9b\xb7\x1a\xb0\x93\xcfc\xdd~\xa0U\xd6\x92V\xb0\xa9\x8c\xbc\x80\xe9\xccg|\r\xef\xd6K\xc8\x9ct\x0f\xe7\xe8Z\xcc\xdf\x16\x142\xfb\xd18\x94\xfcM\xe9\xb7\xa3\xaa\xb0\x02\xd1\x93X\x811~N\xf5(\x98\xb7\xc8m\xd7^_.\\\x7f]$\xc4\xf1\xdbh\xb6\x8b\xdf\xcba\xa1W\x99\x8dV}g|Q\xfa\xdd\xc5th\x89n\xbb\xdf\x17\x90\xa8~6\xb1D\xf7sz\'\xa4u\x9f\x9d\xd0x\xd1cg\xbe6\xeb34uuQ\xd58\x07\xe4\xaeK\x02\xaa\xd2\xd1\xb6\xd0\x1a\xe5B+\n\n\xd2n4\x92\x9f\x91\xe4\x8bh?\xcfS\xdf\xee\xfel\x1e\xeeip[X\xb5\x1b\x87\xf3j\x12\xca\xf0\x83)\xb0x\xf7\x02\xa3\x9flN\xa1\x92\xc6UV\x92\xdd\xa8*\xfc\x1b\xc2\x99v\xd1z\xed\x18\xaep\xe6\x13\x07\xc0\x97\xd6\xab$K\x8c\xe2d\xbeW\x96\xb9\x9b\xd87\x95\x1b\xab\xa7j\x9a\xf5d\xfb\xdeh6\xff\xed\xcdf\xd9c5\xbc\xc8\xff\xf8e\xb77\xedW\xbb\x17\x85,^\x1a\x16\xcd\x0e\x172)z5\x06#z\xc5\x10\xcc\xbbR:\xd6lM\x15\xa3\x17T\xf3\x99\xa0\x9453MV=[\xc6\x01\xb8\xb6\x9a1\xd9\0\xa6-\xd6"1L\xed\x04C\xd8\xd8\x9eD8<u\xed\x86=\xab\xbeJ\xe2\xab\xcc\xc6Z!F\x13\x96\x8c\x14\xfb*\x10\xb3t\x15\xb3\xea\x1b\xabe\x9c\x8eE\xa7\xa0\x9a\xe9\xdb\xd3\xf6q\xf3}{\xe2\xac\xd1v\xcfR\xce[\xcec\xa1\x98%\xb1\xf1\x9e\xbeH\xea\x1d\xba\r\xa0E\xbdD\xcb\x9a\xd4ry\xdc\xac\xb7\xb7\x9b\xbb;\t\xbam\xa3\xb3\x8d\x17\xa38]\x9f\x8a\xeaA\x8a\xa0j\x1cg\x1ac\x89\xba\x85\x8bR\x94@\x07\xce\x7fA\xe1\xae\xf4Q\x89\xd4X\xc6I\xa8\xee\xab\x12\x1d\x0b6\xbaTq\x1an|Al\xea\xb1\x9e\x0bn\xca\xfa\x7f4.4&\xfb/\x10\xdb\'\x8bi\xef\xd8\'\xe3N\xc6\x16\x86}I~mj\r\x11=\xc8E\x169f\x1ey\x85S\xaa\xc9\x9e\xb2J\xeb\xe1\xbe\xa3V\xa2U\xde\x14\xd8\xef\xbe6\x0fvk`\x94\x96\xfc\xdd\xd6\xc0p\x1e\x16V\xfb\xe6~s\xd0\x06\xe2\x99\xcaJ\xb2\x93YF\xe9\xf9\t\xf4@]\xd1\xf9\xfc\xde\xb7\xa4\x9bq\x8b\xfc)\xa5>i\x92\x8f\xa6\x14\xf8\xa6\xd2++\xcc\xd2\x84\x0e\xb1H\x90\xa6d$\x95\xbcf\xa4\xd8\0v\xc6\0\xccV\x1cZ\x80\xe4#\x1b:\xe2I\xc8P5\x96e\x8f\x07M\'\xb9|\xa1\x93Az\x9a\xa8\xea\xb2Ww $V\xce\xab\xc7/\x83\xb3E\xb8\xd4t.\xe3.r\xc6\xb5\xc7t\x8a\x9a\xb4\xa8\x1c\xa9l\xb7{\xa3"\xf0*\x07\xbeG\xe3\x18y\xffo\xdc\x961U\x15\xfb\xbfY\xa2t\xfe\xdc.\x80\xccFu\x91\xf3\xcc\xf8.\xe7\xcd\xa6\xeepF\x919\x8c\xe3\xfde\x96\xf1\xf1W\x86\xf7u"\xd4\n\xff\x83N\xc4\x9f&n\xf1\xe6 \x8e\x95@m\x99\x9ce&\xdb\xb3\x99(rI\xbcfm\xde\x9fx\xc5\xcc\xcdL\x8c\x95\xf7uPlmd\xe298\x85T\xdf\xc6\xddt\x9f\xb8\x97Q\'\xf1\x8bn\xdd\xd3\x1e-\xeaIw\x97X\xbd\x1af{\xea\xea\xda\x84\x8a\xfe\x05\xf3lDK\xdaf\xfb\x98\xdd\xa3\xf3\xa5\xa1\x9e\x93D!>Jui\xb6\xe2\x0b\x97\xd0\x03\xa0\xbe\x96\xea\xda\x9b\xd5r\xd6_J\xf9<j\xf8\xc4j\x97\x1e\xf1-\xef\xa3\x8fg\xb4\xb4k\xeb\xe8iO\x19\xa0"\xb9X\xf0\x19\x8b\xbe\x90Xt\xc4\xd8d\x96\xa3\xde2\xe9\x955_jC\xdb\xb3G\xf8\x90[m$p\xd5;,\x859\x9f\x9a\xd24E\xc7}\x8a\x92\x07\xcd\x18I\xb1\xe68uQ\x86\xdb\xd07\xa1\xee\xfb$\xa8e\xc7d\xf6[\x13\xc5Z\xb3\x1c\xa7\xdd\x89\xbe:\xfcM\xb1v\x9b\xd0z\xbf\n\x16\xd8\xdc\xc3v\xa5[\xeea\xa3Y.i\x87W\x7fJ@\x15A\x95\xd8ZNK\x89jU\xe52\xf0\x99\xb2Jr\xb6\xf1\x13\xc9\xd7=)\xf57\xbfq3\xec\xf6\r\x8a\xc5\x12\xf3\xe9\xea$\xea\xd5\xa3\xd5\x93j\x93\xd5|Yos\xbd<\xce\xc77\xe6\x93\xd2I8U\xb6\xed\xf1\xff O\x8a-c\xf3\xcf\x06\xbf\xb8!\xfc`\xf6\xb3\xa4|\x1c\xf7\xf4\xfe\nW9\x1bp\xc8U\n+\x98\xf76Y\x1a[\x9e\x18\x8dB$\x96F\xbc\xd9/3\x87\xb3\xb0\xf7mdON\xa5\xa1\xfe\xaf|J4k\x97\xb6\x8b\xbe\xd1\xe0$\x13jpL\xce\xad(\x0b\x99\x9e\xc9o\x13\x0e\')1\xd31\xfa\xe4"\xe3e\xeb\xbc\xe3\xde\x1e\xca\xced\xf1\xfel\xa8%\x94.\xd0M[\xac\xa7\xa5\xfd\xa4\xf7\xee_\\\xf2\x1e}\xf2\xf1\xcd\r\xdbr\xda|j{K\xa9\xc78[\xf44_\xd5\xad\xb8\xee\xeb[|\xec\x8b\xee+u\xca\xcdY\xafbyc,\xdf,o\xa6=%\x85\x8e\xb6B\x1c/z\xfabAC\xb2\x8d\x97\xf6xo\x19G\x82\xa6j\xeeb.\xfa\xab?\xc3\x85\x94s\xd3\x9e\xea\xcff-\xaaD\xe7\xdd\x0f\x98z\xfab\xba1\xa0\x85e\xac\xacK\xd3\x1e5\xf6;\x8d\xfd\xfcO\b\xdeR-V\xe3\x9eE\xfa\xba\xecz\xf7\xadC-\x93\x8b\xcc\xa4=\xbc\x8e\x8a\xfd\x8aR\xe7\xd6\xf1\xb0\xacF\xa5\x01c\xd7\xae\x15\xfd\x10\xa2\xea\x9bPy\xc8\x80\xf2I\x8fO=\x80\xe1\xe7\x15\xfd$\xact\x1e\x0b\x9b\x19\xd3\xfa\xc5\x9cH\xc4\xe9ow\xf7\xad\x1f>\xec\xe4\\I{J\xd4\xfe\x98\xa3\xb0~\xdf\xc30\x0eP\xf5t\xe2\xdc\x05&4\xe0xJti.\x9a\xe7Z\xbb\x1f\xb7\xa7+\xe6\xdd\x91\x890\xf4#\xdf6\x01\xcc\'\xcb\xf0\xa2\xe6\xf1\x8b\x9f\x7f{.*\xee\xf2\xfc\xe9\xda\x94\xbc\x96\xe9I\xa1\x85\x0e\xa8D\xb5\xe7a\xb1`N6\xea\n\xe6\x14\xc7\xbb\x8ay\xb2\xe8]\xabnLv\xec\xdaZ\xed\xfc{R\xe3\xab\'\xfa\x99\x97\xfe\x9c\xf1\xd5\xc3\xad\xf9\x1dd\xfea\xe4\x9bf\xff\xf0\xcb\xfaq\xad\xdf\xde\xad7\xa9\xe6\xac\x86\xf3\xf1\x8b7\xef>\r^\x0e\xd2\xbd\'C\xfe\x9cs\xb9\x01\xb2\x98,@U\xa8B\xaf\xed\xe7\x9c\xb1\r`e\xa7\xf0e\xda2\x9b\xf2gz\xa8\x02\xc6\xa1\f*\x16g\xb0\x9c\x9d\f\xe0\xb2\xad\xc1I\xb4\x06\xc9\xe7\x07\f\x90#\x9c\x02\xef\xcd\xe7\x8fm\xfe\x18\xf1\x17\x12\x8aE,\x97\x8a\xd7\xe6\x165\xb2Y\x87l\xd6\x01\x9b5\xb2Y\xf7\xb0Y\x17lr\xb3\xc1 ]\xd0\xd7\xefWi\xc2c\xfer\x9dV\xb0\xac\xa3U\xebDL\xa0\x8dy\x8b\xe8D\x154\xbf\x125b\xf81\xb8\x98O\xe8\xf31=\xa1\xa2\xcf\'\xfb\x99\x1e\xa0\x80\xde\x9f\xb1<\xc4\x18,\x01`\xb5\x84\x82\xe92\x8a\xf6\x9b\xf1\xd7\x05\0\x96Lhh\xce\x99fl\x9a\0\xd08\xa1\x91\xda\x89T\xea\x9e\b`\0\x84\xc6V@D4\x05\x82\xc1\xec\t\x05\xdb\xcf\xe8{\x04\xac\x17\x10\x82\xae\xc0p\xe8\x0f\x99X\xe3m\xebPNu\xbf\x9c\xea>9\xd5\xa1\x9c\xeasr\xaac9\x15~C\xb0w\x9e\fZ\x0f\xca\x88q\xa3\fX_"\x04\x1d\x8a\xe0\xc0\xab2%t\xadL2\xfe\x95\x81#\xfa\xcc\xa9\0\xc0\xdd\b-}.\xbb\x81\xf19\x02\xc0\xe7\b\x05\x9fc\x14}.\xe3\xaf\x0b\0|\x8e\xd0\xd0\xe72\xcd\xf8\x1c\x01`K\x84F\xb6D\xa4\xd2\x96\x88\0\xb6DhlKDD["\x18|\x8eP\xf0\xb9\x8c\xbeG\xc0\xfa\x1c!\xe8s\f\x87>\x97\x895\xde\xb6\x0e\xe5T\xf7\xcb\xa9\xee\x93S\x1d\xca\xa9>\'\xa7:\x96S\xe1s\x04{\x9f\xcb\xa0\xf5\xb9\x8c\x18\x9f\xcb\x80\xf59B\xd0\xe7\b\x0e|.SB\x9f\xcb$\xe3s\x198\xa2\xcf\x9c\n\0|\x8e\xd0\xd2\xe7\x8c\x16\x8c\xe3Y\x14\xbc\xcf\x92\xc0\x05\x1d\t\xfd\xd0\x10_\xc7(x\xa4%\x85ni\x06\x18\xdf\xb4(\x18\x9e%E\xd6g\xe9\xa5\tZ*\xd8\xa1%\xc5\xc6hG\xa0EZ\x1a\xb8\xaf%\x81\x0f\x1b\xd2\xfb\x10\xb5\xdelatiG\x0b\xfd\xda\x8c\xa8\xc3G\xd5\xfd\x82\xae\xffB\xd0\xf5YA\xd7\xfd\x82\xae\xffR\xd0\xf5\x19A\x17\xfeoi>\b\x18\x8a\x8d\x04\x066\xe1\xc0\xa06&X\x18\x03\x83\xa5\x05\xd1\xc1\x90\xc3\x10a\xe8&N\x18\xf4\x18:\xfb)F!lXR\x19;\x041\x91C1\x88\x1bJ\x80\xa8a\b\x183\x84\xf4:\xc2 ^(!\x8c\x16B6\xb1B10`%D\xe6\xab\xd4\xd2x\x95\x06\xa6\xab\x84\xd8p\x95\x8ef\xab\x14\x88\x0eJ\x80\xd8 \x84\xf7\x01f\xe3\x82\x82\x18\x15\f%\x8c\tB\xaf\x83G\xd4}\xe2\xac\xcf\x8a\xb3>#\xce\xbaO\x9c\xf5_\x88\xb3\xee\x15g\x11\x03\x94\xe2#\x80\xe0\xd6\xff\x054\xde/\x98\xf5}\x05\xd1\xf3\x95\x12\xf8\xbd@\xa1\xd7\x0b\xd5\xf8\xbc`\xc7\xc0EO\x11\x06\xde\xae\x84\xd2\xd7\xb3\xf8\x8d\xa3\x13\0^N(\xb88\xa3\xe8\xdf\x19\x7f]\0\xe0\xd9\x84\x86n\x9di\xc6\xa7\t\0\x0b$42?"\x95\xb6G\x040<Bc\xab#"\x9a\x1c\xc1\xe0\xbe\x84\x82\xeff\xf4=\x02\xd6k\tA\x97e8\xf4\xd7L\xac\xf1\xb6u(\xa7\xba_Nu\x9f\x9c\xeaPN\xf599\xd5\xb1\x9c\n\xbf$\xd8;e\x06\xadGf\xc4\xb8c\x06\xac/\x12\x82\x8eHp\xe0\x85\x99\x12\xba`&\x19\xff\xcb\xc0\x11}\xe6T\0\xe0v\x84\x96>G\xe21N\xc7\bx\x1d\xc3\xe0v\x02\xa3\xdf\x11\xe1u\x89\x80\xe71\x1c\xba\x1e\x11\x8d\xef1\x02F\xc5pdUL+\xcd\x8a)`W\f\xc7\x86\xc5T\xb4,\xc6\xc1\x05\x19\x06\x1f$\xf8}\x81X/d\b\xddP\xf0\xd0\x0f\x89Z\x17\xb7\xaec\xa1\xd5g\x84V\xf7\n\xad\x8e\x85V\x9f\x15Z\xdd#\xb4\xc2\x1f\x19\xf7\x0eI\xa8\xf5H\x82\x8cK\x12b}\x92!tJ\xc6\x03\xaf$R\xe8\x96D3~I\xc8\xb1p\xacS\x89\x80k2\\\xfa&\xc9\xc4\xf8&#\xe0\x9b\f\x83o\n\x8c\xbeI\x84\xd7%\x02\xbe\xc9p\xe8\x9bD4\xbe\xc9\b\x98\x19\xc3\x91\x991\xad43\xa6\x80\x991\x1c\x9b\x19S\xd1\xcc\x18\x07\xdfd\x18|\x93\xe0\xf7\x05b}\x93!\xf4M\xc1C\xdf$j]\xdc\xba\x8e\x85V\x9f\x11Z\xdd+\xb4:\x16Z}Vhu\x8f\xd0\n\xdfd\xdc\xfb&\xa1\xd67\t2\xbeI\x88\xf5M\x86\xd07\x19\x0f|\x93H\xa1o\x12\xcd\xf8&!\xc97\xa7\xde\xb1N%\xc2J\0\xd8\b\x9a(\x1d\xef\xc63\xf3w\xf0\xcb\f\x82W\x12\x88>\xd9\xc1\xaf\xf1;\xf8c\x06Co\xecH\xc6\x17\xf3w0\xaa\fF&\x95)\xa5Ae\x1c\xcc)\x83\xb11e\x1a\x9aRF\xc1\xfb2\b\xbe\xd7\x81\xef\xe1\xbb\xf5\xbb\f\xa0\xd7\x11\x1a\xfa\\G\xab\xe1\x96u$\x9a\xbaW4u\x8fh\xeaH4\xf5\x19\xd1\xd4\xa1h\n\x1f\xcb\xa8\xf7\xb0\xee\x9b\xf5\xaf\x0e0\xde\xd5}\xb7\xbe\x95\x01\xf4\xac\x8c\x06~\xd5\x11B\xaf\xea(\xc6\xa7\xba\xef&\xdbu\xdfO\xf8\x1d2]\x06\xcb<\x97-\xc08\x13\x01\xe0M\x84\x82;1\x8a\xfe\x94\xf1\xd7\x05\0\x1eEh\xe8R\x99f|\x8a\0\xb0\x1cB#\xd3!Ri;D\0\xe3!4\xb6\x1e"\xa2\xf9\x10\f\xaeE(\xf8V\xfe\xfa\x1e\x01\xeb]\x84\xa0{1\x1c\xfaW&\xd6x\xdb:\x94S\xdd/\xa7\xbaONu(\xa7\xfa\x9c\x9c\xeaXN\x85\x9f\x11\xec\x1d-\x83\xd6\xd32b\\-\x03\xd6\xd7\bAg#8\xf0\xb6L\t\xdd-\x93\x8c\xbfe\xe0\x88>s*\0p9B\x0b\x9f\xfbi\xf0rpA\xcc\xfd\xc4\xdb\xa5\x06 /Q\xc0jMQ\xbd\xafb\xa4+\x05X\x13\x8a\xb0\x12\x14\xc9\xf2\xd7\xefd\xb8\x02\xd4\xad\xdc\xf8\xb3\x88\x98\x01;9E\xad\xc8\x19\xa3\xc9)\xe0mHq\x9e\xb4"<iE\xf2\xa4\xe9\xfb/\xadD\'\xf2\xd9\xc7\xae_D\xa2\n\xd8I+\xaa\x93V\x8c&\xad\0ON\x11\x9e\x9c"yr\xfa\x9d$*\xc0\x95\xf9\x9c\xecz\xcc\x9fW\xe2\x06\xbf\x881+Px(\x9dz5\xbc\x13\0\x02 \x14\xa4@h$\n"\x95\xf2 \x02\b\x85P\x94\f\xc1(\x1e\x82\xbd\x8c\b\x04Ae\xf4\n\x01#\xb2\f\xacP$(<B\x03\tv\xbf\xb5\xb0\x12\xcc\0J0\xa3(\xc1\x8c\x86\x12\xcc\xa4@\x82\x99\x80\x12\xcch!\xc1\f\x17\x12\xcc0H0\x83(\xc1\x0e\xbdB\xc0J\xb0\x03V(\x92B\x82\x19-$\xf8k+<\x8a\x94\xbf\x8a\xdc\x14 \x91)`\xa5\xa5\xa8\xdeW1\x92\x91\x02,\x1eEX2\x8ad\xa1\xe8w\x92\x87\0\xa9J\x19\xf1\xcc\xd7\x1c\xcc\x04\xa0\xd9*\xe0\xa2\x9b\xa0&\xba\t\xc6\xd1M\0\x89b\x82H\x14\x13\x84\xa2\x98|\xa7\xd9\n\x90\xffp\xc0\xc5bH\xdfw\x86\xb6\xc3\xd9\xef\xc2\xc9\xee\x82\xc9\xeep\xb2;\b\xc5\x82\x17L\xd0\xbb\x92\f\x80s\xa6?H\xc0\x93\xfe\xaf\xd6@f\xf2\x99&\xad\0\x89\\\x01\xcb\x85\xa2\xca\x85b\xc4\x85\x02<[EX\xe4\x8ad\x91\xebw\x9a>\x01o\xda\x92s,\x9f97\x0b\xe0R\xb1\xa0&\x15\x0b\xc6\xa9X\0/b\xc5%E\x0bB"V\x8032\x03\xe9s5\xe5\xcf4G\x05\xa8~4\x80\x99\xb4\xa2:i\x83\xc9Y{\x03\x12\'\n\xf0\x8c\x15a1\x0b\xb2\x93\xfa\xe1\x8d\x18\xaa\x02AA\xf3\xc6\x1a\xaab\xbe\xa0y\x83\x86\xaa8\x14:o\xc4P\x15\xf0u\xcd\x9b\xc1\x93\x18\xed\x1b~\xf1\x81\x01\x02gzc\x8e\xaa\x1b\xcc;\xd3\x1bxo\x96\xc1\xc1\x99\xde\xc8\x1b\x89\f\xe2"\xc2\x9b\xb6\xc8\x14\x99\x9eP\xd3\xa7R\x85v\x91`,\xd9\xc1`\xd4\x8e\x16\xd9\xb7\x1bP\x9a\xba#\x83\xd5;Z\xec\0n\b\xfa\x82#\x82[8\x1ax\x88\xa55\xb1t\xd0o\x1c\r\\\xc8\xd3\x02or\x03\xcek%\xf21G\x07ws4\xf4<GD\'\xb4D\xe3\x8f\x0e\x06\xd7t\xb4\xc8K\xdd\x80\xd2a\x1d\x19|\xd7\xd1b7vC\xd0\xa3\x1d\x11\x9c\xdb\xd1\xc0\xcf-\xcd\xb8\xbc\x83\xc1\xfb\x1d-\n\x04n@\x19\x13\x1c\x19\xc2\x83\xa3\xc5\x91\xc2\r\xc1\xa0\xe1\x88\x18?\x1c\xd1\x87\x12K:\xc5Fr:\xe3\x12e\xac\xf9\xbd\xed]\xd0\x92\xf6w\xe9Z\x18\xc0\xf6+\x04n\x17\xf6\xc3!}\xb9\x96\xc2\xec\xf7\xbc\x9cg\x82\xae\xe4\x05\xb1+J\x06\xed\xfa]\x9ep\x92\xda\xf4w\xed)\x0bP\x14\xb0\xbf\xcbyt\xbe\x83?\x8e\x8eh\xc4\x95\x9e\xdd\xe6\xa9\xc9\xd9m\xe6\xcf\x9c\xddvC\nN\x83\xb3\xdb\x8e\x12\xf1,\x07\xb3=O\xc8}q0\x9b\t\x99\xd5\xe8\xce\x99r\xc2\xa1xgB\x83;\x1bq\x19\x11;\x18\x04\xedi\x91\xb8-h\x85nq#z\x0b\xafz\x86\x17jp\xc4@\x19\x96\x1e\n\xce\xbb[$\x8fB\x88\xb1\xbb19\x87<#D\x02@|\x8cF\x82\xcb4+\xb2\x8c\x18ae`U\f)\x04Dp \x9aL\x89\x84\x92)\'\xe4\t\x05Ah!\x82\xb7\xa6q\xf6\x16\x1bgo\xb1q\xf66l\x9c\xbd\r\x1ago\xb1q\xf6\xb6h\x9c\xbd-\x1ago\xa1q\xf6\x16\x1bg\xf46\xaa\x97\x05\0\xf3&\x14&Oh\xc4\x01\x91J6\x88\0\xbc\x10\x8a\f\x11\x8c\\\x11\xecY#\x10\xf8\x93\xee\x13\0\xc0\x9f\xef>\x01\x1a\xf1Wt\x9f\x80\0\xfcA\xf7\t`\xe4\xcfu\x9f\0D\xfe\x8c\x0b\xbd\xec\x81\x91WKC\x8e--\xe4\xdb\x0e\b\xb8\xb7d\x94\x81\xa5\x15\x92\xb0\xc4B\x1e\x96\bR\xb1$\x90M\xfe\xfa\xb2\0@\x1e\x84\x82$\b\x8dd@\xa4\x92{"\0\xdf\x84"\xc7\x04#\xaf\x04{.\t\xf4\xfc]\x1a\xd6.\x91\xabKd\xe82\xe4\xe52`\xe3\x129\xb8,&\x7fY\xcc\xfb\x12\xa6|Y\xce\xf6\xa34\xf8.%!\x18 \xd8`\xbbl\xd3\xc0\x94?_\x9b{}2cVf\x8ct\x04\x050\x01\x9a0\fy\x97a\xc8\xbb\fC\xdee\x7f\xc8\xbb\xec\x0by\x97a\xc8\xbb\x8cC\xdee\x1c\xf2.\xa3\x90w\x19\x86\xbcK\xa9\x15\'\x8ea\x14yT+z\xda\x15\xca\xec\x1a\x1f\xf2\t/Y\xe1%\xa8\x90\xa2rd\x82\x91\xa8Q\x8dEA?\x96\x04J\xb2\xa4HS\x96^\xaa\xcbRAg\x96\x84\x8a\xb34\xd4\x9e\xa5y\x15Z\n\xe8\xd1\xff\x8cfR\xca\t5\xda\xfb#\x9a`\xc0U(\xf9\xeb\xf0\xe9\x9f\xc2;\xac\xc2;\xa0\xbe\xe3\x1f\x960U\x10\xa3r\xc5@\xe1J\0u+!R\xb6RKU+\r\x14\xad\x04T\xb3RP\xc9J\xf1*V\x1c\x14l\x7f\r1A\x89\xa0r{~\x0bQ\x90\xaf\x02\xe9^\x07\xcf\xfc\x14\\\xbb\n\xaeE\x85F\xbf\x17`Z\x16\xa2\xd1%\x01\xa0HBA\x8b\x84F*$R\xa9?"\x80\xf2\bE\xcd\x11\x8cj#\xd8\xeb\x8c@P\x98\x9c\x82\x9f8\x86QU\xd1\x19xO\xbbB\x99]\xe3C>\xe1%+\xbc\x04\x15S\x9c\x1fg\x82\xeb\xdf\x18\xe5x\x1ct\xe4\x89\xa0*O\x8c4\xe6G\x94\x8a\xf3t\xd0\x9f\'\xa2\x1a=\x15\xb5\xe9\xa9^\xa9\x9e\x06\xbauD\xa3b\x8f\x83\xa6\x81\x18)\xdc\r\xb9\xea\xd1\xcau\xcf<>\xf5\xdcg\xd5s\x1f\xb4\tO,M\x83dk\x8c\x82\x110\x07\x86\xc1\x10\x18\x8eL\x80i\xa5\xf2\x99\x02jg\x18\x15\xce8\xaa\x9aq\xafdFA\xbdzv~\xe2yG\x95\x86\'\xe7\x81xUH\xf0\xbax\xd2\xa7\xe2\xaaUq\x15\xaa\xab<m\xce\x94\xdcm0z"\0\xd4D(h\x89\xd0HID*uD\x04P\x11\xa1\xa8!\x82QA\x04{\xfd\x10\b\xea\x91\xbe\xd1\xc41\x8c\xca\x89\xfaF\x9ev\x852\xbb\xc6\x87|\xc2KVx\t\xaa\xa5\xe8"1\x01\x17\x98\x97\xe1\x02\xf32\\`^\xf6/0/\xfb\x16\x98\x97\xe1\x02\xf32^`^\xc6\x0b\xcc\xcbh\x81y\x19/0\xe5\xf4\xdf\xc41\x8cZ\x89\xce\xfey\xda\x15\xca\xec\x1a\x1f\xf2\t/Y\xe1%\xa8\x95\xe2\xdc\x1c\x11\xde\xb5\n\xa1f\xde;\xd1\x85\x02\xa4\x06\x05\xac\x06\x14-N\xc4\xbd\x13\xb9+\xc0"W\x84\xa5\xadH\x16\xb4~\'\x19\x0b\xa0\x87=\xde\xe1a\x8fwx\xd8\xe3]x\xd8\xe3]p\xd8\xe3\x1d\x1e\xf6xW\x1c\xf6xW\x1c\xf6x\x07\x87=\xde\xe1a\x8fw|\xd8\x83\x0f"\xbe\x93\x93\x14\x8c\xbc7G\xf1\xde\xe3Q\xbc\xf7\xe1Q\xbc\xf7\xc1Q\xbc\xf7x\x14\xef}\xcfQ\xbc\xf7\xc5Q\xbc\xf7\xc5Q\xbc\xf7p\x14\xefC\xbb\xed<\x91\xcf\xfe\x1c\xd5\x07\xbf\xc1\xachqN\xea\x83l%+\xe0\xe7\xa88\x9c\x9a\xfa ;\xc5\n\xf8SQ\x1fZ\xbf\x9b\xc9gr9\x03Xo\x13\xb86\xd7\xd7\xc8W\x1d\xf2U\x07|\xd5\xc8W\xdd\xc3W]\xf0U\xc3A\xb0\x0f,{\xf9~%\xc7n>\xb4q\x80\xfa\xe6\x1fZ\x8f\x9f\xc9g>\x82#\x809[CX\x1eb4I\0\xb0Mh\xc4;\x91J\x01\x10\x01\xa4@h,\n"\xa2<\b\x06e\x13\n\x1a\x97\xc6\xcd\xcc\x03\xa0\xfb\xa8q\xe3i5\xde\xb3\x0eeR\xf7\xcb\xa4\xee\x93I\x1d\xca\xa4>\'\x93:\x96Ia(\x04{k\x91N\xd4\xc2\x01\xc6n\xa4\xf1\xe4\xed\x02-\xa8h<1!K\xd7\x98\x11\x01 2B#\x91\x11\xa9\x14\x19\x11@d\x84\xc6"#"\x8a\x8c`0#B\xc1\x8c2j\xcc\x88\x000#F#3\xca\xb4\x1a\xefY\x872\xa9\xfbeR\xf7\xc9\xa4\x0eeR\x9f\x93I\x1d\xcb\xa40#\x82\xbd\x19\xc9!\xdd\x85\x03\x8c\x19\xc9!]o\x17hF\xc5!]!\xf8CM\xf2\xe0\xe0PSH\x0b\x85\x18\x1fj\n\xc9(\xd0\xfeCM\xe1\x90B\xb8\xc1\xa1\xa6\x90\x86\xc6\xe7\xf7\xd2g\x11\x8c\x86\xd8\xbb\x97\x1e\x8d\xa8\xe3g\xd5gd[\xff\x95l\xeb\xf3\xb2\xad\xcf\xc8\xb6\xfek\xd9\xd6\xe7d[\x9a\xaf%\x82\x11\xfb#\x05\x8b\0\xb6\x06\xedO\x14DvZ\x18w|\x9e\x80\xc8\x1f\xbb\xc2z\xcc\x9f\xb9\xb0\x16\x80\x0bk\x01\\a-\xa8)\xac\x05\xe3\xc2Z\0)\xac\x05\x91\xc2Z\x10*\xac\xe5;\x17\xd6\f$/\x1c-\xf83\xd7\xa1\x02\xb8:TPS\x87\n\xc6u\xa8\0P\x87\n.u\xa8 |\x0eY\0.\xa7\x19\xd0s\xd3\x1f\xa5\xf8W\x80$\xaa\x80\x9d\xb4\xa2\x85\xf5~\x94\xe2_\x010\xc2\x8fZ\xfc\xeb\x8d\xb2D\xf5\xbb\xf7\xed\x8f\xa9\xf8\xdf\xb6\xb7\x98\xea\xf7n1@\xc72>\xb6\xa7\x18\xe7L\xe3\xa3\x8b\n\x90\xdb\x1b\xc0\x9e\xb2\x17\xb48\xbc\xf9\xd1\x1dG\xd4\x81|\xf4^\x008\x98\xf9QO\x1b\xca\x98/\xa7\xef_\x1a]\xb0}\x1cld!\xfa\x91\xff\xaa\xa0\x01`\xed\xfc\xb1=\xa2(\xe2\xd9\xa1\xbev\xa1z\xcc\tD\xc5h\xee\nx\x9bR\x9cyR\x84lJ\x01\xd2\x92\0\xbc"\x13\xb5\xec\r\x03{\xe4\x91\xfe\xfc\x9f\x05l\b\x16\xf8\xd0|\xdb\xb0\xfe\x19{J\xb6!\x9f9\0\x0b\xe0\xa2\xae\xa0\xc6X\x05cc\x15\0\x82\xaa\xe0b\xc4\x82H\xf8\x14\x84b&\x7f?\x1a\xc9\x9c\xecg\xd4\xde\xa9\xd4\x93\x1c\x1e\xe1\x98\xe2\x0f\x8f\0\n\xf1/8<\x02\xa42\x12\xfa\xc3#\x80bL\x84\xc3#\0\xfb\xe8\xe8\x0f\x8fx\xd4\xc4I_\xfa\x02\x1aE\xcc\xa2\xf4\x05\x02\xc4\xce\xb0\xf4\x05"FQ_\xfa\x02\n\xf14\xa3k\xd4 FVB!\xbc\x12\x1a91\x91\xca@K\x04\x88\xb6\x84b\xc8%\x18\xe3.\xc1>\xf8\x12\b\x118\xa3\x10\x86\x19t\xb18\x83&<\x12\0Q\x99P\b\xcd\x8c\x96\xe7\xec\x99T\x06i&\x94\x91\x9a(\x10\xae\t\xc5\x98M0\x06\xee\fc\xf4\xce\xa8\t\xe1\x04@\x8c#\x14\x83y\x86w(\xf3]h,\xbb~\xb3\xd8\xf5\x05\x0e\x8c\xf2\x84\xc6\xa1\x9e\x88\x18\xef\t\x86\xa0O(D\xfe\x8cb\xf8\xcf\xe8\x1e\xf9\xde\x87B\xc2l\xc0h\x94\x122-\xc8\x0b\x99`\x92\x03\x01\x90!\b\x8d\xd2\x04\x91\xca\\A\x04H\x18\x84\xc6Y\x83\x88\x98:\b\xc6\xfcA\xb0O"\x19<\xa2\xa4O\x05\x10\x9aN\x94X\xfc\xa9=\x89\xc7\xc1\xa9\xbd\x90\x86\xa9\xa6\xef\xd4^8 H;\xc1\xa9\xbd\x90V\xa4\xa0\xe8\xd4^H\x84t\x14\x9c\xda\x8bh65\x05\x0b\xe9\x90\x16\xa6\xa9x!\x1d\x921e\xf5/\xa4\xc3!E\xfa\n\x16\xd2!\rS\x99\xa1\xadc\xcb)\xd2\x9a\xa5ar\xb3\xb40\x96\xd9\x01A\xa2\xb3dLw\x96V$=K,R\x9f%B\x02\xb4$L\x83\x86\x86\xc9\xd0\x91|J\xb4\xbfC2\xa9\xc5\xc2\x98\x1e-\r\x93\xa4\xa3E\xa9\xd2\x0e\b\x12\xa6#\x07i\xd3\xd2\xfdO\xd6<M~q\x1c\x11\x8bDj\x88E:54\x9bT-\x8cY\xc3\xd2\x8a\x04k\x88\xbbX\xb3\xbb3&\xbc\xfb+3\xdd\x9d\x0f\xacE\xfa\xb5\xb4\x9e$l\x87\x14\xa9\xd8\x121![\x1a\xa6eC+\x92\xb3\xa1\xedc\xc9\xed\xcf\x88\xbcH\xd7\x8e\x16&m\x03F\xa9\xdb\x90m\x02\xb70\xa6qK\x0b\x93\xb9\x1d\x10\xa4tK\xc6\xc4ni=\xe9\xdd\x0e)\x92\xbc%\x16\xa9\xde\x12!\xe1\x1b\xd21\xd6\xe4\xa9\x07>c\xd0e!P\x9b\xb7:\xd4\xf8B\x87\x1a\xdf\xe5P\x0f\xa2\xd78\xd4\xc1\x1b\x1cj|yC]\xbc\xb7\xa1.^\xd9P\xc3\xdb\x1aj|QC-\'\xa7\x01\x80y\xfb\x93\xd3\x80F\x1c\x14\'\xa7\x81\0\xbc\xc0\xc9i\x80\x91+wr\x1a@\xe0\xcf\x9fA\x8eP\xe048\x83\x1c\x91"\x9e\xe33\xc8\x11\x15\xb8\x8f\xce G4\x94Cy\x069\xa2\x80D\xec\x01\xdd\x12\x03i\x14\x07tKB$\x89\xe8\x80nI\x03)\x94\x07tK\nJ\0\x0f\xe8\x968p/\xe7Y\x01\0\xbe\xfdyV@#\x8e\x8b\xf3\xac@\0^\xe1<+\xc0\xc8\xa5;\xcf\n \xf0\x87\'Cc\x1c\xb8\rO\x86\xc6\xc4\x88\xf7\xbe\x93\xa11\x1d$\x11\x9f\f\x8d\xa9(\x97\xe8dhL\x03)\xe9!ID@2pH\x12\xe1H\x1a\xe5!I\xa4\x80\x04\xf0\x90$\xe2\xc8\xb5?$\x89(pJ\x17\xbf,\x11\xe0\x94a\xe0\x94\xe1\x88S\xa6\x95\x9c2\x058e\x189e\x1c9e\xdcs\xca(p\xda\rz\x89\xdf\x81\xcb\f\x02\x8f\x19\x8c8\xcc\x94\x92\xbf\x8c\x03w\x19D\xde2\x8a\x9ce\xd4\xf3\x951\xcf\xd5U\xcb\x11\xbf\x91\xeeJ\xd81\b\x9f&S\xc4\xad\x96\x156kd\x05ye\xac\x88,v\x15\x92\xa3W\n\xd1\xd9+\x05x\xa9+\xc8k9av%/`T\xc0\x15\xb2\x02_\x1a\xbeag\xfd*\xdcN\xbf\n\xf6\xd0\xafp\xe3\xfc\xaag\xb7\xfc\xaa\xd8"\xbf\xc2}\xf1+\xdc\f\xbf\x1a\x98\x93rWz\xb8O\x11fU\x11\xb7\'&\xa8y\xf3\x94`\xdcO\x15@\xd6\x81\x82\x88.\xf4\xfe\xa4\x0b\x05\xf8\xddS\f\xd0\x82\x80\x16(Wr\xe0\xafZ\x12\xe0\xe6\xdb\x14<\xc92Y\x81\x88\xa5&`\xc9\xae\x82\xcd\r\x91\xd1\xa6`\xb4)\x19\xe5\xb5-\xff\xe0\xfb\xaa]\xd1\xce\xe43o|\x0b\xe0^\x98"\xa8y\x9f\x84`\xfc\xea\x13\x01\xe4}\'\x82\xc0\x0b\x9d\xae\xbaWb\x89\0\xe5\x9dX\x8a8/T\xd8\xac\x17\x04\xe3E\xad\0\xd0\x93\xd2\xabe\xfd*\b\xb7\x9ft\f/U\x19\x90\xd3\x9c2\xc4,\x12\xc5&\xd2\xcap\xcen\xc8\xcbA\x05\x9c\xbe\x055\xfa\x16\x8c5+\x80\xe7Eq\xd1\xb8 \xd2\xd7\x10\x84^\xaa\x96\xbf_w\xa1\x904r\xad\xa1P\x11v=E\xbc\x12\x046\xa1PA\x0e\x85\x8aH(TH\xacR!r?\x058\x14\nr)\xa7T\xaf\xb5\xcf)@pz\xf6\xdau4\x05\xf3\xa7g\xaf\x8b\xde\xa5\xe0pz\xf6Z\xbb\x94\x02\xf0$\x19\xd0~\xe456!\xaf\xb1\xf3x\x1d\xb6\x1b\xafmLS\xccwl\xae5\xa6)\x02-\xc4k\xe8\x1b^KD\x13\x80\xacw<\x97\xef]D\xa3\xae\xd7\xf5\xc0\x8em\x90\x1b\x0eg\x06\x88\xb8i\x8a\xccr\xed\xc2\x99\x0e\xf4\xe9\xe6Z\xa3\x99"\x05\x8b\x1c\xccfl\xdc\x1b3|\xe3s\xdf\xb5\x86\x1fAv\xe6^;\xe4p\x172\xb4\x0b\xd4\xb3C\xf5\xc4]\xb4\xeb\xa2uv\x8d\xfd\xb2kl\x92]K\xe4\x11\xb5\x98\xc0#\xaa{\x92F\xef\xb5\x04\x1e\x05\xdc\x8b\x83\x05-~ p-\x81G\x01xS\xb0\xe0\xf2\x92`A\xe4\xfd\xc0\x82\xd0\xab\x81\xf9{j\f\xd1\xdf\x9a\xbe\x96n\x90\x02&\ffle#\xd5\xaa\x88T\xab"R\xad\xe2H\xb5\x8a"\xd5\xaa\x88T\xab2R\xad\xcaH\xb5\xc2H\xb5*"\xd5\xca\xbc\xbam\x85\xefk[\x85/i[\x05of[\xe1\xeb\xd8V=\xef`[\x15/^[\xe1\xdb\xd6V\xf8\x8a\xb5UW\x80\r\xe5\x8b\x84SAX\xb6\x8a\xf8\b+\xb09\r\'\x98\x7f\xb5\xe3J\xa3\x95"\xfaC\x04\x81\xf8\x97\b\x02\xf8\x97;\xae8^\x91#\xac\xb0\x02[\r\xdc\x84\x9b\x82)\x0eY\x16\t\x99j\x02\xa6\\\r\xa6#\x91\xd5\xa6`\xb5)Y\x95\x1a\x8c\xaa\xb2U\x1b\xb7\xa8\xd3\xbc\x92\xb8\xa5\0\xbcz{\xd5\x95M#\xbe\x9b\x94M\x8a8\xb6\x146>&\x98?}\xb0*\xca&\xbd\x1a\xb6SVZ6\xe9\x18.\x9a\x19\xc0\xb2ie\xa3\x97(\xf2\xc9\x8a\xe2\t*\xe7\x15\xbc\xc4M\xe1\xa2R^i\xe5$\0\xb2#\x04(\x96W\xe6}l:\xc8\xaf\nV\xd2\xe7\x15g\xf7\x8d^\x841B\x05\xad^\xa4\x05\xb1\xca7{\x11.\xa2\x16\xb4{\x11\x87\xf8\xe5\x1b\xbe\0\x9bH\xe6\x7fC\x02h\x14\xd3\x8a\xdf\x90\0\x01\xa2[\xf8\x1b\x12 b\x9c\xf3\xbf!\x01\x14"^Fm\xd8#\x04\xc3\x04\xc1\x18\0\t\x0e\x03\x06\xd1\xca\xa8A\x04\b\x12\x84b\xa4 \xb8\b\x17\x84Cx$\x14bdF\xc1\xbf\x18\xf4\xd12\xa3%\x8bM,\x90"x2\xdc/\x90\xa6O a,%R(\xab&\x96U\xd3#\xab"\xbef\xd8\x04Y\x02 \xd2\x12\x8a\xe16\xc36\xe6\x12\x82\x81\x97\xe00\xfa\x12\xad\f\xc1D\x808LhO0&*Fd\x821,\x13\f\xb19\xa3E\x80\xcep\x10\xa53\xe1\xa9\x90j\x11\xaf\t\x0e\x836\xd1\xca\xc8M\x04\b\xdf\x84\xf6\xc4p\xa2b \'\xb8\x88\xe6\x84CH\xb7\x1b9\x12\xfd\x8a\x9d\x9c\x80\x82\xb1=\xde\xcb\t\xc8A\x84/vs\x02J\x11\xe7\xcb\xfd\x9c\x80\x04\xd1\xbe\xd8\xd1))&\xe6+\x06a_\tQ\xe4Wj\x19\xfc\x95\x06\xf1_\tq\nP:f\x01\xa5@"P\x02\xe4\x02!\xd8t\xa0 \x06@\xa5`RPJ\x18\x06\x95\\FB\xa5A\xc4S\x02\x06=\xa5\x14qOI\x90&\x94 \xbd\n\xa4\x80\x9f\x1b\xdc\'\f!\x84wiz\xa5Vd\x0eC9+\xb5\xe6\x8c\xd4\xc2\x14\xa2\xd4>\x996\xbd2m\xfaeZ\xa4\x13\xa1\x98\x8c\xa2\x18$\x15%`^\x11\x8aM-\nbvQJ\x98`\x94\\\xe6\x18\xa5A\x9aQBO\xa6\xd1\x01\x98l\x94\x82\xf9F)\x90r\x84Pd\x1d\xa1\x04\x89GhO\x91\n\x8a\xf4\xa3\x940\x03)\xb9LBJ\x83<\xa4\x84\x9eT\xa4\x030\x1b)\xa5HHJ\xf29i\xdd\xfe\xfd"\x8a\xcb\xeb\xf6\x98\rm\xedP`2\xc4\f\x98\x119@\x99\x11\x190#\x8cP\xcc0\x83\x9a\xb12A3R03.K\xcb\f\xca\x80\x19AR1C\b1c\xf4\xef\x0f\xf2\x18\xfd\xfb\x83<\x86\xff\x9a\x1a\x8f\xe0\xbf\xa6\xc6t\xf9\xf3O<@\xfe\xfc\x13\x8d\xf8,\xb6GM\xc0\xcf\xadYU\xf2\x99\xacI\x81`\xff\xe3\xb3\xb5\x1d\xc5\xfc\xfe\xc7g\xb4\x15\xc5a_\xe4\xb3\x9a\x86"\xd9"\xe4\xfb\x0fa\xe0\xa6\xed\xa3\xe9g\xb6~\x01LuAX\x1er*\0\xb8\x94\xd0\xf2z9\xd3\r\0\\_\x9c\xe9\x16\x02\xfd\x81\xb9S\0\xe1=\x18/\xef\xd2%\xa3\xee\xb5\xc4\xb7\x9f\xb7\xf4fb\x8a+\x86\xe6\t\xcd@_\xd9\x91>\xfb\xfd\xd3\x04D\xfb\xa7\xd9z\xf8\xf3\xd1|~6cN\xf6\xb3g"\x92!%\xc7\xfb\x02\x80)\x11\x1a\xceK\x9d\xdf\x01G\x04\x9e\xf1\x92S\x01\xc0\x84\xfb4O\x89\xfb\xbe\0`\xd6\x84\x86\xb3\xce43k\xf9\xc9\x80\x07\x9e\xf1\x92S\x01\xc0\xac\xfb\xec\xcd\x16\x15\xf71\x8a\xf37\xa4\x98\t\x1f3K\xf4\x18\xa2\xcf\xe1\x1dN1\x8a\xdc\x19R\xc9\xa2 \xf7\x11\x06\xec)!d\xce\x05y\xc4\x8e\x01\xf6\x1c\\{\x8a0`I\t\x01CR\xcd\xdd\x87 \xb2\xa4\x94\x98\'\xa1[\xa6\x04<F\xe0st\xf9)\x04\x911\xa5\x94\x9c\xe5\xacp_\0\xc0\x11\xa1!7\x9a^\x1dpD\xe0\x19/9\x15\0\xcc\x9c\xd0r\xd6\x94\xa2\xeeK\x04\xe6\xcdp8q\x93\xf5=r,\x90\xe7\xe2\xaaS\x89\xc0\xec\x19.\xa7O\xf9\xf4\xbeD`\xfa\f\x87\xd37\x05\x89G\x8e\x05\xf2\\\\u*\x11\x98~\xf9\'\x92\x89r\x97\xd7\xa5\xfcY\x16V\f\xc8*\x94\x81`\xf3\xfb\xce\xbd\xfaJ0\xbf\xf9}g^}%\b\xbc"\xeaN\x97\x94\xfc\xdd\xefz\xdf\r\x92\xfdo\x9b\xc3a#{}w\xe9?\x96\xd0]\xbbH\xaa\x18\xdf\xf8\xfa\xea\xcefmZ\x16\xdd\xb7\xdc\xcbG^L\xf1w\xe2]\xbe\xbb\xadM\x06\xcd\xce&C\xbc\xb1\xc9\xdfe\xff\x92\x01Y\x9c1@\xbb\x97\xfc\x95\x98\xa6\xefy\x1ak\xfc\xeegK\xa0\x9f2\x81\xc1\xbc\x89RL\x9ep\xcf\x01\x81\xc0\x06\xa1\xc0\x0b\xa1\x8e!\xc2<W\xf0\xd3\xaa\b\xf5\x1cF?\xac\x8aH\x01\xb7=?\xab\x8a\xa8\x9e\xf3\xf0GU\x11\r\xa4\x10\xfc\xa4*\xa28\x89\xe4?w\xc1\x1f\x1d\xef\xfeO\\t\xd0\xc6\x84\x8a\r\x96k\x9b\xb0\x88\xd8\x04\xd9w\x83\xf1~S\xc4\xd1M\x11\x9a\xbe\x0e\xd4#\xbf\x9af\f\x03\xd2\x83\x11\xa0\x8c\x19_m\xc7\xc5`\xb6\xd3\xc2\xa0\x0f$_\xb5\xb1\xa2\b\x04\x92\xaf]\x9bC>\xe3\fw\xe1\x84v\xc1\x84v\xf8\xec]x\x82\xe7\xab\xf9\xfb\x87\x82\xf8\x13<_\xf5\xef\x1f2\xa0a\xbb\b\xd8Q\xa8\xfe\n\xbf\x9d\xe3\xfbD\xbf\x9d\x0bi\xa0\x97\xde\xdf\xce\x85\x03J\xe1\xf4\xfdv.\xa4\x83\x1c\xc3\xdf\xce\x85D\xd4,\xfc\x9e-\x84\xcf\ba\xf7W\x8c\xee\xce3\xba;\xc3H\x8fm\x84\xbfg\x0b\x89`1\xd1\xef\xd9"\xda)6\x114\xa9\x9e_A\x11y\xdb5.\xf2\xdd\xb7\xda\xeb!\0~\x8b\xc5p\x9e\xb0\x02]\xdc\x98\xf0g\x9dWQOE\x95\xd4\x83\x841\xbe\x03\xae)\x1f\xc25\xe5C\xdf\x9a\xf2A\x16\x84|C\\\xee=\x84\xcb\xbd\x87\xbe\xe5\xde\x83\x15\x83\xbdm\xa8\x8c\x873\xcax8\xaf\x8c\x07\xe9-\xf1#\xe4/\x89\xfb\x11x\xdb\xe2/\x89\x13ag\xba:;SS\xee\xba[\x0e\xf9\xb3w\x9c\x9d\xbb\x11a\xa2$\xbe\x1b\xb6\x06v\xaa5w\t\xde\xbc\xd4\x1a\x11|\xf2\xe2\xc7\x84+\xe0\x1d\xacu\xcb;\xe0S{\xd6\xbaD\xb5\x19\x92\x1f\x1c\xacOwn-\x8a\xd7\xe2#\xc3\xb5(\xd1$\xfd\xf2\xd3p\xb9\xb5\xd3\xd5\x95\xbb\x04\x1fR\xae\xae\x88\xe0b\x92y\x90\xc3\xcd\xf3\x1c~\xea\xb9\x0f>\xdd\x13\xcbIhQ\xc1\x8f/\x16g;\xb3\x14\xf3W\xe1\xc3\x82\xa5\x18Qr82O\x91\xf8T9\xe0\x84\x97\xe0#\x8a\xbf+\xc6\x04\xf1K~\x82\xf4|+\x07\x9c\xf0\x12|B\xe9\xa8\x99\xf0\xdd\\\xfa\x1d\xaf\xfa\x1e]\x90[\xccq\xb7\xd2\x12=\x85\xc7o\x9b\xbb\xeeWg\x8b\b\xa6\xa7\x874\x7f\xc0\xd8\xd3\x82\xc3\xac~\x80r\x11\x92\xfd\x11WO\x83S\xad\x9e\b\x87v=\xd1\x1dQ\xf6$\x7f\x0e\xb6\xa3E\x82\xe9\x95J\xafH\xce\xcb\xe3\x9c0z%\xd1/\x86~\x19\xf4\t\xe0<\xf7\xfa\x89\x7fu`\f\xe9VV\xe0\x16\xbc\xe9\xfe\xf8{@\xd9\x8a\xc1Z\xd0\x9b\xb7\xa5\xf8&II\xf7\xa5\x92\xa18[/f\xbd\x8f\xe6\xc6?\xee\x0f(T2G\x14;\xc1\x92~\x90\xadW\x0b\xfa\xedZK\xe1\x07\x05\x14\xda\xa7\bin\x12%\xfd\xfb\xfa\xa6\x89\xc4\xa0\xefM\xb1\xa0\x97yA\xff!|\xeey\xbf~\xc2\xdf\xef\xe5\x82\xbd\xf6\xbd\x04\x88n\xbc\x97\xad\xee\x8ao\xc2\xbbe\xc4\xc8\xde\x9d%\xe3G\xe9\xee\xc6\xc2\x01\xf0\xd0pw\xc3\xd1\xf0\xf1\xfe\x8c\x12\xcf\xc1\xbd\xd7\x8b\xe7\xa0{\x15\x0b\x07\xc0\x1c\xc2\xbd\nG\xc39\xf8\x97G\xc9\x1c\xca\xd7\xa9\xc8L\f\xc9\xce\xc7\xc28+K\x8b\xe7\x16\xbc\x9e\xa4\n\x1e\b\xf3\xcc\xd6\xf6\x12\xbf{\x9b\'\x90\xfb7\x0et\x9d\x1bG1\xdd\x0f\x87s\xb7\xc6\x81\xd2\xa7q(\x1c\x88 \x94z3\x0e\xe3\xae\x8c\x05?\x8at\xe8;\xaf\xa5=\x18H3\x93\xae\xc4w\xf2\xf7k9 \x94\xbf\xaf\x06\x17K\xf7\x9d\xa4\xe6A\x15\x03\xe1?\xda\xd6\x19U\x1e?\xa4a\xa6\0\x89Y\x01\xb7\xc3,\xa8\xd9a\x16\x8cw\x98\x05\x90\x9ddA\xe0\xcf\x88\xff\xe0V\x97~\'Q\n@\xd6;\xe3\xef\xbar\xf9\xa1\xad\x0b\x01X\xc6\n\x94\x7fv\xe1\x87\xebL(f\xda\x11\x02\xfa\xbf\xc5\xf0\xc34\x1e\x04\x81\xbf\xc5\xf0\xa3m1T,\xeb\x9do(\xff\xf0\xcd\x04E\x8b\r\xfb\x1f\xd26P \xdc\xb0\xff\xa1\r\x02E(\xd5)\xc0Re\x80\xfd\x90\xc4z4-\xfd#\xb6\xf4\x8f\xd8\xd2?\x86-\xfdc\xd0\xd2?bK\xffX\xb4\xf4\x8fEK\xff\b-\xfd#\xb6\xf4\x8f`\x14G\xd3\xd59b+\xe7\x18\xf6o\x8eA\xd3\xe6\x88\x9d\x9acO{\xe6X\xf4d\x8e\xd8\x889b\xf7\xe5\x88"\x7f6\x96\xfc\x8c\x96\xfc\x8c\x96\xfc\x1cZ\xf2s`\xc9\xcf\x91%?\xa3%?\x17\x96\xfc\\X\xf2\t\xc4|B\x16N.\xdbz\x10\x87\xe2\xb1\xbd\x027\x17\xbcz\xb8}\xd3\xec\x1f\xde\xad7\xfb\x03\x7f\xf9e\xfd\xb8n?\xff\xba{x\xfcW\xf3\xb8\xdf\xdc\x1c\xfe?\xd0=S\xec'),aq9=a('x\x01\xb5[\xc9r\xdcF\x12\xbd\xf3+p\x9c\x89\x98v\xa0\x80Z\0\xfbDQ\x94M[\x8bG\xd4b\xeb\x06v\x83M\x8c\xd0\r\x1a\x8b$\xea\xeb\'\xb3\x16T!\xd1Ez\x0e\x13\x0eS-1k\xcb\x97\xcb\xcb\xac\xea\xeb\xb1\xea\xc7\x17\xddq|U\x8f}\xb3\x1d\x12\xfe\x03;\xbb\xe8\x0e\x87\xfa8&\x17\xdd\xfdC\xdf\xec\xef\xc6\xe4\x1f\xdb\x7f&\xac,\xca\x7f\xc1\xcf2\xd5?\x99\xfe\x99\xeb\x9f*9\xdfu7ur\xfd0\x8c\xf5aH\xae\x8e\xdb\xae\xbf\xef\xfaj\xacw?$\xc9y\xdb&oq\x9e!y[\x0fu\xff\x05\xfe\xd5/\xd2\xd7\xd5\xd8t\xc7\xe49H\xff\x98\xbc\x82O\xbfN\xc7$\xcb\x13&\x7f\xcc\x8a\x1f\xb9\xd4+\xcc\xf2\xef\x8f\xcd_S}\xf5<\xe1y\xca\xcb\xf9\x9f?\xbc\x9a\x86j_\'L\x89\xacLT\x99q~\x86\xe7z]\x1dj8\xc8\xd47u\xbfy\xd6\xb5\xbb77-Np\xf6bj\xdb\xf0\x97\t\xfe2\x99\x7f[\x1d\x9a\xf6!\xfc\xfd\xd9\xc7Z\xab\x02\xc5\xce\xae\xc6\xaam\xb6\xe7\xc7}[\'\x1b\x96\x9d]\r/\x9ao\xf5\xee\xf7f\xdc\xde%c\x0f\x13\\\xdcU}\xb5\x1d\xeb\xfe\xba\x1e\x93\xcboc}\xdc\xd5\xbb\xb7\xdd\xa1:\xeam={\xd6}K6B%\x9bL\xa4I!\xcb\xa4HYr\xf6\x1e\xa4\xfa\xb69\xd6\xbfwC\xa3\xb5\xb2ai\xea\xff\xf9\xdd]\xb3\xfd|\xac\x87!\x11\xe9\xd9\x87\xba\x1fP$M\xf3\x1fR\x90z\xdd\x8d\xcd\xb6\xfe\xff\xa2v\t2\xbb\xe6\xb8\xbf\xde\xde\xd5\xa0\x1b=\xc1\xf5X\x1dwU\xbfs\xbf;\xbb\xa8\xee\x7f1\xca\x122;\xfb\xc3~\xe6yyv>lQ\x11}"\xb3\xf2\xecy\xed\xfe\xb6aB\x9d]\x8f\xbb_>&\x05\xc7\x0f\x1f>&,\x95\xf0\t\xac\x135\xe9\xac3g\xe2\xec"\xc9\xb3\xe4\xa7\xe4\xe3\x1f\x89LS\xf8\xf0:\x19\xee+8\xf7O\xc9\xb3$\xb5\xff\xfd\x84R\xf9R\xaa\xfe\xb6m\xab\x83\x16\xcb\x98\xc05\x13^\x8aD\xa8\xcc\x88\xf3\xa5\xf8_S\x07z\xb8i\xed\0\x96dJ%\xa2\x10x&3@,\x07\x1c\xa7\xc3\r"\xb2?\xea!E\x91l\xb8H$g\x89\x14\xcc\x8c\x90\xcb\x11\xbb\xaem\xab\xdeH+\xb4#\x99\xc8<M\xa4\x94F\\-\xc5\xef\xeb~\x8b\xa6\x8e\xf2\f\xac\x05O 3\xf8\x9fY\xf9b)_\x1d`\xc4\0\xd8\xe8\x11\xd2\f\x10xd\x9e\x9b\x01\xe5\x89#\x1b\xd3\xd1\x87\x06G\xd2\x87\x06qwh\x9e\x92=U}}l\xeb[;B\xa2^\xd3\fV\xc9\xe6m\x81\x02\xd6C\xfc*\x8c)3\x86s\xee\xc7\x10\x84\xab\x0176|6#\x14\xec\x8b\x95\xb0H\x01\x02F\xb5\x9c\x80}\xdfN\x83\x9d\x9e\xe39E)\x13\xae\n#K\x90\xdeB\b\xa9\xb4pY\xc2V\0j\b-\xb0\n7\xd2\x04\xe6\xbb\x87\xfb\xbb\xda@\xcc`\xd5,E\xe5(\xb0L\xa3S.W\xa05\x9dA K\xa5\xb1\xbaL\xc1\xecv\xdf\x04\xe3\xa1\xad\x86;\xb3\x974\xd9\x80\xf2%\x1aEf\xb5B\0\xfe^\xf7\x9d\xd9H.,\xb8\xb9W!\x01\xb7;\x1a\x17\x01\x91T\xc3\xe9\x04\x05\x81t\xfc\xda9\x83\x01\xc1\xd2\x83"\b\x90\xe3]_\x9b9\x95\xb5-\xf8s\x16&\b\xdeB\x145\x96\xae\xa7\x15\xa5\x97$\xd0\xdd6_\xec\xac\xca\x9a8\x9ba\x16\x04\xba\xa1\xf9\xb6P\x80\x14\xc1\xb9\bpC\xfde\xc6M\xc1\x1ed\x96\xf9y\tju`\x9ev\xe64P\x04\x01\xed\xd8X\xdd*\x07C\xb0\x8b\x82\x1a[\xdb\x1d\xad9\xd8 T\xa4`\x12\xc2H\x97t\xcf\x87\xc6\x8f\x98\xcd\x13t\xe8FH\x82^\x8b\xc9Ao<\x03\x1b\xc6\xe0\0\xf6iO)\t\x80\xf5_Se\xe2\x1bx\x07c\xe0M\xdaY\x8c\x97H\x02\xe0\x1e\xf3tm0\x84\xd4\x81\xc7,J?uNCI=\xe8\xfc\xa5\xb7R\xe4\xb0q\xae\xf5"\n\x13\x9d%A\xb22\xea\x96V\xdb\xdckP\x12\x1c\xcf\xb5\xe0\xa6D\b!\x13\xb8\xc8$\t\x84\xcf\xb4X\x9ej\xb1\xd4\x8b\x11\xec.\fp\x1c\x96\x85\xf3+\xe17H\x80{\x1e\xcc\x07\x9b\x9f\xe7#\x88]\x1al\x05\x8a)\xbf\xac"0\xbd0\xb3\xe9C\x14~6E\x10\xfa9\xb6;E\xd0\xf9\xc5\x9a\x14\xcc\xa7\xd2`Y\x02\xcb\x95s,X6\x88\xea\x8a\x80\xf1\xab\x16\x03\xd3\xc5e\x15\xf8\xdf,H\xb0\xf8\xcdfG\x9c\xaf\xf4X(\x82\xc5\xcb\xe0\xb4\x90\x04g1\x82\xc5+\x83l\x86\x87\xc8\x82\xd9\b\x12\xafM\x1c\xc1\x84\t\x07\f\x0eK\xa0x\xb3P\x1e\xf7\xca+\b\x18\xbfkA\x88\xaeK\xad\x14\x04\x8c\x7f\x9bu\xd1\x96!\xd5\xea\x83\xb8\t\t\x1ao\x8dZ8N\b\xe9m\x9e\x90\xa0qm\xd4\f\x1b\xc4P\x04X\x89\xc2\n\x12<\xde\x99\x95\xa56\xaa\xd2\xcfG\xd0x\x9fxj\0\xb81\xaf\xe9\x82\0\xf2\xc1L\x88\x1bTypb\x02\xc8G\xa3\xc1R\x8b\x15^\x8c\0\xf2\x87\r8\xda\n<\x1e\x05\xc1\xe3O\xbb==]\xea\x8fQ\x128>\x99H\xa0\xa7\xcb\xbd\xf6J\x02\xc7\r\xf0\xeb\xcf\xf5\xe8\xc9G\x96\x1b"!!\xcf\xba\xe0Q\x12dn`\x8c\xcf\xb1\x19\xe8\x1d\x93,/}\x92-\xf3\x93\xcb\x04\x84%\xb5\xeb\xf0"X\x87\x86\xb3a\xdb4\xdb\xa6\xdfN\x86qb\xbeG\xa6/D0\x86\xc07!\x17\x1e\x80\x83\xd7\xd6\x0f4\'\x14\x9atn\x94\t\xf7\xa5L\xd6\x94\xcd\xab\0\x02326^\x04j#\x98\x1a\xa63\xb3\xc1\x1c\b\x8e!:%A\xf5\xc6l<7\x019\x0f4Dp\xdd&6\xaf\x1bA\xc8M\x98\xc6@\x90\xa5\x04Y\xcbDS\x1b\xe3\xc5<%\xda\xec25-\xe6\x84L\xe9v\x89\x8a_\xd2\x05\xe7\x95\xe8\x1b\x86/\xfd\x04\x01\xa7\x01\x1e\xa1?\xb4\xc9mkG\x12d\xf7\xc6\xedq7\xc0\xda$\x04\n\xbf\b\x81\xf3\xce\xe61\xed\xd0\xe1\xb6\t\x84\x8d\x8f\xaf\x02\xe7\x14\x85\x95#\xb0\xfd\xc7\x04Di\x96\xc60\xe2E\t^\x86\xf3\xe6\xb9\rN~i\x02WK\x96\x9e\xe5\bZ\x07k\\\xda\xbd\x80$\xcegf\x04\xac\xe3\xf2\xcc^\x8e@e\xd8\xa2r\xf5H\x16H\x12\xa8\xee\xcd\xd2\x90\xb4\xe1\xd8\x19\x91\xa5\x04\xc2\x9b\n\x8a\x16\xe1\x06\b8\x86\x93\x18N\'B9J\0\xcd\x94\xa8t\xb0\x13\xd0\xdfl\xa7\x8c\xc0\xe3\xa8_a\x9cDzo\xc2je\xe9\xb4\xe6\xf4\xe9L\xfcx\xee&%\0}q\x92\x18%E G\0\xfaj\xb2\x02\x02\xaeX0_F\xf01\xcc\xd7\xe4\x04\x16\x88\x11x\x1e,\xde\xccj2\\:#\0}Of\x86\x8eT\xd0\xcb\x9d\x88\x89A\xd4q\x01\x11kK\x17\xdcX\xc6i\xe4\xed\xad43M\x0f\x01\xce\xa3Dj\xa5\xc5\x89\x15\xc2"\x91\xdb%\x82\xd8\xce2y"\xe8\x8eM\xbb\xab\x13\xcf\x80!\xbbA\x82\xc9\x85\x1d\xb3\xe2\xc0\xba+\xb0\xeb\xbeZs/\xadOr\f\xa3\xdc\x9e\x9fra_\x86\xa3ZA\n#\x14j\xccH\x13ma\xed\n\xcd\x9b\xbd\xcd\x1e\xb0@V\x80\xa5\xa2\x8e\x99\x1dAtu\x8b\xad#\xc7\x9e1GI\xcc\x980H\xba\x01D]\x0f\xb6\xb2)\x0bm5>\x073J\x8bo\xdb\xaeo\x8c\xb0n?1\x88\xd7*\xf5l\x9bQ\x82<\xd4~+\xc8\xa5\x14VN\xe9L}\x18\xe5\xc9\xdb\xa9\x87\xfa~\xfb\xe0\xc2\x11j\x07*n\x81\x8e\xa3\xe5O5\x1d\x86F\xb7\xd2\f\xc3\xceM\x0e+=/a\x94>\xbb\xe6\xccl\x83\f0\xd6\xbd\x8a\x92\x07\xa3\b\xd6\xfb\xa9\x81\x11\x87\xces\x06\x90\xc4\xf3\x80\x9dsn\xcfO\x995\x0e\xd2\xdb\x0b\xd6\x128J@\xfe\xf2\xa3\xf2\xc8\xa8\xc0\x86\xa5\x19\x86\x8e5\x0f\xa3\xc07\x89\xa7R\xd8\x0fqQ\x9c\x12\xef\xdb6&H\xe0\x83\x06\x9bc;\x982\xd0W%\xc0\xed\xda\x15\x8c\x92\xeb]\xb5\xdf\xdb*\x0f\x17E\xb8E\xe1\x99.\xa3$\xdb\xc8\xbb>\x99\xf6\x07=D\xf9!\x94n\x9b\x96\b\xfaP\xdd\xd7\xb65\x02\xe4\x1b\xf5\xc3\xc1\xc0s\xdb-c\x94UC\xe3\xa8\xda\xf7\xd5\xbd9\x8d4+\xe9jg^\x89\xc6)\xe8\xf1\xd6\xe3\xec\xd8\f\xcbE\x88e\xd8\xde1\xf2<f\x8b7\xd5`\x83\b\xe7&prH\xd0\xcc6\xce\x18e\xde\xce\x1e\xe7a\xb9\x1d%\xc0s\xfd(yzT\x18\xe7L\xcbMW+\xce\x8c)+\x9f\xcd\xd8\x8fSL\xdb1W\xde\xb4(I\xaf\xdb\xb6\xb9\x1f\x1a\x93\x04]\xbf\b\xa6f\xce\xf1)]\x07\x98\xc6\xbbn\x9a\x1b\x88\xd8\xcd\xc4A\x8a\xfb&\x13\xa3\xa4\xdc\xd5\xfd>\xa0\xa6\x96_\x89\xb4\xf4\x01\x95\x92l\x80\xd56}2\x85A\x1ej\r4T\x17\xeeV\xecz;\x8dV\xcf\xcc\x88K\x98\xdd\x8b\x13t\f\x0f\xbfmk\x9323\xcc\xaa\x05\xfa\x01(Z\xd8\xb0D\x89u\x90F\x80\xefb0\xd2\xec+w\xe7&\x98\x1c\xaam\xef\xba\x1d\xd8a\xc5|\x90\x9b~\xb1\x91\xa7\xe4\xba\xaf\xdd\x81!0rY\x98\xd6U\xeeN@\xbd\xac\x1b\xab\xed\x9cur\xf0\x16^\x16fW\xb9\xe1\x8d\xd9\x8ak\xc3\x9dE\xed\xf0\xce0\xa3\xc1\b\x9d\xa1\xe7\x11\xc4\xbfz\x97\xa3r\xb0B\xec1\t\xccS\xcaI\xe74\x07\xee\xc0\f+\x1b\xda\x80)a{3\x97\x85\xed\xbeg\x94\x1a\xdfM\xc7}\xd5O\x87\xb6\x9a\xac\xad#k)\xb0\xbf\xe0\xa1\xcb(Q\xee\xf6\xd0\xb7\xb4m_\x8e4\x034\x93K5/B`\xd8V\x0e\x85,w\xfaA;RV\x9c\xfa\xc4a\x0e\x8e\xb9i\xe5b\t\xe1bcFI\xc9\xb9i\xeel2S\xc1\xfa\x828\xcb\xc8>\xba~w\x0b\xad\xbb\xb91\x88\xde\x88&&2\x1fJ3z\x8d\xf1\xd2\x17\xa6\xabVIFo3\xdexa^\x04\r\x04n\xc5\x89\xc7\xbc\xb1})\xa9w\xce\x82y\xc5j\xe7\x07\xe0QS\xbb\xda:vF\xdc\xd6iO\xbfr\xb6<wa\x1d\x0b\xcfh\xff|\x87\xe9w\x18H\xa5\xe4\xa8&&\x82eY\xe3\xcfi\x84\x0b5\'\xbbl\xd5\xe3\xf6\xc2\xba\xab\xc2\xb5\xb1si\xf1\xa4\x9d\xee\xce\x9d\xd0\xecZ\x06\xbb\xa6\xbdn\xc8qpu\x07\xb1\xda\xfaSf\xab\x9dr\xde\xcc\x86\x8c\xb8Z8\xe0\xdcrS\xd6\xd2\xa9x\xedc\xda\\\xf5z\xbf\xa0\xd2\x95\x8f\x1f\xd2\xe9\xbc\x88JO+\xdf\xb3\xf5\x8a\x92\xf1%j\xefKsi\xef]\x89J\xff\xb98\xad\xef\xf1\xc4\x8e\xbbk\xbe4.\xbe\x02!\xc2V\x15\xdaX\x9a\x9e\x9e\xdd+\'\x98\xda\xda:\x15>\'\xe1~\xee\x14\xab\xe2\xf4\xec\x95\x9f]>\xad\xfa\xf7d\xfa\xb0\xdd\x16[\xe1\xc1\xaf\xb0(\xc4bk\f\xfaJ*\x88\xf8X\xb4\xa2\xf9\x86U\xeb\x1a\xb0\xe5\xc6f3\xf2Ynu\x96\xde\x97%\xfe\x14E\x1a99\xc188w\xccL\x83\xf0\xadU[\x96\x8b\x96\xd3j\x85\x10\xe7P\xad\xa7\xc5\xa7`zm\xd1zz_2S\xf9\xcbeNt=\xfa\xd8\xee\x9fCJ\xb7\xd7\x12\xab\xb6?\x95\xa5\x801a\xab\xdc\x1c\x9bw\x11\xf5o\xe7\x9bz[\xf1\xebF\xb5\xf4\xd4yu\x80\x80f\xf8\xed\xa7\xc5\xe9\xd9\xff\'\x07\xaefS\bZ\x83.\xf9S\xe1\xd7\xf4\xb8\x859l\xd8\x8d\xa7cZ\x8f\xad\t\x86y\x19\xb5\xb4\xca\xf3\xc1p7\x11\x9c\xde\xadv\xe3\xbc%\xe8\x95\xd3A\x17\xc1v\xfc\xf5J\xcc\xd2*O\x07]\x88\b\xd8\xe0\xda\xce\x16t\xedIC\x1b<R\xae;\xf5\bRC\xc8\xbct`\xc0\x9e\xc8#\x81\xa1\xa1\x9a\x7f$\xba\xb5\xdd\xf7\xfa\xb8w\xa5\x8f\xb0\x8d \xc5O\xdb\xe3\xdb\x80o\xe9\xcb\x0e\x81OoN\xcb\xfeLQB\xb5\x1b\x94D\xd4\xe0\'\x12\xd3\xe6>[<\xa6Ud\x88|:\f\x9e\x07ne\xb3E\x1eu\xab\xde\x9fyn9\xc6\xa0\xda\x86P\xa1\x13j\xa8\x82\x0e9\x1d\xf0ii9\xf3\x1dH\xccr\xde\xddu\xbd\xdd\x8b\xee\xd3fq\xff{\x13\x1c\xd2Y\xbc\x8c\x1f\xf3\xad7\x1a\x03\xad\x8c{\xc7\xb5\x97\r.\xb3b\xd2\xbb\xc0\xda\r\x9c\x05\x9c.F\xa3\xde\x87\x95U\x98\x13"\xfb\x9e\xe68\x16\xf4dcqL\xbf`\x18&\xdd\x90\xb0=\x0f\x883x+\x84D\xdd\x15\xb9+M\xfa\xe8\x14\\.F\xe9\x88\x97\x0e\x98HD\xd6\xd3\xba\x8d\xbb\x1a\x8e\xc9\x1e\xa6vl\xee\xdb\x07\xab\x19\xfd\xca\x05o\xbex\xe4\xacS\x10\x05\x9cf\xcaGb\xaaO\x1e\xee\xda1\xe6\xd9\xd0\x97\x19\x9b\xaa\xdd5\xb7\xe6.\x06z\x02\x1b\xbc \x85\xa2He\xa77\xf3\xb0\xc8\xc4KN\x94GrN@\x90\xe7\xab\xdf\x98r\x1a\x1a7t\xe9\xa0\xe2!\xe0\x92\xf6\b\xe6\x98\x1d#\x8d\x8b\x13\x04\x8f\xabb\xfb\xaf\x17\x03\x82\x9b\xad\xd8\x80\xed\xba"\xe0q\xc0\x8e\x01u*lz\x8d\xd6\x03a(\xb0\x97qA\xb3b\x9d\xed\xbd-x\xcdG\x8c\xe1\x8a&\x1b\x1e\x8f\x04\xf8H\x0b\x8ad\xfbRKI\x8c4\x98n\x04;\xbd\x91\x9b\xbe\xfb\\\x1f\xe7\x8b\x04\xfdpL\xe1\x03\x9aR\'\x91\x93\xd1\xba\xde7\x83\xef3\xfe\r\x8e\xf5\xb3\xf7A\xe7\xdd\x8fx\xe1\xd52`?Y\xe6\r\x13$A\xff0F?\x97\x83\xcdc\x1b:\xc2%\x82\xd6\x98\xb7\xc9\xd3\x9b\xe9\xbd\xee\x83\xd4tz#]h\x03\xecI\x1b\xf8\x14\xd4H\xd9\x13\xe9\xe0S\x10\xe0\xb3\'X\x81}U\xe4_"\xe9\x0e\x05\x86\x0eYF\x142\xda\x16\xc9S\x94\xfc"L\xbe\x9al`\xf2}\x84l\xb4+\x86b\x9f\xe7\x86\xf7\xa9\xab\x14\xe2\x0f\xeb\xee\x0bu\xe0K\xf3\xd3Q (Y\n[\x11\x85\xd7\xdb\xab\xf4\x176\xc0R; |\xd9\xb1J!A\xa9YZ\x1b\x88\xa6\x9be\x14\x9e\xb3S\xac#\xe0M1\f_\x11\xe9\xef\x8b\xf0exdL\xb6\t\x0b9e\x0b\xb9\xe0\xfe|\x95\x81\xd7\xe4\xfd\x91\f\xdc\x05\xd2O\x07\xd2*p\f\xf9\xb4c\f\x81c\xb8\x9b\xe5\xf8\xe4\xcd\xba)$\x90\xfc\xb0\xc89i\x1a\x0b\x0f{\xda\x88\xdf{\x90\xfeN\t\xfd\xbcnG[I\xb8\xd7\x9eE\x8c+9\xaa\xb9\xb8\xc0\x8f\xfa\xc5\xd7\x8e\x10+\x06\xcdF\xf4\xa5,N\xac\x96\xda\t\x0e\x1bQ\xe7\xc1\xdc\xbe\xf3\xd2\xec\xe7\xb1\xda\xbf\tH\xdb\xfcF"\x16\x1b\xd7\xfd2c\b\xc5#\xd0^\x066\x9c\t\xeb\xd9*\xce\xc7w\xbe\xbb`i0\xde\xf6G\xd5\x89L\x15\x82d\x0f\xc1rp\xa9X\xe2K\x82\xf8\x8e\xae\xc3\0(\xe6\0\xe8\x9f\x99\xad\x03\xe0\x1c\xcb\xb4\x8eT\x1e\xe7\xe5\xbf\xd1`\x99\xd9\x86G\xf8\x0e\x90\x0ez\x19\\\xdc\xb8\x0ew\xcc2\xc7\xbe\xda\xd5\x87\xaa\xb7\xb1Rj\xeb\xc1/J\xc4&\xaf\x97\xa9\xf8o0\xac+b\x13\x8fq\x95\xab0_j\xe1G\x8a\xa7\x97^\x91\xfa\x9cJ\xa8\xe8\xb6\xc1h\xee\xaa\xd60gw\xd5\xcf\xe2\xb6\x89\xbds\x9a-\xf1\xd9u$[v4\x82\xf8g:1*|\f\xae\xbe\xdc\x93\xc8X\xa7\xe3\xfd\xfaV\xc7\x06\x9d"\x8d\x07\xe4\xcb\xa0\xb6|\x8a\xd3\xd4\x81\xde\x8b\xa7\xc3\xf1\xde\xb3\xb7\xf0aW\xd4\xd3\x8f\xce\xa9\xcc\xe6s\xfb\xd4B=\xe2T3\xb4\xae\xd6-\xe2\xf4\xe6\x9az\x89\x98\x9b\x1eq7|\xb3\x0e?&\x14\xaa2\xae\xd3\x1ddg\xfb\x1a\x1f\x1f#dx[\x83W\xc2\x91P\xdb\x05\xa6\x1f\x98D\xe4\xd0\x17A`p\x9c8~\xe8)\x98;\xa8\xc1#s\x83\x9b7[k\xceR\x7f\x15\x04om\xe0\xa0\x91:\xf6y\xe0[\x8e\x02\xc6v\xd2S\xf5s\xcb\xe8\xc2wb\xabr\xc7\xdb\x7fP\xeeD\x1a6\x9d\x17VO7\x06\xdf\xae\x82\xa63\x07\x16\x0f\x10/\xe9 \b)fP\xfe\b\r\xf4\xfb2\xbc\x0e\x02g\xec\f\xe7A\xe6\xda\x946s\xe5\xf1(~>\xb7Xf\xca\x18k\xe4\xbe\t\xd4\xe3zN\xf1\x8d|_EpK\x1b#\xf1\xfb2h?\xceq$V\x97\x9e\xa0\x98\xe1co*\xffy\xa5\xf5\xdcj=x\x84\xb9\xe2#s1\x8b\x97Z\xfa\xabA\x10\x97\xdd}\xf2jK\xa7\x9a\x14&\x07\x9d>\xc31\xa85\n\xdb\xa6\x8c\xb5\x1e\xc7\xd5\x8d\x04\xb3M\xfa\xf09\xe3\xba\xfd\xbbGg<vv\f\xf8!>\x9bE\xf3\xe4\x91StK\xd2\x16\x04\x93\bj\xd3r\x80\x8b\x10\xf14\r\xbb\xf1\x19\x0f|q\xc3\xcd\x15\xb0\x90\xa7w\xb4_y}\x90\t\x14\x8b\xe4\x19[V\x96\xb9~x-\x1fiI~_\\\xacX\x8b\x88\xc0p\\\xc1P8\x8f\x8fG 0\xd4\x05w\xc6\x07+\x9a;3\x1e\r\xe8\r\xe5\'B\x89h\x96\xbc\x9c\xec\x17\xc7\xfc\xf7%/\x8f\xbb\xe0\x8b\x96\xf8\xd7\xe0[\xc1\xff\x05\xce\xcc\\\xcd'),aq8=a('x\x01\xb5[Ks\xdc6\x12\xbe\xebW\xe0\xb8[\xb5\x93"H\x10$\xe3\x93,\xcb\x89\x12?\xb2\x96\x1f\x89o\xf4\f5\xe2\x8a3TH\x8em\xf9\xd7o\xe3\xddl\x12\x96\xf7\xb0\x95*E\x1e5\xc0F\x7f\xfd\xf8\xba\xc1\xb9\x9e\xeaaz\xde\x1f\xa7\x97\xcd4\xb4\xdb\x91\x89\x9f\xf8\xd9E\x7f84\xc7\x89]\xf4\xf7\x0fC\xbb\xbf\x9d\xd8?\xb6\xffd\xbc*\xab\x7f\xc1\xcf*\xd1?\xb9\xfe\x99\xe9\x9f\x05;\xdf\xf5\x9f\x1av\xfd0N\xcdadW\xc7m?\xdc\xf7C=5\xbb\x9f\x18;\xef:\xf6F\xed3\xb27\xcd\xd8\f\x9f\xe1\xd3\xf0\x90\xa1\xa9\xa7\xb6?\xb2g \xfd3{\t\xbf\xfdv:\xb24c\\\xfe\x9c\x96?\'\x89~\x82\x97\x7fwl\xff>5W\xcf\x98\xc8\x12Q\xfa\x8f\xdf\xbf<\x8d\xf5\xbea\x82\xf3\xacby\xca\xa58S\xe7zU\x1f\x1a8\xc8ih\x9ba\xf3\xb4\xefvg\xcfO]\x87?e\xe6\xd3\xfa\xd0v\x0f\xf8\xf3\xb3\x0f\x8d>\xbb\xfe\xf3\xd5Tw\xed\xf6\xfc\xb8\xef\x1a\x96\x9c]\x8d\xcf\xdb\xaf\xcd\xee\x8fv\xda\xde\xb2i85g\x17\xb7\xf5Po\xa7f\xb8n&v\xf9uj\x8e\xbbf\xf7\xa6?\xd4G\xad\xc5\xd3\xa7\xfdW\xb6\x01\xd5\xd8&\xcd\x13V\x88\x8a\x95\tgg\xef@l\xe8\xdac\xf3G?\xb6\xda\n\x1b\x9e$\xe1\xe3\xb7\xb7\xed\xf6\xee\xd8\x8c#\xcb\x93\xb3\xf7\xcd0*\x91$\xc9~J@\xeaU?\xb5\xdb\xe6\xff\x8b\xd2%\xc8\xec\xda\xe3\xfez{\xdb\x80i\xf4\x06\xd7S}\xdc\xd5\xc3\xce\xfd\xed\xec\xa2\xbe\xff\xd5\xd8*\x97\xe9\xd9\x9f\xf6w\x91Ug\xe7\xe3VYb`2\xad\xce\x9e5\xee_\x1b\x9e\x17g\xd7\xd3\xee\xd7\x0f\xac\x14\xea\x97\xf7\x1f\x18O$\xfc\x06\xde\xa8L\xe9\xbc1\xe3\xf9\xd9\x05\xcbR\xf6\x84}\xf8\x93I\xf0\x85\'\xec\x15\x1b\xefk8\xf7\x13\xf6\x94%\xf6\xbf\'J*\x9bK5_\xb7]}\xd0bi\x92\xaag\xb2\xac*Y^\xa4F\\\xcc\xc5\xff>\xf5`\x87O\x9d^\xc0\xb3\x9c\xa5E\xc1\x84\xcc\xd5\x99\xcc\x82|\xbe\xe0x:|R\x88\xec\x8fzI.\xd9F\x80\xb4\x10L\xe6\xdc\xac\x90\xf3\x15\xbb\xbe\xeb\xeaAK\x97J\xa1T\xb2\x9cWLJi\xc4\x8b\xb9\xf8}3l\x95k\xeb\xdd\xb5\xfey\x953\xc9\xadt9\x97\xae\x0f ?\x022Z\x1e\x1e\xad\x17\bx\x84\xc8\xcc\x82j\xe5\xc0\xc6q\xf4\x91\x0bn\x8e\f\x91\xe7\x8e,\x12\xa2Q=4\xc7\xae\xb91+R\xd0\x1d\xdc5\x05+q\xaf\x96\xe0+K\xd0S2\xbb&+\xd1\x1a\x82o=*\xc5\xc6;\xbd\xa2\xe2\xfaAy\x02\x86J\x8c]\x05A\xfa\xbe;\x8dZ\x16\x8e\xa0\x83\xbfb\xa2(\x8d(Ay\x0b\xe9\xa26\x9a\xc09!"\xd5\nH5\x850\xe2\x04\xe3\xdb\x87\xfb\xdb\xc6\xe0\x0bq\t~\x04\xb6\x81\xffg\xdc\x98T\xc8\x05bmo\0\xe0\x95q9\x91\x94\xda\xb4Z\x9c\0<v\xf5xk\x0eY\xb2\r\xd8>\x07\xc3\xc8\xd4\x1a\x85\xe0\xfb\xad\x19z\xe3:\x85\x81\x16t\xf0\x06$\xd0\xf6G\x13\x1e`\xe3\x84\xe5`\x12\'\x98\x13@\xa7/fO\xa9\x04E\x85\x04\t\x8c\xd3\xed\xd0\x98=ef\x1e\x9f\x04\xfcr\x82\xdf\r$P\xe3\xb5\x99z~R\x04I\x82\xdcM\xfb\xd9\xecZ$f\xd7\x94{\x94s\x02\xdd\xd8~5\xb6B\xa2n[\x02\xdb\xd8|\xb6\xa8\xc1_\xd4\xc1D\xd8\x95@\xd6x\xd7,\xed\xc18R\x97\0vl\xada\x8b\xca\xca&A\xb6\xa4\x9e\xd6\xf5\xd6s\xc0\x85\x8d+\xa8\xe8\xca\x8dtE5>\xb4h\x85\xf3M\xe5=n\x89$\xd8u\xaa,hD$\xd3\xf6\xc84(Z\x94\xa0\xd7\xfc}\xaa;\x17!\x9c\x97:DT2\xd4\xc2\x04\xbd\xbd*\xc8\x8d\x01\x10|Rm\r\xb9\xd2o\x9d\xd1,\xd2\x8c\xbap97\xe6F6/MV\x96\x04\xc5\xda\xe6\x01\x9b\x9fJ\xe1\r(\t\x88\xe7ZpS\x01\x80\x12\x82\xdf\xe5$I\0|j\xf2\x9d\xaa\x02y\x11R\x97$\xd0]\x98\x94\xa5\x82\x12\x8e\x0f\xb6\xf4\n\x12\xdc\x9e\xa1\xfd\xc0o\xfc~\x04\xb0K\xb3\x9fr/\xbd\x9b\x15+\bH\xcf\xcdn\x95\xd6\x0e\x89\x11\x80~\x99i\xa7\x1ek\xb5+\b8\xbf\xdaz\xc6\xcc\x01\xfc~\x04\x95+\x87^b\xfc\xc2\x89\x110~3\xda\x15\xfa\xb1*B\xbc \xc1\xe2w\x9b\xf0\xb5Q\x02\x16\x05\xc1\xe2\x05>m\x19\xc4\b\x16/\r\xb2\xa9F6\rb\x04\x89W&,U\xa1\x04\'A\x87%P\xbc\x9e\x19O=\xd7\x1a\xaf$`\xfc\xa1\x05!\xb1\xc2^y8EI\xc0\xf8\xb79\x85\xda/#\x1b\x124\xde\x98\'\x0bb\x96\x92\xa0qm\x9e\x0bf\x06%s\xc8\x81yi\x05\t\x1eo\x91\x99\x0b\xb4\x1fA\xe3\x9d\xd9\xcf:\x8b\fr\x04\x8e\xf7\xc6\xce\\ea\xc9\x83\x1b\x94\x04\x8f\x0fV\xae\xd4r\x01\xb7\x92\0\xf2\xa7MN\xda\xf9\x90\x18\xc1\xe3/,\x16NQ\x114>\x9a\xe4\x95\xda\x12\xe5\xc5\b\x1a\x9f\x80W\xdf5S`\x1d"\xb7\xac\xa3\bd\xa8"\xc0|\x825\xa8\xbaV\xb6\xbaf\xbe\xbaV\xd9\xeaS\x10QI\xedc\xb2\x1c=\x86&\xb3q\xdb\xb6\xdbv\xd8\x9e\f\xcf\xe4\x90\xae\x15\xbf\x17U\x1a\xd6\x10\xf0N\x8a\x01\x8f\xc0\xbc\x1d\x83\xdd\xa8G\xa9\xbfn\n\x93\xe8+\xc9\x96D\xcd\x9f\x9f\x83?\x1a\x9e\x16\x10\xa8\b\xa0\x86\xe1d\x964B\xde\x11\xb9\xe17\x15A\xf4\x93\xd7\xc1\xe6bg\x1e\x02\xe9\xd6x\x9c\x15\x04\x04\x84*` \xc8\x13\x82\xea\xce%(\xc3W\xb9\xdf\x92\'\xb4(\xcd\xf6\x84\xba\xe2\x94TV\x9f\xb3\x04f\xeb3x\nD\x91\xde\x11rM\x0b\xf4A\xff\xd2\xb1\x9b\xce\xae$\xb0\xee]2\x87\xb2$u\x18\x87\x87\x10,\x8d\xab\xe8|^\xa5Hk\x02_;\xcf\xac2/\xad\x1c\x01\xed?\xcc\x93%x\xb2\x80c\x06Q\x82\xd6\x1d\xce\xe99z4\x01\xab#\x8f\xf6r\x04\xac\x83M\xaf:\xbf\x82\x90?2\'XY\xb2Q\xda3\x079\x82T\x1f\xac8w\'\xce\tR\xf76\x93\xa8S\xa7D\x94\x12\x87\xe0(J\x14<%\x88\x12h\x06\x97?\x939\x84\x9c\xd2>csU1 \xda3\xe4\xa5\x9c\xa03\xf9\x8c\xac\xe9M\xa8A\x9c\x13pN\xe1D\xcaK+\xd5\xd6ZI\x02\xcfg\'\x99\xe8R\x1a\xe4\b<_H\xb6\xf5\x82)\x81\xc7\xd0]i\x89H\x10#\xe8<\x98\xfd\x841\xe4\xec\xd1)\x81\xe7\x1b\x0b]\x01<-\xc8\xaddC\x94qd\xe2\xfa\xbc\xc0\xd6x*h\xca50\xa5\x90/\xf5\x90#\x834Q\xe4\x89\x95\xceW\x9e\x80\xdbBi\x1f!\x12\xf4\b\xb9\x92n\xa7\xb6\xdbY\x12\x0e\\V\x15Sp\xcc,\xb7K\x16\xccW\x0f\x01v\xfd\x97#\x0b\x83\0\bHE~\x85\xb0\xc7\xa7\f\xd8w\xddR\xf5\xf4P\x9a\x14;\xe2\xd6\xe9(\x01V\xbd*\x8cjL\xa6\x01\xba\xb6Qy9W\x0b\xb8]@\fu\xa3\x06E\x8e1\xab*\xa3\xe8#0))\xdd\x02b\xab\x07\xdf\x81jW\bD\x88S.|\xd3\xf5Ck\x847:\\3\xae\xe7\x1d\xde\xa2\x94\x15\x8fMPE\xf5?\x8a\xa2\xaa\xd8\xb1|\x87Sr\xbc=\r\xd0\xceo\x8d\xcbA\x18*\xe3\xa8\xc4\xaa\xa2F\xcb\xaf\xcd\x18\xc6V\x8f\xcd\fI+t\xf1\xca\x10S\xe7\x943\xbbI\x8cw@;\x99P\x11\x1d\x16\x11\xa0\xf7\xa7\x16\x16\x1c\xfa@\x14JE\xc6\x15\xdb\x12\xc2\x9e\x9e\x92i\xb5F+\x17\\\x1d\xc6\x17:iUhU\x16Y\x85\xdcwm\x19\x85\xddT\x0eC\x8b*\x94\xbe)\xd7\xbe\xe9b\x82\x04<\x98\xa59\x86\x03.\xa3g\x13`!7\x9b\xe0\x94N\xef\xea\xfd\xde\xb6u\xaaZ)\xac\x05\xea48\xa5\xd5F\xdeO\xc4\xd6\x96P\x82m\xe6\x1f*|\x9a\xa1qs\x10\xa9=Z@\xbd\xcd\xec\\\x8cS\x1e\rC\xa2z?\xd4\xf7\xf60\xc6\x0f\x0b\x89\x1eD\x13\x14\xccp\x1bg{\x18\x10g*9\xa9\x84\xe6\xe4E\xcc\x0f?\xd5\xa3qEew\x9d1\x05\xf8$\xb732N\xa9\xb6\xf3E\xbfL\xdaU\xaa\x83\x0e\xab\xe4\xfa\xaa\xe0!\xd2\xbap\x8a\\\x98\xd2p\xef\xc2a\x19T\xa8\xc2\x16g\xe7W\x94\x947]\xd7\xde\x8f\xad\xa9}\xa9m\xab\xc1\xf9\xb8\x8byJ\xcf\x01\xa4\xe9\xb6?\xf9Q\xa1\x19K\xc3\xaa\x02M\x948\xa5\xe1\xae\xcf\xf7\xa9T\x91jM\xaat\xd6\xb6\x99\x94\xd2j\0\xd5\x0ex\x14D90\x9aL\x8d0]\xa6[\xf0\xe9\xedi\xb2\x89"\xc9\xb5\xb8\x80\f\x14\xc4\t8\x86y\xdft\xcdW\xeb\xa2\x10\xeb\xe0)\x02\xe8\xb0\xccmF\xa2d:\x94\x0f\xb0\x8b\0}s\xd5]f\xee\xd4\x04\x92C\xbd\x1d\\z\x84\xb4\xae\x94\x02q\xc5\xd2\x8c8\xa5\xd3Cc\x8f\xab\xd4\0\xd5\xf50)s\xea\xd3\0\xeb\xa7z\xebkM\x9a\xa9\xe0\x02\x03\x01\xe023T1]\xb0k\xb8\x97h\x1c\xd8\x1c*\x8dZ!T\x86\xf7+Hh\r\xae4)eE\xa9FJ ]8\xe9\x8cV\xbe\x1d\xf8`\xed!\xd8\xa4\x10\xf6YY\xd8\x11{J\xd9\xf0\xed\xe9\xb8\xaf\x87\xd3\xa1\xabO\xd6\xcf\xd5CJ\xdd\x1e:\xd8RJ\x8d\xfb=\xcc\'\xef,\xb5P^\x04\x86\x11I\xe2\x9fA0\xd8\xd6\x0e\x02\rpe\x01\x96\x85\x15\xa7\xf1p\xf0Y\x11\x18\x85>\xa2\x1a\x1e\xb8\xb4\x98R&rn&9\x9b\xb4"\xe3\bU\xab\xe6z\x0f\xbb\x1b\x18\xd3\xf9! \x87\xe8T\xfe%tGo\xb5\xa7w\x15/B\x1b\xba\x98\x8b\xa4\xf4\xca\xe2u\x10V\xe3\f5-\xd0\xd3\x07a\xc5I\xb8\xbcv\xaa\x9b\xae%G\x1b\xe7\x0b\xd5\x0f\xc0\x9eN\xddwu\xa7\xb3\xfb\xda\xc8jj\x99\x1bfi\xa9wJ\x07\xe5;Ux\xc7\x91tG\x8e`\xa6\x82\xb62\xe1\xa0\x8b~&]L\xb3\x91\t\x81\xd4\0\xf1\xd4\x8d\x85\xb4\x80\xd2\x99vo\xb5\xe6\xa5Q\x9b#\xb5\xe9X\x1b\n\x1c\\\xd1A\xa6\x1e\xbd\xd1u\xdb*\xbd6\x1b\xb2\xe2j\x16\x82^\xf9\xc2:;\x15oBJC\x9d\xae\x8cH\xd7!\x81\xa0\xe6=&}ZD\x9fmSdZF\x175!\x9cf\n\x15\xab\xd2\x7f\x91\x84cG:\xb1\xd3\xee\xda\xcf-"\xe7RWIua\xb2\xbaw0M\xd8\xd8\xba:\x95=\'\xa9\xdeO\x85\x8br}\xf3:l\xfe\x03\x96|G\xb6\x0f\xa3\xb5\xd8\xfe\x0fa\x7f\xdcy\xc5\x1e0\xea{\'\x94\xedU\x93\xaa<\x17w\xa9K\xa8\x88V\b\xaf|\x1d\xafw>\xdd\x87#\x94I\xe4\xd03l\xd1\x91c\xce\x89\xf2\xb6\xb6\xa9\x9ax\x96a\xbc\xb0\xd8\x1f\xb9>\xb2\xe7\xba\xf0\tm\xae\xbdXo\x9e\xfb\fB\xe5/g\xca\xfb1|L\xf7gP\xc6\xed\xcd\xc3b\xb2Oe)T\xa6\x0e\xaa\x86\x16\xca\xce&b\xf8\xad\xbf\x84w\x03\xb5R\xff-\x8f\xf8\xcf%b\x16A\xfb\xa4\\\xdf|\x19\xb3"\x8f\xc6l\xed}\0{~\xb1\xbe\xf5+zZ\xeb\x97x\xdeN\xd7t\x01X\x9f\xffbNV\x07\x06\xf8\x03q\xf8va{n\xc3\x04M\xc3\xe9\xa2\x0b\xc4\x1a\xc3\xf5N\xcc\xd1\xea@\0\xb1B\x99\x8c\xb8\xd9\x9c\xa3=\xe6gc@\n\x8d\xa1bH\x8d\x98n\xe9\x8c\0T\xe9{\x19\xa1]\xb1|\xcc\x96]\xff\xad9\xeem\xd3\xa2\x87H@\x1f\n\xb1\xee\x8eo\x82\xde\xfe6\xa3\xa8\xd6e\x7fY\x80\x94Z\x90Pk\xb8\x88o\x9a\xc0\xc3@-\x96\xcbj\xb2\x04\xc3\x15Yr\x8e\xa2*\x94\x88HT\r(\xaa\xdch1\x86\xd4\x16#\xa5bP#%\xe2H}\x9c;\x8e\xbf\xe5\x889\xce\xdb\xdb~\xb0\xba\x98\xeb\xa9"\xea\xef\xafq\xea\b\x97^\xb1c\xbeA\xe1\xe1\xa1\x8d\x04\xc75J\xd9\xe1\xb6*&\xbdCNc\xd2R\x91\x16Q\xe2\xf4\x0e\xa9\x8d\xeaAD\xeb\x93Ob\xd8S"IL\xbf\x9c0\x9e\xf4\xf4\xc1\x0e8\xa0\x1dJA}\x91\x85\x96va\xc7\x90\x9a\xb0\x19c\f$H#\xf2\x11\x91\r4\xeeQ\xd9\xc3\xa9\x9b\xda\xfb\xceL\xd4J\xfb\xfeJ\xe2\xdf_Y\xd8\x05\xf1\x0ed\x98h>\r\b\xb9K\xc5XX\xc3\ffj\xebn\xd7\xde\x98\xeb\x16uu\xa1\xae?\xe1v\xb8H\xd7\x95y\x98\x15\xe1\x19\x0f\xca"\xe5&\xa8\x1f\xeeuc\xa6iI\x02(2\x7f\xe9\xb2\x1e\xa5\x97dAH\xd71\x968;\xc0\xac\x1e\xac\xeb\xdf\xcc9\x13"d\x91\x05\xdb%\xff\x17y\x14\xaf#\xa2\xc4\xeeV&\xca\xfeq\xae\x0b\xae\xe0f\x13\xcbB\xef]\x01Y>\xe2\x0bW+u&\x86\x92z\xf9\n\x9a\xe2\xf0\x06\x96\xea\xcf\x14\xed\xe7\xeb\x8a|\x1a\xfa\xbb\xe68\xbb-P\xa38u[ \x8b\xf5%C\xb3o\xc70R|\x9c]\xfd\x12\x02\x10\xbdS\x11;\xc1\xd5<W?\xda\xd3\x8d\'\xa8\x7f~l\xce\xf5=\xb1f\xc2E\x12a\x11(\xd3\x04\x97\\Wf\x98\xa5`W\x95\xd6\x15\xe9\x91\x0b\xa0\xdb\xb9\x98\x0b|\f[\x87z\x14Q\xe3#"2^6\xe2-\xf6\x85\xa1\xf0\x92Q*]\xa0V\x11\x83L\xbe\x9d\xff>\x17\xbf\x98\r\xa4R[we\x1c\xf9\x8e\x92\x93\xa2\xb0\xe4\x04M\x18\x16\xf5c\xc6\x04\xdc\x95`\x91d\xeb9\0\xb5*:\xa6\xf5\x9b\x1fY\xbc\x0f\xc2\xf2V\x1c\xbd\xb4\xb1(\x1e(\xc3?Zh\xe6\t\xd8\x8b\xc7z\xff\xe0\x87?0\x8c\xf8\x86r\xb5\xbb1\x8c\xc9\xb6\xe8\x8c\xca\xe2\xfa\x90\xe8z|Q{\x97\x9c\xfd;\xb5\xb7G\xcd|\xf2h\x13Q\xe3\xa8\xc8\x1f\x8d\x8a\x11E\x05\xa6\xec\x91\x83\xae\x8f\x7f\xd4=\xee\xea9iE\xc2\x87]\xf7\xe0w\b$\xf6X\xdb\xfc\xac\xe9&\xdb>\xd8H\x92e\x8c#9\x82\xa9\xde\xd0\xf3\xd7\xf3\xd1\x90\xf8\xd2\xcf\t\x15\\u\xe8\t54JQB5\xef\xc9\xd1Q#\xc6<\xa0\xcbu\xa5\x0f\xba]_\xd8=X\xe5\xd1\xce\xa7_\xcc\xc5\xac\xd7H\x19\x9f\x8b]"\x0fN\xddt\xa3\x88\x87\xe9.L\x14V^vYe\xa8\x90\x1f\x07\xc8\x93\x8e-\x15\xfa\xe6W\x8a\xb8N\xd7\xb3\xae\xa3\xb0\xd9\x0f\xbd?\xb6\xcc~>\x91\x19+Uq>\xfe{\xb4\xd7\xae\xe2\xbd\xf6\x0b\x14\x89n\x9a\x1d\xf3\xcdi\xa8w\xcd\xa1\x1e\xee\\rR\xfe\xa3\xbe\xf9\x10\xdb\xbc\x99\xd7\xe1\x1f`WW+^\x11\xad\xf2(-\x04\xe1H\xfb\xf1"\x18R\x9fSf\xf1~\f\xdc\xe6\xb6\xeen~\x18U5\'\xff\x1fjeO\xdb\xe0\xe4\xd16\xf8\x18f\x1c\x81FF&\x1c\xef\x16\xc1b\xb2\x8e2y\xcc\x94\x97({?\xc6g\x1a\xdc\xf6\x05Dc\xd9x\x8f&\xe0\xe8\xad\xadh\xa8\x1f]T\x19\xf3\xab/a(\xf3\xe7\xf2;A5+\xf6\xae\xc7\x8dp\x9bk\x1a%\xc2\xf1\x89\xef\x84\xe1\xeb\x85Mm2T\x83\xf9h7\r\xd5\xd9\xbeb\x0fT2\x85|+\n\x11\xcd\xb5=\x9a\xab=^\x12/P\x1f\x88Fd\x913\x9fP\xab\xfbx\x8f\tQ\xden\xad3o\xcc7B\x04\xa8\x0e&\x8d\xb4\xb0\xcfPl9\xfe\x17Se\x88\x9a\x1f\xbd\x07\xb6hu\xd0\x1dohu"\x83\x9a\x1e\xcd\x03\x91!#\xd1\xf2f\x914\xc5\x0f$M\xbaH}\x07\xc6L5\xcb8\r\fz\x05^\x179\xc39\x1e\x9e\xdb\x0bU\x89\xde4X\xc8\x87\xe1\x8a\xdb:6\xbf}\x1d\xd4\xc0\x05=\xa2\xc8\xb7y\x06\x0f\xb41\x92\xbf/\x91_\xfaD\x12\xebI#\x143v\xc8\xbb\xe5\x1c\xdf\xb9N\x1e-\x8a\xf3FV\xbdQ\xa3\xbe(\xc1\xd7\x1b\x81+:\x9f\b%h\xfd\bGt\x95\x1d\xda\xfb"\xd2\x93\xc4<\x1f\xbd\xad\xb8\x9c\xf9\xeeU,\x1e{\xff\xde\x14\xb7g\x10\x913\xf4\xf3\t\b\x8e\x80\xc8\0j\xder\xa0\xfc\x10Y\0\xca\x84j\x07\xc1\xa8Jd\xae\xcb\xe9\xbaF\xfbE\xb4\xa0:P\xf0H\x95\xb1\re\xae\x86\xe8\x85\xfe\xca[\f\xe2oh\x10\x12\xda\x9aH!\xa5\xbapwm\x87^\x97]\xa9Is\xea\x9c[\xea,\x8ah:o\xd7\xc8I\xacF^\x9e\xec7\xc1\xc2\xb7\x1f/\x8f;\xf4\xb5I\xf5O\xf4\x9d\xde\xff\x02\x9e\x8dJ\xa1'),aq7=a("x\x01\xbd[Ks\xdc6\x12\xbe\xebW\xf0\xb8[\xb5J\x91 \x01\x90\xc9I\x96\xe5D\x1b?\xb2\x92e'\xbeQ3\xd0\x88k\xceP\xe1\xc3\xb6\xfc\xeb\xb7\xf1\"\x9a\xcd\x81\x94\\\xb6\\R\xc9R\xe3\xd5_?\xben`\xae\xc7\xba\x1f_u\x87\xf1\x8d\x1a\xfbf3$\xc5\x0f\xd9\xc9y\xb7\xdf\xab\xc3\x98\x9cw\x0f\x8f}\xb3\xbb\x1f\x93\x7fl\xfe\x99dUY\xfd\x0b\xbeW\xa9\xf9\x9e\x99\xef\xcc|\xcf\xcdw\x99\x9cm\xbb[\x95\\?\x0e\xa3\xda\x0f\xc9\xe5a\xd3\xf5\x0f]_\x8fj\xfbC\x92\x9c\xb5mr\xa5g\x1b\x92+5\xa8\xfe\x0b\xfc6,\xd5\xabzl\xbaC\xf2\x12\xa4\x7fL\xde\xdfO\xc9\x9b\xfa1I\xb2$\x93?\xe6\xf2G\xce\xcc\n\xb3\xfc\xcd\xa1\xf9sR\x97/\x93\"Oy\xd8\xf1\x877\xd3P\xefT\x92\tV\x94\x89\xe4%\xabN\xf4\xe9\xde\xd6{\x05\xc7\x99\xfaF\xf5\xa7\xefn[=\xf8\xe4\xd5\xd4\xb6\xf8\x0f\xc9\xfc\x87z\xdf\xb4\x8f\xf8O'\x1f\x95\xd1\xc3\x1b\xb5m\xa6\xfd\xc9\xe5X\xb7\xcd\xe6\xec\xb0kUr\x9a\xb1\x93\xcb\xe1U\xf3Mm\x7fk\xc6\xcd}2\xf60\xc5\xf9}\xdd\xd7\x9bQ\xf5\xd7jL.\xbe\x8d\xea\xb0U\xdb\xabn_\x1f\xcc~^\xbc\xe8\xbe%\xa7L\xc2\x17O\x93\xb2\xa8\x922\xe5\xc9\xc9\rH\xf5msP\xbfuCc\xd4q\x9a\xa5i\xf8\xf5\xfb\xfbf\xf3\xf9\xa0\x86!\xe1\xe9\xc9\x07\xd5\x0fZ$M\xf3\x1fR\x90z\xdb\x8d\xcdF\xfd?@\xbb\0\x99ms\xd8]o\xee\x15\xe8\xc8Lp=\xd6\x87m\xddo\xfd\xdfN\xce\xeb\x87_\xac\xd2\xb8`'\xbf\xbb\x9f\x0b&N\xce\x86\x8dVG\x9f\b@\xe7\xa5\xf2\xff;\xcd\xb8<\xb9\x1e\xb7\xbf|L\0Q\xf8\xe1\x83\xfb\x01,T\xab\xd3[h\x9e\xf1\x93\xf3$g\xc9O\xc9\xc7\xdf\x13\x91\xa6\xf0\xc3\xdbdx\xa8\xe1\xf0?%/\x92\xd4\xfd\xfbIK\xe5K)\xf5m\xd3\xd6{#\xc6\x8a\\/\x99\x14\xa2H\xb8dV\xbcX\x8a\xff9u\xa0\x86\xdb\xd6\x0e\x909\xacZ&\x1c\x96\x86#\xd9\x01|9\xe00\xedo5,\xbb\x83\x19\x92\xc1\xfa\xa7Z\xbc\x12\x89\xc8+;D,\x87l\xbb\xb6\xad{+\x9e\x96\xda\x9c\x84\x95\xf7K\xc8\xa5\xfc\x83\xea7\xda\xd4\xed\xfc\x859\x03\xaf*P\xa6\x93/\x97\xf2\xf5\x1eF\f\0\x8e\x19QJ;\xa0L\x13\x0e\n0\x03\xaa#\x87\xb6\x16d\x8e]\xdac\x17\x15\x9f\x8f]\xa4dOu\xaf\x0e\xad\xba\xb3#\xf2Lk\x16\xce\xa2\xd5\xea\xb7UdG\x86\x84U\xb2\\\xda1\xb9>\xba\x1fC0\xae\x07\xbd\xb1\xe1\xb3\xddW\xc6\x12\xc6\xa59\x8aH\xa5\x1d@\xe0~h\xa7\xc1N\xcf\xaa\xa4(\x8cl!\xadi\x14\x04\xeb\r\x84\x90\xda\ns\xbd\x17\x98>\x07\xd1\xcc\xef\x85 }\xff\xf8p\xaf\x1c\xca\x10\x9cX\x9e%\x9c\x97\xa0-n\xc5\xc5\n\xb5\xa6\xb3\x10\xb0\xbc4\x18\xe4%\xc4\xb4\xd4\x1aEA@\x1e\xdaz\xb8\xb7\x93\xc3>N\xcd\x11\x0b\xed/V\x9a@\xfc]\xf5\x9d\xdb\x89\xb3\x07\xc9\x83\x12\t\xbc\xdd\xc1\xbaIU\x82\x8f\xf0,\br\x02\xea\xf8\xd5N*\xb53qQ\x06A\x02\xe5x\xdf+;'\x9c\xc8,\x9f#a\x82\xe1\x1d\x04\xd4\xd9\xd8\xb5\x11fA\x94\xa0w\xd7|q[\xad\x9c\xd1V3\xd2\x9c\xa074\xdf\x9c\x06\xb8\x91\xd5\xaa\x9a\xe7%\xd0\r\xea\x8bG\x0e6\f\xaa\x05\x15\xcf\xf3\x12\xdc\x14\xb2Pw\xb8\x12\x1d\x8e\xc0vh\xbcrs\x87C\x11dKjomwX\x18D\x01\xba\xc8\x9d\xfd\xf0\x8a\xeey\xdf\x84\x11\xb3\x85\xe2!\x82\xe0\xd7\xea<a6#\xb4'\x89L\xdb\xbe\xdd\x8b \b\xaa?\xa7\xbau\xa8Tp\xd2\xd2\xfc%\x97\xc2J\x13\bw:W+\x8b\"\xac]0\x13\x7f\xe6\xb9s\x1aN\xd4`R\x999*\xf3J\xcc\xe7\xa0+\b\x94\xb5\xd37\xf3\xa1*\x04\x11A\x90<\xb3\xf1&\xb1\x11\xc0G'A0|a\xa4\n#\x96\x89 F\xc0;\x0f\xc8\xc1\xf9\xb9\r\x92F\x90 \xf7\x12\xcdW\x84\xa0(\bd\x17F\x8c\x1b1\x91\xceb\x92\xc0\xf4*\"F \xfa\xd9\xaa\xdb\xed\xae\b\xbb\x93\x04\x9d_\xacN\x8ca\x97A)\x92\xc0r\xe9M\x03\xc4X\x1e\xc4\b\x18\xff\xb6\xbbcv\xd92\x9cV\x12(~\xb5\xcbj\x9f\x16\xb0\xf7Y\x8c`\xf1\xda\xeaN\x12\xc8$\xc1\xe2\x8d\x15\x03)\x99\xa15\t\x10om|\x82\xbd\xe5 \x17\xb2\xb2$H\xbc\xb3g-\xec!X\xd0]I\xb0\xf8\xcdNX\x19d\x8by\xbe\x92`\xf1\x1f;\x9f\x8e49\x99\x90\x80q\x15\xb4\xc2!\xe0\xce\x13\x120\xae\xed\xba\x02\xe8 \xac\f\x81x\x9e\x8f\xc0\xf1\x1e\x85N!\x82fJ\x82\xc6\x8ds!n\x8e,\xd3\xa0\x9b\x92\0\xf2\xc1\xcd\xc8\xad\x16\x91)\x94\x04\x93\x8fNR8I4'\xc1\xe5w\x17\xd6\x8c-\xa0M\x12X\xfeH<G\x029\xc4.*\x82\xca'k\xfa\xc6T\xb3\xe0!\x15A\xe5\x16\b\xf7g5\xce4\x84\x15\xc2\xd3\x90\x10\x85+\x02\xd0-\x8c\t\xc9\x96A\xb2\xd4\xc9\xb60\xd9\xce&\xdb*?\xba\f\xa6.\xdc\xaeS@\xe8\x9b\xd7\xa1Am\xd84\xcd\xa6\xe97\x93e\x9f\x19\xe8%\xe7\x9a\x91\xc80\x86\x808iZ<\0\x1d\xb79\xc5\x94\x0b\x9916\xb0di\x83~%\x925y\x0bL\xacp\xdc\x8d\x07W\xab\b\xac\xf5l{\xc6\xd3*\x93S\x8c A\xf5\xd6\xaa\xa8r\xf9\x95\x07\r\x11\\7\xc8P@Jk\xc6M\x99\xa5\x04\xda\xadO\"F\xb2H\xe79\xb3\x94\xa6\xa8\xc5\xa4\xda\x99\xc2\xa4\x94bX\xd1\xac0N\xc2\xec\x9c\x10y\x1a`\x14\xe6\x876\xb9k\xddP\x02\xee\xce\f\x85\xf4\xa8\x8b\x11\xf0D\x89V!\x88Z\x8b1\xc6\xcb+\x866NPl|\xb0pl\x8bK'G\x90\xfbo\x88\xb4\x1a-\x9e\"Q\x02\x99%\xc0\xdc\x04\x81<GK\x13\xc4Z\xb2\xf4,G\0\xb3&y\xca\x8d\x83\xf1p\xe4\x8c\xa0\xe5r\xb8vD^b9\x82\x95#\xa3i LA\x94`\xf5\xe0L\xbbp\x1aO\xf1\xb4\x94I c\x01\xd1\x92!Q\x02\x8e%'\"5\x1a\x12H\x8eRAk\xfc\xa5\xdbh\x81$\t<\xce\xd7\x85#%\"3_V\x94\xc03\xb9\xe3g\x8e\x032]\xf5:Q\x82\xd0\x17\x8bP\xaa\x03\b\x9c(C\x92\x04\xa3\xaf\xc1Mm\xb4\x9c%\x19A\xc9\x12af\xce\xce\xb1\x1cA\xe9\xd1\xaa\xdek\x1erR\x10%(}O\x1c\r\xd7\xb6\x8e\xe5\x8e\xc4\xc6\x10}X\xee\xeb@\x11\xc8x\xc6\n\x1a\x81-X\x86\x1a\xeanH\x01\bK\x9e:i~d\x05\x14{\x8b\xd4\xc5^)\xd1\x12\xe2H\xf0\x1d\x9bv\xeb\x82\b`\x9bU\xd2r\\\xe6\x16ZQb\xd3)\xd8v_=qufW\0\xf5\x82\x9e\x93\x1bD\xf4\x14\ns\xa8\x91N!\x99\x98bA\x1b\xa7\x91&\xda\xd2\xd5,tul\xcc\xd1z9e\xba\x18\x82\xaf\xccY\x16\xa5\xc6w\xba\xa7\xe4\xb9\xb4\xce\x02\x1a\xb8B\x18*`\x07\x10u=\xfaB\xc7\x9aC\x15\xb2{FY\xf2]\xdb\xf5\xcd\xc1\xb9\xa363\xc8\x1d\x9a\xc9\xcdZ\xa5|yPa/::\x9e\x82\x1b\xf1*p\x97\x8c\xf2\xe6\xcd\xd4C\xcd\xbf\xb1vW\xe9\xdc\x07\x93\xc3\x98\xd4Y\x938\xd6\x88\x18\x1a\xd3e\xb3\xd9\x8c\xdbl\x86hrF\xe9\xb4o\xd9\x04+\x04I\xd3\xb6)24\x8a\xa0\xbd\x9b\x1a\x18\xb1\xef\x02{\x80\x90.\xb5\x03\xe9 \xe3\xf6G\x99\xb6\x1ed\xb6\x17\xd6\x025H]\xd4\xa6hT\x1e\x19\x85\xac\x18\xc6\xe8a\xa9@\xc3(\xf46\x8f\xd8\"\xa6\n\xb1\x9c\xf2\xf0\xbb6\"G\xd0\x83\x9e\xdb\xdcb\0\xd33\xfd\x0b\xa0X\xbe\x7f\x91Q\xae\xbd\xadw;W\xf31\bx\x06l\xd8\xeb\f6\xe5\xdcV\xde\xf7\xce\xb4\xed\xaf\x86P\xf6m{$\xda\x87T\xaf\\\xaf\x04\x8e\x97\x01o,\xa0\xd1\x953\x97\x0e)\xc9\x86VR\xbd\xeb\xeb\x07w\x1a\xf8\xad^J\xe4\xc8J(\xe1\xbe\x85\xd6\xafr\x98\xc1\xe9\xb3\xdc\x86\x9d\xbc\xcc\x9d|\x113\xc5\xdbzpQ\xc4$\"\xbd/\b%\x86\xd8\x98\x81\xfc\xb89\x86a\x99\x1bV\xc0\x1e\xc30q|\x18j\xc3e\xae\xfb(\x05:\x96\x8c\x98q\x18\xc7Kc\xc7Y\x19L\x8b\xd2u\xd5\xb6\xcd\xc3\xd0\xd8\\X\x88\xb9\x83\x94\xf90D\x89;\x005\xdew\xd3\xdcT\xe4\x9e\x13\xa2\x18L\xd9\xb9o\x03\xcc\x11\xd5\x96\x1c:\xa2B$\x9a#*e\xdb\x80\xabk\x021\x88\x18\x05\xa8\xba\0l\x84\xf4\xabP\x9a\xbd\x99F\x1f,J#n\x9a;\xb38A\xc7\x12\xf2\xbbV\xb9\x9c\xa9\xbb\x84R\xb7\x14!\xecq\x17\xb5)\xc3\x0eyDw \x8b\xd2\xfa\x98\xf0A\x8c\xd2\xeb}\xbd\xe9\xe7>\x0f\x94L\x9a7\xa7\xda2\x9d\x9f\xadXv\xaf\xfc\x81\xc1\xa58\x90\b\x8d\xb8p}\xc2\x8cr\xedm7\xd6\x9b9\xed\xe4\x10l8tR\xb5mi6\xad\x87\xb0\x15\xe7\x86\xfb\f\xe5\xe1f\xa0\x1a=\x82\xc3ba\x04q\xb0\xde'\xa9\x1cN\xa0\xab\x1c\x9e\xa6\x06m+\x9d\xd3$\xb8\x05+t\xad\xd4\xca\xf0%hRA9\x9d\xf9\xe9i+u:\xec\xea~\xda\xb7\xf5\xe4\x89Ce\xb1+\xf3\x19;F\xf9r\xb7\x83N\xe6g\xe7\x8a\xda\0\xa5n\xd8\xc2\xd9\x9d8\xc1aS\xcf0\x80\xf7\x14\x9a\xb1C^\x16\xa2r\xe2\xd4'\xf6sx\x844\xae\xa3\xa3\0\x86\xe0\xa3#\xa3\xb4\xe4\xec\"D]\x1e*Y\xc6\xc8.\xba~{\x07\x9d\xbc\xb9O\xc8\0W]tr\xdd\xbdpq\x91\xd1\xab\x8d\xd7\xa1@]5N\x18\xbd\xe1x\x17\x84u\xc3Cw\x8eQ\xa9\xc6\xe8\r\xc7\xbb\x0b\xef\xc1\xa9Qu\x98\x97\xafv\xbe\x07\x1e5\xb5\xf3\xd6\x01N\xb3\xf5<\xb4?\x18\xed\xf2\xd7V\xb6\xc8\\\x80\bT\x9c\xd1\x86\xfaV'\xdfa \xe5\x92\xa7\x9a\xfa:oY\xdb\xa0s\x1aaSH\xbbS\xaez\xde\xa8\x9f\x9e\xda~\xbaff\x9ey0\xda\xfa\xee\xec\xb6]7\x1d\xd7D\x8c6\xbf!\xc9\xc1\xa5\x1e\x84j\x17>K7$\xec\xe6\x94\x8c\xb8\\8\xe0\xdc\x81\x93<?*\xaeBL\x9bKj\x14\xd3\xa8x\x1d\x02\x88\xaf\xe9Q\xfc\xa0\xd2\xd3\xca\xf7|\xd9\xa2;A\xb15Tp\xa6\xb0\xa5\xe0LT\xfc\x8f\xc5\x81C\xbf'v\xe2m\xf3\xa5\xf1T]\x17o:\xe9A\xd1!\xe4\xf1\xd9\x91~\xe6\xa9\xf5m\xea1\xe13\x12\xf1}\xebX\x96\xc7'\xaf\xc3\xe4\xf2y\xdd\xdf\x90\xd9q\xff-\xb6\xc2cX\x01\x97b\xb1%\x06sM\x85B\xbe\xae]\x99\xe9\x18\x86\xe2u\x8d\x17\xd9\x17\xea\xa2\xf8<\xb7:K\x1f*\x13t\n\x91\x1e\x97^B\x8cGD@\xaeQ\xfc6\xaa5\xc1\xa7\x8a\x9e\xe1\x06\xc1\x8c\xa6\x8f\x01=\xe1\xf4`LZ\xcf\x8fJq:\xe0bq\x82\xb9\x1d\x1f\xdb\xfeK\xc8\xea\xee\xa2bu\x11@e)d\x19\xc8\x1a\xccr\xf0\xb1S}/tt\x90\xbf\xc6w\xfb1\xbdk!\xe7X\xbb:\0b\x1a\xf3\xf6E\x15\x99\xfd\xefyp=\x1b\x03\xea\x13z\x02@\x85\xdf\xaeL\xd4\x9e\x16w\xe8\xe9\x986\xa0k\xa2\xb9\xa6\"1h\xeb\xc0\t\xf1n\"\x0e\xf3~\xa5\xfd\xd4y\f\xee\x9f\xd3Q\xe7h?\xe1B(\xba\xa3\xc0\t}\x94@\x94pmi\x0b\xce\xf6\xac\xa9\r\x01+Y>\x0b\xd5\x80\xe9\x97\x95\xcf\x9e\f\x0e\rU\xfd\x13\x01\xae\xed\xbe\xab\xc3\xce\t\x17&EW\xe0\x86\xc7\xcfy\x15\xf6m\xaf\x85\n\xed\xae\xc7'\xfe\x99\xa2\xa4/\xba\fH\xe8\xa6k\xe5\xe3\xab\xb0\x16:n\xb1\xb0V\x931\xde\x82\x10\xe3_\xe5\f\xe4X>_\xc4\xfc\xaa\x0fg\x9e\x9b\x8f1\xa46\x0b\xa2l\xbd03\xd8\xc6\xa0\xfa\xb4\xb4\x9c\xf9F$f9\xef\xef\xbb\xde\x19\x8e\xe1w\xa9\x88\x1a\xfc;t\xc8\xf9\xa2\xac\x8c\x9e\xf3\n\x15Z\xf6\xca/\xee\xaf\xd7\xcb\x1c\xean\xb8b\xd2\xdb\xa0Aw-\xa0_G\xc5\xb8\xd4\r\xda6N\x0b\xb1}O!\xabac\x89D2\xf3\xb0a\x98L_\xc2\xb7>r`\x97\xa9\xa9\xcb|\xa9\xbbRe\x88O\xe8\xca1\xcaH\x82\xb47\xae\xa8h\xa0v3o\xc9\x8f\xefa?\xb5c\xf3\xd0>\xba\xa3\xe6:Iiy\xff\xf8e\xa5\x17L2\x1dYO\xd9\x13A\x15\xa5\x0f\x7f\x17\x19\xf3mh\xcf\x8cM\xddn\x9b;{1\xa3\xb3_n[A2;\xbe\x9d\xc7E2^\xf0\"v|\xc4[dd\x89\xbf\x0f\x8e)\xb2!A\xc0\x16\x10<\x1e\x02.\xc8\x80\x10\xb3c\xbcqq\0\x19z*\xb1\xfd\xab%\x81\xc2\x04-2b\xf3\xf7\xea\x82C\x107\x178O\xc1;a\xaf\x9a\xcd!4-\xd6\x19?d(\xa4\xfc\xe3\x93_\xa2|#\x9eI\xf5\xfa\xfd\x16T\xcbSx\xc7\x02]c\xdd9\x8e\x90\xa6\xdb\xbe\xfb\xac\x0e\xf3\x8d\x82yW#\xf5\x13\xbf\xca\\D\x1f\x8d\xd8j\xd7\f\xa1\xe1\xf8\x17\x88\xd6\xcf\xc1\r\xd1s\x8c\x98'^.c\xf6\xb3\xe5\xde0A\"\f}us\xb5l\xc2k,\xcd^\x84\x002\x9beL\x9f}\xd0}HO\x11#\xe8\x16F\xc0\x9e5\x82Oan\x9b\x98\x9eH\t\x9fP\x90\x17\xcfP\x03\xf7\xda(<Q\xb2\x0f\xd7\xc0\nb\xd1\xe3bt\xcd\x92\xe7\x88\xf99\xce\xc0\xf6\xc9\x96\x8e\x01e\x14\xfa\x96\xd2\x94\xca1y|\xbd\xba\xca\"(X\xfa\xebC\b\x1b2;\x1e:\xd4\xa2r\xf1\x95\x11\xba\xef^\xe5@<\xc0\\\xa4J\xb6x\xf2\xb1\xca#(y?c0g\x8b\xb04g\x9dX\xab\"\x98\xe2\"\x82E,\xec;\x8a\x04\xd53\xcc\xb3A\x874\x0fo\xb4R\xd0u\xfa*\t\xa3\xb9]\x12~\"\xcet8\x96\xb2gci\x8d\\\xc3\x13\xfe'<c@\xb9\xa9|v\xf2f\xd9\x1e2\xa9\xa9\x88'\x8ew4\x97\x05\xca\x11KN7\b\xa6\xbfPJ\xbfT\xedh]D\xb8gL\xa2,#|\xc9\xf3\xcd\xc5\x85~\xd41\xbevKr\x95\x87\x8eb\x94\\-\xb5\x83\x0e\x1b\xb1\xc9\xbd\xbd\x8d\x97\xfe]\xc5\x13-\x80\x06\x11\xb7\xf9\xcdD,:\x1ei\x9cY\xc3y\xaaqv\x81\xac\xd8d\x1aM>\xd1m\xe6\x9a\f\xcf]\x06G\x86%z\x06|\x94\xaeB\x98\xec!\\:\xe2\xa1\xfb\x0b\x10\xe2\xa1\xbd+\xc4\xf1C_/\xeaE_\x84\xa0'h\xeb\x188\x873[/\x8ax\xab\xf3W\x1a/s_{\xa3'\x82t\xd0\xeb\xe0.s\xbb;f\x9bc_o\xd5\xbe\xee]\x1f\x89\x03\xb7\x81\xd4Z\xc4c\x9fZ\xa6\xe3\xbfB\xb4.\x91Y\xf8\xec\x1d\xdb\xcf%.\xa3\xacp\xbc\x88z\x1d4i\x0f\x9a\xc7\xf7\rfs_\xb7\x96@C\x981\x17\xff\x9a\xd5DB\x8e\xee\xa4\x93\x8ciHJ$cv\xabJ\x1a\xbdu\x8ep\xe2\x03\xba\b\xb3'\x8d\xb7<n\xd6\xde\xe2\x03\x0f\xdc\xaa\xc4\x94y\x11\f\xc12\x9b'\x18\x85Z\xb0\x95\xe7c\xf2.\x908\xfc\xda+\xd6'\x07\xf5;\xc7Z \xa0\x1f\x16F\x16\xb8F\x9c\xd8U\xbd2Nr\xaeW=3\xe1\x1c\xe5\tO|\xb7\xd2\xaa\x8b\x87\x92\xc7\x95\xba\x85$\xad\xfc\r\x0e\xdc\xfb\x83\x11\x99\x0b\x82H\xbc\xedpJGF!c\x8c*\x04\x07\xc7\x8d\x9f8\xf5\x84'G\xe5xdr\xf0\xf5f\xe3L\xda\x87C\xd0\xbe\xacX\xa4E\x1b\xdc\xcb3\xc1\xd8Nz\xaa\x7f\b\xcaV\xff\xe8\xf5\xd8\xaa\xecAm\xbf\xb9\xec\x91\x91P\xd8\xa1\xf7G\x9eb<\xe11W\xb1\xc8\x89\x9f\x11\xaf\x03\n\x19T\xb8\xd6+\xbe1\\Q\xbc\xb01\x7f}\x19;\xc3\x19J_>{=5s\xb87\x9e\x89c\xc4\x92\xc3\x1e|J\x7fb\x1b\xdfII\xe5\x9f\xa5\xc5\x02\xf8E0\x04T!E\xca5\xcc3\x1d\xf9\xc6\xef\xe3\xa9\xfcg\xaar\xee3\x1cz\x98\xb9\xe2$sI\xab?\x97d\x9e\x05\x80\x8b\xb3\xf28\x83\xb9\xa4\fo.!#\xfc\xee\x80\xef\xba\r\xaf\x8e\xb7\x8b\xc7U{\\\xf8\x92\x06=q\\\xf7\x81w\xda\x13\x0f\x9d\x7f\xed\xc6M\x1f\x88Wp\xd1\x1fY\xa8#\r\x0e\xfca\x9aHO\x8a\x8c\xf0\x01\"\xce\x85a?!\xe9\x99\x8f\xf7\t\xf3\x9e\x8eGp\xd8\xad\xbc\x1e\xa5\x02\x99\x1e\xcf\xdaj\xbc_zq\x1eoO~G\xe1\xd0T8,\x8e\xc4\x81n\x86\t\x7f\xb3\xc7\xa3!\bl\x95P\xe8\xccP\xe8\xa2\x8a\xf7'\x1b\xccQly\x91G\xf3\xe4\xc5\xe4>Z\x16>Uyq\xd8\xa2\x8fc\xea\xff\xa2\xcf\x0f\xff\x0fC\x14b\xd6"),aq6=a("x\x01\xbd[Iw\xdc\xc6\x11\xbe\xf3W\xe0\x98\xbc\x97\xf1\x03\x1aK\x03\xf6\x89\xa2(\x9b\x89\x16G\x14%[7p\xa69D\x84\x01h,\x92\xa8_\x9f\xea\xbdP@\x8b\xca%\xcf\xcf4MVwW\xd7W\xcbW\xd5\xc3\xeb\xa9\x1e\xa6\x17}7\xbd\x12\xd3\xd0\xec\xc7(\xfb)9\xbb\xe8O'\xd1M\xd1E\xff\xf084\xc7\xfb)\xfa\xdb\xfe\xefQR\x95\xd5?\xe0k\x15\xab\xaf\x89\xfa\xca\xd4\xd7T}\xe5\xd1\xf9\xa1\xbf\x15\xd1\xf5\xe38\x89\xd3\x18]u\xfb~x\xe8\x87z\x12\x87\x9f\xa2\xe8\xbcm\xa3\xb7r\xb71z+F1|\x86\x9f\xfa\xa3\x06QOM\xdfE\xcfA\xfa\xe7\xe8\xdd\xfd\x1c\xbd\xaa\x1f\xa3(\x89\x12\xfe3\xe3?\xc7\x95:\xc1\xc9\xdft\xcd_\xb3\xb8z\x1eei\x9c\xc7\xee\xc7\xef_\xcdc}\x14QZ\xf1<\x8b\xf2\x98\xf3\xeaL\xde\xeeu}\x12p\x9dyh\xc4p\xf6bn\xdb\xe5\x0f\xeaS\xd3>.~\xf4A\xa8{\xbf\x12\x87f>\x9d]Mu\xdb\xec\xcf\xbbc+\xa2\xf8\xecj|\xd1|\x15\x87\xdf\x9bi\x7f\x1fM\xc3,\xce.\xee\xeb\xa1\xdeOb\xb8\x16St\xf9u\x12\xddA\x1c\xde\xf6\xa7\xbaS\xa7?{\xd6\x7f\x8dv,\x85\x7f\xf38\xe2I\x1e\x95q\x1e\x9d\xdd\x80\xd4\xd06\x9d\xf8\xbd\x1f\x1bu\xf9]\x12\xc7\xfe\xc7\xef\xee\x9b\xfd\xa7N\x8c#\\\xe4\xec\xbd\x18F)\x12\xc7\xe9O1H\xbd\xee\xa7f/\xfe\x1f\x10]\x82\xcc\xa1\xe9\x8e\xd7\xfb{\x01\x16R\x1b\\Ouw\xa8\x87\x83\xfd\xdd\xd9E\xfd\xf0\x9b6Y^\xb0\xb3?\xcc\xf7\x19+\xce\xce\xc7\xbd4\xc7\x10\x15\xac:{.\xec\xff\xed\x92\x9c\x9f]O\x87\xdf>Dy\"\xbfyo\xbe\x01\x7f\x94\xe6\xb4\xfe\x98&\xf9\xd9E\x94\xb2\xe8\x97\xe8\xc3\x1fQ\x11\xc7\xf0\xcd\xebh|\xa8\xe1\xf2\xbfD\xcf\xa2\xd8\xfc\xf3\x8b\x94J\x97R\xe2\xeb\xbe\xadOJ\x8c\xa5\x85<2J\x0bp\x0b\xce\xb4x\xb6\x14\xffk\xee\xc1\f\xb7\xadZ\x90\x94\x1cN-\xa3,I\xe5\x95\xf4\x82|\xb9\xa0\x9bO\xb7\x12\x96c\xa7\x96T\x000(\n^\x17\x15i\xa5W\x14\xcb\x15\x87\xbem\xebA\x1f\0.\xb0KX\x11eU\x11\x15\xf6\x04\xbe\x94\x7f\x10\xc3^\xfa\xb5\\P&\xea\x06yR\x82)\x8dx\xb9\x14\xafO\xb0`\x04h\xd4\x82\"\xd5\x0b@*\xcfR\xbd\xa0\xda\xb8\xb2\xf6\x1fe%\xb8\xac\xbct\xca\x0bw\xe9,&*\xd5\x83\xe8ZqgV\x14\x95\xf4Z\xb0\x13\xc8Y\xb5\xb2dc\x89?%)b\xbd&M\x13\xbf\x86 \\\x8fR\xb1\xf1\x93^\x91\x14\x11\xcby\x94\x95\x19\bp\xbd\x80\x80\xfd\xd0\xce\xa3\xb6S\f\xcaD9\x83\xffp\xed\x17\x19\x01z\x0f\xd9\xa26(K\xa3&\f|!\x8b\x12\xab\n\x81\xf9\xfe\xf1\xe1^t\x06\xb4\x14\\)\x01\xccx\xc4\xca\\\x8b\x17+\xcc\x9a^#\xc0X\xa5\xbd\x8eC\x1e\x8b\xb5Kd\x04\xe2\xb1\xad\xc7{\xbd9\x03\x8f\x90\xda\xf3\\\x06\x8b\x96&\b\x7f\x13Co4\xd1\x0e\x9dU\x99\xb7!A\xb7\xeft\x8c\x80\x83\xc5\xe0\x96\xb9\x13\xcc\t\xa6\xd3\x17\xbd)\x97\x91\x94q\x8fJN\x90\x9c\xee\x07\xa1\xf7\xe4\xb9>\xbe(\xbc0\x81\xf0\x0er\xa9\x96-\xd5\xf9\xdeAr\x82\xdd]\xf3\xd9h\xca\xcc\xa5\xb8\xc39'\xe0\x8d\xcdW\xe3\x13\x89\x97\xb5\xfb\x12\xe4F\xf1\xd9\0W2y\xb32\xf5\xdb\x12\xd4\x84w\xcf\xd8*\xe1\x03-'\xa0u\x8d7\xad\x92-+/[Rok\xfbn\xe5\x0e\xa9\xf1\x9e\xbc\xa2*\x9f\x1a\xbf\xc2\xfb'ZR\x10\xf4ZY\"\xa44\xc4\x1d\x84Q\x9eT\x80\xa1\xd6\xa5 \xf8\x89\xbf\xe6\xba\xb5Q\x92\xc8\xc4\0a\"\xa3]\t\x13\xfc\x8e\xb2&\x0b\r!\xc0,\xb7\x86(q[\xa74\x95\x88Q\x151\xed\xca\x95\xb1!s\xe9\xb6 @\xd6\xda\xdc\x9c\x9b,\x95:\x0b\x16\x04\xc6s%\x98J'\x02\xb0mb*\b\x82\xcf\xb4\r\x94\x18X\xd5\x89\x11\xe8.\xac\xa9v\x89\xcc\x8b \\\xea,Q\x10\xdc\x9e\xa3\xfdx\xe6\xf7#\x80]*\xb1\\\x1f\x1b;1N@z\x81\xc4 \xc181\x02\xd0\xaf\xfa\xaaF;\b2\xab\x1d'\xe0\xfc\xa6\x05\xa5[\xe7\xa0\xb9\xdb\x8f\xa0r\x85\x13\x80\xbf\x04'X\xfcS\xef\x96\xe9c\x0b\x9f\xfd9\x81\xe2_ZP\x054\xc4\x94\x13#X\xbc\xd4\xb6\xe3\xca(\xe8X\x82\xc5+-\xa6\x80Eg\x12 ^k?\x01\xdd\xa0\x14W\xbe\x1cs\x82\xc4\x1b\x0b\x98\xba\x04\x84\xac\xb5]I\xb0\xf8]oX)\xed\xbc\xedJ\x82\xc5\xbf\xfd~)\xd9\x90\x80\xf1\x16[\x05mH\xc0\xb8\xd6\xe7Bz\x81\xa8\xcb!D\xdc~\x04\x8ewh\xbf\xc2_\xb8$`\xdc\xe8X\xe3\xfa\xc2%\x12$p\xbcW\x82\xbbL\x99\xb0@~P\x12@>h\xc1\xd4\b\xa2\x1d\t&\x7f\xe8\x84\xa6\x83\xc3\xc7dI \xf9S\x8b)\x84\x11\xa7\xa8\b \x1fuJR^\x9ax\xed*\x02\xc8-\x90\xecOb\xda\"\x1f\xcc%\x8f\x8a`s\x0bkP\x8d\x05K\xa9\x1a[2Wc\xabt\xf3\x18DX\xc0IV\x84\xa5\xa2\xe9l\xdc7\xcd\xbe\x19\xf6\xb3f\x9c\xf0\xfbT\xf5 \xbe@V\x04\xbfY2\xe1\x11\x18\xb8\xa5\xb2;I\x01\xe4ow\\\xa7\xfa\xaa\x88\xd6|\xcd\xdf\x1f\f\xab\xe8Z\xe9\x11\xa8\b\xa2\xb5\xcd;*\xc9B^\xcc$;\x93\x82\x04\xd1[}\xd5L\x0b\"\nR\x11L\xf7\xb6 (A\xe6wLb\x02\xab&A\x99f\ny\x95\xb8-\x93\x98\xd6\xa5\xc5\x9eY\x89\xf6\xa4\xa4\xc2\xc0\xa8\\*5[B\xbei\x80D\xa8o\xda\xe8\xae5K\t\xaeG\xa4\x0eWY\xce\x9fB\xc04\xceb\xd3\x9c\xd7\x9b \xd8h\xa8s\xcb\xafrn\xe4\bn\xff\x89\f\tQGgI\x8cD\t`\x9fP\xd9)ct4\xc1\xab%G;9\x02\x97\xf6\xc6\x9d\x94+@\xce]9!`\x19\x8a\xa2b\x90c9\x02\x95f\x8a\x05s\xbd\x85\x97$P=h\r\x8d\xb9s\xbc'\xe5\x0eKd\xc0S\xbc(A\xc6\xd0\x91\xd8Ty/G\xa9_dX\x8e\xee\x99R$I\xb01\xdd\x95\xa5!2\xe5ZI\x02\xcd\xacMd\xfa00\x01\xf4\xb7F\x92\x80\xf3Y\xfb\x8f\xeas\xe0>1\x92$\xf0|\xf1\xa99V\xa9\xd9I2\x02\x90\xa6\xbd,6\x8e\xe1\xe5\b@\x8f\x91-\x97\xca\x96HKF\0\xfa\xa6\x01Ru0\xc6r\x1b\t\xd1g\x9dD\xb9\xb1\xcc\xba\xa9g\xde\t\xcbh\xda\xd5H1\xd9(\xc8\xb1G\n\xbb\xf3<6\xd2\xf9\xc6\t\xb8CL\xcd\x11\xa8\xd9\x95\xbd\xf2:\xe3NM{0\xd9#\x85\t\x07W\x94.e\xe6\x9c\x15\xffU\x13\x81C\xff\xc5x\xbb\x9e\np5\x16\x80I\x92YD\xcc\xe4:pI\xf6\xa1\xc7R\x9d\x8c\xf4K%Ll%\xdbV\x18\xde\xe8\\\x03u}\x07\xf0\xe4\xf0o\x91\x18\xa7\xa24\xf8NN\x8e,o\x96\xfd\x8fD\r\x82\xb8(r\xb3\x80\xd8\xeaQ,B\xd5\x97\xcb\x842\xe2\xbb\xb6\x1f\x1a-,\xfd\x0brJ\x9e\xfa>%\xa1\xccx\x14^\x11\x19\xa2; b\x99\xa43\xa55\f\xedl\xe6\x01\x1a\xfb\xbdq\xb8Tv>9\xe3\xaa\xe4i\xf9\xadi\xc3\xd8\xa81\x9a\xba\x01\x04\xb0\xaa_\x10\x9a\xee\x12\x948\xdb\xa9\x8c\xf7\xbfL\x0f)d\x9f\xeaW\x11\xa0\x8fs\x03+N\xbd'\x0b\xe0\xac\\\xd3\xa9,3\xfaQN-\x17)\xf5\xd0Y\x95\\\x95\xe5\tZ\x95\x06V!\xff\xddZFq\xd7\xb5\xc3v5.\x7fS\xc6}\xd7\x06\xe4\bz0V\xb3$\x07\xb6\x90C\x8a\x1c\xa2\xcc\x0e)\x12J\xaa\x0f\xf5\xf1hz\xbbD6C\x12\xeb\xdc3\xd2\x84\x92k-\xef\xa6c[K(\xcd\xd6\x83\x10\x19=b\x10v \xc2@\x0eP\x87\xb5)3\x15\x90\xb2i\x18\x17\xd5\xc7\xa1~\xd0\x97\xc9cuR\x9e \xb4)\xb1\xbe\x85\x89\xae0\xa6\x07P\x93T\xa6G\xc9\x8bR#\x9f\x85\x1c\xf1\xb6\x1e\x8d/&\x8a\xf4f\xaa\x1bVLF-\xcc\xb7\x9d\xd1-K2\xb3,\x83\xb0\xf5\xcb\x8a\xede\xd8C\x8c\x13\xe7\x1c]\x8b\x07\x9c\xd8\xaf\xdb\xf0bJ\xcdE\xdb6\x0fc3Zy]\xacR]\xc9\xd5\x82j\x85\xd3t\xdf\xcfnn\xa8\xb9b\x81\xe65\te\xe2\xb6\xd9w\x99T&k\xcdm \x12]&\xa5\xcc\x1aP5\x83\x9e$\xd7C4\xe9\b\x05\xb7\xa7PJ\xbd\x9f'\x83\x0e\x10|)\x9eAJ\xf1\xe2\x04\x1cM\xbe\xefZa\x06DL\x0e+\xa4F\xc0\xc0s\x93\xae)\xa1\xf6\xe5Cr;9\xc6\xc9c\xd9\xf9\x18\xdbR6}\xaa\xf7\x83\x1bq\xc4*\xc2\xb2R\xe2a\xa2lE\xaa\x07\xe1.\f\xf91\x96\xf9@\x8e\xb6L\fSj}\xe8\xa7z\xef\xca\r\x93\xb5\x06\0La\xb0Vd\xda\xa4l\xc5\xb1\xe1\xb5BX\xb4\x13`\xcerE\x06\x87\xf9\x15$\xbc\x06[\x9d\x18\x14\xd7\f\x1c#U\f\x97\x1b\xe9\x94\x16\xbf\x038a\x1d\xd9~c'\x91K\xc1c\x13\xbb=\x9d\x96\xce\xdd\xb1\x1e\xe6S[\xcf\xc6\xd5a\xb2\x93\x99\xc2l\xb1c\x94 \xf7G\x18V~2jI\x82\x05\x82\x19P\xe3\xcc\x88\x13\x1c\xf6\xb5\x87!SS&\x85rQ\x19q\x1a\x12'\x97\x1bc\x95\x1a\xe5/ljd\x94\x8c\x9c_\xfa\x8c\x8b&:\x8c\x11%\xfa\xe1p\x07\xd3:7\x0bL`\xa6(1\x93\xdd\xa8M\x8a\x8c\xbe\\\xbc\xf4\xbd\xe8j<\xc2\xe8\x03\xc6\x1b$\x9c\xaa\xbeUN!l\t`\xf4\x01\xe3\x8dV\\m[p\xb4m\xbeR\xfc\x04\xe4in\xbd\xe6\xdch\x9ez\xcd\xe9\x14\xbf6\xb2\x95\xe9\x10cG\xa9\x19\x9d\x98\x1fd\xdd\x1dG\xd2\x1dY~\xc92\xda\xca\xf8k\xae\xfa\x19\xb6\x1aj{a\xd9\x84H\x9b\xc8\xe9\x8c\x89XFG\xdb\xfdRk\xd420:\xdc\x86\xfa\x06/v\x90\xa6\xcd4\xb5\xd4K\xca\xd2)\xb3#+\xae\x16\xd1\xe7\xa6l<O7\xc5\x85Oh\xa8\xd5\xb51A\xa5k\x9f<P\xfbns\x07\x95\x9eWqg\xfb\x942\x0e\x1e!|\x1ca\x85\x8a\xed#\xfe\\\xdc\xd6\ruB\xb7=4\x9f\x1b\x93[K\xf9t\xa3\xbb\xb0\x82o\xef\x8ds\xbd\xd9X>\x92n\xc9\x9e\x93Do\xa9\x11/\xb7\xf7\xae\xfd\xde\xd8\x90\x01\x9b\xdc\xd02\xe2\xc7k\xa1\x03\x1e\xfd\x01\xa8\xed\n\x1d0\xaa\xe7'\x94\xe7e\x93*\xfd\x16w\xa9k\xa4\x96Za\xb8Lm[]\xc4%z|\x85\"\xde\x16^\xd6\x11\xb4 \x80n\x8d2\xb6\xb2*\x97I\x8f\x07/p\xe3m\x84v\x0fA<\/\xea\x81\xd9\x1d\xb5\xd1T\xfer\xa1\xbe\x1b\xc6\x87\x94\x7f\x0eU\xdc<?\xa41\xe9\xa2\xa8,EK\xd6x\xdd\xd0BZ\xdd\xc9\xc7\x9e\xcdE\xf6Y\xde\x0e\xf6J\xf5;\x9b\\W\xfa#b\xe1\xb4/\xaa\xc0\xe6\xeb\xa8eU0jk\xe7\x06\xd8\xf9\xd9\xb6'\xbf\xa6\xb7\xe5\xc65\xd1\xd8\x9d\xaei=\xb2.{\x87p\xad=\x03\xfc\x81P|G\xb5I\x8d\xe9\xf1P\x9c.\xba\xf0\xea\xa0G\x9e\xa0B\x9e\0.\x92l\xc8\xcd\x16\x04\xedI?\x1b=Rh\x12\x15Bj\xc4\\K\xcb'\xdfM\n\xcd\x86\xe5C\xb6l\xfbo\xa2;\x9a\0\x94sMY\xeby\xe0\x9eo\xbd\xde\xeeQ\xa3\x8c\xb77\xfeu\x05Rb@B\xafW\xab\xf8&\xe9\f\xcd\xd4B\xe9\xac&K0\\\x81%\xe7(\xaa\\\xff\x1c\b\xaa\x01\x05\x95\x1d.\x86\x80\xdac\xa0t\b&\x8bI8]\xf0q\xe97\xee\xa1#\xe47\xef\xee\xfbA\xeb\xa2\x1f\xa9\xd22\xe8\xeeo\xd0\x1d\xd1\xd3W\xe8\x9ao\xbd\xcb d\xb7c\xe3\x1a\x955\xfff\x15\x92>x\x03\x9a\x89\xbf\xfc\xa0S\x889\xdd\xe0N\xca\xd7\x83\x90\xda3jZ\xbc\xa7\x04\x92\x98\xfa\x90\xc28\xab\xf1\x83\x99p\xc0\xf0\x99A\x16\xc8\xd0c\xcc\xca\x90>5!;\x069\x88\x97\xb6\x9e\x15\x14\xf5<\xce1\x95t[\x87\xd3\xdcN\xcdC\xab\x07j\xb2\x98B\x9a\x93\xaf\xe8<\x10E\x884!\xb3\x04\xb3)\t\xea\"\r\x065\x8c`\xa6\xa6n\x0f\xcd\xdd\x9d\x83(\xd5\xe3\x1e\x9el+\xf3\xb8(\xc1\x98\x07\xb1\xed\x05\xaf\x97\xacI\xbf\xed\x86\x8c\xd8\x90\xe8\xaf2\xf7\xe4\xb2\x1d\xfb\x97\xebtaru\x88%R\n\xe1k\xe5\xb6\xfeb\xb1\0\x13\xb2\xc0\x82\xfd\x9a\xfe\xb3p\xf1\xeb\x10\xb8\xf6Q&$;\xa3hB\x9e`\xc7\x12\xeb*\xef<\x01[~{\xef+Tdl\x83\x13BI~\x06\x0b\x1ab\xfbA,\xae>\x88%\xf7\x0f\xd0\xa4\xdb\xa1\xff$\xba\xc5S\x81\x9c\x7f\xca\xa7\x82\x82o\x1f1\x88c3\xfa\x81\xe2\xd3\xd4\xeaW\x14~\xfec\x15\xa1\b\xbcZf\xea'[\xbaq\x86\xe2\xe7\xa7\xe6\xf2\x02R\x95<XZ/\x17\fH\xbbd\xc8\x9c\x03r\x18W\x93\x02.\xd0#\x17@\x8fs!\x17\xf8\xe8\xb7v\xd5(\xa4\xc6G\xc4b\xbc\xec\xb6\x1a\xe63C\xfesFUi^\x97By\xe3r\xd2\xcd\xfc\x93D\xfc\x02W]E\xedd\xd5\xcd\xc2\xc8\xb7\x94\x99T\xe6)\n\xcf\x17V\xc5\x03]\xd6?\t\xf2d;i\b\xd4\xa7\xa8\x98\x96}JV\x86\xbb $\xaf\xca\x9e\xea\x9a\xc2d\xf6\x1c\x95\xeb\xa7\xca\xcc\"\x1d\xb9J\x13\x1aEx7\xfc\x81Q\xc47\x94\x03\xeckaH\xb6AW\xacrsE\xf46\xbe\xaa\xbb\x88\xaf?]w{\x14\x12\xde\xcb\x83#\x94e[e3z((F\x14\x14\x88\xae\x87.\xba\x1c\xfe\xf8\xc1\xd5\xb67\xbe!\x05\t]6T\x92n\xd0\xbc\xfc\xe9\x9e\xf9\xb9h'CI\x15\xf8`\x96\xb2\f\x10$K/w\xe6\xfdS\xbe\xce\x07#\xe2K\xbf$S\xdc\f\x0bY\x16&S\x0b\xdb\xe0\xab\x06\xfc\xf1\x84\xdf\xd6\xf9\xe2q}ewo\x95'\xbb\x9e~5\x15\xb3^\xf3\x9d\xa9\xd8\xe5\xd6h\xa3H\x82Az\xf0\xd3\x84\x8d\xcf\xbal\xb2SH\x8f\x03\xa4IS'a\x8cP\xa8\x1a\\\x14\xdbW\xbe\xc6\xa9\x8f3\xdfp\x84S\x9f\xcbb\xdaF\xea\xd3\x95\xdb\n\xfd+\xd8e\xa3\x0f\xf8\xd1E/Q\xd4\xda1v\xc81\xa7\xa1>\x88S=h\x8b\xca\xbf\x83`\x85T'\x9c\xf6\xc4\xb2\n\xff\0\xb7\xbaBN\xf1\x14K\xb9BY\xc1\t\x87:\x8f\x97\xa8\xad\xa1\xf3\xfa\x95\xb7u\xe2\xben5c\x8e\xd5C\xbe|\xf5/\x02\xd9FN\xc8\xff\x87:\xd9\xd3\t J\x7f\x01\x0e\xdc\xf9\xe1\x86\xa7\x90\x01^r\xb3~\xb71)\xa7\n\x13\x94\xcb\xc5d\xf5\xfbdF`\x82\xe2\x01\r\xe5\xe2\xa3\xa7m\xf8\x13[\xa1\xf17\x98\xde\xc4\x14\xb6>\xfc2d\xfdk\xc4\x81qs\xcb\x02\xd2t.\xc6L\x8c|'\b\xdf\xacLj\x13a\x196\xd3\x01*\xb3\xf9\x88}\xa2\"\xa5R\x8f\x98\xa1D\xdb\xa3:\xfet=\xbc@\xce\x8cgc\x81\xae\xc2\xef\xfd\x03\xed%\x04y\xb3\xaf\xed\x87\x15t\x16\x84|_\xb1\xc0\x04\xb6FS\x0bM\xfcBz\f\xd4\xf8\x85\x1d\x98\xe7\xe1\x91\xcbk\xef\xfb\xbe\xc7\xe1\x81\x14\xd8\xa3O\x11!+\x06\xa7c\xc1\x84\x19\x9e\xd3\xbc\xa4\x8b2;Z\xfdNB9\xf7z9B\x17\xb8\xc29*Z\xa6f\x15qX\x9ds7P\xf1L1\xe0\xc5^\x07\\\xc7\x03j|#\xfd\x93c\x8b\x81\xbc}\xe9\xfd\0e\x90@o\x86\x99\xa5%\xdbq\xd8z\x9fV&O-Nq\xb0\x1a\xa2\xf65V\xaf\xb7\xf2/$X\xb9\xcdZ\xae\xe8T\xc2\xb5\x8b\x01F\xd7\xf9\xeb\xfa\x8c\\\x84:\x11\xfaNd=\x06}Fq=\xe6=\xca(\xecz\xb7D~2C\xd2\xd84pL\xbf\x1cc \xf7\x0f@6/\x9f\x01\xf1<n{\x01(\xe3\xeb\x9cj\x91\x0b\xdd\xb7\x05 8\xaepC\x05\x80\xc7\xdbuZL\xf7\xeb\x0b\x04|\x14\x91#\xe7\x9f\x01\xebtT\x17\x80\xcdM\xb7C\xb9\x07\xbc\x940ff\x18s\x19L\xe4\r&%\x96\xd6\x86\x8a\xe3\xe5l\xfe\n\xcc\xff\xf5\xe3ew@\x7f6)\xff\x17\xfdU\xef\x7f\x01\xc8+J\xd6"),arl=a(jI),ark=a(bb),ari=a('x\x01\x85\xbd\xd9\x96#7\x92-\xfa\xee_\x91k\xf5\xcb=k\xdd\xee\xa2\xcf\xce\xd6\x13G\x95JURuI\xaa\xe9\x8d\x11\xc1\b\xba\x82\xa4\x878d(\xf2\xeb\xcf\xde\x06\xc0`p2\xfb\xa42E\xb7mp\xc00\x1b\f\x06\xf8\x7f|\xfaas\xd8\xfe\xf7\'\xfd3{\x1a\x1e\xb6\x9f\xbe\xdd\x7f\xbc\xed>\xfd\xb9?_\xb2\xff\xf8\xf4\xf3\xe6a\xbf\xfd\xf4y{:\xf7\xc3\xf1\xbf?\x15\xff5\x01\xb8\xdc\\\xeck?m\xdf.\xdb\xc3\xc3\xf6\xf4\xa9\x98\xfc\xff\xf87)\xb2\xff@\xa8\x9f\xb6\xdbO\xbb\xcb\xe5\xed\xbf\xff\xf0\x87\xb7\xcd\xe9rD\x1c\xff\xb5a\n\xff\xf58\x1c\xfe\xb09\x1f\xff\xf0\xb4\xfd\xbc\xdd\x0fo\xdb\xd3\x1f.\x1fo\xdb\xe7\xe1t=\xfc\xe1z\xec\x1f\x87\xa7\xed\xcb\xf1\xbfv\x97\xc3^"Z\x0f\xa7\xc3\xe6\xf2\xdf\x88\xf0\0\xde~8\xfe\xe7\xd3v\xdf\x1f\xfa\xcb\xf6\xe9\xd3s\xbf\xdd?\x9d\xff\x1b\xa1\xcc\x9f\xff/\xff?\x9f^$\x17Gdp\xc4+\xfe\xcf\xa7_\\\x1a\x9f\xce\x8f\x9b\xfd\xe6\xf4\xe9\xf3f\x7f\xddf\xb3o&\x93*\xcff+\xfc.\x1a\xfcn\x1e\xaf\x97\xed7\x93|\xbd\0q\xd8<\x9e\x86#\xa8U\x01\xea|\xd8\xec\xf7\xdf\xac\xdb\x15\xc2\xf9`\x93E\xee\x9f\x95\t\xe0\xe1\x84,\xe2-\x14\x89{v\xa1\xf3\xd5l\xe5\x81\xc7\x8fS\xbf\xdf\xf7\x8f\xdfL\xaa\xe5\xc4cO\xc3\xe5\x01\x05\xf3\x8ep\xf3\xc6c/\xa7\xcdg\xbe8\x0f\x81v\xc3\xf0\xbay\x18\x1c\x18\xa2\xbf\xf4\xfb\'\x01\xaal\xf6\xb8q\x12/\x96x\xeeO\x8f\xfb\xed7E\xc5\xf8H\\\x0f\xcf\xfb\xed\xef\x14\xbb\xb0\x80\x8aWY\xd4\xc83[XF\x10j\x96\xc4j%\x9bu\x96\xa3E\x93$\x1a\x84\x9e\xcd\x802\xfdu\xb3\x98\xba\xc7\xf0\x82\xe4\'\x96T\x8eBxz\xd8\xbb\xe4\'hq \xfb\xedi{\xee\xcf\xccR\x15I[\xbcE\x84\xb5:\x97\xab\b\xaat|\xdfdy"dl\x01\xa0}\xca\x93Ex\xd6w\x01$\xf9G\xa2}R\xc9\x88\xbc?\xa2C\xa1\xf5\xfa\xd6Q\xb0u\xec\xdfv\x9bo&\xe54w\x8f\x97\xe18 /e\x87\x92\xd5\x94\x99\xcf\x03\x19o\x9bG\x94\xd2\xba@\xe0\xe1e8n_\xc9D\xc4\xa7\xfe\xf8B\xa9j\xf7\xa8-x\xe6\xe8\x90#\xc6CZ\x85F\xf8\xf0\xdc NW!\x88\xa7\xf4\xcf\x1a\x10\xc0\xc7\xc3\xe6t\xd8\x1e\xfb\r$\xaa\xcb<\x9b\xb3\xdf\x14\xd9<6\xb16\x9b\xa3\xbc6\x8f\x8f\xdb\xe3\x85\xa9\x15Bk\xe2U6\xb7\x05\x92#\x8a\xed\xd1\xc6\x89\xf0\xdb\x8b\x14\x06\x9eX\x98\xc8B\x87P\xfb\xfe\xb8\xd5X\x9al\x9e\x14\x05\x82\xb24\xbd\xa4\xcd\x1a\xa9h\x96\xc0\xbb\fo\x90\x9b\x11\x15\xd9\x82\x12\x97\xd9bc\x13]\x81\xf6\xc5\x85\xb8\x17\xd2w\xd0\x0eg\xeeQ\xa3\xad\xb3E\xe8W\x93\x05\x9e\xb7O\xc8\xc7\x86e\xd5*\x15:\xd1\xa4SH\x0b\x90\xa1\xb4\xa0:G\x84\xbe\x98\xf3\x05\x94\x14\x9ff\xf2\xe4\xcb\xd0\xd1iL|ygsPM\x01l7\x0f\xaf\xbb\xcd\x19\x88)\xe1\xf9\x82\x1c\x03\x14-\x01T+b\x7f\xda\x9e\xee\xbe\xb3J\x82XN#\x9c\xdb\xfe\x85"\x07cgE*\x89 \xf2\xd7\xcdy\x14\xffbN\x16\xbbA\x8fA\xf8|9\r\xafVB\xc9]\x8f&0\xa3\xa8\xbe\t\xe0q<\x924kH\x93\xb4\x03$9\x18\x11\xea<[h;(\xb3%\xab\xbe\xca\x96\xfff\xaf\xc8\xf1\xab\x83$\xc0\xa4=\x90~>A8r\xbbi\xb6\xd4j_\xe1\xd9W{\xbe\xc2H\xb4\x8c\x15:u\x84\x1314\xd5\xbc\0z\x1a6\xacG\x06O\xfa\xc6Lhm\xd5\x8bl\x99\xf4\rH\xb1\xc5\\\xf5v!Y\xae\x90\xf4v\x8f\xaeQ\x14h\xa3\xf2\xf8r\xda\xb2\xf7\x97S\x84\f\xe5\x848\xc3`\x88\x16<WJ\x07\xd7\x85B\xdf\xca8\x06h\xa9P(-\x8c\xdc\xcb\xfees8h\x1aK\xbc\xf7\xab\x15\x0f={\x99tJ\xc8\x97T\x06\x84\n\x99\xd5\nk\xb3\xe5\x19\xcdx\xe7KC+\x07ac\'\x85\xd0_XEH\xe0\x8bVQ\r\xe2n\x03\xc7\xa0\x0b\x8e\x15\x8cA\x93&?Yg\x9c\xd8\xab:[\xe9\x84=\xf5\xcf\xda9\x01\x84\t\x1b%\xbf\n\t\xe73<\xbb\x1awl\xd4\xe9\x02\x90m\xea%"\x8e\xed`\xe6\x888\xc9&@\x18\x1f\xd0\xc7Vw\x9aKgQ\xd38\xa0\x94\xacn\xa7^\xcc@\xab\xfbS/f\xf6\xd5\x9d\xa97\x11%L\xbd\x0bf\xd7\x94\x16H;\xbf\x924\xf3\xeb<\x92\x1a-1\x19\xba\xf2F\x9et\xe8\xf2\xb4*4\xc8\xde\xb3\x1d\x8b\x10\xb7\xce\xa6\x9d\x7f\xd6X\x01$\xa5\xdc\x82\xb6z\x0f2\xd3\xbf\xec0z\x1c\xc0/\xf2\x06\xfc\x9b\xc9\x15\xe9\xf7\xc3\xa5\x87\xa6\xf8d\xd2E{[\xedmWC\x06\xf6x\xe3\xa8q!n\x9dy\xd1\x87=\x11*\x8f\xd9rH\xa8\t6\x99\x83\x8d\x11m$\xe9\rh"\xb6\xd5\xe6K\xd0\xf7FX\xe8\f+\xce\xe3y5\xe3C\xd2\x8e\xa1\x98\xad\x8e,\x02;\x96"\xd7\xaa\x06\xb0\xf9@\xa5\xa6\xd0S4\x8d\xb7s\xbfg\x0e\xcai\x1d\bU-\x10\xd2&[ 8\xcb\xect\xde>\xb1\x0f\xae"iCAj;\xeaC\x07Y\x9d\xef\xe6\x02\xc2K/\x9f\xa1[i/\x87\x14njo\xf9`j\xb6#\xad\xa2\xe1\x95\x0b\xde\x9d@%\xc6Cx{M*h\xb8\x0b\xff\xac\xfd\x06\xe9]O\xc37\xc5\x04:\xea\xea\x0bS\x86&\x82\x87\xd0\x8d1z\x8229DS\\sLh\xb2u\xec\xba\xf3lm\x07\xe8|\x95\xad\x939\xadFh;$W\xd9\xda\x8f\xbbP\xdd\xd6=\xde\x8cE\xd0\x16@\x90\\hQ\b\x9b4\bD5\\O\xca.\xb3\xb5\x96S\x93}K\xd1\xda\xec\xdb\xf9\xf9\xb7\xeb\xe6\xb4\xfd\xa6,1\x01~\xab*]\x85g\x8c\xcd,\xca\xd2=\xc6\xe9jJ\xe6\xf1\xa5\xdfD1g\xd9\xb7:\xb4\xad\xb2o\xb5L\x90\x8e\xea09\x94\xa8ocI,\x1c\xa1\xdaIN``B\xa1k3\xbc\xeb\xf4h;\xdf\xdaNO:\x99\xc8 \xe3n\xf3du\x03\xbc\xbb\xc3\x82\xee\xe9i\xbf\x1d\xb5g\x8a\xbf\xdb\xde\xe8\x04Sy\xe3\xfav\xb9\x9el7B+\xff6\xd4\0R\xe9\x0f\xb6U\x01Hg,\0\xbeSc%\x877\x93\xfa@\xf9\x86\xf9p\xe5\x1e\xb5>\x10T\x9f[\xff\xecR-\xa6s\xd0",\x0b\xb4\xca\xfe\xc8\x8a\xeb\xb2?\xe6\x1d\xd2\xff\xa6\xa8\x17ky\xae\xf8\x8cN\xc1\xe7:\xe7\xf3<\xfb#&\xf2V\xf0<\xfb\xe3_\xb5\xa21\xc0\xfeqso\xa2\xc3\x9c\xfc\xc7\xcd]\xa5\xac\0\xe3\xf4t\xee_l\xf0\x02\xa9\xb9\t\x15M\xed\x8fR\xff\xa1\xb7\x90\x15\xb5\x98\x02\xf1\xc6\x8a_:B+\x1eC\xf4\x1fu\xf8G`\xc4e\xbb\bZ\xc1\x1f\xcd\0\xcf\xd0I\xa9"n\xab\x91U\x13\xd0\'\xd3\x83\xc0\xd7\xa2\xc5\xf3\x15\xeb\x16\x18\x02\xf6\x9b\xeb\x85\x15\xb1N\x10\xd5"\x10\xf0\x8b\x96\x17\x9a\xc0w,\xf4i\xf6\x9d]%\x16\xeb\xec\xbb?A~,(\xbe\xfb\xc5\xe2\xab\xec;U\x02\x96\xfeY\xa7\x1c\0\xa1\xa7\x14\x8b\xec;\xd5>\x10Y,\xa2\x95#\xe2\x04\x9f\0\x1a\x17Q\xd3\xf8\x9a\xec;;\xabv \xcd\xac\xba\x8ed\x98d(\xe9\x1dM\x1b\x8d\xec\xbb\x9b\t\x98\xafK_,\'\xf2\xa4}\xd1\xd3\xaaF\xcc\xb2\xef\xb67\xa6\x07\x88\x96\xf4\xd7:\xfb\xee\xf9\xb4yE_\xc3\xc8\x84%\xdaw:G/\xfc\xb3&\f Q;\x90\xad\xdeFEz<\'C\x86\xfe\xbc\x1bN\x17\x1b\x10\xd5\xa7\x13.\xda\xa7\'l\xbeQ\x91I\xd3\xc2\x1bhU\xa6\xbf\xcf\xb3\xef\x06[\xe2\x10\\gF\x16\xe6\xe0&\x9f\xa9<\x99\x01\xb3\x11 \xd6F\x89\x8eJD\'$\x90\xdaH\xf1\xb6\xf6w\xccc\xdf\xf9\xe5r\x8e\x96\xfe]2%\xb1\xfd|\xd9\xf5\x97s2)T\x01\fm\xc12\x9b\xecOl\xc9\xb3\xecO\xc9\xda.\xcf\xfe\x14\x1b\xdf\xda\x11\xda?\xb1V\xf9S2\xc8u\xd9\x9fF\x0b\xb1y\xf6\xa7\xa4\xe0\x10\xbffg\x96}\xcf$\xe7\xd9\xf7f\xaa\xa9\xb3\xef\xbf\x8f\xe3\xd12\xfb~\xf3\0\x9d\xfd\xb5Of\xf8\t`\xdfRKy6\x95\x89X\xef\x8eTS2\xc6\nL\t\xec\xedM\xaa\x86\xec\xdb\xa1\x7f\x05\xf4\xab\x8b\xc5\xe9"\xfb^\'\xb4\x0e\xcf:\xa1\x95\r\xa8Pn\xd0\x94\xbfO\xe7/\xb2M\xcf\xc08\xf1}:\xd7W\0\x12\xd3\xc4:\xfb~g\xb3\t\x9d\xee\xfb\x9dU\x07\x10c\x98\x8c I:\xf7@L\xbbZB\xb5}\x9fT\nj`@)\x98W\xba\x89\x83t\x05\x86r8\xdb\xce\xd5\x10\b\x159\xcf\xfe\xcc\x8a\\d\x7f\xe6\xa8\x07\xad\xf0\xcf\x7f\xc6P\x89\xe6\xf2\xe7\xa05\x94S<\x1f\x1e\x9e\xa4\xa4\x11<\x94Z\xb9\xc4s,5r\xb4\xd4rG\xa4\x8b\x94\x12\x89\x8c\xca\x12/\xf9\xf1g-O\x91\xe3h}\xb5\x89\xa4N\xc5P\xff\xfe\xdc\xbf\'E\x8d\x14~e6\xc0I\x8b\x11yH\x8aq\x96\xfd9)F\xbc\x18\x16\x98\xe87\xeeY\xe7\r\xbc\xac\xe5\xb5\xc8\xfe\xc2\xf2Zf\x7f1\r\xbf\xc9\xfe\xe2\x84Z7P>\xdd\xb3.\x89\xd7\x04|\x83_e\x7f\x89\x85Td\x7f\xb1S"\xe6\xb8\xbf\x98,C\xd7\xf9K\xd2\x8e`\x82\xf8K"3dP\xb1\xf0L\x15GTT4\xed\xbf\\YY\x8b\xec\x07\xca\xba\xca~\x90\xba\x9de?\x84:\x85\x91\xe5\x87P\x8f\xd0\x17\x7f\x88\xf5\x88\xc5\xee\x0fQ\xc4\xd2\x11i=b\xa0\xf9!\xadG\xbe\x94d\xa5\x12Z_h\xb2\x1f\xd8\xc0\xf7\xdbg\x86\x9e.\xb3\x1fP\x17\xaa\xc2v\xd9\x0fRis\xfc&\x95\x86tl\xa5A?\xfa!)\0dlx\xb7%\x84t\xb4D\xc0\f&\xc9e\xee\x9fuM\0@Jh\x99\xfd\xc8\x12Zg?b\xa1\x9f\xd7\x05~\xb5\xd6g\xd9\x8fa\xc2_\x96\xfeY#\0\0%\xe9\x94\xacr0\x8cx\xf0\xde\xf4\x8b\xe8\x82\x8a\x80\x1a\xf91\x94>d\xfb\x91\xa5\x86\x17\x9e\xc2\x9c0\x85<\xb1\x0e*G\xa8\xda\xb0L\x80\xd0\xb4\xd0\xee~\xbck\x01Xv\x96\x11\xd6\x9d\xb0k\xffx\xdf\x02\x90F\xaf\x19N\xd0\xb0\x9e\x82\x06\xf0\xa3\x1d\xbf\x91/\xccO\xa1\x91\xd5\x13!UuY\x80\x8c\xaa\x0b\xdf\xbdWN\x06\xd6\xc4\x89\x19e\x04\x11\xc9\xfc\xacU5\x07\xe0U\rf,Q5`\x0e\xfa1\x19\x9fk\xd0\x07\xb4;\xa8\xa4?&:\xc8\x8a\xf4\x89\x95\x82IJ\x1e\xb5pg\x8e6B\xac\n\x07i\x81.\x1c\x9d\x14\xa5\x8f1\x14\xd7\x8a\xd1ZU\xd5\x95Q\xcf\x14\x11\xdd\x8d\xc2\x83\xd7U\xb7\xc1\b\xfdcjL`kM\x8d\t\x8c\xec\xb0}\xd9\xf8\xcc\xf1\xd1\x0e\xfb\x9e\x1b\xe6\x05,\xb1\x85>\r\xd7\xa3m\xc6\xed\xcc\xe1\x97\xfe\xb2\xb7zQ\xbb\xf0xPo\xd0J\xb1\xb7vr\x96\x02%\x94\xcd\xe0\xb6\xb7"\x84\xe9\xf4\x10F\x95,\xf6\rG\xc4\xfd\x12\xbc\xed-\x12\x18]\x7f\xf4c\xf3\x84\x8dY\x9euI\xbb\xf2\x80V7C\x841\0I\xba\x89\xdf\x06\xb7\xeacK:\x8c\x12\xb5\x7f\x0e\x05\xcc"\x17\xc0\xacc\xaa\xf0\x82\xa6Wg\x7f\xc5\xcb(\xfa\xbfj\xc5T\xd9_c\xf7\x05\xdf\x0e\x8d0\x05\xfc5Q\x9a\xd7\xa0\x13\xb5k\x06\xe0\xee\x12\x17\x1bf\x7fu\xf6m>8\x85\x01\xa6\x9d\xbf\n\x84\xf4\xfb\xf7\x93m\xe7e\xf6W[\xfeP\xb6\xfez\x96\xa0\x1d\x1fl!\x90\xe3\xb3\x83\xe7\xffav\xf2\xec\x7fb\x16\x9a\xec\x7f\x92\x98\xc0\xd4\xf0y\xf67\x86/\xb2\xbf%\xba\xe7\x02t\x18\x06\xaa\xecoa\xb4\xab;<\xeb\\\x83\xb2\xf8[L\xa5\x05\x91\xcc*d\x9b\xf1\x03\x86\xdf\xbf%%\xd9\t\x1d:d=\x8b\xa4\xaa\b5\xe4H\xb53Db\xd6(`\xef\x06\x96\t\xb2\x11\xf7\xb6\x1a\xec\xde\xfem\xdc\x1ba\xcd\xfb\x9b\x9d\x8d\xeaU\xf6\xb7\xa4T\xc0\xd7R\t\xcf!\x12\xbc\x8f\xcd\xa8\x14;_\xb1\x89\xdd\x0fXi\x17\xd8\x1e\xf9\x89\xa5Xf?\xad\xb9c7\x99`y\x8f\xf1\x12T\xe1)\x18\nA\x95\x81\x9a\x90\xaa\x02\xd5\x91\xaa=U\xca{\x8d\xa7\n\xa1\xda\xc0\x93X\xba\xf0\x9e\xf0\xa6!$y\x92\xb8\xa4\xce\x14r\x95\xa5 \x15Bb\xbb\xef\xa7u\x11B6\xe4\x15!$*\rT\x90\x1a\x83-\xa8 u\xc3\xfc\x15A\xeaZb\tR\xd7-\xa9 u\xbd$\x15\xa4\xae)g\x11\xa4\xae\xe7\xa0J\r\xb9"\xa5!\xd7\xa44\xe4\x8cT\x90\xbaf\xfe*\x95zJ*H\xddP\xea*H\xdd0\xefU\x90\xba\x16*H\xddP\x96*H\xddP\xea*\xc8\xd2\xb0\x1e\xaa K#\xe9\x05Y\x1a\x96D\xa5\xb20\xf5:\xc8R\xf3\xbdZK\x90\xe5Yk\t\xb2\xccj-A\xe6\xbdVY\x90?\xede\xe1\xd9v\x11\x8a\xb09\xbc\xf5a\xc8\xc7\x04\xf4S\xe8\x8aMxN^h<\xa8=\x01\x15a:,\n\xfbq\xf7\xceG\x8c\xfe\xf2h\xed\x01\x9d\x83\xeem\xa3C\xba\xd8\xd3;G\xe8Z\x94\xf5\x9bt\xfd\x82-:\x91k"t\xe8{lr\x81L\x82\xe1\xb5t0\x85\xf8\x89}\x1e\xf9K7@[\x02vq\x86(v\x8f)\x84\xcaJ\xd6kH}\x97\x84\xc0\x96\xc2O;\x18\x11c\x10\xe4\xa8\x7f\x11K\xeb\f\x15\xd8\xff\xae\x02\xa0\x19$\xa3\x06\xb8\xc3\xf3el\x83\xc3\xeb:\x96 \xc4\x85q\xe9zn\x96\xfd\xcc\xc1\xa2\xca~\xdeP\x89\xc5\x14\xf0\xb33\xd8!w?k\xf5\x02\x8d\x15\x87\x02\xfb9\x96\xff\xd4\x11\xa9V\x8f\x91\xff\xe7t\xfc\xe5KI\xe9\xce\x84\xd6JXd?\'\x1b\xc4\b~w\xf3w\xc6\x80\xb1\n\x90\xfa\xf6rN6n!\xeb\xce\xef\xdewx\xf4S\xdb\x82\x8f\xd4\xc7&P\xa4\xe4Q\']\xd2(\x0e\x8d\x13I\x9bI\xb9!?]\x19B\xc5\xff\xd9\x8e\xdeX\x1e\xfc\x9c\xd4\x03D\xb0\x06G,z\x7f\x86B\xf2\xdc\x8b\xc2\x0e\xb36\xa9s\xcf\xd6\xdaUB\\\xde\x07\n\xd9f?\x9f\xb6\xd01\x82\x1aM\fq\'\xf9\x832\xf6\xf39\xddY\x9c\x03\t\x15\x8c\xf8\xde\xb7{c\xf2\x07\xf3}P*\xcf~au\xd7\xd9/\xba\x1c\x99\xf9g-\x0f\0aq\x81j\xf9E\x17\x17%\x9e\xb5\xdag\x8e\x88\x0b\x89\xb9\x05\xb4\x1d4\x16\xd5\x14\x18\xd6\xe4\b\x11\x1bM\x1fm\xe7\x17;SW \x8d\xa6\xbf\x88dxc\xd9FLS."\xa69\x98\x1a\xcc\xb8\rL"\xecS\xcd\x99\x9d[W\x9d:\x82\x9a\x17\xcac4yH\xab\xab\x87\xa9\x7f\xd6\xb0\0\xacJ\x8f\xe5\xc9/a\x91\xb0v\x8fA\xed\xc3\xf2\xef\x97\xd1"\x81b\xdaE\x02\x14\xdd_\xc6\x8b\x04\f\x15\xbf$\x8b\x84\x15\xe8t\x91\xc0\xe2\xb5\x90-\b\x94\xd9\x8d\xa6\x02\x19\xad\xde\xd8B0-\x10t\xe2_nm\xa4\xab\0\x1aU\xb7eH\xdbEP\x94\xaa\xb2\xb3\xaet\x9bpV\x07"\xe7\xf8\xa4,)\x19\xe6\xf5\xfcqx\x18\xf6:\x80\x95\x1a@\x8d\xa9\xf3<`\xd6\x9e:\x1f\x83w"\xabB\x98\xc8K\x84\xd0\xf5\b\xf2\xe8\\\x9drt\xfe_\xc6\x86\xe4\t\xb1\xd0#\x91\x1f\xac\x1b6\xdc%\xb6\xe3\xd8*\xc2\xb7\xce\'\xa8\xa3\xb0~\xc74\xf4K\xb2\x92h\x03\xa0M\xbd\xca\xfe\xceN\xddd\x7f\x8f\xfds\x9e\xfd\xdd\xb4\x1d,M\xfe\x9e,\x14\n\xd0\x89\xb5\x03\x01\xfc\x88\x83\x9d\x9c\xbf\'U\x85x\x93\xed\x93.\xfb\xbbf\x0e\xbc\xd0\xd6\xb0\xa4\xfb\x07\xc5h\xb3\x7f\x04Q\xbb"\xfbG\x14i\xe1\b\x9d\xa9!\xf7?L\x13\xe9H\x9a\x19\x02K\xb5\x7f\x98,`\xb3\xf8\x1f\xa1\xe9\xc3*\xf9\x8fDD\xa4\xa9"\xb5\xd9?)F\x97\xfd3&\xbd\xcc\xfeiSZ\x80\xb4)\xcd\xb2\x7f&3=\xac\x91\xff\xe4\xea\x06V\xdf\x7f&\xe9 RM\xa7\xcb\xfe\xc5t\xa6\xd9\xbft(]\xfag\xed\xf0\x04l\xadcn\xf9W\x94j\xe5\x88X M\xf6\xaf\xd8bs\xa6p3\xdc\xac\x81Y\xd1WB\xeb\x18Qe\xff\xc2:\xc0\x0e\xaes"\xd7{\xc3\x1e\xa2\x0f\x05\x8a\x9e\xff\xafP\xfd\xa5{\fC\n\xec%\xff\xb2;\x1c0\xcf\xfd\xcb&0iA\'\xd3#t\xce\x7f%\xa5\x86"\xd2R\xc3sh0\x14\xe0z~\xe8_l\x01\xcd<v\xcfabA\xde\xbe\xbf\\\xf6\xb6-CQQ\xf8\xde[]\xf6o\xd6\xd3,\xfbw\xe2^\xd5\x80\x0e3\xce4S7\xacv\xe9\x9fu\xfa_\x03\xd0*\xf3\x84\xaf\xb2|\x85\x8d\xbf\x7f;\xa3s;\x97\'Ux<\x1dj\x06{\xc7\xffNz`\x0b\xfa\xee\xf6DG\xc6\x1d\xadw\x05\xdc\xa95\x10}\xb7\xb5y\x99\x11\x18\xef\xa8\xc1n\xfe\xefDO\xc8\xe5\xbd\xbbi:\xce\x9dD\x17\xd9\xbf\xad\xa6\x83\x8d\xf1\x7f\'U\x8b\x94\xb5j\xf9\x1cv\xa5\xe6uF\x9fD\xe8\x1b\xd8F\xdeb\xb6\xd9\xa3?M\xd1\xa57\xa1\xb3\xac\xc8z\xda~F\xb0\xe9\x84\xf8\xcb\xf5\xd7\xcd\t\x86\xa2o&\xb3\xce\xd1\xa7\xc3\xf5\x956\x8a\x99\xf0\x0f\x1b\f\x97\x06\x84\xfd\x1b\x15zU\xc39v\xd67\x9b\xcf\x03\xb4\x1f*\xc01\xd1\xf9\xca\xe2>\xc52\x01M\xd2\f\xfd\xc0\xa2\xecA\x0fG\xec\xe5\xbf\xda\xa6\xbdN\xb8&BL\xab6\xa3\xc8\xfe\xc3\xf06\x1c\x86\xe7\xe1\x9b\x92\xfe[\x1bu\xc4.\xfd\xb3z:\xaf=`\xcb=\xf7\x98\xf5[j=\xa6\x8e\xd8!P\xe2\x90\x14\xa2W7\x15\x88\xa2[\xc8\xc8\x9c\xb6e\x18y7\x89\n\x87\xa5\xc8\xe6\x8e#vmQ\xeb\x95\xbc\xb4\fu\xc4n-\x9a8"O-G]\xae\xe7Yh\x11\xd0\xdc\xe5Q\x12x<<\xa0\xa9\xe7\xad\x83\x1c\x85\xcdTG\r\t\xe9k\xa0\xf6\xaf\xd3d3\xd0H\x82\xce*\0&m\x1fA\xc57b)\xc3\x8a\xb5\xb16ep\x9f\x9e6\xaf\xa6\x8d\xb5\x84|\x1bE9\x18=\x14\x8a\xde\xdd\xb5i\x19\xe1\xa87B\x10[p\xb9\x90\xd1<\tZz\x04Zy4.\xa2t\xb7\xaf\xc3i\x8bvW\xd2\xb2\xbb\xd9\xc6\x17\x90\xc8s\xdfO\xb8\x83\xff\r\xc4\xae\x1d\xd9M\xab\x9c\xceG\x95\x90\xb0\0\xe4\xad\xf3T\x0fd\xe7\x9c\x9d\x039u\x8a\x80\'\x8b\x89\xf3\x92\td\xee\xbc?\x03Y\xb8=\xf9@\x96no;\x90\x95\x1b^\x02Y\xbb\x01.\x90\x8d\xdb\x84\x0fd\xeb\xb6\xda\x03\xd9\xb9\xcd\xda@N\x9d+\x9c\'\xcb\x89\xf3c\x0bd\xee\xdc\xd6\x02Y\xb8\x8d\x82@\x96\xce\x06\x1a\xc8\xca\xf9\x94\x05\xb2v\xceb\x81l\xdc23\x90\xad[\x89\x04\xb2s\x9e\x81\x81\x9c\xba\xadVOV\x13\xb7\x10\x0b$\xa5*4\xbfU\xe1\x96\xfe\x81,\xdd\xb2?\x90\x95\xf3\x8b\td\xed&\xe9@6n\xc5\x1e\xc8\xd69\xbc\x05\xb2s\xce#\x81\x9c:\x1f\x13O\xd6\x13\xe7\x8c\x14HJ5\xd1\f\xd6\x85\xf3>\n\xa4\xd4\xa0f\xb0\xa6T\x13\xcd`];o\x91@6n\xa2\x0fd\xeb\xf6\xf8\x03\xd9\xb9M\xd1@N\xddv\x9b\'\x9b\x89[\xa2\x062w\x1b\xd1\x81,\x9c\xba\x1c\xc8\x92\x1e7*US\x91T\xa9\x9a\xdawZOR\xaaR+\xb4\xa1T\xa5\xe6\xb7\xa1T\xa5\xe6\xb7\xa1T\xa5\xc6\xdcR\xaaRcn)U\xadQ\xb5\x94\xaa\xd4\xec\xb7,\xabR\xb3\xdf\xb2\xacJ\xcd~+Ri\xf6[\x91J\xb3\xdf\x8aT\x9a\xfdV\xa4\xd2\xec\xb7"\x95\xd6o\'Riit\x94\xaa\xd4\xfa\xed(U\xa5\xd9\xef(U\xa52w\x94\xaa\xd2\xecw\x94\xaa\xd2\xecw\x94\xaa\xd2\xecw\x94\xaa\xd2\xecw\x94\xaa\xd2\xfcv\x94\xaa\xd2\xfcN)U\xa5\xf9\x9dR\xaaJ\xf3;\x15\xa94\xbfS\x91J\xf3;\x15\xa94\xbfS\x91J\xf3;\x15\xa94\xbfS\x91J\xf3;\xa5TS\xcd\xe0\x94R\xd5!\x83\0H\x96JJ\rVJR\xaa\xbaV\x92R\xd5\x8d\x92\x94\xaan\x95\xa4Tu\xa7$\xa5\xaa\xa7JR\xaaz\xa6$\xa5\xaa\xe7J\x8aT!\x83\xb0q\x93\f9\xca\xa5wO\xd6J6n\r\x10H\xc6\xdcF\x921\xb7\x9a\x05\x14,\x1a\xbf\xca,\x05[kTR\xb0\x8df_\n\xb6\x8d$\x13jC\xf6;\f\x9b\x88\xaaURb\x0e\xf9\xedD\xaa\xa5\xcbo\x81R\x86\xb5\xd8e\xa0\xa4ax\xe2\xc5\xc7tK\xc2\xd5]\xdd\x96l\x9cM3S\x12\xc27\xbe_\x83d\xabh\x9a\x89\x92%\xc9\\\xc9\x8ad\xa1dM\xb2T\xb2!Y)\xd9\x92\xac\x95dBM\xa3\xe4\x94d\xeb\xc9\x8a\xad\xa2i:%E\xc8\xa9\x92\x14\xc3O.$\x19\xb3\x9f/H2\xaa"\bY\xb1*\x9b\xa2P\x92Q\x15\xa5\x92\xcc`Q)\xc9\x98\x8bZIf\xb0h\x94d\x06\x0b\x152g\x06\x0b\x15\x92\xd3tS\xa8\x90\x9c\xa6\x9bb\xa6\xa4H\xa52\x17"\xd5BI\x91j\xa9\xa4H\xb5RR\xa4\xd2\fr\x9an\xca\x89\x92\x94\xaa\xd4\xfcr\x9anJ\xcd/\xa7\xe9\xa6\xd4\xfcr\x9anJ\xcd/\xa7\xe9\xa6\xd4\xfcr\x9anJ\xcd/\xa7\xe9\xa6\xd4\xfcr\x9anJ\xcd/\xa7\xe9\xa6\xd4\xfc\x96"\x95\xe6\x97skS\xa9\x90\x9c[\x9bJ\x85\xe4\xdc\xdaT*$\xe7\xd6\xa6R!9\xb76\x95\n\xc9\xde\xd7T*$\xdbyS\xa9\x90\xecnM\xa5Rq2m*\x95\xaa\x161T\xaaZ\xc4\xd0Z\xa8E\f\xad\x85Z\xc4\xd0Z\xa8E\f\xad\x85Z\xc4\xd0Z\xe0d\xda\xd4\x9aAN\xa6M\xad\x19\xe4d\xda\xd4\x9a\xc1V\xc4\b%Ys\xa4jf\x95\x92\x8c\xaa])\xc9\xa8\xbaFIF5\xed\x94d\x06gA\x8cZ\xdas;U\x929\xea4\xb0\xb4\xe7i\xae$s4\x9f)\xc9\xa8\x96A\xc8Zjp\x19\xca\x19\xed\x80Zh\b\xdc\xb0\x16\xeay\x10\xb2a\x06\xebE\xa82\xf4s\x90\xcb\x89\x92\f\xbc\xcc\x95lH\x16J\xb6$\xe3\xbb\x8cjY)9%\xa9b\xb0\xe8\xeae\xa3dN\xb2U\xb2 \xd9)Y\x92\x9c*)Ri\x16Z\x91j\xae\xa4H\xb5PR\xa4Z*)Ri~[\x91*\x14{\xc3)\xbe^i~9\x8a\xd6+\xcd/\xa7\xf8z\xa5\xf9\xe5\x14_\xaf4\xbf\x9c\xe2\xeb\x95\xe6\x97S|\xbd\xd2\xfcr\x8a\xafW\x9a_N\xf1\xf5J\xf3\xcb\xf1\xb9^i~9\xc5\xd7+\xcd\xefT\xa4\xd2\xfcb|^\xcf\x8bH\xd6$C\xf6\xb1%\t\xb2\x8a$\xb9:\x8a\xb6\x1c\xdc\xea\xf5DI\x8a\xb1\xce\x95\xa4\x18\xeb\x90\xc1\x16\x03\xd4z\xae\xc3H\xcbi\xa2\x9eWJ2\xbf\xf3\xc8\x95\x86\xd4(\xc9\x84\xe6*\x06\xa7\x89z\xde)\xc9\x84\xe6\xad\x92\xcc\xef<H\xd5q\x9a\xa8\xe7\x85\x92\xac\x85y\xae$ka^*I\xa9\x1610\xa5Z\xc4\xc0"\xc6TI\x11#\xb4\x8d\xae\x94tC\xdb\xe8*Ih\xad$\x13Z\x04\xa9\xa6\x1cT\x0b\xffn\x93\x17\x18\xa0\xb0\x13^\x07\x12UV\xe4~\x81\xd6\xe4%\x86\xa0"\xf7k\xae&\xaf\xe9\xc4?)\x16JV$\x97J\xd6$W\x9ed\xa7\xc3T\xee\x03\x97y#3\xac\x0f\\M\xb9\x14*(s\xd8\xc8`s\xb5\xd6\x99:K\x8c3 w=L3\x9b\xe3\xe6\x9b\x92\'q7\xc9\xb2\x1f\x12\xf7\xd12\xc2\xf5IoM#\x10\xaa\xf7Kl.U\xd3\xa3\xca\x88\xba7)\xcb\xcb&iyal\x17\xe2\x90\xde\xc3\x1e\xb9y`\x1c2\xd1\xf4\xc7g {\x8f\xad\xe9\x81\x0e\f\xff]z\x8b\xce\x89\x1e`\x07\xb3\xe0\x82\xe0\xc8\x97\x8aY\xbaci\xa2J\xd5\x8f-MU\x02\x9a\xcc0\xf4\xeb\xe6\x82\x7fRn\xb3"\x92\xbb\xcd\xfe\xf9\xbd\x7f\xba\xec`b\xa3\tB\xed\0\x9cE\xf6\xdbg?d\xe2I\xb3I\xed\x02\xf4\xd3\xe6e{\xde\x891\xf0\x9d]\xcb\x85Js\x0f\x9b1\xc1\xdd\xe6\xf0e#\xb5\x14#)G\x9c\xd1\x8bUd\x8b1#\xbeX\x8f8\xa3\x17;\xc7vb\xa9\xf0\xfb\r\n[e\xf5y;\xd0\x063\x12\xab\x18qF\xb1\x07\xf6\xeb\xf9z\xda\xe8[\x9c\xcb#\x9c\xbe\xb2\x9eX\xde\xb8!\xacK\xcb\x1d5\x88\xb5+\x847TU,\xe7\xc2\x15\xe9o4R\x9e#*9z\xdb\xa1\xa3r\x8c\xdb\xef\xb7\xb0U\xee\xbf)\nj\x0e\xfe\xb8=G\x1d{\xdc\x1e\x1b\xd5\x9bx\xdc\x1eLkn\xa5\x1etx\xdb\x9e\xce\x9b#\f\\\x13*\x98\x81\xb4\xc1&\x06\x0f\xd6Y\t\x1b\xfd\xe9QdG\xd3\x0bY\xc2\xc7\x17\x0bT\x04^w\x9b\xe3\xeb\xeez\xd9m\xd0`\xe9\x14\x05\x8c\xb6\xc3\x82V\x15>>\x9c6\x8f\xaf\xdb\x8b\xf8\xe2b\xb5\xd0\xdd\xa0\xc1e\x1e\x05\xc7\x85\xac\xe1\x9e\xb8\xf3\xc5\x97\xa6\xb7\xb0y\xab\xf2)I\x12EY\xf8\xd0\xeem\xd0"\x13\xcd\xce\xe2\x85\x89\x1e|\x1c`\x02\xdc\xf6,\xdb\x0e}\xe2x}\xda\\.\xc1\x88G\xc5\xeax=\x7ffmFcm\x04\x83\xad/"v\xdc\x03\x1a/;@\x85\xbemPm\xd1\xfe<!r\xdab\x9f\x9d\x07\x026o\x03\xc5zK,\xf5,B\xc5\x9d\x95\x92\xe3\xfd\xdb\x1bJu\xdda\xab\x01\x8f\xa7a\xf3\xb8\xdb\x9eQ\xcaT\x12I\xff\xae\xed\xa6\xb3\xc0p\xc2\xd8\xf7\xc2\xea`\xb6\x04\xe7`\xb8\xdd\x7fhx\by\x82M1\x1a\x12\xd9\xf7\x89D\0\xe3\xfc\xe9\x11%IK\xa0\x94*\x07\x1f\xd9\xdb\x84\xb9\x7fFLnt\xa0\x9e\x91\xdc\xe80w\xb4\x9e\xbcF\xd3<\x9d\x86\xf7\x87\xe1\xc2\xf6\x8e\x8d\x02!\x9f6\xe7\xdd\xd3\xf0N\xdf\x03\xea1\x01r\xb5\xc9\x8b,\x14\xf25\xca\xebM\x14\xbb\xbe\x11\xf01\xc3R\xeb#_V\x8a\xf8\xb8\x97\xa5">\xea\xe5D\x91\x10\xf3\xb2PH"^\x86\x88]\x1c\xd32\x92>\x92\xe94B!\x16*\xd4\x01{\xdf\xf5(\f\x88\xe8\xc3\xa1\xae\x9f\x88{\xfbs\x1dQF\xe8\xd1"\xa2\x12\xa7\x87\xcb\b_\xdf<\xe6\xf3\x89\xdd\xe5\xfe\x0bL\xf4\xeb\x8e\xfa\x1c\x91 \xdf$\x92\xc8\x95\xc9\xb6G\xfc~L\xc1+X\x14\xc7\0z\n\xb9\xa1}!\xe0\x9a\x1b\x8fi\x8e\x0bC\'\x91\xae\r\x03\x82\x7f\xfe\xf8\xa6h\xa7+\x032)/k\xc8\x8c\xe0\x9a\x94/\xcc\x0b/\xf9qM\xa2RD[\x84/G\xa9\xb4i\x1e\x88\'\xa9\xb4:\x92\x0fgF9\xeb\x14AM<lF`(\xb9\xc6\x02\xc3\xb3o\x03\x0b\x8dN3\xdf\x06De\xf6\x88\xe8\x04R)\x88\xeb\xfc\xd8\xf7ns\x83{\x8d+\x0b$\xfbe\x9e\x13\xdc\x84[K\xdb\x80.\x8aS\xffF\x076\xae\x0e\x1d\x11\x8eeH\x8fwG@\x8d\xe6\x95{\xccj\x15c\xcc\xaa\x164\x9b\x9c/\x18K\xcf\xaf\x9cMfJm\xf6\xdc3\xd1\x99\x94\xaaa\xe0\xdc\xc10\xe6\xa0W\x16y\x8c-\x99\x8cb\xb4~.Z\xd1\x10\xe4 \f\xda\xa20\xaa\xfb\xea\xbaa_:\x7f\x1c\xde.\x83L\x01f0C\x0f\xb9\xf0\x80\x05\x9ax(?\x8e)\x97\xc41\x9cLM\x07cT,1p\xaeF\x0f\xadH\x9a\t\x8f\xec\xa0\x87\x92g\xd5NGG\xb5\x93\xf4\x1eQ]v\xdc\x1f\x8c\x91ryy\xbd\xd1G1\xc0_\xefi\x8b\t\x1e\xb4\xc5\x04\xb4\xda"\x18\x9f\xa9\x91\xef\xc2$E\xb3qr\x15\x0e\x8b\xf5\xa3?\xfa\x15\xe4\x07\x15\x1eVcTG&\x82\xaa\x16\x86P\x0f\xdc\xa3\xc5\x8f\x99\r\xa1\x80<`&\x0eN\xf2\xb5!\x93\x96L\xdcKR\xf0\xd9\xc8:s\xb4\x96\x80\xf0MC\xc5^)\xe8\x8bW+\xa0\x17<XExI\xee\x89\x9d\x83\xaf\x9d\x92^\x01\xc4\xd4\x19\xe6\xe0\x87\xb8\x9d\x99g\x0f\xc9\xc5&\xa5\xd0:?!\xec\x96\xba\xdc\xb9\xff\xfd\xb2E\x90\x1d\x15\x05\xcc\xb2M\x83H\xb7\x8f\x9b+\x07\x8a\xa2d0\xbbE\x88X\xe9\x1a\x124\xd1\x8ed\xaaKb\x10\x066\xd6!\xa7\xf2\xa2\xc9\xf3\x94\xf4H\x97\xc4\xc8*\xe0\xf60z}1]+\xe7<\xec1\xa9?)k"2\x1c\x87!]\xd4,\xd0#\x1f\xb6\xb6\x1c\x99\xa2\xf5\xcb`Eo/\xce\xbe\xf2\xe0\\\t\xe6\x02mF^P\xcc\xd0\xc5\xad$\xb8\x86\xc8#\x19\x17\x16\x02F\x85^Hh\xd9\xb1\xb5\xa1%?\xecl\xbbZ\x92\x0e-F\b\xdbd<\x10\xdb\f\x01w\xbc\x1dF\xfe\x87\xde\x16%i\x9bQ\xd2{\x94\xc2f\xff\x88Z\x93\x13\xf1(\xa3\xfe\xf8d\xd7\x8a\xd0\xe9\x1ez\xe3.\xc0\x1c\xec\xd1\xb2C\x03\xe2)y\x01PChsOD\x1a\x8f`rx\x1b\xfa\xe3\x05\xfa\x0e\x14T\xaf\x04s\x95/l\xce \x81-\xbf\xdb\x13_\xaen\xb9\xe6e\xac\xfa=\x1b\x9c\xc7+\xaa1\xd5\xa5\xf3\xff\x8do\xb5\xea\xf9W\xc2\x05\xfd:\xcf\xff\xb7\x006\xa6\x90\x1d\x8c>2i\x1bi1\xceF\x9e\xbch\x99\x85c\x9e\xb6\x8f\x97\x80\xcd|d\x12\xf6\xb6p`J\xbce\xdb\xa2\xf5%/#\xb9\xaf2\xb9\xbb\xc0\xa3\xfd\x1e\xe1\x9f9(\x14M(\x81\x18\xcc\x17\xdd\xf9\x82a\xa4h\xd8\xf3I^\xdf\xden\xf3U\x19\xdeM\xbe\xe2\x8b^B\x11\xc7\x8aY\x8dCX\xa6\x14\xcb\xf1\x15cS\xc1\xe2\xb3\xd7\x14\xb5\xa0\x07\xb4\xd4\xa2\xc6\xd2\xf8!Y\xe2\xe1\xad\xe1\x81V\x8d\xde\x8f\x8f\xd8\x1b\x7f\x18l\xf3G\xd1\x0e\xb6\xf9\x83\xd6u\x07z\xcdoq\x95\x87dQ\xd7[\xd1R\xb0n\x15\xc2\x9d\x9b\x9c\xb4\xf3H>\\\xc8/#p\xe8\x9f\x88\x14\x06\xb1\xa3\xb0y5L\xb5\x16\xbb\xbc\xf1\xe5<\x02\xb6\x91\xb5\x0ev\xad\x13b,\r\xed\xe4X\x19\xc4\x0bb\x03%\x92X\x86\x8a\xb20\xa0\x93\xc5"V\x98.\xb3\x9d\x0e\x93\xdd\xdc\x02N\x9c\x89\x85\x9c\xbe\xb7\xb6P2)&\xefK\xda\xabU\x96tH$\xb2L\x10\x97\xca<\xc1\\\x85\xcd\x12,I\'\x8d\xc2e\x12\xc3\xbd\xb7O-\xbb,^\xb5\xe1<_\x8a\x95\x83\xbc#M\xe3(5l\x99\x80\xeb\x94\xe5\xfdp\xf2\x14}\x1a\xaeP\xd8\x1d\xaf!\xaf\x7fzI\x92\x9by\xecN\n%yX@\x1c\xdd,?\x83,\xea6\xd6\xa1\xb4\xad.\x88\xa0\xf1J.4\xd0\xab\xed\x07x\xf1j\xfb\x01i,\xff.4u\x16\xfeY\xd2\xe7\xccN[\xbf\x83x\xdd\'\xd6\xed\'\xaa\xacS\xc1\xce\xdb\x0f\x19\x92W\xd9#\xf5\xa12{\xb4\x9e\x82\r`3\x8faM\xfc\xa8\xf7\xf4\xb5x\x0eJ#q\xab4::*\x8d\xa4\xf7\xf1\x98w\x07\xf2\xf8\xc4\xc9\xfb\xf8d\xf4\xd2.\xb7\xb8/\xfd\x89\xc5\x82\x8d"\th\xcd\x14d\xbc\x9d\xdd\xf8\xc2\xe3\x90\x8fHqxv\xb6d\xef\tV,Z\xf7h\xebl\xe1 \xdfD\x84\xc2h\xf6\xb2=m\xa9D\xe3}\x98\xe2\x1f\xad\xe9\x16Y\xd0;\xe9\x96x\xd6\xab\b\xb1Dz\x1c_E8\x05\xa4\xbaZ\xe1\x88x\xef \xb9\xd7\xd3\x9e\xb3=\x12\xf1W\x10\xce\xe5)^AH:\x0en\b\xa7\t\xc2\xee\xef\t\x9f\x17\b /\xd1\xac\xca\xa7\xfe\x85\xc6\x1d\x96A\xe9\xe8\xe3shd\xd8\x9b!b\xfb\x17\xec\x12\x84\x86\xfd\xd3\xf9\xf2A\xd3L\xeb\xa3\xb1m\x13a\x92\xd3?\xd0\xf0\x1e\xad\xc23\x9d\x93\x0e\xadC\b\xdb<<\x10\xdb\x07\x01[\xba\x15\xe8\xfb\xb7).\xc9y|\xe5\xda\x03\x0bnl\t<&~\x9e\xd8.|\xfc\x7f]\xae\xb8N\x82X\x8e{\xf9\x8e\xbbpM\x86\xf5\x92n%\xe1\xfb\x97+.\xc8\xfa\xfa\xe5\x8a,*:X\xb3\x19\xee\xfa\xed\x95g\xa4\xa4q\x04\xbbT\xd1F\x8eLn\xca\xc8\x951z\xa3\x99\x06F4\x97\xcf\x02\x94\xc6\xc1\xe6\xb6\x1b\x105\x97p2\xc9Nf\x01\t@\xe7\x80>\x06\xf1/\r\xdb\x000\x93\xfe\xc6C\x84f:7\xb9h<>\xca\x83\x87\xc79\xf0\xb1D\xf9=0\x92\xde\xa3\xd7Q\xa4\x10Gu\xd9\xb9\x7f>\\\xf7\x97\xfem\x0f\xc3L\x01K\x86\xc3\xd0\xb9@M=\xf5\xb6\xbf\xd2\xd6\bC\x8a\xa7a\x9e\xdc\xec\xa5m\x95\x18\xdc=\xfa\x0em\x84s\x1a\xcd\x07\xa2\xf2pD\x9d\x18\xa6\x9a\x0e\x95\x9bg\xb6\x8b\x17\x8b&\x1b\x9d\x0f\xf2]uip?\xf6\xa0\xb3\xed\xb7T\xde\xa4#S\xa7\xdf\xec?o\xb1\x0e\xe2<\xb0(\x1c\xf4\x84\xfe\x88i\x1c\xc0\xc4\x01\\&\x9d\x1c\x92;D\x0fS\x11Ck\xdd_\x1f\xb8\xe0sO\xe7k\x7f\xf1\xc2Z\xc8\x9by\xe8S\xf2xx\xc4\xc8\x1c\x87\x1cl\xbc?&\xba\x1a\xde\xf26u\x13\b\xd2\xd8\xe3\x12\x1c\x8e\x079\xda\x02\xe3\xbe{<\xf0\xc4\xd7\xe6\xf4\xc1m\xf2\\!\x8d6\xf7\xc1h\x010AT\xbf\xa9\x1d\xedTM*\xf4,vg1\\\xe6c\x9e\xc7)\x94\\\xd6\xc6=Bw2\x8f\x1b)~~)\r$\x15\xe9\xf1:\xb3\x87\xf8\xd6\xcd"\x04\f\xeb\xe1I\x88\xcc\x98\xb8\x97\x0e2#\xec*wPb\x16\xf2o\x86\xdb\xf0\xac8U\xca\xf2vr\x1f\xaf\x16\x83\xcf\x92\x1d\x92\x0b\x079\x9b\x8f\x8d1a\xf8\xf8\xe6\xc4\xde0tq\rAi\x8e/\xa7+\xf3)v\xf3G\x1e\xf6\xb9\x9e\xb8`y9\x89\xfd\t*\x14\xc1\xd3\0\x82\xce\xe6\x9e\x98-xy\x114*O\xcfW\xbc\x03\x87\x9a\x81\xa7y\x18\x9b]\xd6\x91\x8b\xd9\x0f\xdf\xd0\x15Wi\x9ex\xe7\xec\xe9\xc8\xe5"\';\x8ftA\xba\x88tI\xba\x8ctE\xbaRZRo\xd7J\xffyE\xfe$\xd0+^8\x03\xb5\'\x90?\xf0\x80\xfe\xa4V\xfaG\x9e\x06\x9dht\xab\x9f\x16\f?W\xfag^\xb6\x9c\xb7\x91\xe6Y\x9bX\x18k^g(U\xebH\xe6=W\xf2[!5\xaf\x7f\x94\xb4T\x96?\xcb\xbb\xb3@\xfe0c\xb9\xe6*\xda\xdf\xe4e\xad\x83\x9f\xbech\xcd\xe7O\xbcze\x12\xb9.\x1fZl?99\xb5X\x7f\xfaE\xf2\xa1\x89\xfd\xf4/\xa9\x15\xad\xc4_$1\x8d\xfd\xef\x12\x1bK\xe1\xed#\xa8\xf1\xb3i$\xb1\xd1v\xa6\xaeo!4\xcagj\x17\xc4\xd0\xeaF\xcb{)\xa3\x11\x9c\x98f\x8b[\xbe\xdd\x15\xcbS\xb6n\xa6-\xef\xe0I\xbc\xe5\x9d\x006bI\xf7m8\xb9\xf3\raP\x93\x06\x15U/\xd6?^z}\x89\x10\x8aN\x17\xa1\xa8\x86\xd3\xf5\xcb\xb6wwa"F(\0\xdb\x0b\xd5\n\x9af\xf024\xbd\x0fna\x16\xf4\xd1\x17J\xd4q*\xe0\xd7\x13"y\xfc`\x01\xa3\x15~\x9c\xe4Nm\x96cNj\xcd\xb1|M\xd7#\x10\x0f\x81%\x01\x9f=\xab\xce\xb85\xdaT\xd9S\xa2\xc4\x936\xc6\xa8\x06\xe4S\xf4\x11\x10\xd2\x9b\xa6\xe495\xf1\xcdW\xc4\xc6&>(Q@\xc7\xfe\x02\x93\xcc[\xce\xc4\r$1\x9b\x05\xe4\x856\x90I1\xf1\xcf\xb2s3)r\x92\xc6"\xd6\b\x1d\rb\xa4\xcd\xf2\xa7\xe1\xebf\xf9#\t\xef\xa3\xa5\x92\xc2\xed\x9d\xb9\xaft\x8f\xd1\xa2\x97\0\xd1\xa6\xe7alFo\xdc\xfe\xb6\xbc\xfcI<eF\x9ch\xf9\xbb\xe1\x9f\xb7/<5\xe99\xf9\x983z3\xf0#\xea\x81\xfe\xd4\xff\xa6\xa1*\x03\x8e"\b,h\x07\x07\x05\xa7\x06\x1c\x85\xf7\xac4\x7f\xad\x01G\xe1=\xcbm\xed+\xdaYt\xf4F\xe0]\x1f\xae\xe6\x8d\xb9EGox^Zr\x8d\x01G\xe1\x03k\'M\xd6\x83\x13\x03\x8e\xc2{\x16\x07\xa5\xad\x82\xb5\x01G\xe1\x85\x95v\x01\xd8\xde\x9e6v\xea\xaf\xd6\x0e\xb0n \x01\x83\x19p\xb4\x85T-"\'\xc1\x8e\xbc\nn*\xdd\xf3\xf4\x12\xe5\x9e\xb5\x0e\x90q1\x01\xb1\xd2x;n\xb9\xcb\xa2Gyd\x92\xaf:H\xfd\xb0\x0f\xf7\xa7\xb2\x1d\xd1\xfcv\xeb\xa40\xbb\xc7\xb0V\xa1\xe58\x80\x8e\xae\xf3\xbb\x1c\xfb\xeeJB\x9c\xb8n\xb85\xad\xb8\xd7\xcd\xfe-F\xae\x80\x98Mjnk\x87r\x91<\xbd\x84<5JyEyM\xc0\xea(\x0b\x02H\x91\xd6F\x1e\rj\r\xed\xcd/R0\xb21\x1b1\x89\x07{\x9e\x87\xe0\x94 \x85\x142F\xfbK\xc1\xd9\xd1`|\xd9hX\x13f\xdc\xec\xcc\xa0\x97=\xc4\xc9\x01=B\r\x05H\xca\\^\x8f\xee\x1f\xad\x02\xa5#F\xb7\x91\x13\r\x97\xd7#x2\x8c\x0b\x1d\x06n!\xec\b\xea\x818\x84\n\x10\xc7H\xac\xda\x9e\xc6\r}\xdeA\xf4\xa7\']\xb8\xc3\x9aH\xca\xa4Yd\x86]8\xca\xa6\x1a\x90\x98,\x11\xbb35\x17Z\x8d\xc1ho\xdbG\x18|a\x87z\xdb\x88i*\xee\xb2\xceox\xf4\xeb\x919\xcd3\xcd^\x15Z\xd3\x96\x9b84\x88\xa0\xcbc\xfb)v\x9d\xa5\xd0q\xf6@\xc3\xb0\xb7\x90\xa0V\xec\xde\xd1\x82l\f\x0e\xeav3\xf7\xb4\xfa\xdd4\x04\xdc\x1eR\xe5\x1e\xf5\xca\xc0\x8ei\x1d\x07\xeciQ^\xfc\\\xcf\x18\n\x8e\xd7\x83\xb3\xbb\xc5\xa2\\\xa3\xfc\xb7\xbc\'\xbb\xc0\\\x9f\x16r\x9b\x992\x16\xc2\x16\xb1\x07b\t\x13\xf0\x9bEx\xc4|\xfcq\xe1\x0eQ8\xad_\x8f0\x7f\x1a\xb0\xcat\xaf\x87\'\n<\x91,\x02Qu\xf1\xcc\xdf\xac\xcb\xd2\xab\'\xd0%\xdb,\xb9y\xc2\xf7\xf4JQ\xdf=\xe2\x9b\xda\x99#\x94\xc8i+\x89\xa9\xdbZ!}\xb9\f~q\x0e\xb5\xfb\xa9\xff\xdc\xcbF\xf8\xba\xf5\xcf\\\xcb\x17\x8e\xc1\x0f&\xb9m\\X:\x11ur\x1fb\x8d\xb8^\xcf;1\x8a\xd5S\xbc\x90\xecO\xa09DS%4\xb6\xa7x\x0f=\xfaP\xb2\x06FV\x8f\xba\x99\x01\x82F\x94\xa7M0\x91`X\x18\xd0\xb2\xc2V\x06\xf96\x83\xe8kv+cAz/\xcb\xfc\t\xcbP\x9e\xedB\xb2\xf4X\xb2\x92\f\x01\x8d\xb9N_VW\x80\x10\xb3].2\xd0\xf1\x85:*\x9a\xf7`\xf6\x06\xd9\xba\xa3\xe1\xb1XN#\xe9\xeb\xb3\xcdB\x0f\xf65^F`0\x88\xc9\xdc\x9a\x89`\xb29\xf3\xe2\xb4\x1c\xdb\x8f\x9e\xfa\x95W\xa4\xae\x94r\xc62\xdf\x9a\xa5@/\xde\xc1\x02\x16O\x10\xb4\xc9\xab\x99\x07\x83\x93X\xe2?\x86\'\xa7\xd0\x88\'v\x8a\xa9~\'\x9cw\x18M\x1e_\xed\x11\xdb\x95\xa2\xdeV\x80dT\x95\xc7+\xb6\xc4\x90\x85\xcb\xa6\x173-\x8a(\x9a\xe6!\x875\xcds\xda\xb2\xa6yJ._\xd3@\x99|q\x9a\x01;=)=\x9a\xdc\x90p&\xe0\x19\x83\xdf\xff\xceFN\x8em\xc6\f\x9aX?\xebu\xc6\x0e\x01\x11\xb6z\xd4|\x8a\xe7\x13\xcb\x90\'I\xb6\xc6\xd8\x8e\xb0\xd6\xe4\xba\xc8\xb6zG=\xdew\xf6\xf5`o_\x06\xc0\xda\xda\x15\xbcq\xe4\xa8o8\xd6\x9bC\xb8\xbeG\xcd\xf1<\xfa\xb8\x07\xa3\xb5\xa6V\xe6\xe6q\xf7\x91\xde\xb3\xd0\xb5\0u\xf2\xac\x1c\x11Os\xcf,\xa0_\xfcX[T\xe7\xd8\xa9E\xed\xed\x98\xade\xe8\x17?r\x8b&\xd7^\x96\x96\xa3\xdf\xf6\xa0\xf4\xa6\x86 \xaa=v\rn(cHg\xcfX\xa3d\xfc\'=\xdal\x9b|\xd2\xc3\xd1z4\x1e\xf2o\xed^?\xe2\xd9\xde\xf8\xe1\xe0\x1d\xfb\xdd\x0f\x8c\\[\xf5p\xef\xf0l\xaa\x15\xef\'\xc5\x8fW\x13\xdb<\xea\xc7:^\xe1\xed\xe4\f>\xe4N|\xdc\x11\x9d\xb7\x1a`\xcbQ\x1e\xe3\f\xef\x81\xd8(\xb1c(\x88V-S\x8f\x80\xdf\xd1\xa2\xc9\xc1\xd9\x18\x8av\x9a\xbb\0\xbe\x14\x1b\x1f\xc1\x16\x0b\xe9\x10G\x9b+\x16\xfa6f\x1b\x85\xd8\xc1\x9f\xd8\xdf\xa7\x0e3e\x11\xc41%\x19\x12\x80\xd1\xfe\xf5&#4\xaa\x7f\xd9\rW\x94K\x11 \xba\xda8\xef\x1b\xce\xa9s\x87b\xb2\x1aP\xfeo\xbb\xde[\x0e\xca\xa2\xf09\xd5!\x1f\xb6n\x1fGb \xf5\x98\x19\xf0C\xb9\x86\xcc\xb5>\x11\xcdY\xb7V\xc0\xabOk\xffJ\xb8\x1b\xab\xf5\x89\xebxWLZ\x1f$8@\x93\x1c\x9f\x05\xe0[wn\x1dA\xe1Z7\xbc.\x92\x89s?\xda\xe0\xebpD)\xdaK\x07\x04\f\'\xffA\xd8\xaf\xc4`\x8b\x19\x8a\xd8\xc1\xd9)\xa1Vl\xe5\x931\xb1\xad\xcc<\xa2\x05\xb1\n\x80\xd6q\xe1\x11\xcd8\xdf\xd9\xf7o\xect\x05\x9d\xca\x03\xa5\x0b\x1b\xd8>\x11M\xd4\x01\xca@\xe8\xb7h\xda\x80\xe8\xb7hP\0\xf6[4\xb0\xb0n\x0fO\xa2\x8c\xd0\\\xe9\x9e\xed\xca\t\r4\xd1+\xf8\xfe\x1b\'\x80\xf3\xf8\x0e\x8e99\x97\x8f\xf3V\x8a\0\xe1\x12Ov\xc8fg\f\xac\xe6\xb0\xc5\xe5\xd3-\xfd\xb3M\xb7 v\xef\xa29\x06\x96o\xe0\xcc\xf9`\x93`\x92\xa3\x8f\xe2\x10\x1a\xdf)\x8f\xca9\xba\xec\xc8\x17)\xb7\xf1\x0b9\xe8eC\xaca$\xe4n\xa7-\x985>>\xee\x87\xb33\x96\xcd\x1c\x10\xbf\x19\x83I?\x854l\xbdJ\x19A!F\x01\x84\xc6\x80\xbd\x89\xad^\xb4\x85U\xfe6\xbd\xd5\n\x8b\x04\xe7l\x89q\xca?&\xdd\xcec\xaaS5\x9e6\x1dfA\xa8\xff\x8cu\xfb\x91\xf9.\x1aT\xeb\xc9\x96\x1d\xde\xb1\xa5\\A"\x9b\xb9.\x926\x14R\xb6{\x91\x9c\xc5\xef\x7f\xf2\x07\x05H\xd3[\xd1\x95|\xf0\xfaD\xd7\x90\x18Na\x80\x84V\xea\xe8\x9bI[\x02\x06\x01\xf6\xc3\xf0\xc6\xab\xd9f\x04\xa9\x1b^\x8c\xa4\x1c=o\x1cp[\x8f\xd9\x9e?\xc6\x12k,\xa3\xbe\x88\xd3\xfe\x13\x8f/P.\xa3m\xa10\xdd\n\xab\xe5\x83\x99\x8e:\xd2ZkxK>U\xb4FY\xea\xad/K\xff\xacS<J\xe6\x82\xd4a\x86\x1b0\xce\xe8\xc2\x90s\x87\xc1\x13{K\xe4\xdd\x81nC\x86\xf5\xdf\x12i_\xb5y\xb3\x05\xe8W\x91\xb6\xf7\xfc`[\x03\x87\x8a\xb0\x98\xd5\x9b\x80\xff\xfe(\x96>\x1aL\xdd\xb3\x1d\x1b\x16\x1es6\xd5RI\xbawO\xb8\x95\x16i\xbdS?\x80\xc9\xa2"\x80z~\x86\0\x96j\xf4\x1d\x90\x11\x11\xab/\xb7v\xe5xj\xbe\xf1\xb4\x16\xca5\xbc\xa9\x84\xb1\x1f|\x9a\x12p*t\x0e#\xcb35\xd5&{Vk\xc3\n\xcff*\x10\x1a\x11\x1cw\xdb\x9e\xd6!\xd8U\x9e\xb9\xb6\x8a6\xb4\x95\x03\x12+\x9c\xc7\x12[\xdb<{\xb6\xf6\x99.{\x8e\xaac\x9d=\'_\x9cZg\xcf\xc6\xe7\x15\x9d\xed9\xd1\x86\xd0\x9d\x9e\xc7N\xb00[=\xdf:\xc1\xc2\xa2\xf3|\xe3\xf4\nM\xf5\xd9\x9a\x1e\x90:\xe6\x0eJ\xc2c\xdf\xcf\xd84\x99O\xf8\xdb\xf3\x01\x11<\xef\xf9\x80\x97\x04\x800\xfds\xa2\xda@\x1b\xf1\x90j6\x85":\xe9Afz\x83n\xc3T\xc0 \xfb=\xe6\xf1\xe1w\xe72\xe8H\xfa0:\xf7E\xc9\xdf\xeb\xe6\xd9\x1d\x04\x0eT\xb4\xa1\x8f\xb1hF\x8f\x9chV\x8dX4$\xcf\x9c\xb18e\x98WR\xb6\x1a{g\xce\xa2\x9b\xe0\xa3\xb7<\x17\xd6<w29P1\x98\xc7\x8e\xd7\xa3;\x9d\x1c\xa8\x18\xc2co[w\x04\xd9\x13\xd1y\xdcC\xfc\x8aL\xef\xce!G:\x86"z:_\xe4\n&4\x8f\xed\x99:\x13\x96\xf9\xcf=\xe4v^W$\xd2\x8f\x961jQ\xcb\xcbZ\x9e\xa2\x8e\xe9h\xa3+\xcf\x05\x88m\xa12\xf4\x1dM\xb9[\t?(\xca\xeem\xa7\xa3B\xf7\xc9\xeb\xa5\0V\xfb\x9d{$*\xbf\x0eIu\xdf\xdacQ\xf5u\xc8=\x1d\xd7\x89hU\\\x176\x99j\x1dd\x15\\\x87\xa8Z\xd79R\xd5\xdbE\xa0\x83v\xeb\xc2\xab\x8e\xe7R\xb5S\xb5\x0b\x10T[P\xd2\xcf\xd0/x\xb0L\xbeI\x84\xe7D%C\x1f\x8aG\b\xb1Tx\x1e\x9e\xd5_\x86\x83\xc6\xf0\x1c\xec>P\x15\x9e\xa1\x0b\x1e\x94]\x91}\xe2P\xca\xeb\xbc\xf1|\xa5\x8d\x07\x16K>\xc5rt\xb4\xa9\xdf\x99\0\xb1~KC\xdf\xab\xdf\xa5\xf0C\xfd\xba\xb7mu\x06$V\xa7C\xd2\xea\xac<\x16\xab\xd3!\xf7\xaa\xd3Id\xab\xd3\x85M\xaa\xd3A\xf7L\xa0\xadplE\xbb\xb0Z\xd1.@\xac\xe8y\xa0CE\xbb\xf0Z\xd1N\x1e[\xd1.@:f.\x15\xd3A3\x8f\x90\x8e\x9a\xb5\xc3|\x1b\xf1\x11\xedF\xbd\x19\x12\xa9\x82\x89H\xb03\xc2\xbdc\x9e\xec\xa9H\x1d\x1f9\xf7\x97\x19O\x11b)\xfbb]\xe4H\x86\x03\x855\x9e\x83\xb7\x1c\xf1x\xb6y\xb6&\x99\x9a\xe91\xb5\xbe\xf0Po2\xe1\xcc\xa7\x15\xd1t\xc2\x99O\x19\xb3u\xbdk\x85\x8e\x9ew\xa4\xad\x1a\xb7\0mU8\xd2\xeeK\x87\xf3\xd2=\xee\x11\x93W \xb0`\xf2\xa0\xb9\x83\x7f5\x01\x94~\xffp\x9e\xd95\x04\xacI/jjB\xf6T}\x80,\xe6s\x88\x889N\xd3\x8d#\xe2\xe7\x10\x11\xc7\xe8s\x88\b\xef?\x87\x98\xcbS\xe4\x80N\xf6\n\x10\xd2\x9a0`\x0e~\xb1\x0b\xd69\xe9\xe1\xc0\x1d\xae\xe4\x10V\xcdx`\x9f\xd9\xb9\x98\xa3\x02\xb8\xf0\xb8"\xeb\xd2#\x87\xeboOf\x17v\xba$\x8e\xc6\xca\x93\x84\xbc4uM\x1a\x11~\xf0\xce\xf34\xd2Ud\xc5xQ\xc5\xd0~\xbd\r\x1cK\xba\x97\xc4\xe9\xb2#m?\xf3\xd8\x16\x82\xf8\x86%l\xdb\x16<\x10\x1b\x83\0\xf6\xfe\x80\x99\x03F7\b\xac\x1czs\x87\xc0\xda\xe1c\x9d\x07\xed\xe1k\xdf\x9a\xac\xc9\xba\xfd\xa4\x183v\xe7[\x93(\xff]\xdc\x9c\x9a\te\x15F"n\xe1\xd70M\xf3\x89BDh7\x17\xa0%\xbe\xd8\xcd\x85\x19i\xabK\xb3YcCp\xefn`\x91\xc7\xa8\xfd$@T}<\x1c\xb5\b\0\xe9\xb6\x03"\xdd\xc3\x88\xbd\x89_\xae\xd0+CW\x81\x85\r\x917j\xcf\x95\x05\xcc\xd7/\xa0\xcc\x19\x86?+;\xb1\x98Y\xa8\xb1|o\x19\xfe\xa5\xfc\x1e\xcf\xf6\xe3D\x84 j1\xcboa\x93$\xb6\0_\xe27>\x116\x99E\xd1\xc3\xed\x1e\bF\xd5\x17\xbb\x07\x82\xed\xb4\x17\x1dN\x0b>G\xd7Bt\xb2\x13\xaf\x97t\xc6\x9f6\x0b\xe6KV5\x1f\xadY\xbf\xc9\xecF\xb1\x0f\x10n\xce\xf4dhF\xa5#\xe3\xcd\x99+\x07$r\xfbw\xccm\x9aD\xb6t\xba\xe4T\xbe\nD\x18*\xa0\x14Yd8q{\x03\xf8r\x1e\xf0d\x8a\xd4\xf7\x87\x93\x9a\x10\x98\xcd\xb6\x8c\f\x1fC\xdb*\xf4\xd9\xa4\xa7\xa8\x1a( \x81\x1e\xa2\xc5:\xf4%~$\x15\x1c\xbbaQ#+W.\0\x0eC8\x0b\x02S\x82B\xc1\xe7k\xee\xb0s\x7f|\xf1\xe7\xcc\'\xe54B~s\x94~\x9e/v\xfbc\xce\xd8O\x9bC\xdc`\xe2(\xf3\x11\xf7\xc7\xa7\x19\xd7\xefX\xd6\xef\xee\x7ftuJF\xeaP\x81\xa6k\xc7\xbd9\x83\xdc\xf5\xe7.\xb3xb\x94\x81\xec]\xb7\x8e\x8e7\xea\x926\x87\x1d\x97$Gn \x05\xb1\xf1\xa87+\x05\x8d\xfb?k\xd2\xa31\x10{\xbc\x18\x19/f\x97m\x96\xed\x12\x0f\xa6\xb5\xa1\xad\x99\xa4c\xc0=tIk\xcd\xa7p\xbc\xa6D\xa5\xcd\x1d\x90z\xa9\x14\xf9\'qK\x89,\xbb*v\xdc\x85\xe3\xa6\x0bk\xc7Z\x19\xd6\xed\x8bs\xc7M.B\xc9\x15{\xdd\x9cO\xa3\xf8\xd0\xcc\x12\xeem\x94>W\xe7\xeb\xebu\xc4\xaaY\xf2\xf4\xe9\x95\x85\xea\x89\x96\x15\x16\xe8\xcd\'w+\x16\xd6\xe9m\x18\xe4\x12\x03\xec\xcf=\xc8\xb9\xf9\xf9"\xc0\xee\xd4Q\xc0\x17\x14)\xb6D\xbel\xbc\xbf\xe6\x85\xa1\xe5f\xa7\x04)\xca\x1b\xe4y\x8cD\xdf7\x8b\x1e\xfde\x07\xf7x\x14\x06\xbd\xf8>\x13mb{\xc3\xd15\xb5\xb4v\x05\xf2\x87\x1b\xa8\xe8n\xa0\xb2\xba\x81b\x02\t<\x16:a\xdeH\x9dpS\xb1=+\xf8{\xcdsC\xcb\x85Y\tRTc\xa4\x9c\x8c\x91\x18\xb7E\xc7\x02[\xde\x8d\xbc\x96\x99\x8a\x0b\x8e\xff\x88s\x9b\xd9m0l\xb3\xed\xd2o:\xa3G\x98o:c8\x89\xdak\xeb\x88\xf8M\xe7:\xdb\xd9o:\x83\x9f|\xd3\xb9\x14ZcFhq]C\x9b\xe7^.\xf7\x91j\xf7\x98\xf8\xf1\x1bL}8 \xfe6j.\x95RQm!\xb6\xbb3\xc0Z+XKR\xf5\x1ay\xc3\r\x8d\xf6\xb5\xf5|\xd6Z\xce\xe5}\xd0\xf1\x0fk\xcf\xdd\xd8l\xe6\xb0\xaf\xdc\xb74\x9f\xd5)w|\x14|>\x131\xc2h<\x12\xa4\xb3<Mp.h<D\'\xa1\xfcH=\x8a`jX\xfa>\x86\x11\xc8\xb1E\xc5\xc5Q\xa3e\xa4\xf6$^g\xe8d _\x92q\xbd$\xf7\xb6\x97\r\xc0\xa3j\xad,\xbf\xd3\xd5L\x13\x9c\x95\x9c\x1f+Y\xc6S\x14dx\xa9q\x8f\xf6+h\xa8\xbe~{\xbd=W4\xf7\xf8\xe8\xf0\x8c\x87\xc7\'r\x96\x0e\x8e\'rV\x0e\x18\x9d\xc8a0[\xaa\x18\x97\x92\x13\xea\x96N\n\x84\xc9:GW\xe8}\xf2\x98W\x86(rK<\x19"\xf6N\x0f\x8c\xfb\xba\x87o\xba\xb9\xc7\xd3\x1e\x0e0\xb9\xe6\x1f\xe5\x99\xe8~\xa8P{\xa6\xa5\xc5\xa4\x01\x1d\xf6\xcd\x1b\x06\xd8\xed\x93\x13\xca\xa4m\xf6-\x9dd\x1f\xa5\xe9\xfdv\xa9\x8b\xf01\x9f\x1a\xa2h\fQ\x16\x86\x88\xa2{`\x9c}\x0f\xdfd\xdf\xe3i\xf6\t\x1e\x87\xd7\xdd58*\x15\x14\xcco\xe8\x07\x9dy*\xd0\xa3%\xdeh\b\x80\x02\xf6%\xf5\xf3\xcc\x85\xa9\x87\x8f,\xab +\xfa\xd5W\xa4\xed\xa7\xe8\xa7B\x7f\x19x\xb4\xc9\xbb]\xd6\x84\xfc\xa9L6\xd3\xe1r~\xe3\xcdKrw\x05+Fn\xae\xe0\xa1\xa9\x9d\xae\x1b0x\xda\xbe\x80\xea\xd2{P8D&\xc7hI\xf7\xbd\xb9\xc8\n\xb6\x81]r\xb0\xb66tR}\x18\f\x92\x8f\x0b\x15\xb0+\'\xdf\x16r\x85\x05\xa1?\xd3\x9e\x88x>\xdev\xdc\xe9\xe4\xd5\x84\xee\xd9zw\x05~\xb2\x11\x13\x02\xaaR_\x06\xc0\xec\x945\x1e\xe3w\xb4\n\x1ew\xe9\xa9OO\xb3^]\x80\x96|6Z\xd2:3\x97\x12vmf\xfd5\n\x92\xde8\x03A{\xfd~\x14\xe2\x8d\x13Z\x97\xf5\xa9\xc3\xcd*\xb3\xdfE\xa9\x9b\xac\xb7^.\x10&X\x0f\xc5\x19\xc9GT\x16\xdd:r`,\xdfF\xc6<3\x06G\xba\xdcbU\xb0\r\x86\xc7rm\xb9d+g\x96pP*&R\xcc)\x96\xc9\xcdc\xba\x126\t*G\xc5J\x9e\x97\x19\xa3\xb2\xea\xc1\xc6e\x95r\xb8\xed\x7f\xb9\xee\xe5\xd0\x88\x8a\xd1\xa6aN\xdc[\x89r\x94\x96+%\xa2&\xd5$g\xf29c4\xf8s\xcc\xf92\xe1\xff\xfe\xb8\xdds\xad\xa8QO\x13\xfe3wX\xb1\x9a\foc\xd5j\xb9\x98pa\x16\xdd\xec\xe3\xdb\xcd]\xbe&>b\x9fT\xac"\xa9\xae\xdd\xe6s\x14\xb8H8\xd0\xbfc1$\x05\xd9\xf3\0c\xf8\xec\b+ \xa9\xac=\x86\xa3S\x94\xb3\xbb\xe1iz)\x0bU\x16\xd3K*\x85\xe3\x92r\x92\x8cq\xda\x7f\xa4\x7f\xb8\xb2\xa7)\xfb\x12\x8b\x04\x83\xa5e\r\xb1\t\x14IK<n\x0e\xb1H\x92|{\x83sI7\t\x0b\xf3\xf8]\xccp\x92\ff\xdeGm1U\x99\xb2`\xca9\xa3Ehb\xd3\x94}\xe6\x16B\x14%\x8d\xd7\xb8^!\xd7II\x9e\xb7\x8f<\xc7\xa4\x02MS\xe6\xfeY\xe5I\xb2q\x1e\x1e\xfb\xed\xe5C\xd3K\x84u\xe3\x1c?\xc9\x99\xa2\xdb\xa4\xd1%\xed\x006\xa7\xc7We\xe5)\xeb\xfa\x14\x13J\x1a\xe4\xf9\x1a{f\x9a\x16\xc7\xd1\xcf\xb6\x7f-,\xfb\x9d\x16\x15\xad\xd0\x945\fO\xcaI:\xdd\x17\x98f\x98)\xd3\xda\xa4\xc9\xc4\xb1\xcd\x14:[Ld\x98&\xc3\x06\x13K\xdb\xb4\x18\xe4%\xe2&3"k\x8c\xca\bKQ#Cdu\xae \x94\xd0x\x1c\xae#\x19|\x9b\n\x83YWT\xd6\x89\xf1\x94Da\xdf|\x82\t*jr\x9f-\xebq\xcb\xf9q\xac\x94\x06|\xa4\x94zx\xac\x94\xb6\x0e\x8eJ\xa9\x07FJ)P\xf5oDQX\xffF\xb2\x8c\xbb$Hk\x19FI\'N\x9dh\xe7v\xb2D\x9f\xb0\x13\x1dG\x1b-N>\xdb\x84\x1c\x1dS"}\xe3\x98\x89\x1a\xbcq\xabCq\xf6\xe3\xcf\xea\xb1\x1f\xdf\xbdwwb\xf1\xe0B\x92\x80\xd6\x87\x04\x8c_\xe9\x81\x8d~h\xed\xdfUvWE\x87.\xdfGg\x16\xbc#7\xcf\x15K\x94\xe8\xfe\xfa\x11\x0fX\x80V\x079N\x05\xb7\xdfE,3\xb9\xaf\x13\xdb\xa0\xf7\xee\xea\xac\x85=\xfa\xc4\x15\x9a^\xa2\x87\xa3\0\x8e\x18\x83\x82\xfb\x1f\x86\xec\xa3\xec\x81\xf1|?,\xa8x\xb4\x06|Ha\x8e\x06E\xeaa\xe0!\x02\x9e\xe2\xc8#vIiw\x05M\xad4M\xf2\b0\x89\x80\xa1a\xf7\xf6{~EA\x11/}\xbc\x15\x95Q|\x0e\x17\xb3\xf0\x16\x16\x90\xea\xc0\xbed\xe8\xcf\xbc\xcfi\x1bos\xea\xed\x87\xe2\xb1\xe1\xd4\xab\xe3\x1c\xbb\xe2\xe0\\\xa2\xa6\xf2d\xbe\xef\b\xd3\x95E\x82w\x14\x87\x07\xc0\xb2aG\xed\xd7\xbd\xa7\xbeS\x88P\x95f4\x80\x93m\xac\xac\xf9\x1b\x17\xaf\xd2c\xb6\xe5\x8c\xb1\xc4\xc5\x0b\x19>c\x0b\xcb\xee\xf9BR\xddJ\x10\xbe\xd1d14\x05%\xc0$;5\xb0=R@\xd8\x7f\'\x92\x05\x9fx|qDNn8D\x80\xabU\x81\xd1^\xee}.m\x9d\xdd\xf4\xa5\xd2b\xd6\x80\f\xfc\x0b\xcc,\xe7\xc4}\xa3\x0e\xa0\x1eV3\xcc6\xfb\x95\xaa\xf9,\xfb5\xb9;%\x07mv\xf1\x16 \xc3\x96\x1d\x9f\xed\x8e\x9d\xa3\xe3\x86\x1dh\xebk=\xc9~\r\xfa\xfa\x9a\xcf\xaa\xafO\x1d\xa1\x06(\f\xc6\xbf\xa2\x8b\x9e\xb1g\xe3\xcf4\xa0\x94\x7f\xf5\xc70\xb4~\xeau\x96n`u\xa0\xb7\x87h\x9b]\b=\xba\x12p%\xe0\xcd\x9d\x80k\x81\xc7vqHi\fMS&\xb0\x1b\x9dI\x9bg\xbf&\xbb\x9cK\xd2\xa1\x80\x84\xb0%\xe4\x81XD\x04\xd2\xab[\x10!zM\xc9\xa3\xfe\xbf&#\f*F;\x04\n\xc8\xae"\x8b\x8c\xd7\x84bT\xc1\xcc\xb09\xef^\xfb\xc4\xf32\'\x1c%\xacA\xfa\t\xb4$\xcb\x0e\xe33\xd0w?C8\x17\x86\xcb\x15#\x10\xe7+\x82\xd1\x17\0\x1d0q\xc3\x9agw<\xb0\x04\x1c9\xa81Q\xe3\x90%An\xfc\xd5\x04\x1d\xef\xdd.\b\xa6w\x1b.\x01\xd9\x12\xaf\x85\x8e\x05N\xda\x8e\x1a\x8cw\xec\x1e\\\x01\xb3\xa3\xc8\xdc\xd0\xc9\x04\xd4\x80\xf1\xf6&\xa3\xde\xcc=\xa6\xf75\xa2\x99\x03\xfd\xd8\x0e\xd7\xe3\x01z\xc0Ag\xab6W\xc6\x1b\xadVo\xd1\x8e\xd5U\x91EN|\xa7S\xc6\xf9\x8c\xfd\x86\x11w\n.6\xe2z3\xc0\xb3,\xce\xbb\xfei\x83\x05\xff\x10\xebiba4\xb0\x9e#\x93\xbbB:\r3\x1aM\xd7,\xbbxM\x16\xe5\xb4\xfb(\xf5$\xbb\xd9:\x91\xea\xb8\xddA_g\x8c\x96\xd5\x80\xe9v/\xeeH\xa7\xd7\xa4d\x19\xd7W/)B7z\xb5\xc6\xeeU\xf6\x9a\\\xe05%\xed\xbd6\xf8\xac^\x1bX\xf8\xbe\xc6a\x07U\x96:i\x90m\x14G\xa8!\xaf\xa9{eE\xc0\xecM\xa2\x16\x13\xd7\fK\'\xd9\x81\x14\xe9\x85\x9f(\x81\x1b\x87\xe45\x9a\x13[\xce\x11\x1bjO\xcch\x0e\x05\xee5\x19]\x1a\xd2v\xa6\xa8\t\x84\x8e)\\\xdb\xf8=\x10[\xbf\0f\x1fq%\xf4h#\xd1\x05\xba\xd9Il\x05\x1e\x0f\x91\x94\xd0\xfa\x8c2T\xf4\x82\x98\ne\xbd \x88\xa0\xe1\xbe\xde\x9a\x7f;\xe5\x8ctme\x8c\xb5\xedY`D}{\x1e\xa0\x91\xc6\xcd\xa00#\xea\xd5\x8dX\xce\n0\xe8\xadR\xb5\x03\xae\x9bp\xa6dR:\xe4=\xbeT\x119\\\xf5\xd4\tSs\xd7LM\x99/\xe8\x8f\xaf\xf6\xe6*\x16\xa4q\xf3@\xebH\x94y\xb4\xe2D\xcd\xb5t\xd2zP\xa6\xfdi\x18oT\xd7\x82\x1e\xb6\xd8\xf776{V1\xe0HC\xe6\x1e\x83\xc6\xeb\xb8\xbc\x9bU`\x8c\x8a*\xe0\xe3\xf0\x13\x8fkas\xf6\x10d\x14A\bx\xee\x87s\f\x8c\xd2L\xa7k\f\xde\xd6\xb2\x8dI\xff\xd5\x9clE\xa5\x8f\xefxB\xce\x92\t\x11\xa5\x7f{\xc7\x13\xea5\xf1\xe1(I\x9b\xcf+@8dYk4\x172\xf6\xe0\xd2\xd0I\x1d\xa0\x01\r\x18rb\xb9\xa2\x98\x06\f\xf8&G\x1d#cv\xcf\x17^\x12\x80\xfd_\xf7\x99r\xb4\xed59\xc31\x1c:\xe6T\xa9sy\xc3\xe7\x98\x01$t\xb6\x8b8\x0e\x15\x97(?\xa9`0\x862\xf3j\r\xc60\x9d\xbeZ\xf3\xf0\xcc\xd2InP\xba\x9f5\xce9\xa8\xf7H\xad2\x1e3i\x16\xd9\xdez1\x14 \xbd? \xb4\x84\xbd:.\x10\xb7z\xa7\xa3\xe3:\x89\xf4\xab\xf4\x8a\x8f\xcd\x10\\N\xeb\x8c\x87\x03n>\x7f\xb2^\x04\xfck\xdf9Yw\xb7!\xc6{o\xabu\x9b\x04\xba\xf3\xd5\x93\xf5\xec6\xc4m4\xd3\x10\xe8\x965\x0f\xac\xaf}\xf9\x04c\xf9M\x88\xdbh\\9\xe8dY\x91|x\x12}b\xee\x9f\xd51f*\b\xeb\x9d\x1f\xb8\x92\xc7\xa8k%@\xd4\xb6<\x1cu\xab\0\x84+Y\x16\xee\xde\x95\b\xea\r9\x9e\xf5In\xc6\x19\xf3M\x84wC\x8d\xf9d\x8d\x94\xbe\x15\xb1\xdbif\xb1\x90\xaa\xb9Q\xff\xd6D\xefh\xee\x8b\x85D\xfez/&)0\x91f7.\xfa\xe5\x9a\xedr\xac\xef\xaf&\x0e\xdc\xde\x11l\xd9u\x81y\x93\xd0"p\xee--\x96\xebO\x88\xb9\xfa$\xcb\t\x1f\xee\xde\xfcj\xc21\xa5\xd3\x8b\xfa\xce\xd7\xb0}\xed\xdd6\xff\x14\xa5\x83\xd6*^SH\xd5*A \x83\xd2\x03\xbb\xe9\xde(=\xe4\xa8\xd23wDz\xca\x18v\xfb\xfdH\x15\xc2K\xce_\x15\xaa\xe0\xde\xfa\xabzZ_m#\xa9\x9eu0\x07\xd1\xb6-\xf7\xb1\xd8\xcb\xdef\x02\x8f\x8f\xb9#\xbb\xf4\x1e\x9b\xf0P\x10\x9f\xd4m\xac\x8a\xe4p\n\x0em\xb0g\xce\x04O|\xd4\xdc\x9bc\x07\xb5\xc2\xa3\xf1]\xa8\xec\x02Y\xef4\x07\xe9.\x16S\x95\xe3C\x98!yi\xa2\xbf@\x01)${\x87\f\x80b\xc3\xe8\xeb\xbe\xec\xbcO\x8f\x80\xb3zh\xcbb\xfbL\xe7=\0\xfcz=f\xa2}\x1cFK\x12v\x1c%`gG\xd4\x9b\t\x8e\xe4\xf6\x9f\x07(\xbd\xfd\xa3q\xc9\xcf#\x1a\xfc\xec\rt\xc7\xa2\xb0*\xef\xb0\xc3\xab\xe09\xb7Xo\xc7(\xb0\xbeLN\x1dV\xc8b\x9cY\xb1\x05\x87\xa2\xdaq\xab\xc9\xef\xd4\x82=\xbcP\x81w\x17\x8aa\xef\xce\xd3\xc7A\xdc\xf8\x16\x86V\x1f\xcd\x82w\xeaz\\\xae\x1e+\xd0<\x86}\xbc\xec\xb3\xc0\xa09p\x8fu\x92cZ\r\x17\xe8\xc8^\x94\\\xad\xb3^\xc1|\x92\xde\xabS\x04\x9aG\x8c\x90\x06\x82\xa0\xe6\x86/(\x079\xe7\x82\xf6\xa4\xb31\x84\xf4\x1fX\xc8\xb1W\xa07\x9c\xf3d\xed\xdeZ\x83\x90\xc6E/\xe9@)\x87O1\x15hM75\xc3\xc6\x93V\xcc$"\xf7\xea\xa5\xc8\xbeZ-`\xfd\x1e\x0b\xbd\xccx\xe0\x0e\r\xf1`\xefhYe\xc1\xe0I\x1d\xc0=\xdb{\x9es\x8f\xf9]\xe0\xca\x93\xd1\xcbt\xe9\x91\xe4\xea\xdd\x92\xa07\x1c0\xd6p\t\fS\xb3w\xc08:^\x01C\x9aJ\xbd9\xdb8\xab\x14K\xef\x91\x12\xdcl\x81\xf3]n\xd9a\xd0x\xa7s\x9e\x8c\x1f,\xe9u\x87\xa5}\xca;\xe9\x81p0+\xcb\fz\xc7\xdc\x82\xf1\xd6y\xff\n\xf3\xd7o_\xd3TPu\x01\xb5\xf1ws\x07\x87\x98;G\x8e\xe3\xc4\x9e\tph?\xb4\x1fX\xbc2x\xf8\xda\x06k\xa5\x87\xc1\x0b\x8b\x10\x1bt\x1a\xe1\x90Z+\x10\xa6\xdaT\xd4u\x84\x13YW\x1e\x0f\xafO=}#\xedR\x18\x18\xaa\xd2\x82."\x9c\x94q\xee\xf1\x10\xef\xcc\xd37%;!\xe3cs\x18\xb4\xbc\x1a \xd6\x91ae\xe8\xc4\x91\x81yr\'\x10)\xc5\xf1\xfca}4X\x0e\xbf\x19\xdb\xd1\x9c\xd1\x9c\xce!4F~\xbf\xea\x89\r\x8c\xf1EK\x01\xaa\xdc\xce\xa1\x88/\xde\x8d\xb5D\x1d\xc5y\x13\xcd`\xb4\x1cA\xf3\xb3nqU.t\x18\xb0\xa1\xe2\x1f\xac5\x12:\xef\xe1\xc6\x1a\x89~~G\xa1X\xad\xdc\xbbc\xed\xa4\xf2\xe8\xad\x06\xb2\xcc#k\xfcQ\x126\xcd\xd1\x1a\x11\xa3\xdf\xc1\xda1:\xbe\xde\x7fI=\xc7P\x94\xd6\xb6\xb1\xca\rmk\x88\xad\xc3\x9df\xe4\x1b\x87\xa8\x93\x1a2j\xa4\x02F\xf5\x90\xa4\x9d5[\xe6\x91\xa6\xa0Xa\xb5G^\xb7\xcf\x98["\xde$x:\x8a\x04^\x8a"&\xef\x95\x06\xf3\xdb\xc1\xae\xcc\x91\x05\x99\xe9\xcc\xb5@\xc9NA-|\x99\xb5\xe6h#4\xe5\xdd\x98/\n\x8f\x8f\x8c\x17\x1e\x1e/\xa6\xab,5\b\xb2\xf5\x10xC\x13\xb7\xcbf\x18\xc2<\x9e,\xb1\xfd\xeb\xa9\t\x10\xfa\x8a\xa0I\x04X>\x1e\x12\x078\xd2\xb6\xe7Y:\xa9W\xa6|\x94\x1b\xa8%\x13x\xb4\xeeR\x9e\x1b:\b\x9d3\x04\xf07\x15\xb5\x8e\xf2WXc\xf2$I\xa7O\xbc\x8a\xe7S\xff\x90x\x1ar\xe8\0\x18i\fQ\x9c\xe5\xf7\xdb\x17]\xed\xb2(\x8c\x81\0\xe9\x8d{$RI\xf4\x134\xf3\x1b\x03\x01l\x8f\x07k \xe8\n\xd2\xc6@\x80\x8a\xb0\x16\x01v\xd1\xbb\x16\x01N\x17C\x94g\ty\x86\x83\xea>\x8c\x85\x1aM\x14\xaeM\x10#5\xfa\xa7j\x1f\xf2\x1cY\x98db\fP\t\x0fV\x03AF\xa2\xeb\x18\x88+[\'Z\xea5\x0f\x0ff\xa0C.\xae\x8f\xbb\xa8\x07C\x97#\xe0\x8fm\xc0\x92v\xb8>\xc7\xd0\x18\xec\xae\xc1\x86=\x17"\xf2P\xa8\xd6\xe6\xd0\xa1V\xac\xcdae\xe9\xa4\xbcP$WS\x7f\x14\xd0\xdf\x80>\x99\xb0\xbd\\\xcd\tVJw4\x1e\xea\xacZ\x02i\x87&x\xf6\n\xa4\xf8\x13\xcf, \x17\r4\x92Q`\xcf\x18\x15\xdd\xb5\xdd\xfc@\x9a@\xdc\xfb{\x0b\x18\x0b\xd0\x945\xcb\xcbXHP\xb9Wc"A\x91|>l_b\xf9b\x89{0\xc1\x91\x9b\xf7\x94\x8f\xe8\xcd\xfb\xcb\x8c\xaa\x19\xfa\xeb\xd1jm\x1dI,\xd9\xe4\0\xd11X[`\x158\xaa\xaa\xc5 V\xd5rtT\xb5H\xdb\xd3\x1e\xb3\xec\x98\x9c\xe3\xb0t2\xcd\xd6`\xe8\xe7/\x99\xea\x14@\xac\xf4<\xb37\xb9L\xe6 ]/\x83\x829\xc9\x8ea\xe1\x89\xb9\xe6\x18\x17\x9e\x98\xe4\xe3\xb9\xd6\xe5\xd2\x11\xe9\xc2\x13\x1a\xd91]x\xf2\xa5dZ\xad\x85\xd6\x17P2\xc9m\x89\x886\xb9\x1e\xd1\xd2I\x0e!\xda\xf6\x1d\xea\xffoN\x9dv\x1fB?\x9aF\x0fQ\x92\x13\xb0S\xd2\xc1\xb4.\x845\xad{ \x9a\xd6\t`\xc4\n:\x1a\xab\xd0n\x13\x97\x99\xdcB\xe3\x8e0q\xb68\x8eW\x93-\x82\xd0Y\xe4\xc6P\xbb\xf6\xf8h\x0e\xf0p\xfa]\x02XQ=\x9a\xc6\x91;8u\x99.\x1b\x87F\xa0r\xc0x\x16\xc2V\xb8\xc7\x13\t|\xa4i\xd0\xd6\x81\x97\xfeu{\xbdD\x98I\xd9zCi\'\x17(Z:\xa97\xbe(\xf6\x12\xab?\xb3\xf8=\x1a4JT<\x97\x7f\x13\x9e\xfb\xe2S<3\xeeh\xb3\xbaZ\x0b\x10\x8f\\w\x86\xbew\x89W!\xfc\xb0\0so\xdb\xa3\xeb\x01\x89G\xd7\x1d\x92\x1e]\x9fz,\x1e]w\xc8\xbd\xa3\xebN"{t\xdd\x85Ml\x1e\x0e\xb2\x07\xd4\x1d\xa2\x07\xd4\x17\x8e\xd43\xe3\x93@\x87\x03\xea.\xbc\x1ePw\xa9\xda\x03\xea.@z_Y\xa1\x98\x1ePo"\xa4\x89\xcd\x1c\xe6wJ\x10\x91XC Rj\rA0\xbb\x05VF2\x99<P\xbb\xd0\x05d\xf5A\xbd\x80\xa60\x8c\x9e\xd6B\xc2\x11+\x99\xfd\xc173\n\xd2I\x06\xdb\x92t\x18V\x85\xb0\xe3\xaa\x07\xe2\xc0J \x86GR\xc9e\x99H*\xb9,\xd3\xd2Ic\xe6\x8bGL_\x9bW\xba\x89\x9b\x11\x94\xd7\xb0\x86\x1b\x1aJ\x92a\x1ca-\x0f\x83\xd9Qm\xb2\x9b\x0f\f\xaeV\x0e|\xd9]!\xa4\x06\xc5\x9etDGg\xf4\xd7\xc2\xbaw\f\xa5\xfd$gI\xc8\xbe\xe5\t|\xcf\f\xbb,"\xebf\x052\x17\xdex9\xd3y\xf4Ndud\xddD\xb6\x12\xde\xedG\x16\xa1\x98`\xd6\xe7g\x016\xfd\x91J\xcd\x84\x99\xb8\x98+\xd9\xa6\x86\xe6W\x97\x02\x12\xec\x80\xac\x86\x8bQ\x91\xd6\x86>\x0ej/\xc4\xe2!\xc1\xc3\xd1W\x89\xac\x7f\x92\x8f\xf9\xb9\bY&\x97\xa0b\xad\x02a\xa3\x92$y}\xf0~\xbf\x15W\xb0F\x80\x13\xaf\x9d\x94\x0bc;\tq\xbe>\xb8;\xd5`7\x10\x12\xb3#TH\x02\xb9\x03\xd8\xa9]\b\x96\xdd\xbb]R!J\xd5/!\xa3Qr\xf0\xae\xed\xec\xc8o\xf8z\xeb\x1a\xac+\x95?\x14jr}(\xca4\xb9>\xd4\xd2IKo\xc9\xb8\xd8\x1d\xa4\x85C\x82\t\xd3\x93\xd6\xe6\xa9P\xdc>"tx\xe0\x88\xf5"\x87\x13JC\'\x87\x11,C?D\xb2\xce\xdc\xc5\x1e\xce;\xca+\xb4Xc\x1aT\xbe\x9b\xa8\xac\xda\xb1\x06\x1a\xfcPnr\x07\x0f4Z<\xe8\xba\xb62dt;\x110^\xae\x03\xd2\xa8\x83\x88\xd5(\x7f\xe8\r\x1fV\xcfX\x91\x0ez\x86\x10V\xcf\xf0@\xd43V\xd9@\xddq\x9d\r\xe1\x04\x05\x06\xcd!\xee:\x17\xcbl\xc0f\xc1\xc9\xad\x99\xea@Xw\xc7i\0\xef9\xcf\xce\xc1\x8c\xc2!j\xeb\xc2E\xa6?~\x81\xcd\xc6!\xb9\x865\xcf\x03`\xe5W\xf0\xc6\x0btz\xc3\xb1\xae\xa0\xc2\xf5\x87;\n<\xab\x1e\xb9r\x84\x1e\xeeXW\x16\b\x06\xcaenQ\xa3@.\xa7\x96\x11\xeeD\x84\x1du\xb8\x7fo*\xc6\xa2\xe1\xf6\xdeT\xacW\xac+$\xcc\x1a\x03\xaf\x8b\xf7*{\x9d\x0b\xa9\x07LP#\xa1\x8c\x90\x8eqj\xc6.\xe1p\xaf\x0e\x10\xbbu`\xc6\xfb\x12-^6\xd7O\xce\xb2\xe0}\xc9\x83\xfb\xee\xd9/\xce\xbbl\b\xfe\xc5\xd8\xe8\x1al} \x8e\xc4\xa5\x05\xd9\xb3;\xc8\x884q0^\x93>\xb1\x16f\xb9{\xd4\x12\x9e;\xda\b\xba*\x1d\xa4\xa5\xbattR\x9e>\xc6P\x92+F\x9b\x1cU\x92\xe2\xe3E\xcc\x98\x85\x87\x1b\xefc\xbcnw\xb8g\xd9\xfd\xedzd+\x96\x14\x8a\xd3\x9a\0!\xb8\xfa\x03Cm\x1c\xd2\x0b3Y\xca\xe9\x85\x99\x94\xe7\x10<Z&x\xc6\xca\x8en\xadS\xf7\x98\xf3\xc3\xbc\x8d{\xb6\xfb\xf6\xb9\x83\xc4\xbfU\xaf\x82l[\x87\x9e\x06\x8c!\xd6\xfbr\xee\xf0\x0b\xd4\\\xdb\xb2\xda\xa5\xc7\xbd[,T\x8b\xe1`\xeasIyz\x97\x19\xae2=\xa1\xc1\x17@\xacR\x84\x10NI\xce\xb3\xe4;\xe2B\x1a\x15\xb9%\x1d5\xe4I$\xef\xdd\xed4#;\xe8\xc7\xf2*Z\xc5\x16\x1a\x1b\xc6\x06\xf9\xa0JE\xcc\xdd\xe6\xc5\xcb\xbc\xe6$\x9f{\xde\x98\xcd\xfb\xd6\x17$\xadB\xdd: \xea\xd3\x02\xa4\xeat\xee\xa0=/\xea\xc345\xa4\xaa\xb5p\xefi\xd6\x92\x13\xabXK\xc8D\xaf\x16\xe4\xde\x8dP\x92\x0b\xaboKHU\xb7\x85\x1d\xaf\x83\xea<\x19\x94m\t\xecO=Rf\xc9\xb5\xea\xde"W\xf4\xe9\x9c\xc0\xa20D\xf59wD\x7f\xe2e\x94l\xa1\xeax\xcd\xf1\xda\x11\xda\xa6WKBf\xca`\xf8\x1b\xd7~\xbe\xe7\xef6\x85\xe0\xaa!\xa0*\x81\xaaW84K\xbav\xd1\x81\xbc\xc4\xce\xdbpzz\x16}M\x1a\x11\x03\x9f\x9e`O\x7f\xbc\xee\x1d2\'\x82\x9d\x05\b$\nN\x8e\xf6f\xef\xf7\x84%q\xb8\x7f\xbf\'^\f\x1f6_w\xfeY/\xa0b,cw\xef\xa9\xc7\xech0\xc6\x12#.2\xec\x9c)\x92h\xa3Am\x8d*\xb0g\x1a\xa0\x0f\r\xaa\x0f\xd5\xfe9\x8c\x12\x1c7\x040\x07\xe5\xd9\xb9\x12\xb7n\xd4\x9a\xff\x98\x07\xed\x9e+\xa5\xd2\xdd\xcaY\x96~\xf2cR+\x10\xf7+\xa7\x11{\xd8\xbfo>\x7f\x10\\(\x18\x90\xb9 \xe7\xc7\xe1\xb4u{\x7f\xc3\xbdC\x19s\x03\x87\xf2\xb7\x98\x9d\x87\xe7\xd9\x1b?[6\xc9\xde6\x9b\xc3[T\x1e;Ax\x96+\xfaD\x15\bl\xd7X3\x90aT\xad\xf1\x1c\x96O\xc4_\xb6r\xf3g\x91cB %W^`r\x7fK\xd6a\x12\xd2,\xc3H[cv\x0e\x1a\x1bKX\x0e\x84M\xa8\x82\xd1Y\xfb6\x83\xf8\xb3\xc0\xe2\xa4?\xfa4ME6\xf6\xad\x13?\xe8\x05372\xc43^$\xcc\xe1\x84\r\xbd\xc9\xac\xda\xce\xdc\x9d\xb6G\x7fA\r\xe6_%\xd3\xa3\xfb\xcbr\x15Y\xf2}atV\x05\xdc7\x8c\x17\x11\xb0\xe3\x94\t\x97(\xbe&-\xd5{\xa7\x063\n\xbe\x89\xc2}\x01y\x1e\x01{\xf1\xb2\xcfM\xb8[\xa7\x98\x1az\x9c\x9f\xb5\xe1\xb9\x0f&w\x06qgUZ\x83\xd8,\xad\f\x9e\xe4\xc9&\xa8\x99\x9aY\xd0\xe4\xca\xc6\xe2\xbe\xb7\xdc\x18\xc4\xe6Kp\xae4\x9f\xfagY\xff\x15\0\xce\xdbxb_\xea\xfd\x9c\xdc\xaaKQ\xa2A\x9e\x94\xbf\x7f\xa5u\x8fyn\x89\'C\x14\x1bC\xc4-J\x0f\x8cO\xc5{\xf8\xe6T\xbc\xc7\xd3S\xf1\x04\xbf\x98P\xd0\xcd\xde\xac}\x16\x19\x8d\n3j\xc8\x1aT\xa1\r\xb9\x9bC\xd1\xf2\x93\x13p\b\x17/\xe3\xa8*\xa5\xe2"\x87\xd8\xf6K\xdc\xa5)\xd1~\x9c\xdf\xdb8d\tFt3f\x15\xa5\x87\x1cf\x99\xbd\xb0\x94\xf1\x8e\xceU\x88\x94c\xe3\xc4\xbc\xee\x04\x8d\xfd_\xe2\x19]*\xc8\xd6\x9f\xdcy\xc1@w/x\x9b1\x91\xf4\xf8\0%=\xf9\x0f\x14\xb3W;"j\x1d\xb3\0%\xedU\x03\xaa\x13\x91\x84\xa3"\x80hV\xfe\xd9\xaa\xddS\x8f\xb9\xa9\x80\xaa!w\x16\x1d\x96\xccZ\xb9\x07\xedi\xfc\x100\x91!\xa4\xa2\xfd\xa5\b\x80\xd93\xea\x04;\xa3\xa5@\x12Y\xf5z\x87T\t\x8c\x89\xff\xa9\x7f\xe4\xb7I\xd19f\x92)z\t\x9c\xc5\x7f\x07\x13\x13\x803\xef\xbd.xw\xf6\x9b1\x9d#\xb7\xc97\x82\xe6\xa4\xc3h/\x84\x1d\xd4=\x10Gu\x02=\xb5\xd5\x86\x0f\xa2O\xd7\x99?\x17q\xb3\xcf:S\xceh\xa7U\x19c\xdb\xf7"\x1b\x9f\xb1\xc0\xec\xed\xa1\x91E[\x82\x86\x13i\xb0\x87\x82\x82Y.\xd8\xe2JI"=\xe2!\x92:\x1f\xf0\x99<\xbe\xc5/\x15c\xad.\xc0U\x17\xe79\x13\x18\xce\x1b\xde\x9f\x1f\xdc1\xa0\x92\xbeI\xee\xf9\x0b\x99nr\\z|\x94_\x0f\xa7\xf6\x7fX{<\x9a\x96A\xed\xe0\x91\x077l\xb9\xe9\x16r\xe5\x81Q\xb1\xf8\xb7eB\x1c\xc5P\x19\x96\xc6b\xc0\xd1>@\xeb\xa3\xba\xb0\xf8/\xb1F\xb0.r\xf8(83i;<c\xb6}\x9b\xf4\xa8BX\x02\xef\'\xdb\xd9\x10\t\xf7\xa1\xd1\x15\xe7\xf2d\x9d\x0f\xd7\x82\xc4m\xecZh\xb7\xf3=\xe1\x89\x0e!\xdd\xa6v\xe3\t\xd3\xeb\\\x84\xda\xed\x0bG\x9a\xd9\tM\xc6\xbe\x80\xf5\xe3\x9b\xf1\x99C\x0bK\xaegA\xbb\x1cxH\xf3\xf8\xd2C3\xfb\x9d*R\xb8,\x89\x92Z\x1e\'m\xe5-R\x9e\xcc|\xca\\\xa5\xcc\xeb\x9br\x98\x9c-M\xd2o\xea\xc0\x07kO\xf2\xc9i(\xef\x91~v\x87\xe3\xd9xu\xed\x80\xf0\xd1r\xc9\x9cC3\x96K\xfed\xfd\x90S\x10\xf3!\xbb\xa9\xa3\xa2\xe7\x1f/\x95~;\rO\xd7G1\xd7\xaeI\xfc\xca\xe3\xab\x9f\xe5\x16\x15a\xd2\xf8\xbf}\n\xbb\x05\x0bBo\xdb\xbdx\n\xd2\x91T\xc8S4\x97\x16\x8aD\x03i)\x18\xd6 \xeeXl\xd9\x1a\xda-ZP\fg\xe9\x91\x1d\x1f\xec\x92 \'\xb0\xef\xbf\xf2\x99C\xb4\x0fc]E\xc9$\xb7\xb9 \x9d\xe4\xee\x16\xd0\xc6F\x88\x86ll\x84\xb3\xec7j\xddy\xf6\x9b\x1e\xa5\xe9\xf8|0\x0e0\x04\xcc\xe9\xbb\x82\xe4\xc8\xc9\xba!v\xe3h\xdc\x12\x1d\x1f\xa5cl\xe1\xaa\xb6\xf0\x9cO\x12j\x93P\x8f\x96*\xda\x84\x9aZ\xaa,-\xc5\xe5T\xa4\xa2J\x13\x90\xb1^\x14\xf0\xdfx\xae\xec+\xf0\xff\xfa\xce\x8dF\x95pS\xbdJY_{\xe76\xf8\xe9\xb8\xe5\xb5\x0eFc\\g\xbfY\x93)\xeaPu1\xd8\x85\x7f\xf3.H\xd8\xf4\xf9-\x19\x18\x10n\xe0\xa9J\xcc\xeex\x88\x8a\x98!\xa3\x9a"`r\x1f \xf6m\xe4\xd6\xbd\x04\x8f*\xd6\x88\x1b\xee\xb7sx\x9e\xe2\xa3\xb7\x1c7bB\xfa\xab\xb1\\\x88J\xa1\xd1\xab\x8e\xe1\x0f\x1b8h\xaa\xd0(\xac0\xd2\xdc\xb4\n\x8d\xc2\nC\xdb\xab\xc3\xba\x88\x8dB;N\xf8\xe6\xab\xc3\xe6\x11\x1b\x85\x16NZ>\x8dB\xa3\xb0\x8e\xe1\xaf\xffw\xd0D\xa1QXa\x84\xef\xbc:\xa8Vh\x14\x16\f\x1dT\x17\x99o\x8d\xc1\xc9\x05\x05\x15\xf2Ba\xe59\xef,U\xd4\x96*sK\xc5\xd6\x1b\x90q\xef\t\xf8M\'\b\x8c\xb4\x13\x10\xe5E>\xe2m\x8cED\xa0td\xca-\x16\xbf\x07\xb2R\xd4\x7f\x02d\xbeN\x90\xf0y\x0f\x03\xeb6M|71\xdc\xc5\x90\xe1e\x91\xc7\xfb\x02a\xfa/\x94z\xd8\x9c\xe5+\xac+E\xfc\xad\xb1\xf9B\x91d\xa2\x8f\xaf\xca\xac\xc5\xe9p\x95B:\x91\x95\xfc\x92z`\x85\x9bg\x03\x14\x92\xe9"if\xc0|\xee\xe0{P\x88hj\xe8\xa3s\xd5\x11@.\xba\r\xf9\x9a\x19\x8c\xa6\xa0\xa2\xb5@\x92\xb36\xa3\xbd\x11\xaa\xe0)9\xf7\xbf\0mv\xef& \xc3\xf6F\x9d\xe9\xa6OI\xfc\xc9ox"UO8K\x86\x84\x1b\xb9\xc1\xadF\x98q\x84[\x93\x15\xc9e\xc6\xa5\x19\x9b\xd8:3\x8b4O\xdb}\xc3I\x96\xde\xcdA\xda\xba\xa8MA[\x175K\'^\x06(\x8a\x8dl\bbn\x14\x13\xa61\xfe\xe6\xe0y/\xd1[&S<\x9c\xddN\t\x9d;\xe5>\b*\x17Mf\xbf\xb1\x84=\xc5S\xd8\xd5\xc22\xf5\x14}\xa5\xb0\xde\x8d\xdfR\xc0\x9e\xc8)\xf5\x8a"\xdb\xec(aR9%k\xfa\xa9\xd0a\x1f\x06\xf6\xf5\xd3\xcd\x99\x9c\x1a\xe5\xb9\xc5\x1a\x92\x9f\x7f\x12\x85\x0e\xfa\xd6\x9c\x10*+*L\x8d"QaB\xda\xdb\x17~`\xc7\xadSY\x85\x9e\xe6&\0+\xba\x8b\x88l\t\xc0\xa6\x8f\xa6`,\0\xb0\x94\x9f\xd2\xa3\xd4\x13\x02\xa3\x83\xc7\x8c\xd8\xd6\xdb\x82\xf4\xc7V\xfcx\xedA\xb92\xff\xb4^\xadK\xfc\xaf[}\x92ss\xa7\xc4Uya\xe8\xa4~)\x94\x9cn\x13\x89\xcf\xbb\xf1\xb4\xea\xd0t^\xed\xdc\xcc\x992\xe2x=f\xeb\xcc\xd1\xb9\xb93e\x8c\xde\xf3\xec\b::L\xae\x9d\x9bC\x15\x1b\xbd\xed9az\xed\xdc,\xaa\xd8(\xb4\xe3\xa4\xd9j#6\n\xed8q\x8a\xed\xdcD\x1a\xc1Qx\xcf\xd2I\xb6sSi\x04G\xe1\x1d+-\xac&b\xa3\xd0\x9e\x13&\xda\xce\xcd\xa7\x8a\x8dB;\x8eN\xb5\x9d\x9bQ\x15\x1b\x85&\xc7\r\xb6\xce\xd8_\xf0\x16;@\xbdQ\xe9Z\x07\xd0)vc\xea\xcb\xe1\xe6P\x93\x1c^:\xf1\x0b:\xc1\xd1|\x15Is\r=\x8c\xc9\'k0\xc1\xc2\xeb\x14\x0f\xcd\x93\x18\xb8\xfc\xc8\xf9\xe0\xe2Y\xba\xc7\xe8\f=\xb7\x80\xbd\x0b\xa4&ct\r\x85D\x043(\xdf\xf0kY\b\x86\xf5\xf6\xfe\xc6\xd8\x90{|dl\xf0\xf0\xd8\xacP:xt\x13\xeb\xc4\xa1\xe3\xe3\xe23\x0b\xa7N\x83S\xcf\xd2\xb0\x1eH\x9d\xe49^\x11\xbdqO\\\x04<\xb1Zx\xe1\xc6\xc6\x1f\xe8\x04\x0eO,\x1f\xe5\xc2\xa0i\xec>\xd5\xf48\xfb\xd2\x81c;F\xe9\xcbu\xec\xfe\xe8\xf3\x8e\x9c\x9f\xfa\x91\x17f\xc3\xa8hY\x97\xa9Z\xf6\xcc\x9c-{tLr\xea\xe1S\x1fBr"\xb4\xd6\x91\x8e\xa9\xd8\x81\xd0\xd2\xc9@\x88\xee\xda\xd3\x8b\x8eg)\xf9d=\xfbkA\xfc^\x94c\xf3]\xef\xb9*iF\xc4jt\xd3\x84cE_$\x9ch\xf3,\x96\xa5r\xfcnC1_\xa5\x90=\xb76MY6\xa2\x82\xac\xd4W g\xe4\x97\xe4\xe4\x0bVY\'\xeb4X#7\xfe\x9c\x01;\xd5B\xa9\xd8\xd1P\x02\xc9:\r\t%\xe7\x07P{\xc9y\x01K\'e\x8ef\x04Q\xf4\x84\0\x84S\x1d\x1f\xefXe\x0b\x1b\xe2\xa7\xa8a\xe5$\xec\x15\x1a\xe4\xdak\x89r\xa1G\xf7\x121\xca\xdb\x13\xa2\x93\x88\x86\xedz\x03\xd9-x\x03\xdf\xdbB\xac\xee\xb0\xc3V\xe2=\x9e\xddR\x04\xdfn\xbbB\xfcK8e;E\xb2\xb1\xe8\xa7\x81\xb0\xe3\x1b\xdeN\xce\x1f\xa0X\x93\xf3\x07\x96N\xca\x1f\xb1!\x1a\xd1}\x8c\xe6V84\xcd\xde\xba$\xda\xf3\xab\xdd\r\xc7f=\xdc\x89\xc4o\x0fw\xce\xb3Q\x99N"bo\xdc\x8b\xe8\xbd\x12-\xb3\xaf\x16\xe8\x1d\x96-\xcf2\xa3\xa9\x12\xa6\xd2\xb3U\xd8\xbb\xec\xac\n\xfb\xdc?[\x9d\x11&\xe1\xf3\xe6)\xeaTB\xfa&\xc7w\x9fR\xe5\f&)~?ndK\x9a3\xe6\xa7\x91-i\xbe\0h\xf5\xf3N\xe8\xa8\x9f\x93\xb6wt0i{\t\x87\xa5\x13\xaf\x1e\xa6\x06}\x19\x7f\xb1-\x81\x14?v\xd8\xf9\x16\xe8\x10O\xf6S\xd0\xc3\xf6U\xb4\x9c\xdc?GsJ\x8aD\xd5/\xe0Q; \x82%Q\xe8\xb0e\xe1\xe8\xe0\x93Qy~\x7f\xe0\xdf\xbd^)\x82\xe6\x1f\xf1k\xfc\xccZ\xe9\xe0C\x88\xce\xd3\x81\x9c\b\xa9\x91;\xb2\xef\xed\xe9\xcc\xc6c\xe1\x95\xda\xd16\x88\x87B\b\'\x8a\x9e\xfbt9\xb8n\xb7\xf6\x95.\x80\xe1\xa5\xd6\x036P\xc0B\x18\'\x8a\xee\x8b\xf88\x94\x9efg\xbb\xea\x01\x19V=\xd8\xcfr\xcfISD\xf4f)\xb4\x06\xb5{\xdf\xd03e\xea\x1e\xed\xc5\x9d\x1e\xba\xe36\xb7\x9c;V\xf8\xbc.\x1aB\\R\x15\x8e\xd0;\xe6\xa0e\x9d\x935VA1\x13\xa9r\xa1\xc3T\x01]G\xc9$\x18^\xdb\xa2y\xef\xf7v\xa6B\x17\xd8>\x0en\xdf\xac\xf4\xcf\xa3\x8f\xb3\xcd\xb2p7\xe3\x84\xfbi\xe7\xed\xd6|\xda\xaa\x14z\xd4\x05\x0b\x01o\xfa\xa0\x0b;\xee\x84\xa8\xfb\xf0\x11\x8b\xc6=\xe6\xa5%\x9e\rQ<\x1a"\xae\xb3=06\x10y\xf8\xc6>\xe4q\xbb{^dw>Z\xc1p\xc9n\xf0\x92\x80\x19\x0fP\x8f\xc9\xb5Z\x96N\xc6\x83\x15\x18\x87\xfeq\xd8;\xe3\xd3<\x92\xd1\xfad\xc0\xc4Xdp\xdd2\xad\x04\xfb<\xf4h\x8d\x9c\'\xbc\0\xd3\xc5\x1d<\x99[\xd0d\xb7\xf6n\xcd\xa2\xc8F\xae1\xac\xa4\xcfr\xc1:;\x18\x1f\xe3\xa6\xb2\x07\xcc<\xbdtHt\xc0k,p\xef\x8c\xca\xc4\x05\b\xb3\xba\x8f\xc0|@s\xe5\x10;\xc7/\x03\x14\x1d\xed<\x94\xba\xda\xb5\x01\x8c\xfeu\x1e\xba\xe7a\xe7E\xb5\x8e\x1e>tR\xfe\x1e\xb3\xeet\x1eR\x87\xba\x99\xa7\xd5\xa5n\xa5@p\xaa\xf3\xaf\xa8\x1b\x9dO\xdc\xee\xc0\xf9 \xe9!\x96I\x04\xf5\x14Ke0=\xc6\xd2y\xd0;\xe2!\xb2\xe7\x8b\xde\x95\x0f\xc5\xed\xbcK\xacf-\x013\x0b7\xa4\xed\x85m\x1d\x01\xde\b\xa4\xd7\xe6\xe5\x1e\xb1\x9fGZ/\x9a\x04\x8ew\xea\xad\x17\xacI\xe1\xd8\xcf"\xe1\x85\x89\x85\xed%|\xb5\xff$\x92c\xdbK\xfb\xf0Va\xe1$\x99u\xa6\xf7[\xb8@<\x85!JZ\xe9\xc8\xbd\xb3H\xf2\xfa\x0b\xa19\x02]\x0f&\xbcS&\xa4\b\xac:\xe0\x81\xa8\x0f\b\xb0\xc7R~o>""\xa9\xd8Y\x04s\xdb\xee1-L\f\xbd\xbbd\xd8\xac\x1c0\x1a7\x1b\x87\xde\f\x9c\xad\xc3\xc7#\'\xab\xc8^iGAxl\xd0\x1d\x19t\xcf^\xcc\x80\x88]b>q\x8f\x10\xd5R\x96(\nKl\r\x11\x87G\x0f\x8cG]\x0f\xdf\x8c\xba\x1eO\x87X\x82IQq\f\xdd\xf1\xe6c\xcd\x15\x9bn/\xe7\x1b\xa6\xf2\x14U$KG\x05\xc9\xa2\xf2\x04{\xc7z^,na}\'e\xea+\xcb\x1b4\xbe\xe1yCl\x07\x8b\\\xa0\xa8\x979A\x8c\b3\x0b\xc4\xa8<\xac\xc1\xe6\x86\x8e\xa1\x88:}\x01\x9b\xc5\xd0\xac\xe5c\xa2T\xa9\xf9HW\x94\x85\x87\xa5M\x19z\x7f=n`OO\r-\xe4\xd9\x99\f-\xcc.\xc8\xe7\x96Nf2\x94T\xbf\xbf\x9ao\xc7,\x1d\x90\x1cx\x16\xf0\xd0;\xff\x1c\xaa\x18\xa3\x92b\xea\xc3\xf9\xc6\xa4S9xd\xd1q\xe8\xc8{d\xe5\xc1\xd4\xca\xd3d\xf7<?fY\xea\xf4Q\x0b\x9d\x1e(\xa5\xc6\xdes\xccO\f3.\xbe\xd1\xfd\xa5\xcb\xec\x9e\xbb\b3\xc9S\x1e\x1c#\xfa\xdf\xe3\x94$\xa4\x990%\\\x9c.\xebH\xde\xf3W_\x93\x1d\xa6Jy\xd5N\x8b\x1e\x88\x93\xa2\0\xe9\x94\xd88(N\x88\x02\xdc\x9b\x0eE\x14;\x19J\xc8d*\x14\xc4N\x84\x02\xe848\x15J\'\xc1\xa5\'\xc3\x14(\x81u\x02\x94\xe4\xec\xf4\'\xec\xf4\x13\xc3k\x85\xae\'\xee\x07|<a\x1e>\xa0}\xa7\xee\xee\xd3\x10Lg\xc8R\x11\x9d\x1f[\x81\xfc\xec\x88\xb4\xbc\x0fw\xb1v\x8f\xc9N\x131wx\xb3\xf5\x8fV\x91\x86\x81$\xb9n\x1c\xed+1\xbc q\xee\x06\x9fM/Y\b\x96\xce\xc7\xdcQ\x1d}w\x0f\xf5\x97\xdc\t\xc9P\xb6WZ:\xe9\x95\x90r\xd8\xf7OW\x91U|\xad7\x1f^\xc1\xef\x02K\xdc\xd9S\x1e\xca\x84F\'uIFA\xa2\xff\xc5\x8b\xb1\xf8\xee9\xac\xca`,\0\x15\xedB\xc8\xb6?\x17ZL\xdc\xa3my\x1e|\x92\x9d`\xff\x98|f\xcd`\xfa\x99\xb5*;\xab\xa9\t=\\tR\xbbX\x99{\xec\xf1\x91\x17`T\x81:\xf0\xdc\xec\xd2Sa\xd3K\xee\xe5\x86~\xf1\xb8\xe3\xd7\x0e1\xd9\xcf\xa6>D\xfc<R\xe0\x84\x98^_\xe8$\xb8\x0e\x94\xc4\xbbR\xeaq\xf3\xd6\xe3%&\x1d\xc0\xfd\x91\xceQy\xa0\x06\xbe\x0f\x0b\x9f#\x0f\x12[\b\x8a\x16Cf\x1dH\x89|\x11(/;\xb7\x13Cl\xf1|\xc2mV\x1a\x1f&^`4\xc8v\xa0X\x1bC\xa0\xd6\x06r&Y\x17\x8a/\x84@\x9d\x0f\x14\xdc\x8f\x03\x1e\xe4\x94\xbayG\x0b\x91\xb5\x87\xaf=\xdehq>E\xef0\xd4Kb\xd2iI\x07\xb5J\b\xabV\t\xc0OR\xd8\x11\x9d\xd36\xd1\xd4\xe4L;\x01\xd1\xf4c\x15\xd8\x93\x13tl\xb7/\x1c\x9c\x8e\xec\x8d\x8fb\xe4?X:4\x9d\x19\x1a\x07\x8e\xc6vv!k\x07D2\xeeT\x04?G\xce\x92\xf0Tr\x07\x19jQ\xcep\xdcv\xc8\xc6s\xee\xf4G\x88j<\xc2\xdc\xb39\xf8\x0b\xb3\xb9\xc3\xe2\xc1\\\x0e\xd2\xf1\x90-g\xb1\xeb\xe3\x8ej5\x1d\xd3H\xd9\xe1\x04E\x9c|S\xd6\xd2\xc9p\xb2\xcc\xd2\xaf\x87\xd6\x14\x86\xda\xbd\xf3D\xc3&\xcb\xf9\xca\xcbH8\xb5\'\x0ek\x81\xb2B\xcf\x155b\xa3\rD\x9f2\x98\x91\xcf\x1f\xc3\xf5}\x93\xdc\xeb\xb4\xc8\xe8\xdb\f\xa5\xc0\x1e\xce\x9d\x91||uG2\nO9W\x05~\x0fJO\xed\x16\xe4X_^GGW^\xd2f\xdb\xb7%9\xfa>wA\xec\xe6\xeb\xdcevIl\x82k\xd2#\xcd|\xc1\xd8{\xe6)\xc9\xd12\xbb$\xe6\xc3\xb5\xa1\x933\xc9\x130.\xef0\x7fm\xcc=\xe7\x97\r\x0f:K\xd4\x9f\xa9^\xce\xf8 \xca)\xb5\xdeH\xedFd\xd4\x8c\x05\x8c\xfa)HwY\'\xd6\xcd\x17\xeb\x95\x0f\x86\x9a\xc1j<c\xf6\xe5\xb7\r0V\\\xa2\xf5\x0bf&\fH\xc6\xbc\x8f\xa6(@j\xdfG\x93\x14t\xec!\xcf\xea}\xbc\xf98\xe4\x9ce\xe4\xe0\x9b\xd3\xf6xE.\x1e\xcd.\xd1XV:"\xbd\xab\x05[\x83\x97\xd4+\x81\xb2\x9a\xf3O\xd0\x05.\x89el.\xb4\x1a\xd0 \x83=p\0s\xe4e{\xefc\x033\x064\x97\x94\xcfH\x8e>\xe3\xd0\x10\xbbs\xe9\xeb\xac\b\x8c\xf1\xc5\x01\x93\x0597\x1f~h\x05\x8d\x07\xdc%\xe2{7\x1c`\x02\t\x9c\x9b\xa8\xe7d\x1d\xf8\xe1\xde\x8b\xf9\xae\xf0\xd4\xa0#\xf1+a\xa5\xad\x1b\xa6\x86\xcb\xdd\x1aZ\xcc*\xe5\xdc$\xbd"\xeb\xf66\x04\xec\x06\\\x92{q\x1aC\'\x9d\x82\x01\xf7\xdb\xb7\x1d\xcf\x85\x16<\xb3\xa6d\xd0)$\x8d}\xcfE;v\x10\xec\x1dl\x93\xc0\xf8mK\xd3Ad0\xebF\xe1\x14\xf2\x9er,\fUt\x97B\xa9jIQ\xa2e\x87A\xa9Z\xf2Ci\x17\xf7\xd5Q\x16\xd8%^8g\xc8x\xe1\x9c\x80\xf1\xc29!\xcf\xb6\x19b\xb7\xe1\x82\xcd\xfd\xb8\xa2\x9e\xce\x1d\x90,\xbd\b&G\x1cj\xd2aT\x14\xc2\x0e\x8b\x1e\x88\xe3\xa2\0q\xdc\x81\xb9\x9f\xf4\xc8\xffeA\x90\xa6\xa6W\xcc4\xa3;\x18\xbb\x11/\xb9\x88\xb1\xb5\xcc`\xedOb\xbb\xb9\x92\x11\xed\xc1\x8e2\xc5\\\xe8Q3\x9d\tx\xd3g\\\xd8q\xf3ez\x18\x0b\xb6\xbf\xf7\xe7\x8b\xdc\xbfQ:\xe0\x99\x87\x11\x0b~W\x0e\xa4\xfbDP\xe7\x1e\xe5\xa4G\xee\x9eGN\xfcDeg\xfdf5;U\xcehA\xab\x8c\xf1\xf2u\x9e\x8dw\xe9\xa5l\x04\x1a\xadL%\xe8)]--\x14\xd3u\xd0$B\xdaZ\x99=h\x95\xa2\xaf\xc4\xbb6sf\xc4\x1f\x0fY\xf2\xf1MN\x93(\xbb F\xaf\xb1\xc9z\x95\xb9\xd7\xcc\xf9\x91\xd6C\nL\x1c0\xc4\x03%\x9dC\xcc\x11\x13\xd6\xac;\xb4c\xef\xa6/\x14=\xcb\xf7\xe4\xb8\xd6\x8b\xcb\xd9\xc5\x1dn\\b\n\x1b5\xc3ux\xe9\x1e\xe3\xab\x1e0k\xf1\xa9Cb\t\x16\x16\xb8\xb7\x1e\xf7\xf1\x87\x15\xb9\x8f\xc0\x18\xaf}\0\xbbJ\x9f\x06(\xae\xd3=\x94\xae\xd4\xcb\0\xc6\xb5\xba\x87\xee\rH^T\xbb^\xf7\xa1\x93\x15\xbb\xc7\xee\x1d\x12o\x1c\xcb.\xe7}h\x1d\xe7|\x90\xb8\xa4\x9f)\x10\x16\xf5\xfe\x15o\xed\x93\xa3(\xab\x14\xe2\xdd\x9ag\xd9\xa0\xf6\f\x1d)}\x1e\xecar\x1f]X\xa7\x934\xd7_\xa2\xe9&ws\xa1\xcd&wsY:\x99;\x84\x81nt\xd3I\'\x811\xea\xa3\x01\x1fw\xd1"\x1b/\x0eZ\x8f\x8c:(\x03\xeag\xde\xe2G\xb5\xbc\xa2?q\x90\xf7])=5$\xe4\xd3p}\xd8\xfb \x8d\x7f\x81GDX\x8d\xce\xac\xe6\xa0d\x05Q90\xac\xe6<\x8a\x82\xef\x0f[sx\x88B\xf3\xa4c\x9c6\x1a\x8f\xa4\x93\x89\xa0o\xc9\x17\xcd(\x89\xb9\xfa\xc1\x9f(\xa1\xcc\xc9\xb5\xe20I\\\xac\x03\x0bl9\xc9QDla]\xec\xf7\xa0\xd9\'\x92\xab\xaa0^$WUY:\xa9[F\x84tP\xfc\xbf_\xe8N\xfb\xb2s\x9ec\xab:a\xe8\x9d\xd1\xec\x90\x0e7a\x9b\x80\xc5`]\x80\x0e\xfd\x93\x87Z\x81\x9e{\xb9W\x06\xd6\x18Rb\xf6\xe3B\x95\x04?\x1e\x8c\x01T^\x95{-\x9ctqw\x8d1\xd0\x8d1\xdc/\fS\xd3\x85\xcb\xc0\x1e\x03\r\xb6\x15\xf6\x0f\'\x8c\t[\xb9A\x8e\xee\xd9\xd5W\xb9\xba\x15\xb8\xfcj\x10{\xa2xz7\x94se*\xf9\x81\xe8\xaf\xb25\xa1\xd5\xd7\xc3\xd8\x940D@\xb5\xd6y\x031\xfbc\xedav\x99g\x175\xf2 \xf7\xf4\x1frn\xbe9\x07\xb5@\x06\x8f\xdd\x99\x81\x82\xcb.b\xd0\xfb\b\x83M\x1cE~\x82\xe5\xe7\t\xd1\xf2\x13\x0fB\xec\x9fyiz\xe5\x88\x13w\x80\xe63G\xf0\x10?\xbda\xe9\x03\xca\xcf\xd6\xf2Ks=\xd7D\xfe1.\xa4\x12 .\xa5<\x1c\x17S\x04\x92E\x83\0\xe2\xd8I\xc5\x8d\x8fya\t\xcb)\x1e\f\x11\xad\xe8\x1e\x18o\xb0x\xf8f\x83\xc5\xe3\xe9\x06\x0b\xc1]r\x91\x1dJ\xcfZ3\xd0s\xed\x02\x1b;\xc4\x17]E\xe7B\xd8[y<\x10\xaf\xec `OPO\x85N\xd7\x80\\_\xde.i\xe6\xec\xe27\xab\x8b9\x07\x82T\x83\x9d\b\x10TXGY\x1d6 Q\x89%\x12\x9c\xb3`j\xb8$7\x83\xa1=$7\x83Y:\x19X\xd0<\xae\xe3\xdb<8K_\xc7\xd7y,n\xc0\xe4d4\x8a\xe8}\xbb\xffl\xf4\x8c\xb9Gt\xa2\rA\xa2\x96VzD\'Ky\xe7x\xf9\x88[\xc3\xa5GTc\xa8\xcb\xaa\xf2\x98j\x80m\x004fF\xc4\x9b\xb9`.\xc3C\xd4?\x844\xdaQG:\xca\x9cG\xf2\x9ef$\xb1\x06\xbdH^\x1d\xdd\xacS{\xeck\x88\x1dC&\xe4X\x1d\xaas@\xd4\xa0\x04H\xf5\xa7\xc2AQ{\x12\xe0\x9e\xee$Y\xb1\x9a\x93\x84L\xf4&A\xeeiM"\xb4\xd5\x99$\xa4V\xa4\xb0\xa3\xbe4\xf5d\xd0\x96$\xb0V\xa9\xc8\xa1\xdf\xcd\x99K\x11ZeHB\x07U\xc8\x13\xfd\xe9I\x14\xcd*\xe35\xcaH\xef\xaa\xb7\xab\xcd\xb2\xab\xd8s\n${5n\x7f\xa4\xcce/\x1dH\x7f5\x1a,\x1dW\xbd\xbc\f1F\xc3\x8a\'\xe2\xe5es\x0b\xa8\xa5\xa5\xcd\x92\xcf\x81\x96\xd9\xf5i\x13\x87\x8f:\x07\x1do\x1bk\x1d\xa9gC {\xf0C\x84\x88\xf6\xb6\xb1E$\xc3\xcbX\x10+\xa6\xc9\x97\x11\xd3l\xcc\f\x16E[\xe7\x11\xf6\x02\xe4K\x93\x8c\xdeI\xb4l\0\x9a\x9b\xc2 \xa4\xdeP\x06)\xad\x9b\xa4\x90\xf1\xbb\xc4 \xed\xb5?\x88\xc7^\'\x06\xdd\xe1\xea/(\xc3\xa6\xf7\xd5^P\xb6\x9a:\xda$Kq\xed\x05e\xab\xb9\xa3\x93\x18\x97\x0e\xd3\x0b\xca\xd6\xa0\xd3\x0b\xcaX\xe2\x16\xb2\x05\x82\xb2\xbb\xf1C\x86\x8c\xf6\x96\xa2&\xbbo\x1e\xc6\xab\xf6v\n\x8c\xf9\xd7x\x87\x19\nU\x0b\x13\x03\xdd\xf5\xf6#\xc6\xeb\0\x1a\x93\\+!G7?A\xfaDeD]\xd0\x02\x17n\r\x82\xe95\xd2r\x89\xf6\x849P\xc8\xbe[\xda\xb0v\xa8)\r\x1e.\'bX\xff)\xe2\x19\x1f9\xda\x89\xd9z\x82\x9a\xd3\x0b\xadX\f\xa1\xdf\xb3J\xdf\xf4\x0b<$\xd0\x8b\x93-ot(\x9e\xc8\x96\xeb\xcf\x16u \xec\xc7\x87\xe7c0\xe8\x90\x12\xb9p\xc2\x85\x0fX\x87yD\xefOCcx\x1b;\xe2\x07\xcc\x9f\xa4\x80\bI\xf92\x03\xce\xbb\x9e\x97\xef_\xc7\x9f\xca\x86\xc2w3\xfda\xef\xfcf\xf6\x9b\x8d\xb1d\xf2C\xdb\xc0\b\xb7\x11/xc9]G\xf8\xe6\xab\x99s\xd4{\xf8$1\xdfO\xee\xb3j\x03\xa0\x83\0\x92\xb7\xa3\x1d\x8aF\x87\x15>\xdb\x1e\xeb\xe8\xd8eI\xdf\xb4\xba\x02\xe0=\xbf\xe7\x04\x0f\x1e\xcf\th}\x9d\xc1\xb8\x17I\x9e\xdd\xc6a1\x1bE\x9e}\xe6\x10\xdfd\x9fu/\xad\xc6\xb3\xddJsttP"mo)nAs\xb3`IF\xdc\x1e(\r\xd9\xd4# \x9a$\x05\x8c&IG\xca).h\xc0s\xa5\xa2V,\x98}g=!\xf21\xc4/\xbbad\xfb\x1c\xa7\x19DiF=\xa8A\xc9\x97\x9e1\xb7~6\xba%\xac\xcb\x9foT\xcb9\xb1\x1b\xcdrAt\xacX.\x01\xda\xc2\x99\x82\x96\xefFpw%\x8c\t2\x83N\xda\x85\x02\\\xc4\x9aO\x83M\x96\t\xc7\x9eG\x99&\x9c\xf8\x8d\xa24.\x0fv\0\x93\xdboW\xd9\xe7\xb0\x96A\x9e\xacYc\x8d\xb0\xe8\x82\xf6\xc3I\xe8\xee\x0e\nm(\xd0\xb6\xfd\x10;oN\xf6\xaex\xac\xd3=\x16\xba\x88\x02\xb6\x9f\0L\x06^4A\xbbVo!\x90\xb8\x98\xde\xfd\xce\xf8j\xcc\xb4Y\tL\xeb\xb4:\xcf\xfe\x17\x87U\xbe`#\x98e\x9fu\xd0ES\n\x93\x1fL\xf2\x9f\xa3\xca\x8f\x12\xb7s1\xecF\x9f\xed\xc4\xb6\xae\xb2wVr\x9b\xbd\x87a\x05Y\xc6\xf6c\x9c\xc5\xa6 \xed\xe1\x8d5h{x\xc3\xd2\x89\xbc\x0b24\x9a\x0e\xd4x\f\xedV\x01\xb4\x11\x12\xbc\x18?\xdc\x9a\xc2}\x96\x8b\xf5\xb8@g\xb4\x9f?\xeeOa\xc8\xcd\xe6=\xee\x142\xcd\xd1g$%\xf6\xf7\xf8%\xcahM\xafRF\xfa\x1av\xf4\xde\xcdg\x86\x96\xd9{\xec\xb9\x8d#\xd4M\x1d\xc3\xf0\xbb\x99\xcf;\x92f\x8b\r\xeb\x90w\xd3\xd3\xa1;\xbd\xdb\xdd,l\xa1\xbco\xf16\xe7\x04\xdeB\x9d\xc3\\\xfc\x9etV\x06\x88\xe5\x8a\xfcl\xcd\xbd\xa9\x90,hJ0\xf5\x89\xcb\x82\xbd\x18R\0\xfdH!&Z\x03\xf8\xb5\f\xf0\xe5\xd4\xe3\xd0\xa9\xb6\xa7\xd4\x10\x83\x9d\xa5\xfb<S\x0f\xd0~o\xc3\x04\x0b\x0b\xec<_a\xda\x18*\x17\b\xc3\xd6A\\\xf2\xebE\x9b \xfe\xd2p\x9e\x83\xe3\x96\x974"\x13\xb8\xf3\x81\xb19\x1e.\xd2\x91 \xf1$\x1e\x8f\xa4\xdf\x84\xb1\xec\xa5c3k_\x8bbQ\xde\x86\xb1\xec<\xb0y\xbf8\xef\xe8\x1a\xd9\xb4\x9a\xaf\xf0\xd5\x18\xe5\xf3,\xf4W\xf31\xbd\x13\xc8\xf2}$\xf2^\xf86\x1eo\xd4\xf5hO\x87\x8d\xe8\xc0\xe5P\r\xe6\xb3p\xbe\xd0\x81\xb1\x99x\x89\xcd\xf6c\x13\xea\xf3\x7f3\xdeu_\x0f\xa2y\xf5\xd9\x80\xbe\xf8\xb5\x8c\xd6\xe3\x10\x96\x89\xaa\xb0\x06\xf1\xe9\x04\xb4\xed5Bk7\x81\xcc\xc9\xb0\x8e2\xb2&\xd7i\x01\xda\xbem\xe9D\xa9C\x81\f\xf2a\x92)\x1f\x12\xbf\x17\xb20\x92\x86\x8d \x18<\xdfu\xbcF|\xa2o\xe6\xdcB~\xb7g\xe5\x10*\x8e\xdeh\x83\x1fGY(\xad3\xae=1\xdd\xfcnf\xe0r\x99\xfdn\xdd\xad\x8b,\xfaSb\x95\xf5\xbb\x1d\x85\x104\x19\x85\xe6\xd9\xef\xc9\x89\x0e\xe8\x04\xbf\xf3\x02%\xecY$\x9e\x8e\x18\xb8\xd5\xad\x11\x85\xfc\xbb\x91uUf\xfc\x10\x10\xf4\xd0\x8f\xcd\xe6)\x0e\xd8\xd5*\xb3\xb7\xa5C\xc3\xfd\xd0\x95\xf92\xd3\x8b\xd3\x0b\xe2f$+\xb2\xe4\x1auy\xcd\x9a\xb2H\xdb\xc9\xa3\x02m\xe7\rK\'\x13\x9104\x99\x1c\xd4a\xc3\xe95\xec\xbaR\xdc\x9b\xa9\xa9\f\xa0M\xe2\x06L\xda\xc2\x02\\\xab\xda\xc3B\x16mT0\xdc|\xa4\xd3D\x9b}\xd8\x95>\xb2\x97T\x90\xa3u\x19\\g\x1fF\x01\xacf$\xe5F\xf88\x85-\x8b\b\xa6\xba!\xcbr\xbcS\xbc\x96\xd0\xf7f\xc2&e\x8cf\xc2Y\xca\x1d\xef4\xa3a%\xfc\xd1\x963\x14\x92\x8f\xdb\xedi,\xc1?nv\xa7\xa1\x9b|\xdcw\xae\xc0\xfc\xfb\xf1\x15\xe7\n4\xd7\x8f{\xce\x15S\x89\xccmY\x0e\x17g7\x89\x05\x876a\x1a"\xf3/\xae\xa9,\xf3\xb4O\x131\xb3\xad\x907\xa7\xc3;F\x80\xfd\x17t\x81\x0f\xf4\xcd\xe8b1K\xf0\xf4\xc3X\xc2\xb3\x17\x97U,\xc8\xd3]\x0b\x0e:\x1c\xa0\xd4\x110Wl|\xd4\x9eM\xd9\xb3R\x9c\r\xe0\xd2\xc7%\xca\x142\x04\xe5\x815\xe2\xb7)\xe6\x95{\f\xd6\x16,\xa5>z\xab\x03\xa3\x14\xac\xe05\xf9\xd1\xe9\x10\xa9\xf4\xc7\x0f\x8c\xd3\x98+\xd8\x87\xd3\xcd1\n\x91\f7\xc8\xdb \x1f\xcc\x96\x87\xb8N3d\\\x96\t\x18\x97eB&K\xac\xc2#\xf6\xbe\x8c\xf5\x1c\xa6\xfa\x8f\xe4@8\x1a\xcd\x10E\xee\x18\x8f\xed\xf6\x9d\xa1\x93\x91\xa5!C[\x03*\xec\xe6\xcekh{\x1f7\x97^\xafn\xc0d\x1c\xc1x$\x1f+q\xe7\x13P\x11\x83\x1d\'EX3\xa0I\n\x1f\xba\x8dV0\xcb\x1f\xf1\xdb\xbbX\xa5\xa9\t\x9c5\xf96\xbclQ\xc9\x07\xd6\0\xefe\x9a\xa5\x90\xbd`\x14\xf5J\x9f8\x18\xbf>\xc2d\x85\x92\xb1\x93\x15D\t\xcb\x0e6\xca8q!\x0b\xc9\x89oDq5\x05\x8cA 9\0\xde\x18:)\xe0\x9a\fmJ\x13P\xe7\x87\xfe\xc5\x8e\xb1s\x8f\xf5\xc3\xa5\x7f\xee\x93\x8ff`J\x03o\xdf_\xa0\x87X\xb8\x8d\xf0\xbd\xb7\xa6d\x8f\xab\xb1\x0e\xa0\x15\xfb\x06L\xaa\x91\xa9\x9ba\x85\x03\xe3\xd5\x8e\x1e\x1cI\xed<\xb9\\\x93\x0e\x06\xe3u\xf6\x85s\xeb,\xfbb\x0f\xabA\xdf\xf8\xa2Fd\xf2B\xf09\x9e\xed\x85\x03\xa4\x8dSgGr\xe4\xd4\xc9\xa8n\x9d:[A\xa3S\xa7\x84\x1a;u2\xba\xde\x9c\xe1*\x84\x1e\x1d\xe1\x9a\0\xb4>\x9e\x8c\xe9\xb7\xed3\x16\xdc\xe6\xc0*jX\xd0\xf4\xae@\x8c\xd6_6\xa7\xdf\xcc\xa6<S\xfc\x90\xb3O\xcb\xc6=\xc6\xa1!\x01\xe2\xe0\xe0\xe18<\0\xb0\xda\x12r\x1aL\xe509|\x893\xf5\xd4\x11~\xa6F\xab\xcf\x018\xc7O>\xbao\xac\xc3.\xf2\xc5~c\xdd\xd3a\xbe\xc6\xae\xd5\x97\xc4\x80\x83\xd4\xeezN\xa2K}\xd9\xde;\x19\x8d\x06\x90\x9c\xb0E\xfc\xc9\t[\xd2\'\xd9\xbd\x9a\xc8S\xdc\xfeq\xb4\xd9\xbfj\x04\b[R\x8e\xb2{J\x01\x89\x9bJ\x0eIw\x95\\\xb4v\xb3\xc8!\xc9n\x91\x83\xec\xae\x90C\xcc\xce\x8f\x03\xecy\x17\x87\x84\xed\x1dGI7\xfau\xe0\xb7\xce\xa8\x0b\xac#x\x1c\x8e\x1e\x87\x15z\x11q\'\x030\xb4}\xef\xb4\x86l$\xe7\x11Q)\xbb\xad\xedN3\x02b\xf4\xb7W\xc9\x17Dm\xe51\x9e\xfb\xb5\xd7\n\xe7N\xf5-\xb3/\xc9\xb124\xe0\xe4X\x19\xe9\xe3`\xee\x03G\x13\xb4^"\xec\x18\xc9\xc4\bQ\x93\x131\b\x9f\x9c\x88\x01\xad\xe3<\xde\x1d\xbb\x05`A\xf4%n\xb0!C\x89?<"O\xfc\xe1g\xd9\x7f\xfc\xe7\x7f"\xb3\xff\x17e5<\xc6'),arm=j_([[0,a(dr),65],[0,a(rr),f7],[0,a(vl),hN],[0,a(yo),gR],[0,a(xz),N],[0,a(Ak),eE],[0,a(wU),jy],[0,a(y3),hL],[0,a(qo),66],[0,a(nO),67],[0,a(w_),j3],[0,a(cj),68],[0,a(oM),69],[0,a(yI),ju],[0,a(yN),gE],[0,a(yk),gJ],[0,a(ye),fC],[0,a(bh),70],[0,a(eC),71],[0,a(lZ),72],[0,a(ih),73],[0,a(vC),fI],[0,a(vM),fw],[0,a(wV),hQ],[0,a(uS),fK],[0,a(nX),74],[0,a(j0),75],[0,a(jT),76],[0,a(oW),77],[0,a(f2),78],[0,a(xm),lF],[0,a(d6),79],[0,a(jx),gC],[0,a(v_),h5],[0,a(yH),fo],[0,a(Ah),jR],[0,a(wj),eD],[0,a(pv),fG],[0,a(zs),gA],[0,a(dK),80],[0,a(pj),81],[0,a(dS),82],[0,a(c6),83],[0,a(qB),84],[0,a(d8),85],[0,a(wb),g7],[0,a(vK),hb],[0,a(vb),lW],[0,a(wq),fR],[0,a(eO),86],[0,a(eH),87],[0,a(qt),88],[0,a(qP),89],[0,a(y_),ex],[0,a(oR),90],[0,a(jW),97],[0,a(yY),jL],[0,a(xH),hY],[0,a(qp),gZ],[0,a(zC),f6],[0,a(q8),gI],[0,a(Af),hZ],[0,a(rn),38],[0,a(zj),ig],[0,a(pu),94],[0,a(po),co],[0,a(ot),42],[0,a(oe),64],[0,a(Ae),hW],[0,a(n3),98],[0,a(ql),92],[0,a(p1),eL],[0,a(oy),dt],[0,a(q0),c5],[0,a(q7),91],[0,a(ou),93],[0,a(vR),gD],[0,a(ps),fO],[0,a(pG),99],[0,a(yj),aq],[0,a(yD),lD],[0,a(n5),dM],[0,a(op),fX],[0,a(qY),d5],[0,a(lq),58],[0,a(l3),44],[0,a(vW),eJ],[0,a(qx),gQ],[0,a(pL),aQ],[0,a(pX),ip],[0,a(pr),dT],[0,a(vz),fV],[0,a(rb),fx],[0,a(y5),fD],[0,a(q4),36],[0,a(zc),cM],[0,a(N7),fJ],[0,a(qM),bW],[0,a(u_),jN],[0,a(wm),jn],[0,a(wf),j2],[0,a(vh),hV],[0,a(qc),56],[0,a(qL),gX],[0,a(qi),iq],[0,a(px),eN],[0,a(pH),61],[0,a(oO),33],[0,a(nM),fL],[0,a(nU),bE],[0,a(qm),g0],[0,a(oB),53],[0,a(oi),fv],[0,a(qd),fP],[0,a(q_),52],[0,a(pk),gB],[0,a(pw),c8],[0,a(ro),fB],[0,a(oN),96],[0,a(qk),62],[0,a(qI),ft],[0,a(p_),dm],[0,a(pO),gG],[0,a(qE),gL],[0,a(qr),dp],[0,a("/hungrumlaut"),fU],[0,a(lG),45],[0,a(nR),cO],[0,a(vU),iy],[0,a(wC),lX],[0,a(wl),jE],[0,a(wy),ir],[0,a(oL),fT],[0,a(pI),fW],[0,a(pa),cP],[0,a(q3),60],[0,a(uA),fk],[0,a(rg),dw],[0,a(q5),Q],[0,a(y6),gS],[0,a(oS),aY],[0,a(rl),57],[0,a(x6),j1],[0,a(pt),35],[0,a(n1),dq],[0,a(yS),h8],[0,a(y7),j5],[0,a(xh),h1],[0,a(qX),f3],[0,a(v7),V],[0,a(qz),49],[0,a(o8),eA],[0,a(oj),fM],[0,a(qy),ds],[0,a(vO),ia],[0,a(pN),ec],[0,a(qg),f1],[0,a(oI),40],[0,a(oQ),41],[0,a(p5),37],[0,a(lU),46],[0,a(nW),fl],[0,a(nP),gT],[0,a(q1),43],[0,a(vt),fz],[0,a(n_),gP],[0,a(rd),63],[0,a(oC),c3],[0,a(qK),34],[0,a(oZ),g$],[0,a(qJ),g6],[0,a(oP),ij],[0,a(pS),hJ],[0,a(oE),ic],[0,a(qW),g3],[0,a(n$),39],[0,a(iw),bF],[0,a(yT),gW],[0,a(w3),f4],[0,a(qZ),dO],[0,a(oA),fE],[0,a(lS),59],[0,a(oh),55],[0,a(o$),54],[0,a(rp),47],[0,a(jP),32],[0,a(p3),eP],[0,a(qu),bX],[0,a(oV),51],[0,a(n7),f5],[0,a(wT),fF],[0,a(p$),50],[0,a(oU),dn],[0,a(uV),hM],[0,a(uC),jX],[0,a(z0),jO],[0,a(z_),lK],[0,a(rk),95],[0,a(p2),fp],[0,a(qQ),g8],[0,a(oK),bV],[0,a(o9),gU],[0,a(ym),fn],[0,a(rs),d7],[0,a(qq),b5],[0,a(pf),48]]),arn=j_([[0,a("/AEsmall"),gI],[0,a("/Aacutesmall"),jL],[0,a("/Acircumflexsmall"),hY],[0,a("/Acutesmall"),39],[0,a("/Adieresissmall"),f6],[0,a("/Agravesmall"),hZ],[0,a("/Aringsmall"),ig],[0,a("/Asmall"),97],[0,a("/Atildesmall"),hW],[0,a("/Brevesmall"),hb],[0,a("/Bsmall"),98],[0,a("/Caronsmall"),f7],[0,a("/Ccedillasmall"),lD],[0,a("/Cedillasmall"),gX],[0,a("/Circumflexsmall"),94],[0,a("/Csmall"),99],[0,a("/Dieresissmall"),fx],[0,a("/Dotaccentsmall"),cM],[0,a("/Dsmall"),aQ],[0,a("/Eacutesmall"),jN],[0,a("/Ecircumflexsmall"),jn],[0,a("/Edieresissmall"),j2],[0,a("/Egravesmall"),hV],[0,a("/Esmall"),bW],[0,a("/Ethsmall"),68],[0,a("/Fsmall"),bE],[0,a("/Gravesmall"),96],[0,a("/Gsmall"),c8],[0,a("/Hsmall"),dp],[0,a("/Hungarumlautsmall"),34],[0,a("/Iacutesmall"),iy],[0,a("/Icircumflexsmall"),lX],[0,a("/Idieresissmall"),jE],[0,a("/Igravesmall"),ir],[0,a("/Ismall"),cO],[0,a("/Jsmall"),fT],[0,a("/Ksmall"),fW],[0,a("/Lslashsmall"),fk],[0,a("/Lsmall"),cP],[0,a("/Macronsmall"),fR],[0,a("/Msmall"),dw],[0,a("/Nsmall"),aY],[0,a("/Ntildesmall"),j1],[0,a("/OEsmall"),f3],[0,a("/Oacutesmall"),h8],[0,a("/Ocircumflexsmall"),j5],[0,a("/Odieresissmall"),h1],[0,a("/Ogoneksmall"),g7],[0,a("/Ogravesmall"),lQ],[0,a("/Oslashsmall"),ds],[0,a("/Osmall"),dq],[0,a("/Otildesmall"),ia],[0,a("/Psmall"),ec],[0,a("/Qsmall"),gP],[0,a("/Ringsmall"),f4],[0,a("/Rsmall"),bF],[0,a("/Scaronsmall"),fB],[0,a("/Ssmall"),dO],[0,a("/Thornsmall"),gF],[0,a("/Tildesmall"),co],[0,a("/Tsmall"),bX],[0,a("/Uacutesmall"),hM],[0,a("/Ucircumflexsmall"),jX],[0,a("/Udieresissmall"),jO],[0,a("/Ugravesmall"),lK],[0,a("/Usmall"),dn],[0,a("/Vsmall"),fp],[0,a("/Wsmall"),g8],[0,a("/Xsmall"),bV],[0,a("/Yacutesmall"),d7],[0,a("/Ydieresissmall"),fn],[0,a("/Ysmall"),gU],[0,a("/Zcaronsmall"),g_],[0,a("/Zsmall"),b5],[0,a("/ampersandsmall"),38],[0,a("/asuperior"),jy],[0,a("/bsuperior"),fJ],[0,a("/centinferior"),eJ],[0,a("/centoldstyle"),35],[0,a("/centsuperior"),j3],[0,a(lq),58],[0,a("/colonmonetary"),dt],[0,a(l3),44],[0,a("/commainferior"),gV],[0,a("/commasuperior"),Q],[0,a("/dollarinferior"),fq],[0,a("/dollaroldstyle"),36],[0,a("/dsuperior"),fw],[0,a("/eightinferior"),fO],[0,a("/eightoldstyle"),56],[0,a("/eightsuperior"),fV],[0,a("/esuperior"),gT],[0,a("/exclamdownsmall"),fD],[0,a("/exclamsmall"),33],[0,a("/ff"),86],[0,a("/ffi"),89],[0,a("/ffl"),90],[0,a(qm),87],[0,a("/figuredash"),eN],[0,a("/fiveeighths"),76],[0,a("/fiveinferior"),ik],[0,a("/fiveoldstyle"),53],[0,a("/fivesuperior"),g0],[0,a(oi),88],[0,a("/fourinferior"),fX],[0,a("/fouroldstyle"),52],[0,a("/foursuperior"),gL],[0,a(pk),47],[0,a(lG),45],[0,a("/hypheninferior"),95],[0,a("/hyphensuperior"),95],[0,a("/isuperior"),fC],[0,a("/lsuperior"),eD],[0,a("/msuperior"),f5],[0,a("/nineinferior"),eA],[0,a("/nineoldstyle"),57],[0,a("/ninesuperior"),fl],[0,a("/nsuperior"),d5],[0,a("/onedotenleader"),43],[0,a("/oneeighth"),74],[0,a("/onefitted"),eL],[0,a(zD),72],[0,a("/oneinferior"),fL],[0,a("/oneoldstyle"),49],[0,a(w2),71],[0,a(wG),gB],[0,a("/onethird"),78],[0,a("/osuperior"),fG],[0,a("/parenleftinferior"),91],[0,a("/parenleftsuperior"),40],[0,a("/parenrightinferior"),93],[0,a("/parenrightsuperior"),41],[0,a(lU),46],[0,a("/periodinferior"),f0],[0,a("/periodsuperior"),gD],[0,a("/questiondownsmall"),c3],[0,a("/questionsmall"),63],[0,a("/rsuperior"),gR],[0,a("/rupiah"),c5],[0,a(lS),59],[0,a("/seveneighths"),77],[0,a("/seveninferior"),f1],[0,a("/sevenoldstyle"),55],[0,a("/sevensuperior"),dT],[0,a("/sixinferior"),fE],[0,a("/sixoldstyle"),54],[0,a("/sixsuperior"),fv],[0,a(jP),32],[0,a("/ssuperior"),fI],[0,a("/threeeighths"),75],[0,a("/threeinferior"),eP],[0,a("/threeoldstyle"),51],[0,a(vd),73],[0,a("/threequartersemdash"),61],[0,a(z3),gG],[0,a("/tsuperior"),gE],[0,a("/twodotenleader"),42],[0,a("/twoinferior"),fF],[0,a("/twooldstyle"),50],[0,a(Ap),gQ],[0,a("/twothirds"),79],[0,a("/zeroinferior"),fM],[0,a("/zerooldstyle"),48],[0,a("/zerosuperior"),g3]]),aro=[0,[0,a("/a100"),[0,10078,0]],[0,a("/a101"),[0,10081,0]],[0,a("/a102"),[0,10082,0]],[0,a("/a103"),[0,10083,0]],[0,a("/a104"),[0,10084,0]],[0,a("/a105"),[0,10000,0]],[0,a("/a106"),[0,10085,0]],[0,a("/a107"),[0,10086,0]],[0,a("/a108"),[0,10087,0]],[0,a("/a109"),[0,9824,0]],[0,a("/a10"),[0,10017,0]],[0,a("/a110"),[0,9829,0]],[0,a("/a111"),[0,9830,0]],[0,a("/a112"),[0,9827,0]],[0,a("/a117"),[0,9993,0]],[0,a("/a118"),[0,9992,0]],[0,a("/a119"),[0,9991,0]],[0,a("/a11"),[0,9755,0]],[0,a("/a120"),[0,9312,0]],[0,a("/a121"),[0,9313,0]],[0,a("/a122"),[0,9314,0]],[0,a("/a123"),[0,9315,0]],[0,a("/a124"),[0,9316,0]],[0,a("/a125"),[0,9317,0]],[0,a("/a126"),[0,9318,0]],[0,a("/a127"),[0,9319,0]],[0,a("/a128"),[0,9320,0]],[0,a("/a129"),[0,9321,0]],[0,a("/a12"),[0,9758,0]],[0,a("/a130"),[0,10102,0]],[0,a("/a131"),[0,10103,0]],[0,a("/a132"),[0,10104,0]],[0,a("/a133"),[0,10105,0]],[0,a("/a134"),[0,10106,0]],[0,a("/a135"),[0,10107,0]],[0,a("/a136"),[0,10108,0]],[0,a("/a137"),[0,10109,0]],[0,a("/a138"),[0,10110,0]],[0,a("/a139"),[0,10111,0]],[0,a("/a13"),[0,9996,0]],[0,a("/a140"),[0,10112,0]],[0,a("/a141"),[0,10113,0]],[0,a("/a142"),[0,10114,0]],[0,a("/a143"),[0,10115,0]],[0,a("/a144"),[0,10116,0]],[0,a("/a145"),[0,10117,0]],[0,a("/a146"),[0,10118,0]],[0,a("/a147"),[0,10119,0]],[0,a("/a148"),[0,10120,0]],[0,a("/a149"),[0,10121,0]],[0,a("/a14"),[0,9997,0]],[0,a("/a150"),[0,10122,0]],[0,a("/a151"),[0,10123,0]],[0,a("/a152"),[0,10124,0]],[0,a("/a153"),[0,10125,0]],[0,a("/a154"),[0,10126,0]],[0,a("/a155"),[0,10127,0]],[0,a("/a156"),[0,10128,0]],[0,a("/a157"),[0,10129,0]],[0,a("/a158"),[0,10130,0]],[0,a("/a159"),[0,10131,0]],[0,a("/a15"),[0,9998,0]],[0,a("/a160"),[0,10132,0]],[0,a("/a161"),[0,8594,0]],[0,a("/a162"),[0,10147,0]],[0,a("/a163"),[0,8596,0]],[0,a("/a164"),[0,8597,0]],[0,a("/a165"),[0,10137,0]],[0,a("/a166"),[0,10139,0]],[0,a("/a167"),[0,10140,0]],[0,a("/a168"),[0,10141,0]],[0,a("/a169"),[0,10142,0]],[0,a("/a16"),[0,xw,0]],[0,a("/a170"),[0,10143,0]],[0,a("/a171"),[0,10144,0]],[0,a("/a172"),[0,10145,0]],[0,a("/a173"),[0,10146,0]],[0,a("/a174"),[0,10148,0]],[0,a("/a175"),[0,10149,0]],[0,a("/a176"),[0,10150,0]],[0,a("/a177"),[0,10151,0]],[0,a("/a178"),[0,10152,0]],[0,a("/a179"),[0,10153,0]],[0,a("/a17"),[0,10001,0]],[0,a("/a180"),[0,10155,0]],[0,a("/a181"),[0,10157,0]],[0,a("/a182"),[0,10159,0]],[0,a("/a183"),[0,10162,0]],[0,a("/a184"),[0,10163,0]],[0,a("/a185"),[0,10165,0]],[0,a("/a186"),[0,10168,0]],[0,a("/a187"),[0,10170,0]],[0,a("/a188"),[0,10171,0]],[0,a("/a189"),[0,10172,0]],[0,a("/a18"),[0,10002,0]],[0,a("/a190"),[0,10173,0]],[0,a("/a191"),[0,10174,0]],[0,a("/a192"),[0,10138,0]],[0,a("/a193"),[0,10154,0]],[0,a("/a194"),[0,10166,0]],[0,a("/a195"),[0,10169,0]],[0,a("/a196"),[0,10136,0]],[0,a("/a197"),[0,10164,0]],[0,a("/a198"),[0,10167,0]],[0,a("/a199"),[0,10156,0]],[0,a("/a19"),[0,10003,0]],[0,a("/a1"),[0,9985,0]],[0,a("/a200"),[0,10158,0]],[0,a("/a201"),[0,10161,0]],[0,a("/a202"),[0,9987,0]],[0,a("/a203"),[0,10064,0]],[0,a("/a204"),[0,10066,0]],[0,a("/a205"),[0,10094,0]],[0,a("/a206"),[0,10096,0]],[0,a("/a20"),[0,10004,0]],[0,a("/a21"),[0,10005,0]],[0,a("/a22"),[0,10006,0]],[0,a("/a23"),[0,10007,0]],[0,a("/a24"),[0,10008,0]],[0,a("/a25"),[0,10009,0]],[0,a("/a26"),[0,10010,0]],[0,a("/a27"),[0,10011,0]],[0,a("/a28"),[0,10012,0]],[0,a("/a29"),[0,10018,0]],[0,a("/a2"),[0,9986,0]],[0,a("/a30"),[0,10019,0]],[0,a("/a31"),[0,10020,0]],[0,a("/a32"),[0,10021,0]],[0,a("/a33"),[0,10022,0]],[0,a("/a34"),[0,10023,0]],[0,a("/a35"),[0,9733,0]],[0,a("/a36"),[0,10025,0]],[0,a("/a37"),[0,10026,0]],[0,a("/a38"),[0,10027,0]],[0,a("/a39"),[0,10028,0]],[0,a("/a3"),[0,9988,0]],[0,a("/a40"),[0,10029,0]],[0,a("/a41"),[0,10030,0]],[0,a("/a42"),[0,10031,0]],[0,a("/a43"),[0,10032,0]],[0,a("/a44"),[0,10033,0]],[0,a("/a45"),[0,10034,0]],[0,a("/a46"),[0,10035,0]],[0,a("/a47"),[0,10036,0]],[0,a("/a48"),[0,10037,0]],[0,a("/a49"),[0,10038,0]],[0,a("/a4"),[0,9742,0]],[0,a("/a50"),[0,10039,0]],[0,a("/a51"),[0,10040,0]],[0,a("/a52"),[0,10041,0]],[0,a("/a53"),[0,10042,0]],[0,a("/a54"),[0,10043,0]],[0,a("/a55"),[0,10044,0]],[0,a("/a56"),[0,10045,0]],[0,a("/a57"),[0,10046,0]],[0,a("/a58"),[0,10047,0]],[0,a("/a59"),[0,10048,0]],[0,a("/a5"),[0,9990,0]],[0,a("/a60"),[0,10049,0]],[0,a("/a61"),[0,10050,0]],[0,a("/a62"),[0,10051,0]],[0,a("/a63"),[0,10052,0]],[0,a("/a64"),[0,10053,0]],[0,a("/a65"),[0,10054,0]],[0,a("/a66"),[0,10055,0]],[0,a("/a67"),[0,10056,0]],[0,a("/a68"),[0,10057,0]],[0,a("/a69"),[0,10058,0]],[0,a("/a6"),[0,10013,0]],[0,a("/a70"),[0,10059,0]],[0,a("/a71"),[0,9679,0]],[0,a("/a72"),[0,10061,0]],[0,a("/a73"),[0,9632,0]],[0,a("/a74"),[0,10063,0]],[0,a("/a75"),[0,10065,0]],[0,a("/a76"),[0,9650,0]],[0,a("/a77"),[0,9660,0]],[0,a("/a78"),[0,9670,0]],[0,a("/a79"),[0,10070,0]],[0,a("/a7"),[0,10014,0]],[0,a("/a81"),[0,9687,0]],[0,a("/a82"),[0,10072,0]],[0,a("/a83"),[0,10073,0]],[0,a("/a84"),[0,10074,0]],[0,a("/a85"),[0,10095,0]],[0,a("/a86"),[0,10097,0]],[0,a("/a87"),[0,10098,0]],[0,a("/a88"),[0,10099,0]],[0,a("/a89"),[0,10088,0]],[0,a("/a8"),[0,10015,0]],[0,a("/a90"),[0,10089,0]],[0,a("/a91"),[0,10092,0]],[0,a("/a92"),[0,10093,0]],[0,a("/a93"),[0,10090,0]],[0,a("/a94"),[0,10091,0]],[0,a("/a95"),[0,10100,0]],[0,a("/a96"),[0,10101,0]],[0,a("/a97"),[0,10075,0]],[0,a("/a98"),[0,10076,0]],[0,a("/a99"),[0,10077,0]],[0,a("/a9"),[0,10016,0]]],arq=[0,[0,a("/G20"),[0,32,0]],[0,a("/G21"),[0,33,0]],[0,a("/G22"),[0,34,0]],[0,a("/G23"),[0,35,0]],[0,a("/G24"),[0,36,0]],[0,a("/G25"),[0,37,0]],[0,a("/G26"),[0,38,0]],[0,a("/G27"),[0,39,0]],[0,a("/G28"),[0,40,0]],[0,a("/G29"),[0,41,0]],[0,a("/G2a"),[0,42,0]],[0,a("/G2b"),[0,43,0]],[0,a("/G2c"),[0,44,0]],[0,a("/G2d"),[0,45,0]],[0,a("/G2e"),[0,46,0]],[0,a("/G2f"),[0,47,0]],[0,a("/G30"),[0,48,0]],[0,a("/G31"),[0,49,0]],[0,a("/G32"),[0,50,0]],[0,a("/G33"),[0,51,0]],[0,a("/G34"),[0,52,0]],[0,a("/G35"),[0,53,0]],[0,a("/G36"),[0,54,0]],[0,a("/G37"),[0,55,0]],[0,a("/G38"),[0,56,0]],[0,a("/G39"),[0,57,0]],[0,a("/G3a"),[0,58,0]],[0,a("/G3b"),[0,59,0]],[0,a("/G3c"),[0,60,0]],[0,a("/G3d"),[0,61,0]],[0,a("/G3e"),[0,62,0]],[0,a("/G3f"),[0,63,0]],[0,a("/G40"),[0,64,0]],[0,a("/G41"),[0,65,0]],[0,a("/G42"),[0,66,0]],[0,a("/G43"),[0,67,0]],[0,a("/G44"),[0,68,0]],[0,a("/G45"),[0,69,0]],[0,a("/G46"),[0,70,0]],[0,a("/G47"),[0,71,0]],[0,a("/G48"),[0,72,0]],[0,a("/G49"),[0,73,0]],[0,a("/G4a"),[0,74,0]],[0,a("/G4b"),[0,75,0]],[0,a("/G4c"),[0,76,0]],[0,a("/G4d"),[0,77,0]],[0,a("/G4e"),[0,78,0]],[0,a("/G4f"),[0,79,0]],[0,a("/G50"),[0,80,0]],[0,a("/G51"),[0,81,0]],[0,a("/G52"),[0,82,0]],[0,a("/G53"),[0,83,0]],[0,a("/G54"),[0,84,0]],[0,a("/G55"),[0,85,0]],[0,a("/G56"),[0,86,0]],[0,a("/G57"),[0,87,0]],[0,a("/G58"),[0,88,0]],[0,a("/G59"),[0,89,0]],[0,a("/G5a"),[0,90,0]],[0,a("/G5b"),[0,91,0]],[0,a("/G5c"),[0,92,0]],[0,a("/G5d"),[0,93,0]],[0,a("/G5e"),[0,94,0]],[0,a("/G5f"),[0,95,0]],[0,a("/G60"),[0,96,0]],[0,a("/G61"),[0,97,0]],[0,a("/G62"),[0,98,0]],[0,a("/G63"),[0,99,0]],[0,a("/G64"),[0,aQ,0]],[0,a("/G65"),[0,bW,0]],[0,a("/G66"),[0,bE,0]],[0,a("/G67"),[0,c8,0]],[0,a("/G68"),[0,dp,0]],[0,a("/G69"),[0,cO,0]],[0,a("/G6a"),[0,fT,0]],[0,a("/G6b"),[0,fW,0]],[0,a("/G6c"),[0,cP,0]],[0,a("/G6d"),[0,dw,0]],[0,a("/G6e"),[0,aY,0]],[0,a("/G6f"),[0,dq,0]],[0,a("/G70"),[0,ec,0]],[0,a("/G71"),[0,gP,0]],[0,a("/G72"),[0,bF,0]],[0,a("/G73"),[0,dO,0]],[0,a("/G74"),[0,bX,0]],[0,a("/G75"),[0,dn,0]],[0,a("/G76"),[0,fp,0]],[0,a("/G77"),[0,g8,0]],[0,a("/G78"),[0,bV,0]],[0,a("/G79"),[0,gU,0]],[0,a("/G7a"),[0,b5,0]],[0,a("/G7b"),[0,dt,0]],[0,a("/G7c"),[0,eL,0]],[0,a("/G7d"),[0,c5,0]],[0,a("/G7e"),[0,co,0]],[0,a("/Ga0"),[0,ip,0]],[0,a("/Ga1"),[0,fV,0]],[0,a("/Ga2"),[0,fX,0]],[0,a("/Ga3"),[0,eP,0]],[0,a("/Ga4"),[0,fE,0]],[0,a("/Ga5"),[0,fO,0]],[0,a("/Ga6"),[0,f1,0]],[0,a("/Ga7"),[0,fB,0]],[0,a("/Ga8"),[0,gW,0]],[0,a("/Ga9"),[0,eJ,0]],[0,a("/Gaa"),[0,fF,0]],[0,a("/Gab"),[0,gZ,0]],[0,a("/Gac"),[0,fx,0]],[0,a("/Gad"),[0,lB,0]],[0,a("/Gae"),[0,f7,0]],[0,a("/Gaf"),[0,fG,0]],[0,a("/Gb0"),[0,ik,0]],[0,a("/Gb1"),[0,fz,0]],[0,a("/Gb2"),[0,gV,0]],[0,a("/Gb3"),[0,f0,0]],[0,a("/Gb4"),[0,d7,0]],[0,a("/Gb5"),[0,gS,0]],[0,a("/Gb6"),[0,fq,0]],[0,a("/Gb7"),[0,hX,0]],[0,a("/Gb8"),[0,it,0]],[0,a("/Gb9"),[0,gF,0]],[0,a("/Gba"),[0,hO,0]],[0,a("/Gbb"),[0,eA,0]],[0,a("/Gbc"),[0,fM,0]],[0,a("/Gbd"),[0,g_,0]],[0,a("/Gbe"),[0,gI,0]],[0,a("/Gbf"),[0,ds,0]],[0,a("/Gc0"),[0,c3,0]],[0,a("/Gc1"),[0,fL,0]],[0,a("/Gc2"),[0,fk,0]],[0,a("/Gc3"),[0,hT,0]],[0,a("/Gc4"),[0,fP,0]],[0,a("/Gc5"),[0,h$,0]],[0,a("/Gc6"),[0,h2,0]],[0,a("/Gc7"),[0,ft,0]],[0,a("/Gc8"),[0,dm,0]],[0,a("/Gc9"),[0,gX,0]],[0,a("/Gca"),[0,h6,0]],[0,a("/Gcb"),[0,eE,0]],[0,a("/Gcc"),[0,hL,0]],[0,a("/Gcd"),[0,gA,0]],[0,a("/Gce"),[0,gC,0]],[0,a("/Gcf"),[0,f3,0]],[0,a("/Gd0"),[0,eN,0]],[0,a("/Gd1"),[0,iq,0]],[0,a("/Gd2"),[0,g6,0]],[0,a("/Gd3"),[0,ij,0]],[0,a("/Gd4"),[0,hJ,0]],[0,a("/Gd5"),[0,ic,0]],[0,a("/Gd6"),[0,fD,0]],[0,a("/Gd7"),[0,io,0]],[0,a("/Gd8"),[0,fn,0]],[0,a("/Gd9"),[0,ex,0]],[0,a("/Gda"),[0,gB,0]],[0,a("/Gdb"),[0,gQ,0]],[0,a("/Gdc"),[0,gG,0]],[0,a("/Gdd"),[0,gL,0]],[0,a("/Gde"),[0,g0,0]],[0,a("/Gdf"),[0,fv,0]],[0,a("/Ge0"),[0,dT,0]],[0,a("/Ge1"),[0,fl,0]],[0,a("/Ge2"),[0,g3,0]],[0,a("/Ge3"),[0,g$,0]],[0,a("/Ge4"),[0,gT,0]],[0,a("/Ge5"),[0,gR,0]],[0,a("/Ge6"),[0,gE,0]],[0,a("/Ge7"),[0,hN,0]],[0,a("/Ge8"),[0,gJ,0]],[0,a("/Ge9"),[0,fC,0]],[0,a("/Gea"),[0,fI,0]],[0,a("/Geb"),[0,fw,0]],[0,a("/Gec"),[0,hQ,0]],[0,a("/Ged"),[0,fK,0]],[0,a("/Gee"),[0,h5,0]],[0,a("/Gef"),[0,fo,0]],[0,a("/Gf0"),[0,d$,0]],[0,a("/Gf1"),[0,eD,0]],[0,a("/Gf2"),[0,g7,0]],[0,a("/Gf3"),[0,hb,0]],[0,a("/Gf4"),[0,fR,0]],[0,a("/Gf5"),[0,fJ,0]],[0,a("/Gf6"),[0,d5,0]],[0,a("/Gf7"),[0,f5,0]],[0,a("/Gf8"),[0,Q,0]],[0,a("/Gf9"),[0,gD,0]],[0,a("/Gfa"),[0,cM,0]],[0,a("/Gfb"),[0,f4,0]],[0,a("/Gfc"),[0,dM,0]],[0,a("/Gfd"),[0,fU,0]],[0,a("/Gfe"),[0,V,0]],[0,a("/Gff"),[0,aq,0]],[0,a("/G82"),[0,8218,0]],[0,a("/G83"),[0,402,0]],[0,a("/G84"),[0,8222,0]],[0,a("/G85"),[0,8230,0]],[0,a("/G86"),[0,8224,0]],[0,a("/G87"),[0,8225,0]],[0,a("/G88"),[0,710,0]],[0,a("/G89"),[0,8240,0]],[0,a("/G8a"),[0,IE,0]],[0,a("/G8b"),[0,8249,0]],[0,a("/G8c"),[0,OA,0]],[0,a("/G91"),[0,8216,0]],[0,a("/G92"),[0,8217,0]],[0,a("/G93"),[0,8220,0]],[0,a("/G94"),[0,8221,0]],[0,a("/G95"),[0,8226,0]],[0,a("/G96"),[0,8211,0]],[0,a("/G97"),[0,8212,0]],[0,a("/G98"),[0,732,0]],[0,a("/G99"),[0,8482,0]],[0,a("/G9a"),[0,353,0]],[0,a("/G9b"),[0,8250,0]],[0,a("/G9c"),[0,339,0]],[0,a("/G9f"),[0,376,0]],[0,a("/G2A"),[0,42,0]],[0,a("/G2B"),[0,43,0]],[0,a("/G2C"),[0,44,0]],[0,a("/G2D"),[0,45,0]],[0,a("/G2E"),[0,46,0]],[0,a("/G2F"),[0,47,0]],[0,a("/G3A"),[0,58,0]],[0,a("/G3B"),[0,59,0]],[0,a("/G3C"),[0,60,0]],[0,a("/G3D"),[0,61,0]],[0,a("/G3E"),[0,62,0]],[0,a("/G3F"),[0,63,0]],[0,a("/G4A"),[0,74,0]],[0,a("/G4B"),[0,75,0]],[0,a("/G4C"),[0,76,0]],[0,a("/G4D"),[0,77,0]],[0,a("/G4E"),[0,78,0]],[0,a("/G4F"),[0,79,0]],[0,a("/G5A"),[0,90,0]],[0,a("/G5B"),[0,91,0]],[0,a("/G5C"),[0,92,0]],[0,a("/G5D"),[0,93,0]],[0,a("/G5E"),[0,94,0]],[0,a("/G5F"),[0,95,0]],[0,a("/G6A"),[0,fT,0]],[0,a("/G6B"),[0,fW,0]],[0,a("/G6C"),[0,cP,0]],[0,a("/G6D"),[0,45,0]],[0,a("/G6E"),[0,aY,0]],[0,a("/G6F"),[0,dq,0]],[0,a("/G7A"),[0,b5,0]],[0,a("/G7B"),[0,dt,0]],[0,a("/G7C"),[0,eL,0]],[0,a("/G7D"),[0,c5,0]],[0,a("/G7E"),[0,co,0]],[0,a("/G8A"),[0,f6,0]],[0,a("/G8B"),[0,hW,0]],[0,a("/G8C"),[0,ig,0]],[0,a("/G9A"),[0,h1,0]],[0,a("/G9B"),[0,ia,0]],[0,a("/G9C"),[0,hM,0]],[0,a("/GA0"),[0,ip,0]],[0,a("/GA1"),[0,fV,0]],[0,a("/GA2"),[0,fX,0]],[0,a("/GA3"),[0,eP,0]],[0,a("/GA4"),[0,fE,0]],[0,a("/GA5"),[0,fO,0]],[0,a(OC),[0,f1,0]],[0,a("/GA7"),[0,fB,0]],[0,a("/GA8"),[0,gW,0]],[0,a("/GA9"),[0,eJ,0]],[0,a("/GAA"),[0,fF,0]],[0,a("/GAB"),[0,gZ,0]],[0,a("/GAC"),[0,fx,0]],[0,a("/GAD"),[0,lB,0]],[0,a("/GAE"),[0,f7,0]],[0,a("/GAF"),[0,fG,0]],[0,a("/GB0"),[0,ik,0]],[0,a("/GB1"),[0,fz,0]],[0,a("/GB2"),[0,gV,0]],[0,a("/GB3"),[0,f0,0]],[0,a("/GB4"),[0,d7,0]],[0,a("/GB5"),[0,gS,0]],[0,a(OC),[0,fq,0]],[0,a("/GB7"),[0,hX,0]],[0,a("/GB8"),[0,it,0]],[0,a("/GB9"),[0,gF,0]],[0,a("/GBA"),[0,hO,0]],[0,a("/GBB"),[0,eA,0]],[0,a("/GBC"),[0,fM,0]],[0,a("/GBD"),[0,g_,0]],[0,a("/GBE"),[0,gI,0]],[0,a("/GBF"),[0,ds,0]],[0,a("/GC0"),[0,c3,0]],[0,a("/GC1"),[0,fL,0]],[0,a("/GC2"),[0,fk,0]],[0,a("/GC3"),[0,hT,0]],[0,a("/GC4"),[0,fP,0]],[0,a("/GC5"),[0,h$,0]],[0,a("/GC6"),[0,h2,0]],[0,a("/GC7"),[0,ft,0]],[0,a("/GC8"),[0,dm,0]],[0,a("/GC9"),[0,gX,0]],[0,a("/GCA"),[0,h6,0]],[0,a("/GCB"),[0,eE,0]],[0,a("/GCC"),[0,hL,0]],[0,a("/GCD"),[0,gA,0]],[0,a("/GCE"),[0,gC,0]],[0,a("/GCF"),[0,f3,0]],[0,a("/GD0"),[0,eN,0]],[0,a("/GD1"),[0,iq,0]],[0,a("/GD2"),[0,g6,0]],[0,a("/GD3"),[0,ij,0]],[0,a("/GD4"),[0,hJ,0]],[0,a("/GD5"),[0,ic,0]],[0,a("/GD6"),[0,fD,0]],[0,a("/GD7"),[0,io,0]],[0,a("/GD8"),[0,fn,0]],[0,a("/GD9"),[0,ex,0]],[0,a("/GDA"),[0,gB,0]],[0,a("/GDB"),[0,gQ,0]],[0,a("/GDC"),[0,gG,0]],[0,a("/GDD"),[0,gL,0]],[0,a("/GDE"),[0,g0,0]],[0,a("/GDF"),[0,fv,0]],[0,a("/GE0"),[0,dT,0]],[0,a("/GE1"),[0,fl,0]],[0,a("/GE2"),[0,g3,0]],[0,a("/GE3"),[0,g$,0]],[0,a("/GE4"),[0,gT,0]],[0,a("/GE5"),[0,gR,0]],[0,a("/GE6"),[0,gE,0]],[0,a("/GE7"),[0,hN,0]],[0,a("/GE8"),[0,gJ,0]],[0,a("/GE9"),[0,fC,0]],[0,a("/GEA"),[0,fI,0]],[0,a("/GEB"),[0,fw,0]],[0,a("/GEC"),[0,hQ,0]],[0,a("/GED"),[0,fK,0]],[0,a("/GEE"),[0,h5,0]],[0,a("/GEF"),[0,fo,0]],[0,a("/GF0"),[0,d$,0]],[0,a("/GF1"),[0,eD,0]],[0,a("/GF2"),[0,g7,0]],[0,a("/GF3"),[0,hb,0]],[0,a("/GF4"),[0,fR,0]],[0,a("/GF5"),[0,fJ,0]],[0,a("/GF6"),[0,d5,0]],[0,a("/GF7"),[0,f5,0]],[0,a("/GF8"),[0,Q,0]],[0,a("/GF9"),[0,gD,0]],[0,a("/GFA"),[0,cM,0]],[0,a("/GFB"),[0,f4,0]],[0,a("/GFC"),[0,dM,0]],[0,a("/GFD"),[0,fU,0]],[0,a("/GFE"),[0,V,0]],[0,a("/GFF"),[0,aq,0]]],arS=[0,[4,3,0,0,[11,a(" -> "),[2,0,[11,a(fQ),0]]]],a("%i -> %s, ")],arN=a("ImplicitInFontFile"),arO=a("StandardEncoding"),arP=a("MacRomanEncoding"),arQ=a("WinAnsiEncoding"),arR=a("MacExpertEncoding"),arT=a(k),arU=[0,[11,a("CustomEncoding with base "),[2,0,[11,a(" and differences "),[2,0,0]]]],a("CustomEncoding with base %s and differences %s")],arV=[0,[11,a("FillUndefinedWithStandard "),[2,0,0]],a("FillUndefinedWithStandard %s")],auc=a(uQ),aua=a(uQ),aub=a(uQ),at$=a("Malformed /W in CIDfont"),aut=a("Unknown number in /ToUnicode"),auv=[0,a(uM),IP,25],auD=[0,[11,a("/ToUnicode Parse Error : "),[2,0,[12,10,[10,0]]]],a("/ToUnicode Parse Error : %s\n%!")],auC=[0,a(uM),709,13],auB=[0,[11,a("Bad /ToUnicode "),[2,0,0]],a("Bad /ToUnicode %s")],avr=[0,[11,a("Bad UTF8 in codepoints_of_utf8\n"),[10,0]],a("Bad UTF8 in codepoints_of_utf8\n%!")],avp=[0,[11,a("utf8_of_pdfdocstring : "),[2,0,[12,10,[10,0]]]],a("utf8_of_pdfdocstring : %s\n%!")],avq=a(k),avn=a("bad unicode codepoint"),avj=a("codepoint_of_pdfdocencoding_character out of range"),avl=[0,[11,a(Lx),[4,3,0,0,[11,a(pZ),[10,0]]]],a(GS)],avk=[0,[11,a(Lx),[4,3,0,0,[11,a(pZ),[10,0]]]],a(GS)],avc=[0,[11,a("Input codepoint: "),[4,8,0,0,[12,10,0]]],a("Input codepoint: %X\n")],ave=[0,[11,a(JO),[4,3,0,0,[11,a(zb),0]]],a(Ki)],avf=[0,[11,a("Found glyph name "),[2,0,[12,10,0]]],a("Found glyph name %s\n")],avg=[0,[11,a(JO),[4,3,0,0,[11,a(zb),0]]],a(Ki)],avd=[0,[11,a("Found no charcode for unicode codepoint "),[4,8,0,0,[11,a(v1),0]]],a("Found no charcode for unicode codepoint %X.\n")],avh=[0,[11,a("/ToUnicode entry "),[4,3,0,0,[11,a(" --> "),[2,0,[12,10,0]]]]],a("/ToUnicode entry %i --> %s\n")],au$=a(h9),ava=[0,[11,a(KI),0],a(KI)],avb=[0,[11,a(Pr),[2,0,[11,a(pZ),[10,0]]]],a(GM)],au_=a("Bad Text"),au9=a("/Identity-H"),au8=a(bb),au7=a(zT),au6=a(bb),au5=a(zT),au4=a(zT),au2=a("codepoints_of_utf16be"),au1=[0,V,[0,aq,0]],auZ=a("utf16be_of_codepoints"),auR=a(fm),auS=[0,[0,a(xX),[1,0]],[0,[0,a(yW),[1,0]],[0,[0,a(qH),[5,[0,[2,0.],0]]],0]]],auT=a(G$),auU=[0,a(Pz),[5,[0,[2,0.],[0,[2,0.],[0,[2,0.],[0,[2,0.],[0,[2,0.],[0,[2,0.],0]]]]]]]],auV=[0,a(xJ),[5,[0,[2,0.],[0,[2,0.],[0,[2,0.],[0,[2,0.],0]]]]]],auW=[0,a(a_),[4,a(lp)]],auX=[0,a(aF),[4,a(du)]],auQ=a("write_font only supports type 3 fonts"),auO=a(M1),auP=[0,a(aF),[4,a(fm)]],auN=a("write_encoding: not supported"),auI=a(bb),auJ=a(fN),auK=[0,a(fm),[4,a(lL)]],auL=[0,a(a_),[4,a(h3)]],auM=[0,a(aF),[4,a(du)]],auH=a("Unknown font type"),auF=a("/ToUnicode"),auG=[0,[11,a(Pr),[2,0,[11,a(pZ),[10,0]]]],a(GM)],auy=a(k),auz=a(k),aux=a("Bad /ToUnicode"),auA=a("Bad BfRange"),auu=a("Bad unicode value"),auk=a(fN),aul=a("Bad /BaseFont"),aum=a("/DescendantFonts"),aun=a("Bad descendant font"),auo=a(fm),auq=a(fm),aur=a("malformed /Encoding"),aup=a("malformed or missing /Encoding"),aud=a("/CIDSystemInfo"),auj=a("No CIDSystemInfo"),aue=a(fN),auf=a("No /BaseFont"),aui=a("No FontDescriptor in CIDkeyed font"),aug=a(eH),auh=a("/DW"),at5=a("/Supplement"),at6=a("No /Supplement"),at7=a("/Ordering"),at8=a("No /Ordering"),at9=a("/Registry"),at_=a("No /Registry"),at3=a(a_),at4=a("/Type0"),atY=a(a_),atZ=a(wd),at0=a(x2),at1=a(h3),at2=a(lp),atV=a(fN),atX=a("Not a base 14 font"),atW=a("Bad base 14 font"),atS=a(a_),atU=a("Not a simple font"),atT=a("No font /Subtype"),atB=a(fm),atC=a(LN),atD=a(Pd),atE=a(lL),atF=a(a_),atH=a(wd),atI=a(x2),atJ=a(h3),atK=a(lp),atL=a("/BaseEncoding"),atN=a(LN),atO=a(Pd),atP=a(lL),atM=a("unknown /BaseEncoding"),atQ=a(M1),atR=a("/Truetype"),atG=a("Bad font /Subtype"),aty=a(jz),atz=a(Nt),atA=a("No /Flags in font descriptor"),atu=a(jz),atv=a(Mc),atw=a(Nr),atx=a(Oa),atq=a(a_),atr=a(h3),ats=a(fN),att=a(qH),asO=a("/Helvetica-Bold"),as_=a("/Courier-BoldOblique"),atk=a("/Arial"),atl=a("/Arial,Bold"),atm=a("/Arial,BoldItalic"),atn=a("/Arial,Italic"),ato=a("/Courier"),atp=a("/Courier-Bold"),as$=a("/Courier-Oblique"),ata=a("/CourierNew"),atb=a("/CourierNew,Bold"),atc=a("/CourierNew,BoldItalic"),atd=a("/CourierNew,Italic"),ate=a("/Helvetica"),asP=a("/Times-Roman"),as0=a("/Helvetica-BoldOblique"),as1=a("/Helvetica-Oblique"),as2=a("/Symbol"),as3=a("/Times-Bold"),as4=a("/Times-BoldItalic"),as5=a("/Times-Italic"),as6=[0,12],asQ=a("/TimesNewRoman"),asR=a("/TimesNewRoman,Bold"),asS=a("/TimesNewRoman,BoldItalic"),asT=a("/TimesNewRoman,Italic"),asU=a("/ZapfDingbats"),asV=[0,13],asZ=[0,0],asY=[0,1],asW=[0,2],asX=[0,3],atf=[0,4],as9=[0,5],as7=[0,6],as8=[0,7],atj=[0,8],ati=[0,9],atg=[0,10],ath=[0,11],asM=[0,a(uM),qU,56],asL=a("Malformed /Differences"),asN=a("Bad /Differences"),asJ=a("Bad /Width entry"),asx=a(a_),asK=a(lp),asy=a(jz),asz=a(xX),asB=a("Bad /Firstchar"),asA=a("No /FirstChar"),asC=a(yW),asE=a("Bad /Lastchar"),asD=a("No /LastChar"),asF=a("/MissingWidth"),asG=a(qH),asH=a("No /Widths"),asI=a("Bad /Widths"),asn=a(jz),aso=a(PE),asp=a(I7),asq=a("/Leading"),asr=a("/AvgWidth"),ass=a("/MaxWidth"),ast=a(Nr),asv=a(Mc),asw=a(Oa),asu=a("/CharSet"),asm=a(bb),asj=a(fN),ask=a(k),asc=a(wd),asd=a(x2),ase=a(h3),asf=a(lp),asg=[0,0],ash=[0,2],asi=[0,1],ar6=a(ci),asb=[6,0],ar7=a(G$),ar8=a("Bad Charprocs"),ar9=a("Bad charprocs"),ar_=a(Pz),ar$=a(xJ),asa=a("No fontbbox"),ar3=a("StandardFont "),ar4=a("SimpleFont "),ar5=a("CIDKeyedFont "),arW=a(h9),arX=a("encoding is "),arY=a(h9),arZ=a("basefont "),ar0=a(h9),ar1=a("fonttype = "),arI=a("Type 1"),arJ=a("MM Type 1"),arK=a("Truetype"),arL=a(k),arM=a("Type 3: charprocs for"),aru=a("Times-Roman"),arv=a("Times-Bold"),arw=a("Times-Italic"),arx=a("Times-BoldItalic"),ary=a("Helvetica"),arz=a("Helvetica-Bold"),arA=a("Helvetica-Oblique"),arB=a("Helvetica-BoldOblique"),arC=a("Courier"),arD=a("Courier-Bold"),arE=a("Courier-Oblique"),arF=a("Courier-BoldOblique"),arG=a("Symbol"),arH=a("ZapfDingbats"),avH=a(jP),axJ=a("Pdfgraphics: File is encrypted"),axK=[0,0,0],axG=a(ci),axF=a("bad stream in read_form_xobject"),axH=[6,0],axI=[0,0,0],axE=a(du),axA=[0,0,0],axD=a("No Matching Op_ET"),axB=[0,0],axC=a("Bad operations in text block"),axy=a("Too many EMCs\n"),axz=a("Missing EMC\n"),awX=a("Pdfgraphics: Op_h - not in PathObject"),awY=a("Pdfgraphics: Op_h - not a partial path"),awZ=a(HR),aw0=a(HR),aw1=[0,2,[0,3,0]],aw4=a(HF),aw5=a(HF),aw6=a(Me),aw7=a(Me),aw8=a(HH),aw9=a(HH),aw_=[0,2,[0,8,0]],aw$=[0,2,[0,9,0]],axb=a(gY),axc=a(Lc),axd=a(Lc),axe=a(JP),axf=a(JP),axg=a(Ni),axh=a(Ni),axi=a(Nd),axj=a(Nd),axk=a(O8),axl=a(O8),axm=[0,2,0],axn=a(l8),axo=a("no /Shading"),axp=a("named shading not found"),axq=a(c9),axr=a(a_),axt=a(g4),axu=a(rm),axv=a("image not found"),axs=a("Unknown kind of xobject"),axw=a("Unknown xobject"),axx=a("xobject not found"),axa=[0,[11,a("Operator shouldn't appear at this place"),[10,0]],a("Operator shouldn't appear at this place%!")],aw2=a(MP),aw3=a(MP),awS=a(dx),awT=a("/PatternType"),awU=a("unknown pattern"),awV=a("Pattern not found"),awW=a("No pattern dictionary"),awN=a(jZ),awO=a(gY),awP=[6,0],awQ=a(l8),awR=a("No shading dictionary"),awF=a(c7),awG=a("No colourspace in shading"),awH=a("/Background"),awI=a(pT),awJ=a(pT),awK=a("/ShadingType"),awL=a("no /ShadingType"),awM=a("Pdfgraphics.unknown shadingtype"),awx=a(JN),awy=a("Pdfgraphics.read_axial_shading: no coords in radial shading"),awz=a(pm),awA=[0,0.,1.],awB=a(u$),awE=a("Pdfgraphics.read_axial_shading: no function in radial shading"),awC=a(IB),awD=[0,0,0],awp=a(JN),awq=a("Pdfgraphics.read_radial_shading: no coords in radial shading"),awr=a(pm),aws=[0,0.,1.],awt=a(u$),aww=a("Pdfgraphics.read_radial_shading: no function in radial shading"),awu=a(IB),awv=[0,0,0],awk=a(pm),awl=[0,0.,1.,0.,1.],awm=a(jZ),awn=a(u$),awo=a("No function found"),awj=[0,0],awi=a("Unbalanced q/Q Ops"),awh=a("Malformed dash."),av9=a("/SMask"),av_=a(LV),av$=a(Ks),awa=a("/BM"),awb=a(KO),awc=a(J_),awd=a(J_),awe=a("/ML"),awf=a(cj),awg=a("Malformed dash phase."),av0=a(c6),av5=a("/Alpha"),av6=a("/Luminosity"),av7=[0,1],av8=[0,0],av1=a(eC),av4=a("Pdfgraphics.transparency group not found in soft mask"),av2=a("/BC"),av3=a("/TR"),avQ=a("/Group"),avZ=a("Pdfgraphics.read_transparency_group: no /Group found"),avR=a(g9),avS=a(ih),avT=a(j0),avU=a(ci),avV=[6,0],avW=[6,0],avX=a(pT),avY=a("no bbox"),avP=[0,0],avK=[0,0,0.],avL=[0,[0,1.,0]],avM=[0,[0,1.,0]],avN=a("/RelativeColorimetric"),axY=[0,[12,45,[4,3,[0,2,2],0,[12,39,[4,3,[0,2,2],0,[12,39,0]]]]],a("-%02i'%02i'")],axV=[0,[12,43,[4,3,[0,2,2],0,[12,39,[4,3,[0,2,2],0,[12,39,0]]]]],a("+%02i'%02i'")],axX=a(Nh),axW=[0,[11,a("D:"),[4,3,[0,2,4],0,[4,3,[0,2,2],0,[4,3,[0,2,2],0,[4,3,[0,2,2],0,[4,3,[0,2,2],0,[4,3,[0,2,2],0,[2,0,0]]]]]]]],a("D:%04i%02i%02i%02i%02i%02i%s")],axM=[0,a(gK),17,4],axN=[0,a(gK),18,4],axO=[0,a(gK),19,4],axP=[0,a(gK),20,4],axQ=[0,a(gK),21,4],axR=[0,a(gK),22,4],axS=[0,a(gK),23,4],axT=[0,a(gK),24,4],axL=a("Pdfdate.BadDate"),ax5=a(cD),ax7=[0,[11,a("Bad /Names array. Name tree will be read as empty\n"),[10,0]],a("Bad /Names array. Name tree will be read as empty\n%!")],ax6=a(c4),ax_=[0,a(Pp),fP,23],ax$=a(vA),aya=a(c4),ayc=a(vA),ayb=a(cD),ayw=a(cD),ayx=a(l9),ayy=a(iv),ayz=a(JK),ayA=a(k),ayt=a(Ma),ays=a(JK),ayu=[6,0],ayv=a(Ma),ayl=a(iv),aym=a(jG),ayn=a(KC),ayo=a(cj),ayr=a(KC),ayp=a(cj),ayq=a(jG),ayg=a(GK),ayh=a(H9),ayi=a(pJ),ayj=a("/RBGroups"),ayk=[0,a("/Locked"),[0,a("/ListMode"),[0,a("/AS"),[0,a("/Intent"),[0,a("/BaseState"),[0,a(g2),[0,a(jY),0]]]]]]],ayf=a("catalog_items_from_original_documents"),aye=a(cD),ayd=[6,[0,[0,a(cD),[5,0]],0]],ax9=[0,[11,a("Pdfmerge.read_names tree: skipping malformed name tree\n"),[10,0]],a("Pdfmerge.read_names tree: skipping malformed name tree\n%!")],ax4=a(l9),ax3=[0,[11,a("failure in merge_bookmarks "),[2,0,[12,10,[10,0]]]],a("failure in merge_bookmarks %s\n%!")],ax1=[0,a(Pp),35,26],ax0=a("streameq"),aAZ=[0,a(oT),72,32],azB=[0,[12,59,[17,[0,a(jr),1,0],0]],a(xD)],azP=[0,[12,59,[17,[0,a(jr),1,0],0]],a(xD)],azG=[0,[12,59,[17,[0,a(jr),1,0],0]],a(xD)],azH=[0,[12,40,[18,[1,[0,0,a(k)]],0]],a(Mi)],azI=[0,[3,0,0],a(jp)],azJ=[0,[12,44,[17,[0,a(jr),1,0],0]],a(I2)],azK=[0,[17,0,[12,41,0]],a(d_)],azy=a("`Null"),azE=[0,[11,a("`Assoc ("),[18,[1,[0,[11,a(bT),0],a(bT)]],0]],a("`Assoc (@[<hov>")],azF=[0,[18,[1,[0,[11,a(jH),0],a(jH)]],[12,91,0]],a(wu)],azL=[0,[17,[0,a(pb),0,0],[12,93,[17,0,0]]],a(yp)],azM=[0,[17,0,[12,41,0]],a(d_)],azN=[0,[11,a("`List ("),[18,[1,[0,[11,a(bT),0],a(bT)]],0]],a("`List (@[<hov>")],azO=[0,[18,[1,[0,[11,a(jH),0],a(jH)]],[12,91,0]],a(wu)],azQ=[0,[17,[0,a(pb),0,0],[12,93,[17,0,0]]],a(yp)],azR=[0,[17,0,[12,41,0]],a(d_)],azS=[0,[11,a("`Bool ("),[18,[1,[0,[11,a(bT),0],a(bT)]],0]],a("`Bool (@[<hov>")],azT=[0,[9,0,0],a(zy)],azU=[0,[17,0,[12,41,0]],a(d_)],azV=[0,[11,a("`Variant ("),[18,[1,[0,[11,a(bT),0],a(bT)]],0]],a("`Variant (@[<hov>")],azW=[0,[12,40,[18,[1,[0,0,a(k)]],0]],a(Mi)],azX=[0,[3,0,0],a(jp)],azY=[0,[12,44,[17,[0,a(jr),1,0],0]],a(I2)],azZ=a("(Some "),az0=a(ie),az3=a("None"),az1=[0,[17,0,[12,41,0]],a(d_)],az2=[0,[17,0,[12,41,0]],a(d_)],azz=[0,[11,a("`Tuple ("),[18,[1,[0,[11,a(bT),0],a(bT)]],0]],a("`Tuple (@[<hov>")],azA=[0,[18,[1,[0,[11,a(jH),0],a(jH)]],[12,91,0]],a(wu)],azC=[0,[17,[0,a(pb),0,0],[12,93,[17,0,0]]],a(yp)],azD=[0,[17,0,[12,41,0]],a(d_)],az4=[0,[11,a("`Float ("),[18,[1,[0,[11,a(bT),0],a(bT)]],0]],a("`Float (@[<hov>")],az5=[0,[8,[0,0,5],0,0,0],a("%F")],az6=[0,[17,0,[12,41,0]],a(d_)],az7=[0,[11,a("`Int ("),[18,[1,[0,[11,a(bT),0],a(bT)]],0]],a("`Int (@[<hov>")],az8=[0,[4,0,0,0,0],a(lI)],az9=[0,[17,0,[12,41,0]],a(d_)],az_=[0,[11,a("`Intlit ("),[18,[1,[0,[11,a(bT),0],a(bT)]],0]],a("`Intlit (@[<hov>")],az$=[0,[3,0,0],a(jp)],aAa=[0,[17,0,[12,41,0]],a(d_)],aAb=[0,[11,a("`String ("),[18,[1,[0,[11,a(bT),0],a(bT)]],0]],a("`String (@[<hov>")],aAc=[0,[3,0,0],a(jp)],aAd=[0,[17,0,[12,41,0]],a(d_)],aAx=[0,eb,1],aAy=[0,eb,0],aAz=a(d4),aAA=a("Invalid token"),aAB=a(d4),aAC=a("Invalid escape sequence"),aAD=a(d4),aAE=a("Invalid low surrogate for code point beyond U+FFFF"),aAF=a("Missing escape sequence representing low surrogate for code point beyond U+FFFF"),aAG=a(d4),aAH=a("Expected ':' or '>' but found"),aAI=a(d4),aAJ=a("Expected '>' but found"),aAK=a(d4),aAL=a("Unterminated comment"),aAM=a("Expected string or identifier but found"),aAN=a(d4),aAO=a("Expected ',' or ']' but found"),aAP=a(d4),aAQ=a("Expected ',' or ')' but found"),aAR=a(d4),aAS=a("Expected ',' or '}' but found"),aAT=a(d4),aAU=a("Expected ':' but found"),aAV=a(d4),aAY=a(OT),aAX=a(OT),aAW=a("Junk after end of JSON value:"),aAm=[0,[2,0,[11,a(" '"),[2,0,[2,0,[12,39,0]]]]],a("%s '%s%s'")],aAl=[0,a(oT),72,32],aAg=[0,[11,a("File "),[2,0,[11,a(", line"),0]]],a("File %s, line")],aAk=a("Line"),aAh=[0,[11,a("byte "),[4,3,0,0,0]],a("byte %i")],aAj=[0,[11,a("bytes "),[4,3,0,0,[12,45,[4,3,0,0,0]]]],a("bytes %i-%i")],aAi=[0,[2,0,[12,32,[4,3,0,0,[11,a(fQ),[2,0,[11,a(":\n"),[2,0,0]]]]]]],a("%s %i, %s:\n%s")],aAf=[0,a(oT),44,13],aAe=[0,[15,0],a(of)],aza=a(ls),azg=[0,[18,[1,[0,[11,a(eB),0],a(eB)]],0],a(Ib)],azh=a(jU),azi=[0,[12,dt,[17,[0,a(x3),1,0],[15,[17,[0,a(wI),1,-2],[12,c5,0]]]]],a("{@;<1 0>%a@;<1 -2>}")],azj=[0,[17,0,0],a(o6)],azk=a("{}"),azl=[0,[18,[1,[0,[11,a(eB),0],a(eB)]],0],a(Ib)],azm=a(jU),azn=[0,[12,91,[17,[0,a(x3),1,0],[18,[1,[0,[11,a(bT),0],a(bT)]],[15,[17,0,[17,[0,a(wI),1,-2],[12,93,0]]]]]]],a("[@;<1 0>@[<hov>%a@]@;<1 -2>]")],azp=a(jU),azq=[0,[12,91,[17,[0,a(x3),1,0],[18,[1,[0,[11,a(M8),0],a(M8)]],[15,[17,0,[17,[0,a(wI),1,-2],[12,93,0]]]]]]],a("[@;<1 0>@[<hv>%a@]@;<1 -2>]")],azo=[0,[17,0,0],a(o6)],azr=a("[]"),azs=[0,[12,60,[18,[1,[0,[11,a(eB),0],a(eB)]],[2,0,[11,a(pR),[15,[17,0,[12,62,0]]]]]]],a("<@[<hv2>%s: %a@]>")],azt=[0,[12,60,[2,0,[12,62,0]]],a("<%s>")],azb=a("()"),azc=[0,[18,[1,[0,[11,a(Nw),0],a(Nw)]],0],a("@[<hov2>")],azd=a(jU),aze=[0,[12,40,[17,[0,a(pb),0,0],[15,[17,[0,a("@;<0 -2>"),0,-2],[12,41,0]]]]],a("(@,%a@;<0 -2>)")],azf=[0,[17,0,0],a(o6)],azu=[0,[18,[1,[0,[11,a(eB),0],a(eB)]],[2,0,[11,a(pR),[15,[17,0,0]]]]],a("@[<hv2>%s: %a@]")],azx=[0,[15,[17,2,0]],a("%a@?")],azw=[0,[15,0],a(of)],azv=[0,[18,[1,[0,[11,a(eB),0],a(eB)]],[15,[17,0,0]]],a("@[<hv2>%a@]")],ay$=[0,[2,0,[17,[0,a(jr),1,0],0]],a("%s@ ")],ay_=a(k),ay6=a("NaN value not allowed in standard JSON"),ay7=[0,[8,[0,0,3],0,[0,16],0],a(HJ)],ay9=[0,[8,[0,0,3],0,[0,17],0],a(Ox)],ay8=a(MR),ay4=a("Infinity value not allowed in standard JSON"),ay5=a("-Infinity value not allowed in standard JSON"),ay0=a("NaN"),ay1=[0,[8,[0,0,3],0,[0,16],0],a(HJ)],ay3=[0,[8,[0,0,3],0,[0,17],0],a(Ox)],ay2=a(MR),ayY=a("Infinity"),ayZ=a("-Infinity"),ayW=a(jq),ayX=a(os),ayV=a(ls),ayP=a(GV),ayQ=a(IH),ayR=a(I8),ayS=a("\\f"),ayT=a(MM),ayU=a('\\"'),ayO=a(Hc),ayN=[0,[11,a("src="),[3,0,[11,a(" start="),[4,3,0,0,[11,a(" len="),[4,3,0,0,[12,10,[10,0]]]]]]]],a("src=%S start=%i len=%i\n%!")],ayL=a("\\u00"),ayI=[0,a(oT),72,32],ayH=[0,a("common.ml"),57,4],ayB=a("Cpdfyojson.Json_error"),ayD=a("Cpdfyojson.End_of_array"),ayE=a("Cpdfyojson.End_of_object"),ayF=a("Cpdfyojson.End_of_tuple"),ayG=a("Cpdfyojson.End_of_input"),ayK=[0,a(xB),a(x7),a(vr),a(zh),a(vE),a(k),a(k),a(k),a(k),a(k),a(k)],aAn=a("Cpdfyojson.Safe.Int_overflow"),aA1=[0,a(xB),a(x7),a(vr),a(zh),a(vE),a(k),a(k),a(k),a(k),a(k),a(k)],aB2=[0,a(jV),1111,12],aBX=a('<?xml version="1.0" encoding="UTF-8"?>\n'),aBY=a("/>"),aBZ=a(Iu),aB0=a(lz),aB1=a(lz),aBW=a('="'),aBT=a("&lt;"),aBU=a("&gt;"),aBV=a("&quot;"),aBR=a("&amp;"),aBS=a("\xef\xbf\xbd"),aBQ=a(k),aBO=a(ie),aBP=a("unbound namespace ("),aBL=[0,a(jV),917,17],aBM=[0,a(jV),924,18],aBN=[0,0,0],aBJ=a(K1),aBK=[0,a(jV),849,45],aBI=[0,a(jV),MZ,9],aBH=a(K1),aBG=[0,ib,0],aBE=a(IZ),aBF=a(IZ),aBD=a("]]>"),aBC=a("<!"),aBl=a('", '),aBm=a(dl),aA$=a("maximal buffer size exceeded"),aBa=a("unexpected end of input"),aBb=a("malformed character stream"),aBc=a("expected root element"),aBd=a('")'),aBe=a('character sequence illegal here ("'),aBf=a(ie),aBg=a("illegal character reference (#"),aBh=a(ie),aBi=a("unknown encoding ("),aBj=a(ie),aBk=a("unknown namespace prefix ("),aBn=a(dl),aBo=a('found "'),aBp=a("expected one of these character sequence: "),aBq=a(ie),aBr=a("unknown entity reference ("),aA9=a(lr),aA_=a("Cpdfxmlm.Make(String)(Buffer).Error"),aBs=a(Ok),aBt=a(Ig),aBu=a(lz),aBv=a(HB),aBw=a("&"),aBx=a("amp"),aBy=a(lP),aBz=a("apos"),aBA=a(dl),aBB=a("quot"),aA5=[0,a(jV),h8,9],aA2=a("Cpdfxmlm.Malformed"),aA3=[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0],aB4=a("Cpdfxmlm.Buffer.Full"),aCx=a(lO),aCD=a("transform_annotations: no rect"),aCy=a(M3),aCz=a(jT),aCA=a(lO),aCB=a(M3),aCC=a(jT),aCw=[0,[11,a("transform_annotations: not indirect\n"),[10,0]],a("transform_annotations: not indirect\n%!")],aCv=a(cN),aCu=[0,[11,a("Unknown or malformed /QuadPoints format "),[2,0,[12,10,0]]],a("Unknown or malformed /QuadPoints format %s\n")],aCt=[0,[11,a(G_),0],a(G_)],aCs=[6,0],aCo=a(a_),aCp=a(g4),aCq=a(ci),aCr=a(ci),aCn=a("change_pattern_matrices_page"),aCm=a(c9),aCj=a(jZ),aCk=a(jZ),aCi=a(dx),aCl=a(dx),aCh=[0,[11,a("Warning: noninvertible matrix\n"),[10,0]],a("Warning: noninvertible matrix\n%!")],aCg=a("process_xobject"),aCf=a(c9),aB$=a(a_),aCa=a(g4),aCd=a(a$),aCc=[0,a(Lj),26,19],aCb=[0,a(Lj),28,15],aCe=a("No /Subtype in Xobject"),aCE=a("Cpdferror.SoftError"),aDY=a(oX),aDp=a(pz),aDO=a(om),aDT=a(p7),aDU=a(o_),aDV=a(q9),aDW=a(pY),aDX=a(rc),aDP=a(ob),aDQ=a(ha),aDR=a(qh),aDS=a(gO),aDq=a(o1),aDJ=a(qR),aDK=a(n4),aDL=a(fr),aDM=a(qn),aDN=a(l0),aDr=a(lT),aDs=a(rf),aDt=a(q2),aDu=a(nS),aDv=a(lJ),aDw=a(ly),aDx=a(pA),aDy=a(qa),aDE=a(lP),aDF=a(qf),aDG=a(rh),aDH=a(qb),aDI=a(pc),aDz=a(Jg),aDA=a(pF),aDB=a(lY),aDC=a(qS),aDD=a(oq),aCZ=a(pE),aC0=a(pn),aC1=a(nT),aC2=a(lo),aC3=a(on),aCV=a(rt),aCW=a(pC),aCX=a(g5),aCY=a(ol),aDn=a(o4),aDo=a(qN),aDh=a(p9),aDi=a(o7),aDj=a(qC),aDk=a(nZ),aDl=a(pP),aDm=a(Gw),aC4=a(oF),aDa=a(l2),aDb=a(oH),aDc=a(oG),aDd=a(o3),aDe=a(pW),aDf=a(qT),aDg=a(p8),aC5=a(p6),aC6=a(ra),aC7=a(nQ),aC8=a(oa),aC9=a(o0),aC_=a(p0),aC$=a(J1),aCP=a(qO),aCQ=a(jS),aCR=a(Kh),aCS=a(ru),aCT=a(jw),aCU=a(HO),aCN=[0,[11,a("Unable to read reversed op from "),[2,0,[12,10,0]]],a("Unable to read reversed op from %s\n")],aCO=a(MA),aCL=[0,[11,a("Unable to read op from "),[2,0,[12,10,0]]],a("Unable to read op from %s\n")],aCM=a(MA),aD0=a(ha),aD1=a(jv),aD2=a(vH),aD3=a(gO),aD6=a(a6),aD5=[0,a(Ic),io,15],aD4=a(a6),aDZ=a("not recognised in object_of_json"),aEj=a(ea),aEl=a(N8),aEm=a(a$),aEo=a("/FunctionType: failure: decomp"),aEp=a("<<stream data elided>>"),aEq=a("failure: toget"),aEn=a(gO),aEk=a("error: stream with not-a-dictionary"),aEr=a(a_),aEu=a(g4),aEs=a(aF),aEt=a(dx),aFP=a(a$),aFQ=a(a6),aFM=a(gO),aFN=a("JSON: stream not decoded"),aFO=[0,a(Ic),517,30],aFR=[6,0],aFS=a(gO),aFL=a("json_of_pdf: stream parsing inconsistency"),aFG=a(Hk),aFH=a(IM),aFI=a(Ho),aFJ=a("/CPDFJSONcontentparsed"),aFK=[0,a("/CPDFJSONformatversion"),[1,2]],aEw=[0,y,[0,[0,u,a(q2)],0]],aEx=[0,y,[0,[0,u,a(qh)],0]],aEy=[0,y,[0,[0,u,a(lT)],0]],aEz=[0,y,[0,[0,u,a(gO)],0]],aEA=[0,y,[0,[0,u,a(nS)],0]],aEB=[0,y,[0,[0,u,a(l0)],0]],aEC=[0,y,[0,[0,u,a(ha)],0]],aED=[0,y,[0,[0,u,a(o1)],0]],aEE=[0,y,[0,[0,u,a(p7)],0]],aEF=[0,y,[0,[0,u,a(o_)],0]],aEG=[0,y,[0,[0,u,a(fr)],0]],aEH=[0,y,[0,[0,u,a(qn)],0]],aEI=[0,y,[0,[0,u,a(rf)],0]],aEJ=[0,y,[0,[0,u,a(qR)],0]],aEK=[0,y,[0,[0,u,a(n4)],0]],aEL=[0,y,[0,[0,u,a(q9)],0]],aEM=[0,y,[0,[0,u,a(om)],0]],aEN=[0,y,[0,[0,u,a(pz)],0]],aEO=[0,y,[0,[0,u,a(rc)],0]],aEP=[0,y,[0,[0,u,a(pY)],0]],aEQ=[0,y,[0,[0,u,a(ob)],0]],aER=[0,[0,u,a(p0)],0],aES=[0,[0,u,a(oH)],0],aET=[0,[0,u,a(o0)],0],aEU=[0,[0,u,a(oG)],0],aEV=[0,[0,u,a(oX)],0],aEW=[0,[0,u,a(qS)],0],aEX=[0,[0,u,a(oa)],0],aEY=[0,[0,u,a(lY)],0],aEZ=[0,[0,u,a(g5)],0],aE0=[0,[0,u,a(pP)],0],aE1=[0,[0,u,a(nZ)],0],aE2=[0,[0,u,a(pC)],0],aE3=[0,[0,u,a(lo)],0],aE4=[0,[0,u,a(on)],0],aE5=[0,[0,u,a(nT)],0],aE6=[0,[0,u,a(qT)],0],aE7=[0,[0,u,a(p6)],0],aE8=[0,[0,u,a(ra)],0],aE9=[0,[0,u,a(pW)],0],aE_=[0,[0,u,a(pA)],0],aE$=[0,[0,u,a(p8)],0],aFa=[0,[0,u,a(oF)],0],aFb=[0,[0,u,a(o7)],0],aFc=[0,[0,u,a(p9)],0],aFd=[0,[0,u,a(rt)],0],aFe=[0,[0,u,a(qa)],0],aFf=[0,[0,u,a(o3)],0],aFg=[0,[0,u,a(lP)],0],aFh=[0,[0,u,a(Gw)],0],aFi=[0,[0,u,a(qC)],0],aFj=[0,[0,u,a(ol)],0],aFk=[0,[0,u,a(rh)],0],aFl=[0,[0,u,a(pF)],0],aFm=[0,[0,u,a(qO)],0],aFn=[0,[0,u,a(ru)],0],aFo=[0,[0,u,a(jS)],0],aFp=[0,[0,u,a(jw)],0],aFq=[0,[0,u,a(Kh)],0],aFr=[0,[0,u,a(HO)],0],aFs=[0,[0,u,a(l2)],0],aFt=[0,[0,u,a(nQ)],0],aFu=[0,[0,u,a(o4)],0],aFv=[0,[0,u,a(qN)],0],aFw=[0,[0,u,a(pE)],0],aFx=[0,[0,u,a(pn)],0],aFy=[0,[0,u,a(oq)],0],aFz=[0,[0,u,a(J1)],0],aFA=[0,[0,u,a(qb)],0],aFB=[0,[0,u,a(pc)],0],aFC=[0,[0,u,a(ly)],0],aFD=[0,[0,u,a(qf)],0],aFE=[0,[0,u,a(lJ)],0],aFF=[0,[0,u,a(Jg)],0],aEi=a(vH),aEh=a(jv),aEg=a(ha),aD8=a("json bad obj"),aD7=a("bad json top level"),aD9=a(Ho),aEf=a("no stream data; cannot reconstruct PDF"),aD_=a(IM),aD$=a("bad major version"),aEa=a(Hk),aEb=a("bad minor version"),aEd=a(aJ),aEe=a(lR),aEc=a("bad root 2"),aCJ=a(jv),aCI=a("num: not an integer"),aCH=a(ha),aCG=a("num: not a float"),aGZ=[0,[11,a("Failed to retrieve time due to "),[2,0,[12,10,[10,0]]]],a("Failed to retrieve time due to %s\n%!")],aG0=[0,0,0,0,1,0,0,0,0,0],aGD=a("%"),aGA=a("7"),aGx=a(lr),aGy=a(lr),aGv=a(bM),aGt=a("p.m"),aGu=a("a.m"),aGr=a(bM),aGq=a(bM),aGo=a(bM),aGn=a("00"),aGl=a(bM),aGj=a(bM),aGi=a(by),aGg=a(bM),aF3=a("strf_Bfail"),aF4=a("January"),aF5=a("February"),aF6=a("March"),aF7=a("April"),aF8=a("May"),aF9=a("June"),aF_=a("July"),aF$=a("August"),aGa=a("September"),aGb=a("October"),aGc=a("November"),aGd=a("December"),aFU=a("strf_AFail"),aFV=a("Sunday"),aFW=a("Monday"),aFX=a("Tuesday"),aFY=a("Wednesday"),aFZ=a("Thursday"),aF0=a("Friday"),aF1=a("Saturday"),aFT=[0,0,0,0,1,0,OJ,0,0,0],aGF=a("%%"),aGG=a("%Y"),aGH=a("%w"),aGI=a(uL),aGJ=a("%T"),aGK=a(jp),aGL=a("%p"),aGM=a("%M"),aGN=a("%m"),aGO=a("%j"),aGP=a("%I"),aGQ=a("%H"),aGR=a("%e"),aGS=a(lI),aGT=a(zy),aGU=a("%b"),aGV=a("%A"),aGW=a(of),aHD=a(g5),aHE=a(pd),aHF=a(ri),aHG=a(g5),aHH=a(pd),aHI=a(ri),aHJ=a(x_),aIk=a(pl),aIv=a(py),aIA=a(nN),aIB=a(pe),aIC=a(qF),aID=a(ow),aIE=a(oY),aIw=a(pD),aIx=a(re),aIy=a(oD),aIz=a(nL),aIl=a(wp),aIq=a(q$),aIr=a(wL),aIs=a(xe),aIt=a("a10landscape"),aIu=a("a10portrait"),aIm=a(zg),aIn=a(uJ),aIo=a(xf),aIp=a(yL),aHK=a("a9landscape"),aIa=a("a6portrait"),aIf=a(uF),aIg=a(uW),aIh=a(uN),aIi=a(zO),aIj=a("a6landscape"),aIb=a("a7landscape"),aIc=a("a7portrait"),aId=a("a8landscape"),aIe=a("a8portrait"),aHL=a(w5),aH7=a("a9portrait"),aH8=a(yQ),aH9=a(v4),aH_=a(xQ),aH$=a(ph),aHM=a(uE),aHN=a(yZ),aHO=a(zF),aHP=a(yu),aHV=a(pD),aH1=a(nN),aH2=a(pe),aH3=a(qF),aH4=a(ow),aH5=a(oY),aH6=a(py),aHW=a(re),aHX=a(oD),aHY=a(nL),aHZ=a(pl),aH0=a(q$),aHR=a(g5),aHS=a(pd),aHT=a(ri),aHU=a(ph),aHQ=[4,a(ph)],aIH=a(Ou),aIG=a(Ou),aHy=a(yQ),aHz=a(v4),aHA=a(xQ),aHB=a(w5),aHx=a("update_last_number"),aHl=a(pD),aHr=a(nN),aHs=a(pe),aHt=a(qF),aHu=a(ow),aHv=a(oY),aHw=a(py),aHm=a(re),aHn=a(oD),aHo=a(nL),aHp=a(pl),aHq=a(q$),aHf=a(Mj),aHh=a(g5),aHi=a(pd),aHj=a(ri),aHk=a(ph),aHg=a(Mj),aG4=a(pD),aG$=a(nN),aHa=a(pe),aHb=a(qF),aHc=a(ow),aHd=a(oY),aHe=a(py),aG5=a(re),aG6=a(oD),aG7=a(nL),aG8=a(pl),aG9=a(q$),aG_=a("find_page_characteristic"),aG3=a(cB),aG1=a("\nUse -help for help.\n"),aJx=a(aJ),aJy=a(cD),aJz=a(l6),aJA=a(cD),aJB=a(aJ),aJt=a(a_),aJu=a(xK),aJs=a(cN),aJv=a(cN),aJo=a("no attachment data"),aJq=a(MW),aJj=a(a_),aJk=a(xK),aJl=a(ea),aJm=a(N6),aJn=a(vi),aJp=a(bh),aJr=a("no /F found in attachment"),aJi=a(cN),aJg=a(MW),aJd=a(vi),aJf=a(bh),aJh=a("/F not found"),aJe=a("/EF not found"),aJa=a(aJ),aJb=a(cD),aJc=a(l6),aII=a("/CheckSum"),aIJ=a(im),aIK=a("/Params"),aIL=[0,a(aF),[4,a("/EmbeddedFile")]],aIM=a(a6),aIN=a("/UF"),aIO=[0,a("/Desc"),[3,a(k)]],aIP=[0,a(aF),[4,a("/Filespec")]],aIQ=a(bh),aIR=a(bh),aIS=a(vi),aIT=a("attach_file: Page not found"),aIU=a(cN),aIV=[2,Lf],aIW=[2,Ow],aIX=a(lO),aIY=a(ea),aIZ=[0,a(a_),[4,a(xK)]],aI0=a(N6),aI1=a(cN),aI2=a(cD),aI_=[6,0],aI3=a(l6),aI9=[6,0],aI4=a(cD),aI5=a(cD),aI6=a(l6),aI7=a(cD),aI8=a(aJ),aJF=[4,a(jU)],aJI=a(dR),aJJ=a(x4),aJK=a(jD),aJL=a(x4),aJM=a(lw),aJN=a("landscape"),aJO=a(lA),aJP=a("portrait"),aJQ=a("reverse"),aJR=a(dR),aJS=a(x4),aJV=a(k),aJW=a(jD),aJX=a("This PDF file has no pages and is therefore malformed"),aJ7=[0,a("cpdfpagespec.ml"),g6,23],aJ$=a(dR),aJ8=a(lw),aJ9=a(lA),aJ_=a(jD),aKa=a(jU),aKb=a(k),aKc=a(k),aJY=a(" does not exist."),aJZ=a("Page "),aJ0=a("Page range specifies no pages"),aJ1=a(". Last page was "),aJ2=a(". Raw error was "),aJ3=a("Bad page specification "),aJC=a("Cpdfpagespec.PageSpecUnknownPage"),aJD=a("Cpdfpagespec.PageSpecWouldBeNoPages"),aJE=a("Cpdfpagespec.PageSpecBadSyntax"),aMW=a("set_open_action: invalid page number"),aMX=[0,[4,a(zp)],0],aM4=[0,[4,a(wK)],[0,0,[0,0,[0,0,0]]]],aMY=[0,[0,a(c6),[4,a(L9)]],0],aMZ=a(cj),aM0=a(aJ),aM1=a(z$),aM2=a(aJ),aM3=a(lR),aMJ=a(Pu),aMK=a(Oq),aML=a(OI),aMM=a(KE),aMN=a(K$),aMO=a(Np),aMP=a("Unknown page mode"),aMQ=a(aJ),aMR=a(bb),aMS=a("/PageMode"),aMT=a(aJ),aMU=a(lR),aMw=a(Jt),aMx=a(Pg),aMy=a(N4),aMz=a(I9),aMA=a(Gz),aMB=a(OO),aMC=a("Unknown page layout"),aMD=a(aJ),aME=a(bb),aMF=a("/PageLayout"),aMG=a(aJ),aMH=a(lR),aMp=a(aJ),aMq=a(PG),aMt=[6,0],aMr=a(PG),aMs=a(aJ),aMu=a(lR),aL2=a(jM),aL3=a("METADATADATE"),aL4=a(ix),aL5=a("TRAPPED"),aL6=a(ii),aL7=a("KEYWORDS"),aL8=a(hR),aL9=a("AUTHOR"),aL_=a(hS),aL$=a("SUBJECT"),aMa=a(fY),aMb=a("TITLE"),aMc=a(g2),aMd=a("CREATOR"),aMe=a(iu),aMf=a("PRODUCER"),aMg=a(h0),aMh=a(k),aMi=a(jM),aMj=a("MODDATE"),aMk=a(hU),aMl=a(k),aMm=a(jM),aMn=a("CREATEDATE"),aL0=a(fu),aL1=a(fu),aLX=a("MetadataDate"),aLY=a(jM),aLZ=a(jM),aLR=a(jM),aLS=a("CPDF_REPRODUCIBLE_DATES"),aLT=a(jq),aLV=a(Io),aLU=a(Io),aLq=a("xmp_date not a string"),aLo=a(xi),aLQ=[6,0],aLp=a(xi),aLr=a(hR),aLs=a(hU),aLt=a(g2),aLu=a(ii),aLv=a(h0),aLw=a(iu),aLx=a(hS),aLy=a(fY),aLz=a(ix),aLB=a("Trapped"),aLC=a(Lh),aLD=a(Kf),aLE=a(OS),aLF=a(Nc),aLG=a(J7),aLH=a(HI),aLI=a("ModDate"),aLJ=a(IL),aLK=a(Jm),aLL=a(Hd),aLM=a(GE),aLN=a(I6),aLO=a(Md),aLP=a(Hj),aLA=a("Unknown call to set_pdf_info"),aLm=[0,[11,a("xmp_date: Malformed date string (no year): "),[2,0,[12,10,[10,0]]]],a("xmp_date: Malformed date string (no year): %s\n%!")],aLn=[0,[11,a("xmp_date: Malformed date string (no prefix): "),[2,0,[12,10,[10,0]]]],a("xmp_date: Malformed date string (no prefix): %s\n%!")],aLf=a(Nh),aLh=[0,[4,3,[0,2,2],0,0],a(Lo)],aLi=a(lr),aLj=[0,[4,3,[0,2,2],0,0],a(Lo)],aLk=a(il),aLl=a(dR),aLg=a("%Y-%m-%dT%H:%M:%S"),aLc=a(JS),aLd=a(Al),aLb=a("set_pdf_info_xml: not a string"),aK9=a(k),aK_=a(k),aK$=a(k),aK8=a(k),aLa=a(k),aKL=a(hR),aKM=a(hU),aKN=a(g2),aKO=a(ii),aKP=a(h0),aKQ=a(iu),aKR=a(hS),aKS=a(fY),aKU=a(Lh),aKV=a(Kf),aKW=a(OS),aKX=a(Nc),aKY=a(J7),aKZ=a(HI),aK0=a("ModificationDate"),aK1=a(IL),aK2=a(Hd),aK3=a(GE),aK4=a(I6),aK5=a(Md),aK6=a(Jm),aK7=a(Hj),aKT=a("Cpdf.check_name not known"),aKG=a("li"),aKF=a("Alt"),aKH=a("Seq"),aKI=a("Bag"),aKJ=a(k),aKC=a(k),aKD=a(fQ),aKE=a(k),aKB=a(k),aKy=a(JS),aKz=a(Al),aKv=a(ix),aKw=a(Al),aKx=a(k),aKu=a(xi),aKA=[6,0],aKq=a(aJ),aKr=a(h7),aKs=[0,a("cpdfmetadata.ml"),bV,17],aKt=a(Mx),aKm=a(aJ),aKn=a(h7),aKo=a(aJ),aKp=a(Mx),aKe=[0,[0,a(aF),[4,a(h7)]],[0,[0,a(a_),[4,a("/XML")]],0]],aKf=a(a6),aKg=a(aJ),aKj=a("Malformed PDF: No root."),aKh=a(h7),aKi=a(aJ),aKd=a("<?xpacket begin='' id='W5M0MpCehiHzreSzNTczkc9d'?>\n\n<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'\n xmlns:iX='http://ns.adobe.com/iX/1.0/'>\n\n <rdf:Description about=''\n  xmlns='http://ns.adobe.com/pdf/1.3/'\n  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>\n  <pdf:CreationDate>CREATEDATE<\/pdf:CreationDate>\n  <pdf:ModDate>MODDATE<\/pdf:ModDate>\n  <pdf:Producer>PRODUCER<\/pdf:Producer>\n  <pdf:Creator>CREATOR<\/pdf:Creator>\n  <pdf:Title>TITLE<\/pdf:Title>\n  <pdf:Subject>SUBJECT<\/pdf:Subject>\n  <pdf:Author>AUTHOR<\/pdf:Author>\n  <pdf:Keywords>KEYWORDS<\/pdf:Keywords>\n  <pdf:Trapped>TRAPPED<\/pdf:Trapped>\n <\/rdf:Description>\n\n <rdf:Description about=''\n  xmlns='http://ns.adobe.com/xap/1.0/'\n  xmlns:xap='http://ns.adobe.com/xap/1.0/'>\n   <xap:CreateDate>CREATEDATE<\/xap:CreateDate>\n   <xap:CreatorTool>CREATOR<\/xap:CreatorTool>\n   <xap:ModifyDate>MODDATE<\/xap:ModifyDate>\n   <xap:MetadataDate>METADATADATE<\/xap:MetadataDate>\n <\/rdf:Description>\n\n <rdf:Description about=''\n  xmlns='http://purl.org/dc/elements/1.1/'\n  xmlns:dc='http://purl.org/dc/elements/1.1/'>\n   <dc:title>TITLE<\/dc:title>\n <\/rdf:Description>\n\n<\/rdf:RDF>\n\n<?xpacket end='r'?>"),aNl=a(Mu),aNm=a(Ad),aNn=a(M$),aNo=a(NZ),aNp=a(Hf),aNi=a(Ad),aNh=a("Bad bookmark file, line "),aNj=a(MS),aNg=[0,[11,a("Bad bookmark file (syntax) at line "),[4,3,0,0,[11,a(" (error was "),[2,0,[12,41,0]]]]],a("Bad bookmark file (syntax) at line %i (error was %s)")],aNe=a(MS),aNd=[0,[11,a("Malformed JSON bookmark file ("),[2,0,[12,41,0]]],a("Malformed JSON bookmark file (%s)")],aNb=a("top level of JSON boomark file not a list"),aM7=a(Hf),aM8=a(NZ),aM9=a(M$),aM_=a(Ad),aM$=a(Mu),aM6=a("malformed mark in mark_of_json"),aM5=a("bookmark_of_data: page obj num not found"),aOk=a(jK),aOl=a(eG),aOm=[0,1,0],aOn=[0,0,[0,[43,1.,1.,1.,1.],[0,[0,1.],0]]],aOj=[0,4,0],aN8=[0,3,[0,1,0]],aN9=[0,1.],aN_=a(lH),aN$=[0,gN,9.,147.],aOa=a(jK),aOb=[0,gN,150.,0.],aOc=a(l_),aOd=[0,0.,0.,gN],aOe=a(cB),aOf=[0,0.,gN,0.],aOg=a(eG),aOh=[0,gN,0.,0.],aN7=a(eG),aN6=a(cB),aN4=[7,0.],aN2=a("combine_pages: not of equal length"),aN3=[0,a(h_),[0,a(fr),0]],aNX=[0,[0,[0,1,1],0]],aN0=a(H4),aNY=[0,[0,1,0],0],aNZ=[0,a(h_),[0,a(fr),0]],aNU=a(cB),aNV=a(cB),aNS=a(cN),aNT=a(cN),aNP=a("hasbox: bad page"),aNN=[0,[11,a(OW),[4,3,0,0,[12,10,[10,0]]]],a(PD)],aNL=[0,0,0],aNM=[0,1,0],aNI=a(cB),aNJ=a("Zero-sized pages are invalid"),aNK=[0,0.,0.],aNH=[0,0.,0.],aNE=a(lH),aNC=a(l_),aNA=a(jK),aNy=a(cB),aNx=a(cB),aNw=a(cB),aNv=[0,a("cpdfpage.ml"),bX,65],aNs=a(eG),aNu=[0,[11,a("hard_box: box "),[2,0,[11,a(" not found"),0]]],a("hard_box: box %s not found")],aNt=[0,13,[0,12,0]],aPS=a(HD),aPY=[0,18,[0,1,0]],aPZ=[50,a(ov)],aPW=a(ov),aPX=a(ov),aPU=a("addtexts: empty page range"),aPR=[0,0,0],aPH=[0,[0,a(aF),[4,a("/Action")]],[0,[0,a(c6),[4,a(Hh)]],0]],aPI=a(Hh),aPJ=a(dr),aPK=[0,a("/BS"),[6,[0,[0,a(eH),[1,0]],0]]],aPL=a(lO),aPM=[0,a(a_),[4,a(Ag)]],aPy=a(gY),aPQ=[6,0],aPz=a(lY),aPA=a(LV),aPB=a(Ks),aPC=a(gY),aPD=a(du),aPP=[6,0],aPE=a(ha),aPF=a(cB),aPG=a(du),aPN=a(cN),aPO=a(cN),aPo=a("%Bates"),aPp=a("%ExtractedText"),aPq=a("%EndLabel"),aPr=a("%EndPage"),aPs=a("%Label"),aPt=a("%filename"),aPu=a("%roman"),aPv=a("%Roman"),aPw=a("%Page"),aPx=a("%PageDiv2"),aPm=a(MY),aPn=a(MY),aPe=a(du),aPg=a("Missing font in text extraction"),aPh=a("Missing /Font in text extraction"),aPf=a(k),aPi=a(k),aPk=a(k),aPj=a(k),aPd=a(k),aPl=a(k),aOI=a(bb),aOJ=a("FontBBox"),aOK=a("ItalicAngle"),aPc=a("Ascender"),aOL=[1,0],aPb=a("Descender"),aOM=[1,0],aPa=a(G6),aON=[1,0],aOO=a("/StemV"),aOP=a("/CapHeight"),aOQ=a(I7),aOR=a(PE),aOS=a("/ItalicAngle"),aOT=a(xJ),aOU=a(Nt),aOV=a(bb),aOW=a("/FontName"),aOX=[0,a(aF),[4,a(jz)]],aOY=a(jz),aOZ=a(qH),aO0=[0,a(yW),[1,aq]],aO1=[0,a(xX),[1,0]],aO2=[0,a(fm),[4,a(lL)]],aO3=a(bb),aO4=a(fN),aO5=[0,a(a_),[4,a(h3)]],aO6=[0,a(aF),[4,a(du)]],aO7=a(bb),aO8=a(fN),aO9=[0,a(fm),[4,a(lL)]],aO_=[0,a(a_),[4,a(h3)]],aO$=[0,a(aF),[4,a(du)]],aOF=a(bb),aOH=a(G6),aOG=[1,0],aOC=a("remove_slash"),aOz=a(Nb),aOA=a(Nb),aOx=a("extract_num: "),aOr=[0,16,[0,18,[0,1,0]]],aOs=[0,[20,1],0],aOw=[0,[20,0],0],aOt=[0,15,0],aOu=[0,0.,0.],aOv=[50,a(ov)],aOq=[0,[11,a("Warning: character not found in font for unicode codepoint 0x"),[4,8,0,0,[12,10,0]]],a("Warning: character not found in font for unicode codepoint 0x%X\n")],aOp=[0,0],aP$=[0,a(I0),eP,27],aP7=a(Kb),aP4=a(Hv),aP5=a(Hv),aP6=a(Kb),aP8=[0,0.,0.],aP9=[0,1.,0.],aP_=[0,0.,1.],aQa=[6,0],aP2=[0,[11,a("Error "),[2,0,[12,10,0]]],a("Error %s\n")],aP3=a(h9),aQj=[0,a(I0),vq,57],aQc=a(a_),aQd=a(g4),aQe=a(rm),aQf=a(GP),aQg=a(OK),aQh=a(ci),aQi=a(jZ),aQb=a(c9),aQr=a(du),aQk=a(a_),aQl=a(k),aQm=a(fN),aQn=a(k),aQo=a(fm),aQp=a(k),aQA=a(lv),aQB=a(lO),aQC=[0,a("/Border"),[5,[0,[2,0.],[0,[2,0.],[0,[2,0.],0]]]]],aQD=[0,a(a_),[4,a(Ag)]],aQE=[0,a(aF),[4,a("/Annot")]],aQF=a(bh),aQG=a(bh),aQy=[6,0],aQz=a(cN),aQw=a(bh),aQx=a(du),aQv=[0,32,0],aQu=[0,32,0],aQs=a("not a standard font"),aQH=a(k),aQI=a(k),aQJ=[0,3,0],aQU=a(cB),aQW=[0,0,0],aQQ=[0,32,0],aQR=[0,2,[0,0,0]],aQO=[0,[11,a("No bookmarks, not making table of contents\n"),[10,0]],a("No bookmarks, not making table of contents\n%!")],aQP=a(cB),aQS=a(k),aQT=[0,3,0],aQV=[0,5,0,1,1],aQM=[0,46,[0,46,[0,46,0]]],aQ3=[6,0],aQ4=[6,0],aQ2=a("padbefore: range contains pages not present in pdf"),aQ0=a("padafter: range contains pages not present in pdf"),aQY=a(cN),aQZ=[6,0],aQX=[0,a(h_),[0,a(fr),0]],aRu=a(iv),aRv=a(jG),aRw=a(cj),aRx=a(pJ),aRy=a(cj),aRz=a(iv),aRA=a(aJ),aRp=a(aF),aRq=a("/OCG"),aRr=a(jY),aRs=a(jY),aRn=a(jY),aRl=a(iv),aRm=a(jG),aQ9=a(cj),aQ$=a(cj),aQ_=a("No /D dict in OCGProperties"),aRi=a(jY),aRj=a("ocg: missing name"),aRh=a("ocg: not a dictionary"),aRg=a("OCG object missing"),aRf=a("Malformed /OCG entry"),aQ6=a(iv),aQ7=a(jG),aQ8=a("Malformed or missing /OCGs"),aRa=a(pJ),aRb=a(H9),aRc=a(GK),aRd=a(iv),aRe=a(aJ),aR4=a(LS),aR5=[0,1,[0,3,0]],aR7=[0,[11,a("Beginning squeeze: "),[4,3,0,0,[11,a(x1),0]]],a("Beginning squeeze: %i objects\n")],aR8=[0,[11,a("Squeezing... Down to "),[4,3,0,0,[11,a(x1),0]]],a("Squeezing... Down to %i objects\n")],aR9=[0,[11,a(LH),0],a(LH)],aR_=[0,[11,a(KK),0],a(KK)],aR6=[0,[11,a("Squeeze failed. No output written.\n Proximate error was:\n "),[2,0,0]],a("Squeeze failed. No output written.\n Proximate error was:\n %s")],aR2=a("squeeze_xobject"),aRZ=[0,a(n8),f0,68],aRV=[0,[4,a(eM)]],aRW=a(aF),aRX=a(ci),aR3=[6,0],aRY=a(ea),aR0=a(ea),aR1=a(c9),aRT=a(ea),aRL=a(a_),aRM=a(g4),aRN=a(ci),aRR=[6,0],aRQ=a(a6),aRP=a(IO),aRO=a(IO),aRK=[0,a(n8),71,28],aRH=a(aF),aRI=a(eM),aRJ=[0,a(n8),61,19],aRC=a(a$),aRD=a(aF),aRE=a(h7),aRB=[0,a(n8),27,9],aSf=[6,0],aSg=a(ci),aSl=[6,0],aSi=[6,0],aSk=a(a6),aSj=[0,a("cpdfdraft.ml"),83,21],aSh=a("not a stream"),aSo=a(a_),aSp=a(rm),aSm=a(a_),aSn=a(g4),aSq=a(c9),aSr=a(c9),aSe=[0,0,[0,[0,0.],[0,[39,0.],[0,[14,0.,0.,1.,1.],[0,[9,0.,0.],[0,[10,1.,1.],[0,[9,0.,1.],[0,[10,1.,0.],[0,3,[0,1,0]]]]]]]]]],aSc=a(c9),aSd=a("xobject not there"),aSb=a("bad resources"),aR$=a(a_),aSa=a(rm),aSv=[0,a("cpdfpagelabels.ml"),19,4],aSu=[0,0,0,1,1],aSB=[0,1],aSA=a(cN),aSy=a(dr),aSz=a(dr),aSN=[0,[0,[0,1,1],0]],aSS=a(H4),aSO=[0,[0,1,0],0],aSP=[0,a(h_),[0,a(fr),0]],aSQ=a("CPDFXObj"),aSR=a(bb),aSG=[0,a("cpdfxobject.ml"),23,11],aSH=a(a6),aSI=a(ci),aSJ=a(pT),aSK=[0,a(a_),[4,a(g4)]],aSL=[0,a(aF),[4,a(c9)]],aSD=a(c9),aSF=[6,0],aSE=a(c9),aS_=a("Not even a single page would fit."),aS$=a("impose-xy: both dimensions cannot be zero"),aS2=[2,0.],aS3=[2,0.],aS4=[2,0.],aS5=[2,0.],aS6=[2,0.],aS7=[2,0.],aS8=[2,0.],aS9=[2,0.],aS0=a(eG),aS1=[7,0.],aSW=[0,1,0],aSX=[0,1,0],aSY=[0,0,0],aSZ=[0,a("cpdfimpose.ml"),b5,10],aSU=a("margin would fill whole page!"),aSV=[0,0.,0.],aST=[6,0],aTp=[0,1],aTi=a(HS),aTj=a(HS),aTk=a(gY),aTl=a(KO),aTm=a("Malformed file."),aTf=[32,a(g1)],aTd=[31,a(g1)],a2z=[0,[4,3,0,0,[11,a(fQ),0]],a("%i, ")],a2x=[0,[11,a(JF),[4,3,0,0,[11,a(" ranges on exit\n"),0]]],a("There are %i ranges on exit\n")],a2y=[0,[11,a(JF),[4,3,0,0,[11,a(" PDFs on exit:\n"),0]]],a("There are %i PDFs on exit:\n")],a2A=a(h9),a2w=a(xn),a2u=a(z1),a2s=a(wH),a2q=a(xx),a2o=a(zk),a2m=a(uZ),a2k=a(fu),a2j=a(Ai),a2h=a(xM),a2f=a(vk),a2d=a(yn),a2b=[1,0.,0.,0.],a2a=a(uO),a1_=[1,0.,0.,0.],a19=a(vP),a17=[1,0.,0.,0.],a16=a(zZ),a14=a(vY),a12=a(vj),a10=a(yP),a1Y=a(yi),a1W=a(xE),a1U=a(y4),a1S=a(uH),a1Q=a(wh),a1O=a(yU),a1M=a(zA),a1K=a(uI),a1I=a(y2),a1G=a(zL),a1E=a(An),a1C=a(yJ),a1A=a(xt),a1y=[0,a(LS)],a1x=a(Ao),a1v=a(k),a1u=a("getPageLabelStringForPage\n"),a1s=a("getPageLabelRange\n"),a1q=a("getPageLabelOffset\n"),a1o=a(k),a1n=a("getPageLabelPrefix\n"),a1l=a("getPageLabelStyle\n"),a1i=a("startGetPageLabels\n"),a1g=a("removePageLabels\n"),a1d=a("Unknown page label style"),a1e=a(k),a1c=a(wE),a1a=a(yb),a0_=a(yF),a08=a(wO),a06=a(zd),a04=a(uX),a02=a(wt),a00=a(xp),a0Y=a(vD),a0W=a(yq),a0U=a(u8),a0S=a(zv),a0Q=a(zf),a0O=a(yK),a0M=a(zV),a0K=a(wB),a0I=a(xY),a0G=a(cB),a0F=a(x5),a0D=a(jK),a0C=a(yh),a0A=a(lH),a0z=a(wM),a0x=a(l_),a0w=a(wJ),a0u=a(ze),a0s=a(xk),a0q=a(yA),a0o=a(vF),a0m=a(w0),a0h=a(cB),a0i=a(jK),a0j=a(l_),a0k=a(lH),a0g=a(z8),a0e=a(v9),a0c=a(wW),a0a=a(u0),aZ_=a(vc),aZ8=a(zN),aZ6=a(yM),aZ4=a(yx),aZ2=a(zl),aZ0=a("/DisplayDocTitle"),aZZ=a(yz),aZX=a("/CenterWindow"),aZW=a(ww),aZU=a("/FitWindow"),aZT=a(v3),aZR=a("/HideWindowUI"),aZQ=a(za),aZO=a("/HideMenubar"),aZN=a(zq),aZL=a("/HideToolbar"),aZK=a(vB),aZI=a(ok),aZH=a(ok),aZA=a(OI),aZB=a(K$),aZC=a(Np),aZD=a(Pu),aZE=a(KE),aZF=a(Oq),aZy=a(qA),aZx=a(qA),aZq=a(Pg),aZr=a(Jt),aZs=a(N4),aZt=a(I9),aZu=a(Gz),aZv=a(OO),aZn=[0,a(ix),[0,0],3],aZo=[0,1],aZm=a(qD),aZj=[0,a(ix),[0,1],3],aZk=[0,1],aZi=a(oJ),aZf=a(h0),aZg=[0,1],aZe=a(nV),aZb=a(hU),aZc=[0,1],aZa=a(n9),aY9=a(iu),aY_=[0,1],aY8=a(pM),aY5=a(g2),aY6=[0,1],aY4=a(JX),aY1=a(ii),aY2=[0,1],aY0=a(n2),aYX=a(hS),aYY=[0,1],aYW=a(pU),aYT=a(hR),aYU=[0,1],aYS=a(pq),aYP=a(fY),aYQ=[0,1],aYO=a(qG),aYM=[0,a(ix),[0,0],3],aYL=a(qD),aYJ=[0,a(ix),[0,1],3],aYI=a(oJ),aYG=a(h0),aYF=a(nV),aYD=a(hU),aYC=a(n9),aYA=a(iu),aYz=a(pM),aYx=a(g2),aYw=a(JX),aYu=a(ii),aYt=a(n2),aYr=a(hS),aYq=a(pU),aYo=a(hR),aYn=a(pq),aYl=a(fY),aYk=a(qG),aYi=a(zU),aYg=a(vv),aYe=a(xO),aYc=a(yc),aYa=a(h0),aX$=a(zr),aX9=a(hU),aX8=a(v6),aX6=a(iu),aX5=a(w6),aX3=a(g2),aX2=a(vf),aX0=a(ii),aXZ=a(xF),aXX=a(hS),aXW=a(vm),aXU=a(hR),aXT=a(xS),aXR=a(fY),aXQ=a(xq),aXO=a(h0),aXN=a(ya),aXL=a(hU),aXK=a(yr),aXI=a(iu),aXH=a(z4),aXF=a(g2),aXE=a(wA),aXC=a(ii),aXB=a(v8),aXz=a(hS),aXy=a(xy),aXw=a(hR),aXv=a(xA),aXt=a(fY),aXs=a(u4),aXq=a(yC),aXo=a(v5),aXm=a(wR),aXk=a(xr),aXi=a(zB),aXg=a(wz),aXe=a(wg),aXc=a(xP),aXa=a(xC),aW_=a(vS),aW8=a(vT),aW6=a(uP),aW4=a(yl),aW2=a(z6),aW0=a(xW),aWY=a(zK),aWW=a(y1),aWU=a(wc),aWS=a(zm),aWQ=a(yR),aWO=a(xo),aWM=a(vN),aWL=a("0 0"),aWJ=a(wk),aWH=a(vJ),aWF=a(vL),aWE=a(vQ),aWC=a(xN),aWA=a(xI),aWy=a(wX),aWw=a(uK),aWt=a(wS),aWr=a(xd),aWp=a(zx),aWn=a(k),aWm=a(zY),aWk=a(zI),aWi=a(xv),aWg=a(yd),aWe=a(Aa),aWc=a(xG),aWa=a(zz),aV_=a(u6),aV8=a(yy),aV6=a(xc),aV4=a("setMediaBox"),aV2=a(uY),aV0=a(zo),aVY=a(xu),aVW=a(v0),aVU=a(zS),aVS=a(wo),aVQ=a(vw),aVO=a(As),aVM=a(wr),aVK=a(yv),aVI=a(zt),aVG=a(zW),aVE=a(xV),aVC=[7,0.],aVB=a(x8),aVz=a("unknown papersize"),aVx=[7,0.],aVw=a(Aj),aVu=a(zE),aVs=a("read_position"),aVr=[0,1],aVq=a(yV),aVo=a(vp),aVm=a("merge_same: incorrect array lengths"),aVk=a(xZ),aVi=a("merge: no pdfs"),aVg=a(yG),aVe=a("merge_simple: no pdfs"),aVc=a(x0),aVa=a(zw),aU_=a(x0),aU8=a(y$),aU6=a("unknown permission"),aUZ=a("bad encryption method"),aU0=[0,0],aU1=[0,1],aU2=[1,0],aU3=[1,1],aU4=[2,0],aU5=[2,1],aUY=a(JV),aUX=a(JV),aUV=a("decrypt_pdf_owner"),aUW=a(xU),aUS=a("decrypt_pdf_inner"),aUT=a(y9),aUQ=a(vg),aUO=a(pV),aUN=a(pV),aUL=a(vn),aUK=a(jD),aUH=a(Lp),aUF=a(Lp),aUD=a(wN),aUC=a("toFileMemoryExt"),aUA=a(x0),aUy=a(y8),aUw=a(zM),aUu=a(wn),aUs=a(w4),aUq=a(u9),aUo=a(z7),aUm=a(zX),aUk=a(uU),aUi=a(yB),aUf=a(xa),aUd=a(vI),aUb=a(we),aT$=a(zR),aT9=a("info"),aT8=a("lookup_pdf: not found"),aT7=a(vs),aT5=a("removeDuplicated"),aT3=a(Aq),aT1=a("union"),aTZ=a(lA),aTX=a(lw),aTV=a(xb),aTN=a("deleterange"),aTM=a("addtorange"),aTL=a("readrange"),aTK=a("lengthrange"),aTJ=a("blankrange"),aTI=a(vx),aTG=a(z2),aTE=a(wP),aTC=a(zH),aTA=a(yO),aTy=a(wZ),aTv=[0,[11,a("ERROR: "),[2,0,[11,a(pR),[2,0,0]]]],a("ERROR: %s: %s")],aTu=a(k),aTt=a(k),aTw=[0,0,0,0,0,0,0,0,0],a4U=a(k),a2F=a(k),a2B=[0,a(wi),a(zX),a(wo),a(yu),a(zF),a(yZ),a(uE),a(I1),a(Oy),a(H8),a(OM),a(MD),a(As),a(OG),a(Jl),a(zK),a(y1),a(PA),a(In),a(LD),a(Oi),a(xc),a(N5),a(IF),a(K3),a(IX),a(J$),a(LX),a(My),a(y8),a(zw),a(y$),a(zM),a(NG),a(Lr),a(LU),a(Le),a(yn),a(xo),a(vj),a(yi),a(yP),a(xE),a(vQ),a(uU),a(K0),a(I4),a(y2),a(GW),a(wg),a(Aa),a(zv),a(zR),a(Ia),a(Oh),a(vL),a(zm),a(Ao),a(Iy),a(yy),a(xV),a(vv),a(yh),a(Ht),a(qG),a(MX),a(pU),a(Hw),a(Jn),a(pM),a(ok),a(qA),a(LT),a(nV),a(yx),a(yM),a(wW),a(LG),a(HU),a(n2),a(zU),a(Kz),a(x5),a(HT),a(I5),a(Kk),a(n9),a(xN),a(uK),a(zx),a(wS),a(xd),a(wM),a(PK),a(pq),a(wJ),a(yV),a(x8),a(Aj),a(zE),a(zW),a(wr),a(yv),a(zt),a(N_),a(K2),a(Ol),a(wH),a(xx),a(xu),a(wk),a(G3),a(vc),a(Ai),a(JT),a(MF),a(zk),a(uZ),a(v0),a(xn),a(uY),a(zf),a(zo),a(xM),a(OV),a(NY),a(L1),a(I_),a(xb),a(wZ),a(yO),a(vx),a(JC),a(Pa),a(NQ),a(OY),a(Il),a(yB),a(Ha),a(JG),a(wN),a(vT),a(uP),a(yl),a(xW),a(z6),a(yJ),a(xt),a(zl),a(Pw),a(H3),a(lA),a(yU),a(wh),a(uI),a(zA),a(u8),a(IQ),a(NH),a(Of),a(Nz),a(K5),a(Mk),a(M0),a(Hi),a(Hu),a(Hl),a(wP),a(yG),a(vp),a(xZ),a(GC),a(qD),a(KX),a(oJ),a(NW),a(MC),a(IU),a(KB),a(xP),a(xC),a(vs),a(vn),a(z2),a(wc),a(za),a(vB),a(zq),a(N$),a(NE),a(Px),a(HX),a(pV),a(v9),a(u6),a(vw),a(v5),a(yA),a(xq),a(u4),a(vm),a(xy),a(w6),a(z4),a(z8),a(Lb),a(GQ),a(Kd),a(La),a(Kl),a(zr),a(ya),a(zN),a(w0),a(yC),a(xF),a(v8),a(yb),a(wO),a(yF),a(zd),a(wt),a(uX),a(xr),a(wz),a(zB),a(wR),a(z1),a(yc),a(vF),a(vf),a(wA),a(v6),a(yr),a(xI),a(zI),a(yd),a(zY),a(xv),a(ze),a(xS),a(xA),a(vD),a(yq),a(xp),a(xk),a(wn),a(u9),a(zL),a(An),a(w4),a(z7),a(v3),a(lw),a(we),a(vI),a(wX),a(Lt),a(IS),a(KD),a(Ke),a(OF),a(L5),a(MG),a(vg),a(vY),a(yz),a(Aq),a(IG),a(xa),a(xU),a(y9),a(xG),a(GA),a(xO),a(zS),a(u0),a(KS),a(HN),a(L6),a(MQ),a(vk),a(Mg),a(zz),a(vJ),a(zH),a(KZ),a(ww),a(Ng),a(O1),a(OE),a(JJ),a(y4),a(uH),a(zZ),a(vP),a(uO),a(yK),a(zV),a(wB),a(xY),a(vS),a(jD),a(L2),a(O7),a(Ml),a(Pc),a(NX),a(MK),a(KT),a(vN),a(wE),a(yR),a(zO),a(uN),a(uW),a(uF),a(x_),a(yL),a(xf),a(uJ),a(zg),a(wp),a(xe),a(wL)],a2C=a("Exports.CPDFError");function
bp(a){if(typeof
a==="number")return 0;else
switch(a[0]){case
0:return[0,bp(a[1])];case
1:return[1,bp(a[1])];case
2:return[2,bp(a[1])];case
3:return[3,bp(a[1])];case
4:return[4,bp(a[1])];case
5:return[5,bp(a[1])];case
6:return[6,bp(a[1])];case
7:return[7,bp(a[1])];case
8:var
c=a[1];return[8,c,bp(a[2])];case
9:var
b=a[1];return[9,b,b,bp(a[3])];case
10:return[10,bp(a[1])];case
11:return[11,bp(a[1])];case
12:return[12,bp(a[1])];case
13:return[13,bp(a[1])];default:return[14,bp(a[1])]}}function
cq(a,b){if(typeof
a==="number")return b;else
switch(a[0]){case
0:return[0,cq(a[1],b)];case
1:return[1,cq(a[1],b)];case
2:return[2,cq(a[1],b)];case
3:return[3,cq(a[1],b)];case
4:return[4,cq(a[1],b)];case
5:return[5,cq(a[1],b)];case
6:return[6,cq(a[1],b)];case
7:return[7,cq(a[1],b)];case
8:var
c=a[1];return[8,c,cq(a[2],b)];case
9:var
d=a[2],e=a[1];return[9,e,d,cq(a[3],b)];case
10:return[10,cq(a[1],b)];case
11:return[11,cq(a[1],b)];case
12:return[12,cq(a[1],b)];case
13:return[13,cq(a[1],b)];default:return[14,cq(a[1],b)]}}function
be(a,b){if(typeof
a==="number")return b;else
switch(a[0]){case
0:return[0,be(a[1],b)];case
1:return[1,be(a[1],b)];case
2:var
c=a[1];return[2,c,be(a[2],b)];case
3:var
d=a[1];return[3,d,be(a[2],b)];case
4:var
e=a[3],f=a[2],g=a[1];return[4,g,f,e,be(a[4],b)];case
5:var
h=a[3],i=a[2],j=a[1];return[5,j,i,h,be(a[4],b)];case
6:var
k=a[3],l=a[2],m=a[1];return[6,m,l,k,be(a[4],b)];case
7:var
n=a[3],o=a[2],p=a[1];return[7,p,o,n,be(a[4],b)];case
8:var
q=a[3],r=a[2],s=a[1];return[8,s,r,q,be(a[4],b)];case
9:var
t=a[1];return[9,t,be(a[2],b)];case
10:return[10,be(a[1],b)];case
11:var
u=a[1];return[11,u,be(a[2],b)];case
12:var
v=a[1];return[12,v,be(a[2],b)];case
13:var
w=a[2],x=a[1];return[13,x,w,be(a[3],b)];case
14:var
y=a[2],z=a[1];return[14,z,y,be(a[3],b)];case
15:return[15,be(a[1],b)];case
16:return[16,be(a[1],b)];case
17:var
A=a[1];return[17,A,be(a[2],b)];case
18:var
B=a[1];return[18,B,be(a[2],b)];case
19:return[19,be(a[1],b)];case
20:var
C=a[2],D=a[1];return[20,D,C,be(a[3],b)];case
21:var
E=a[1];return[21,E,be(a[2],b)];case
22:return[22,be(a[1],b)];case
23:var
F=a[1];return[23,F,be(a[2],b)];default:var
G=a[2],H=a[1];return[24,H,G,be(a[3],b)]}}function
rO(a,c,b){return a[1]===c?(a[1]=b,1):0}function
_(a){throw[0,$,a]}function
as(a){throw[0,bq,a]}var
aH=[Q,Qr,aL(0)];function
cT(a){return 0<=a?a:-a|0}var
ml=fH,AQ=u7,Qt=j9(Qs),Qv=j9(Qu),Qx=j9(Qw);function
o(d,c){var
a=m(d),e=m(c),b=aG(a+e|0);ed(d,0,b,0,a);ed(c,0,b,a,e);return bi(b)}function
aj(a){if(0<=a&&!(aq<a))return a;return as(Qy)}function
rQ(a){return a?Qz:QA}function
rR(b){return a(k+b)}function
kd(f){var
b=Ax(QC,f),a=0,e=m(b);for(;;){if(e<=a)return o(b,QB);var
c=F(b,a),d=0;if(48<=c){if(!(58<=c))d=1}else
if(45===c)d=1;if(d){var
a=a+1|0;continue}return b}}var
AR=P8(0),ke=AE(1),da=AE(2);function
AS(d,c,a){var
b=AE(Qh(a,d,c));Qa(b,a);return b}function
AT(a){return AS(QD,OR,a)}function
QE(b){function
a(b){var
a=b;for(;;){if(a){var
c=a[2],e=a[1];try{cR(e)}catch(a){a=d(a);if(a[1]!==mk)throw a;var
f=a}var
a=c;continue}return 0}}return a(a8H(0))}function
eV(b,a){return AF(b,a,0,m(a))}function
AU(d,c,b,a){if(0<=b&&0<=a&&!((m(c)-a|0)<b))return AF(d,c,b,a);return as(QG)}function
mm(a){cR(a);return dV(a)}function
f9(b){var
a=P8(Qh(b,QH,0));Qa(a,b);return a}function
AV(d,c,b,a){if(0<=b&&0<=a&&!((a1(c)-a|0)<b))return P7(d,c,b,a);return as(QI)}function
rS(g,f,e,d){if(0<=e&&0<=d&&!((a1(f)-d|0)<e)){var
b=e,a=d;for(;;){if(0<a){var
c=P7(g,f,b,a);if(0===c)throw ar;var
b=b+c|0,a=a-c|0;continue}return 0}}return as(QJ)}function
QK(c,a){var
b=aG(a);rS(c,b,0,a);return bi(b)}function
AW(a){return eV(ke,a)}function
rT(a){eV(da,a);mg(da,10);return cR(da)}var
rU=[0,QE];function
QL(d){for(;;){var
a=rU[1],e=[0,1],c=1-rO(rU,a,function(a,c){return function(e){if(rO(a,1,0))b(d,0);return b(c,0)}}(e,a));if(c)continue;return c}}function
mn(a){return b(rU[1],0)}AJ(a(Gx),mn);function
rV(c,d,h){var
a=b(d,0);if(a){var
e=a[2],f=a[1],g=function(a){return rV(c,e,a)};return[0,b(c,f),g]}return 0}function
AX(e,d){var
c=d;for(;;){var
a=b(c,0);if(a){var
f=a[2];b(e,a[1]);var
c=f;continue}return 0}}function
br(a){if(0<=a&&!(aq<a))return a;return as(QM)}function
QT(a){return 25<a+Kj>>>0?a:a+32|0}function
QU(a){return 25<a+lN>>>0?a:a+oz|0}var
AY=a8Z(0)[1],rW=a8X(0),f_=(4*rW|0)-1|0;function
AZ(a){try{var
b=[0,mi(a)];return b}catch(a){a=d(a);if(a===J)return 0;throw a}}function
z(c){var
b=0,a=c;for(;;){if(a){var
b=b+1|0,a=a[2];continue}return b}}function
aM(a){return a?a[1]:_(QV)}function
bu(a){return a?a[2]:_(QW)}function
eW(d,c){if(0<=c){var
a=d,b=c;for(;;){if(a){var
e=a[2],f=a[1];if(0===b)return f;var
a=e,b=b-1|0;continue}return _(QX)}}return as(QY)}function
eX(d,c){var
a=d,b=c;for(;;){if(a){var
e=[0,a[1],b],a=a[2],b=e;continue}return b}}function
l(a){return eX(a,0)}function
eY(c,a){if(a){var
d=a[2],e=b(c,a[1]);return[0,e,eY(c,d)]}return 0}function
kf(e,d){var
c=0,a=d;for(;;){if(a){var
f=a[2],c=[0,b(e,a[1]),c],a=f;continue}return c}}function
x(d,c){var
a=c;for(;;){if(a){var
e=a[2];b(d,a[1]);var
a=e;continue}return 0}}function
hh(e,d,c){var
b=d,a=c;for(;;){if(a){var
f=a[2],b=n(e,b,a[1]),a=f;continue}return b}}function
A0(c,b,a){if(b){if(a){var
d=a[2],e=b[2],f=n(c,b[1],a[1]);return[0,f,A0(c,e,d)]}}else
if(!a)return 0;return as(QZ)}function
cr(e,d,c){var
b=d,a=c;for(;;){if(b){if(a){var
f=a[2],g=b[2];n(e,b[1],a[1]);var
b=g,a=f;continue}}else
if(!a)return 0;return as(Q1)}}function
A1(e,d){var
a=d;for(;;){if(a){var
f=a[2],c=b(e,a[1]);if(c)return c;var
a=f;continue}return 0}}function
at(d,c){var
a=c;for(;;){if(a){var
e=a[2],b=0===bY(a[1],d)?1:0;if(b)return b;var
a=e;continue}return 0}}function
A2(d,c){var
a=c;for(;;){if(a){var
b=a[1],e=a[2],f=b[2];if(0===bY(b[1],d))return f;var
a=e;continue}throw J}}function
b0(f){var
g=0;return function(h){var
c=g,a=h;for(;;){if(a){var
d=a[2],e=a[1];if(b(f,e)){var
c=[0,e,c],a=d;continue}var
a=d;continue}return l(c)}}}function
db(a,b){function
r(i,e){if(2===i){if(e){var
k=e[2];if(k){var
l=k[1],m=e[1],y=k[2],z=0<n(a,m,l)?[0,m,[0,l,0]]:[0,l,[0,m,0]];return[0,z,y]}}}else
if(3===i&&e){var
o=e[2];if(o){var
p=o[2];if(p){var
b=p[1],c=o[1],d=e[1],C=p[2],D=0<n(a,d,c)?0<n(a,c,b)?[0,d,[0,c,[0,b,0]]]:0<n(a,d,b)?[0,d,[0,b,[0,c,0]]]:[0,b,[0,d,[0,c,0]]]:0<n(a,d,b)?[0,c,[0,d,[0,b,0]]]:0<n(a,c,b)?[0,c,[0,b,[0,d,0]]]:[0,b,[0,c,[0,d,0]]];return[0,D,C]}}}var
s=i>>1,t=j(s,e),A=t[1],u=j(i-s|0,t[2]),h=A,g=u[1],f=0,B=u[2];for(;;){if(h){if(g){var
q=g[1],r=h[1],w=g[2],x=h[2];if(0<n(a,r,q)){var
g=w,f=[0,q,f];continue}var
h=x,f=[0,r,f];continue}var
v=eX(h,f)}else
var
v=eX(g,f);return[0,v,B]}}function
j(i,e){if(2===i){if(e){var
j=e[2];if(j){var
k=j[1],l=e[1],y=j[2],z=0<n(a,l,k)?[0,k,[0,l,0]]:[0,l,[0,k,0]];return[0,z,y]}}}else
if(3===i&&e){var
m=e[2];if(m){var
o=m[2];if(o){var
b=o[1],c=m[1],d=e[1],C=o[2],D=0<n(a,d,c)?0<n(a,d,b)?0<n(a,c,b)?[0,b,[0,c,[0,d,0]]]:[0,c,[0,b,[0,d,0]]]:[0,c,[0,d,[0,b,0]]]:0<n(a,c,b)?0<n(a,d,b)?[0,b,[0,d,[0,c,0]]]:[0,d,[0,b,[0,c,0]]]:[0,d,[0,c,[0,b,0]]];return[0,D,C]}}}var
s=i>>1,t=r(s,e),A=t[1],u=r(i-s|0,t[2]),h=A,g=u[1],f=0,B=u[2];for(;;){if(h){if(g){var
p=g[1],q=h[1],w=g[2],x=h[2];if(0<n(a,q,p)){var
h=x,f=[0,q,f];continue}var
g=w,f=[0,p,f];continue}var
v=eX(h,f)}else
var
v=eX(g,f);return[0,v,B]}}var
c=z(b);return 2<=c?j(c,b)[1]:b}function
A3(b,a){return b<=a?b:a}function
rX(b,a){return a<=b?b:a}function
cF(a,c){var
b=aG(a);a8a(b,0,a,c);return b}function
A4(c,f){var
d=aG(c),e=c-1|0,g=0;if(!(e<0)){var
a=g;for(;;){aZ(d,a,b(f,a));var
h=a+1|0;if(e!==a){var
a=h;continue}break}}return d}var
Q2=aG(0);function
mo(a){var
b=a1(a),c=aG(b);hd(a,0,c,0,b);return c}function
rY(c,b,a){if(0<=b&&0<=a&&!((a1(c)-a|0)<b)){var
d=aG(a);hd(c,b,d,0,a);return d}return as(Q3)}function
iH(c,b,a){return bi(rY(c,b,a))}function
kg(e,c,d,b,a){if(0<=a&&0<=c&&!((a1(e)-a|0)<c)&&0<=b&&!((a1(d)-a|0)<b))return hd(e,c,d,b,a);return as(Q4)}function
eZ(e,c,d,b,a){if(0<=a&&0<=c&&!((m(e)-a|0)<c)&&0<=b&&!((a1(d)-a|0)<b))return ed(e,c,d,b,a);return as(Q5)}function
A5(c){var
a=c-9|0,b=0;if(4<a>>>0){if(23===a)b=1}else
if(2!==a)b=1;return b?1:0}function
A6(g,c){var
d=a1(c);if(0===d)return c;var
e=aG(d),f=d-1|0,h=0;if(!(f<0)){var
a=h;for(;;){aZ(e,a,b(g,c$(c,a)));var
i=a+1|0;if(f!==a){var
a=i;continue}break}}return e}function
iI(b,a){return bi(cF(b,a))}function
Q6(b,a){return bi(A4(b,a))}function
R(c,b,a){return bi(rY(c_(c),b,a))}function
cU(k,g){if(g){var
h=m(k),c=0,b=g,q=0;for(;;){if(b){var
i=b[1];if(b[2]){var
j=(m(i)+h|0)+c|0,n=b[2],o=c<=j?j:as(Q7),c=o,b=n;continue}var
l=m(i)+c|0}else
var
l=c;var
f=aG(l),e=q,d=g;for(;;){if(d){var
a=d[1];if(d[2]){var
p=d[2];ed(a,0,f,e,m(a));ed(k,0,f,e+m(a)|0,h);var
e=(e+m(a)|0)+h|0,d=p;continue}ed(a,0,f,e,m(a))}return bi(f)}}}return Q8}function
kh(e,c){var
d=m(c)-1|0,f=0;if(!(d<0)){var
a=f;for(;;){b(e,aU(c,a));var
g=a+1|0;if(d!==a){var
a=g;continue}break}}return 0}function
A7(c){var
a=c-9|0,b=0;if(4<a>>>0){if(23===a)b=1}else
if(2!==a)b=1;return b?1:0}function
A8(e,d,c,b){var
a=c;for(;;){if(d<=a)throw J;if(aU(e,a)===b)return a;var
a=a+1|0;continue}}function
Q_(a,b){return A8(a,m(a),0,b)}function
Q$(b,a,e){var
c=m(b);if(0<=a&&!(c<a))try{A8(b,c,a,e);var
f=1;return f}catch(a){a=d(a);if(a===J)return 0;throw a}return as(Ra)}function
mp(b,a){return Q$(b,0,a)}function
f$(a){return bi(A6(QT,c_(a)))}function
A9(f,b){var
c=[0,0],d=[0,m(b)],e=m(b)-1|0;if(!(e<0)){var
a=e;for(;;){if(aU(b,a)===f){var
h=c[1];c[1]=[0,R(b,a+1|0,(d[1]-a|0)-1|0),h];d[1]=a}var
i=a-1|0;if(0!==a){var
a=i;continue}break}}var
g=c[1];return[0,R(b,0,d[1]),g]}function
iJ(c,d){if(0===c)return[0];if(0<=c){var
e=aS(c,b(d,0)),f=c-1|0,g=1;if(!(f<1)){var
a=g;for(;;){e[1+a]=b(d,a);var
h=a+1|0;if(f!==a){var
a=h;continue}break}}return e}return as(Rb)}function
A_(a){var
b=a.length-1;return 0===b?[0]:PN(a,0,b)}function
rZ(c,b,a){if(0<=b&&0<=a&&!((c.length-1-a|0)<b))return PN(c,b,a);return as(Rc)}function
A$(c,b,a,d){if(0<=b&&0<=a&&!((c.length-1-a|0)<b))return a7Y(c,b,a,d);return as(Rd)}function
Ba(e,c,d,b,a){if(0<=a&&0<=c&&!((e.length-1-a|0)<c)&&0<=b&&!((d.length-1-a|0)<b))return a7X(e,c,d,b,a);return as(Re)}function
ki(e,c){var
d=c.length-1-1|0,f=0;if(!(d<0)){var
a=f;for(;;){b(e,c[1+a]);var
g=a+1|0;if(d!==a){var
a=g;continue}break}}return 0}function
e0(e,c){var
d=c.length-1;if(0===d)return[0];var
f=aS(d,b(e,c[1])),g=d-1|0,h=1;if(!(g<1)){var
a=h;for(;;){f[1+a]=b(e,c[1+a]);var
i=a+1|0;if(g!==a){var
a=i;continue}break}}return f}function
Bb(d,b){var
c=b.length-1-1|0,e=0;if(!(c<0)){var
a=e;for(;;){n(d,a,b[1+a]);var
f=a+1|0;if(c!==a){var
a=f;continue}break}}return 0}function
O(c){var
a=c.length-1-1|0,b=0;for(;;){if(0<=a){var
d=[0,c[1+a],b],a=a-1|0,b=d;continue}return b}}function
bG(a){if(a){var
d=0,c=a,g=a[2],h=a[1];for(;;){if(c){var
d=d+1|0,c=c[2];continue}var
f=aS(d,h),e=1,b=g;for(;;){if(b){var
i=b[2];f[1+e]=b[1];var
e=e+1|0,b=i;continue}return f}}}return[0]}var
Rf=0;function
Ri(b,o){var
a=b?b[1]:1,c=a?mr:mq,d=a?mr:mq,f=aG(gH),e=[0],g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=aG(b7);return[0,function(a){var
k=AV(o,f,0,a1(f)),c=0<k?k:(a[9]=1,0);if(a1(a[2])<(a[3]+c|0)){if(((a[3]-a[5]|0)+c|0)<=a1(a[2]))kg(a[2],a[5],a[2],0,a[3]-a[5]|0);else{var
i=A3(2*a1(a[2])|0,f_);if(i<((a[3]-a[5]|0)+c|0))_(Rh);var
j=aG(i);kg(a[2],a[5],j,0,a[3]-a[5]|0);a[2]=j}var
d=a[5];a[4]=a[4]+d|0;a[6]=a[6]-d|0;a[5]=0;a[7]=a[7]-d|0;a[3]=a[3]-d|0;var
e=a[10],g=e.length-1-1|0,l=0;if(!(g<0)){var
b=l;for(;;){var
h=p(e,b)[1+b];if(0<=h)p(e,b)[1+b]=h-d|0;var
m=b+1|0;if(g!==b){var
b=m;continue}break}}}kg(f,0,a[2],a[3],c);a[3]=a[3]+c|0;return 0},n,m,l,k,j,i,h,g,e,d,c]}function
Rj(b,a){var
c=b?b[1]:1,e=c?mr:mq,f=c?mr:mq,g=[0],h=1,i=0,j=0,k=0,l=0,n=0,o=m(a),d=mo(c_(a));return[0,function(a){a[9]=1;return 0},d,o,n,l,k,j,i,h,g,f,e]}function
hi(a){return iH(a[2],a[5],a[6]-a[5]|0)}function
e1(b,a){return eU(b[2],a)}function
r0(f){function
g(a){return a?a[5]:0}function
d(b,f,e,a){var
c=g(b),d=g(a),h=d<=c?c+1|0:d+1|0;return[0,b,f,e,a,h]}function
p(b,a){return[0,0,b,a,0,1]}function
a(b,h,f,a){var
i=b?b[5]:0,j=a?a[5]:0;if((j+2|0)<i){if(b){var
c=b[4],m=b[3],n=b[2],k=b[1],q=g(c);if(q<=g(k))return d(k,n,m,d(c,h,f,a));if(c){var
r=c[3],s=c[2],t=c[1],u=d(c[4],h,f,a);return d(d(k,n,m,t),s,r,u)}return as(Rk)}return as(Rl)}if((i+2|0)<j){if(a){var
l=a[4],o=a[3],p=a[2],e=a[1],v=g(e);if(v<=g(l))return d(d(b,h,f,e),p,o,l);if(e){var
w=e[3],x=e[2],y=e[1],z=d(e[4],p,o,l);return d(d(b,h,f,y),x,w,z)}return as(Rm)}return as(Rn)}var
A=j<=i?i+1|0:j+1|0;return[0,b,h,f,a,A]}var
A=0;function
Q(a){return a?0:1}function
l(d,c,b){if(b){var
e=b[4],h=b[3],i=b[2],g=b[1],o=b[5],j=n(f[1],d,i);if(0===j)return h===c?b:[0,g,d,c,e,o];if(0<=j){var
k=l(d,c,e);return e===k?b:a(g,i,h,k)}var
m=l(d,c,g);return g===m?b:a(m,i,h,e)}return[0,0,d,c,0,1]}function
R(d,c){var
a=c;for(;;){if(a){var
e=a[4],g=a[3],h=a[1],b=n(f[1],d,a[2]);if(0===b)return g;var
i=0<=b?e:h,a=i;continue}throw J}}function
S(g,l){var
c=l;for(;;){if(c){var
h=c[2],m=c[4],n=c[3],o=c[1];if(b(g,h)){var
e=h,d=n,a=o;for(;;){if(a){var
f=a[2],i=a[4],j=a[3],k=a[1];if(b(g,f)){var
e=f,d=j,a=k;continue}var
a=i;continue}return[0,e,d]}}var
c=m;continue}throw J}}function
T(g,l){var
c=l;for(;;){if(c){var
h=c[2],m=c[4],n=c[3],o=c[1];if(b(g,h)){var
e=h,d=n,a=o;for(;;){if(a){var
f=a[2],i=a[4],j=a[3],k=a[1];if(b(g,f)){var
e=f,d=j,a=k;continue}var
a=i;continue}return[0,[0,e,d]]}}var
c=m;continue}return 0}}function
U(g,l){var
c=l;for(;;){if(c){var
h=c[2],m=c[4],n=c[3],o=c[1];if(b(g,h)){var
e=h,d=n,a=m;for(;;){if(a){var
f=a[2],i=a[4],j=a[3],k=a[1];if(b(g,f)){var
e=f,d=j,a=i;continue}var
a=k;continue}return[0,e,d]}}var
c=o;continue}throw J}}function
V(g,l){var
c=l;for(;;){if(c){var
h=c[2],m=c[4],n=c[3],o=c[1];if(b(g,h)){var
e=h,d=n,a=m;for(;;){if(a){var
f=a[2],i=a[4],j=a[3],k=a[1];if(b(g,f)){var
e=f,d=j,a=i;continue}var
a=k;continue}return[0,[0,e,d]]}}var
c=o;continue}return 0}}function
W(d,c){var
a=c;for(;;){if(a){var
e=a[4],g=a[3],h=a[1],b=n(f[1],d,a[2]);if(0===b)return[0,g];var
i=0<=b?e:h,a=i;continue}return 0}}function
X(e,d){var
a=d;for(;;){if(a){var
g=a[4],h=a[1],b=n(f[1],e,a[2]),c=0===b?1:0;if(c)return c;var
i=0<=b?g:h,a=i;continue}return 0}}function
m(c){var
a=c;for(;;){if(a){var
b=a[1];if(b){var
a=b;continue}return[0,a[2],a[3]]}throw J}}function
C(c){var
a=c;for(;;){if(a){var
b=a[1];if(b){var
a=b;continue}return[0,[0,a[2],a[3]]]}return 0}}function
Y(b){var
a=b;for(;;){if(a){if(a[4]){var
a=a[4];continue}return[0,a[2],a[3]]}throw J}}function
Z(b){var
a=b;for(;;){if(a){if(a[4]){var
a=a[4];continue}return[0,[0,a[2],a[3]]]}return 0}}function
q(b){if(b){var
c=b[1];if(c){var
d=b[4],e=b[3],f=b[2];return a(q(c),f,e,d)}return b[4]}return as(Ro)}function
D(c,b){if(c){if(b){var
d=m(b),e=d[2],f=d[1];return a(c,f,e,q(b))}return c}return b}function
r(e,b){if(b){var
c=b[4],h=b[3],g=b[2],d=b[1],i=n(f[1],e,g);if(0===i)return D(d,c);if(0<=i){var
j=r(e,c);return c===j?b:a(d,g,h,j)}var
k=r(e,d);return d===k?b:a(k,g,h,c)}return 0}function
s(d,h,c){if(c){var
e=c[4],i=c[3],j=c[2],g=c[1],r=c[5],k=n(f[1],d,j);if(0===k){var
l=b(h,[0,i]);if(l){var
m=l[1];return i===m?c:[0,g,d,m,e,r]}return D(g,e)}if(0<=k){var
o=s(d,h,e);return e===o?c:a(g,j,i,o)}var
p=s(d,h,g);return g===p?c:a(p,j,i,e)}var
q=b(h,0);return q?[0,0,d,q[1],0,1]:0}function
E(b,c){var
a=c;for(;;){if(a){var
d=a[4],e=a[3],f=a[2];E(b,a[1]);n(b,f,e);var
a=d;continue}return 0}}function
t(c,a){if(a){var
d=a[5],e=a[4],f=a[3],g=a[2],h=t(c,a[1]),i=b(c,f);return[0,h,g,i,t(c,e),d]}return 0}function
u(b,a){if(a){var
c=a[2],d=a[5],e=a[4],f=a[3],g=u(b,a[1]),h=n(b,c,f);return[0,g,c,h,u(b,e),d]}return 0}function
F(c,e,d){var
a=e,b=d;for(;;){if(a){var
f=a[4],g=a[3],h=a[2],i=I(c,h,g,F(c,a[1],b)),a=f,b=i;continue}return b}}function
G(b,f){var
a=f;for(;;){if(a){var
g=a[4],h=a[1],c=n(b,a[2],a[3]);if(c){var
d=G(b,h);if(d){var
a=g;continue}var
e=d}else
var
e=c;return e}return 1}}function
H(b,f){var
a=f;for(;;){if(a){var
g=a[4],h=a[1],c=n(b,a[2],a[3]);if(c)var
d=c;else{var
e=H(b,h);if(!e){var
a=g;continue}var
d=e}return d}return 0}}function
K(d,c,b){if(b){var
e=b[4],f=b[3],g=b[2];return a(K(d,c,b[1]),g,f,e)}return p(d,c)}function
L(d,c,b){if(b){var
e=b[3],f=b[2],g=b[1];return a(g,f,e,L(d,c,b[4]))}return p(d,c)}function
c(e,g,f,b){if(e){if(b){var
h=b[5],i=e[5],j=b[4],k=b[3],l=b[2],m=b[1],n=e[4],o=e[3],p=e[2],q=e[1];return(h+2|0)<i?a(q,p,o,c(n,g,f,b)):(i+2|0)<h?a(c(e,g,f,m),l,k,j):d(e,g,f,b)}return L(g,f,e)}return K(g,f,b)}function
i(b,a){if(b){if(a){var
d=m(a),e=d[2],f=d[1];return c(b,f,e,q(a))}return b}return a}function
o(d,e,b,a){return b?c(d,e,b[1],a):i(d,a)}function
h(b,a){if(a){var
d=a[4],e=a[3],g=a[2],i=a[1],l=n(f[1],b,g);if(0===l)return[0,i,[0,e],d];if(0<=l){var
j=h(b,d),m=j[3],o=j[2];return[0,c(i,g,e,j[1]),o,m]}var
k=h(b,i),p=k[2],q=k[1];return[0,q,p,c(k[3],g,e,d)]}return Rp}function
j(c,b,a){if(b){var
d=b[2],k=b[5],l=b[4],m=b[3],n=b[1];if(g(a)<=k){var
e=h(d,a),p=e[2],q=e[1],r=j(c,l,e[3]),s=I(c,d,[0,m],p);return o(j(c,n,q),d,s,r)}}else
if(!a)return 0;if(a){var
f=a[2],t=a[4],u=a[3],v=a[1],i=h(f,b),w=i[2],x=i[1],y=j(c,i[3],t),z=I(c,f,w,[0,u]);return o(j(c,x,v),f,z,y)}throw[0,B,Rq]}function
k(d,b,a){if(b){if(a){var
j=a[3],e=a[2],l=b[3],f=b[2],u=a[4],v=a[1],w=b[4],x=b[1];if(a[5]<=b[5]){var
g=h(f,a),m=g[2],y=g[3],n=k(d,x,g[1]),p=k(d,w,y);return m?o(n,f,I(d,f,l,m[1]),p):c(n,f,l,p)}var
i=h(e,b),q=i[2],z=i[3],r=k(d,i[1],v),s=k(d,z,u);return q?o(r,e,I(d,e,q[1],j),s):c(r,e,j,s)}var
t=b}else
var
t=a;return t}function
v(b,a){if(a){var
f=a[4],g=a[3],h=a[2],j=a[1],d=v(b,j),k=n(b,h,g),e=v(b,f);if(k){if(j===d&&f===e)return a;return c(d,h,g,e)}return i(d,e)}return 0}function
w(b,a){if(a){var
d=a[2],h=a[4],j=a[3],e=w(b,a[1]),f=n(b,d,j),g=w(b,h);return f?c(e,d,f[1],g):i(e,g)}return 0}function
x(b,a){if(a){var
d=a[3],e=a[2],m=a[4],f=x(b,a[1]),g=f[2],h=f[1],o=n(b,e,d),j=x(b,m),k=j[2],l=j[1];if(o){var
p=i(g,k);return[0,c(h,e,d,l),p]}var
q=c(g,e,d,k);return[0,i(h,l),q]}return Rr}function
e(d,c){var
a=d,b=c;for(;;){if(a){var
e=[0,a[2],a[3],a[4],b],a=a[1],b=e;continue}return b}}function
_(i,h,g){var
r=e(g,0),b=e(h,0),a=r;for(;;){if(b){if(a){var
j=a[4],k=a[3],l=a[2],m=b[4],o=b[3],p=b[2],c=n(f[1],b[1],a[1]);if(0===c){var
d=n(i,p,l);if(0===d){var
q=e(k,j),b=e(o,m),a=q;continue}return d}return c}return 1}return a?-1:0}}function
$(j,i,h){var
s=e(h,0),b=e(i,0),a=s;for(;;){if(b){if(a){var
k=a[4],l=a[3],m=a[2],o=b[4],p=b[3],q=b[2],c=0===n(f[1],b[1],a[1])?1:0;if(c){var
d=n(j,q,m);if(d){var
r=e(l,k),b=e(p,o),a=r;continue}var
g=d}else
var
g=c;return g}return 0}return a?0:1}}function
y(a){if(a){var
b=a[1],c=y(a[4]);return(y(b)+1|0)+c|0}return 0}function
M(d,c){var
b=d,a=c;for(;;){if(a){var
e=a[3],f=a[2],g=a[1],b=[0,[0,f,e],M(b,a[4])],a=g;continue}return b}}function
aa(a){return M(0,a)}function
N(h,g){var
a=g,d=h;for(;;){var
c=b(d,0);if(c){var
e=c[1],f=c[2],a=l(e[1],e[2],a),d=f;continue}return a}}function
ab(a){return N(a,A)}function
z(a,f){if(a){var
b=a[2],c=a[1],d=e(a[3],a[4]);return[0,[0,c,b],function(a){return z(d,a)}]}return 0}function
ac(a){var
b=e(a,0);return function(a){return z(b,a)}}function
O(d,c){var
a=d,b=c;for(;;){if(a){var
e=[0,a[2],a[3],a[1],b],a=a[4],b=e;continue}return b}}function
P(a,e){if(a){var
b=a[2],c=a[1],d=O(a[3],a[4]);return[0,[0,c,b],function(a){return P(d,a)}]}return 0}function
ad(a){var
b=O(a,0);return function(a){return P(b,a)}}return[0,A,Q,X,l,s,p,r,j,k,_,$,E,F,G,H,v,w,x,y,aa,m,C,Y,Z,m,C,h,R,W,S,T,U,V,t,u,ac,ad,function(j,i){var
a=i,b=0;for(;;){if(a){var
c=a[4],e=a[3],d=a[2],k=a[1],g=n(f[1],d,j);if(0!==g){if(0<=g){var
a=k,b=[0,d,e,c,b];continue}var
a=c;continue}var
h=[0,d,e,c,b]}else
var
h=b;return function(a){return z(h,a)}}},N,ab]}function
kj(a){return[0,0,0]}function
kk(a){a[1]=0;a[2]=0;return 0}function
hj(b,a){a[1]=[0,b,a[1]];a[2]=a[2]+1|0;return 0}function
iK(a){var
b=a[1];if(b){var
c=b[1];a[1]=b[2];a[2]=a[2]-1|0;return[0,c]}return 0}function
iL(b){var
a=b[1];return a?[0,a[1]]:0}var
Bc=[Q,Rs,aL(0)];function
Bd(a){return[0,0,0,0]}function
r1(a){a[1]=0;a[2]=0;a[3]=0;return 0}function
ms(d,a){var
b=[0,d,0],c=a[3];return c?(a[1]=a[1]+1|0,c[2]=b,a[3]=b,0):(a[1]=1,a[2]=b,a[3]=b,0)}function
Be(a){var
b=a[2];if(b){var
c=b[1];if(b[2]){var
d=b[2];a[1]=a[1]-1|0;a[2]=d;return c}r1(a);return c}throw Bc}var
Ru=[Q,Rt,aL(0)];function
Rv(a){throw Ru}function
Rw(a){var
e=a[1];a[1]=Rv;try{var
c=b(e,0);a8M(a,c);return c}catch(b){b=d(b);a[1]=function(a){throw b};throw b}}function
aN(a){var
b=1<=a?a:1,c=f_<b?f_:b,d=aG(c);return[0,d,0,c,d]}function
az(a){return iH(a[1],0,a[2])}function
Rz(a){return a[2]}function
ck(a){a[2]=0;return 0}function
r2(a,c){var
d=a[2],b=[0,a[3]];for(;;){if(b[1]<(d+c|0)){b[1]=2*b[1]|0;continue}if(f_<b[1])if((d+c|0)<=f_)b[1]=f_;else
_(RC);var
e=aG(b[1]);kg(a[1],0,e,0,a[2]);a[1]=e;a[3]=b[1];if((a[2]+c|0)<=a[3]){if((d+c|0)<=a[3])return 0;throw[0,B,RA]}throw[0,B,RB]}}function
s(a,c){var
b=a[2];if(a[3]<=b)r2(a,1);aZ(a[1],b,c);a[2]=b+1|0;return 0}function
iM(a,d,c,b){var
e=c<0?1:0;if(e)var
f=e;else
var
h=b<0?1:0,f=h||((m(d)-b|0)<c?1:0);if(f)as(RD);var
g=a[2]+b|0;if(a[3]<g)r2(a,b);ed(d,c,a[1],a[2],b);a[2]=g;return 0}function
bj(a,c){var
b=m(c),d=a[2]+b|0;if(a[3]<d)r2(a,b);ed(c,0,a[1],a[2],b);a[2]=d;return 0}function
r3(a){return 5===a[2]?12:-6}function
Bf(a){return[0,0,aG(a)]}function
Bg(a,g){var
b=a1(a[2]),c=a[1]+g|0,d=b<c?1:0;if(d){var
e=aG(rX(b*2|0,c));kg(a[2],0,e,0,b);a[2]=e;var
f=0}else
var
f=d;return f}function
iN(a,b){Bg(a,1);ee(a[2],a[1],b);a[1]=a[1]+1|0;return 0}function
b$(a,c){var
b=m(c);Bg(a,b);eZ(c,0,a[2],a[1],b);a[1]=a[1]+b|0;return 0}function
Bh(a){return iH(a[2],0,a[1])}function
Bi(a){if(typeof
a==="number")switch(a){case
0:return RE;case
1:return RF;case
2:return RG;case
3:return RH;case
4:return RI;case
5:return RJ;default:return RK}else
switch(a[0]){case
0:return a[1];case
1:return a[1];default:return o(RL,iI(1,a[1]))}}function
r4(b,c){var
a=c;for(;;)if(typeof
a==="number")return 0;else
switch(a[0]){case
0:var
d=a[1];b$(b,RM);var
a=d;continue;case
1:var
e=a[1];b$(b,RN);var
a=e;continue;case
2:var
f=a[1];b$(b,RO);var
a=f;continue;case
3:var
g=a[1];b$(b,RP);var
a=g;continue;case
4:var
h=a[1];b$(b,RQ);var
a=h;continue;case
5:var
i=a[1];b$(b,RR);var
a=i;continue;case
6:var
j=a[1];b$(b,RS);var
a=j;continue;case
7:var
k=a[1];b$(b,RT);var
a=k;continue;case
8:var
l=a[2],m=a[1];b$(b,RU);r4(b,m);b$(b,RV);var
a=l;continue;case
9:var
n=a[3],o=a[1];b$(b,RW);r4(b,o);b$(b,RX);var
a=n;continue;case
10:var
p=a[1];b$(b,RY);var
a=p;continue;case
11:var
q=a[1];b$(b,RZ);var
a=q;continue;case
12:var
r=a[1];b$(b,R0);var
a=r;continue;case
13:var
s=a[1];b$(b,R1);var
a=s;continue;default:var
t=a[1];b$(b,R2);var
a=t;continue}}function
bH(a){if(typeof
a==="number")return 0;else
switch(a[0]){case
0:return[0,bH(a[1])];case
1:return[1,bH(a[1])];case
2:return[2,bH(a[1])];case
3:return[3,bH(a[1])];case
4:return[4,bH(a[1])];case
5:return[5,bH(a[1])];case
6:return[6,bH(a[1])];case
7:return[7,bH(a[1])];case
8:var
b=a[1];return[8,b,bH(a[2])];case
9:var
c=a[2],d=a[1];return[9,c,d,bH(a[3])];case
10:return[10,bH(a[1])];case
11:return[11,bH(a[1])];case
12:return[12,bH(a[1])];case
13:return[13,bH(a[1])];default:return[14,bH(a[1])]}}function
ca(a){if(typeof
a==="number"){var
s=function(a){return 0},t=function(a){return 0},u=function(a){return 0};return[0,function(a){return 0},u,t,s]}else
switch(a[0]){case
0:var
c=ca(a[1]),v=c[4],w=c[3],x=c[2],y=c[1],z=function(a){b(x,0);return 0};return[0,function(a){b(y,0);return 0},z,w,v];case
1:var
d=ca(a[1]),A=d[4],B=d[3],C=d[2],D=d[1],E=function(a){b(C,0);return 0};return[0,function(a){b(D,0);return 0},E,B,A];case
2:var
e=ca(a[1]),F=e[4],G=e[3],H=e[2],I=e[1],J=function(a){b(H,0);return 0};return[0,function(a){b(I,0);return 0},J,G,F];case
3:var
f=ca(a[1]),K=f[4],L=f[3],M=f[2],N=f[1],O=function(a){b(M,0);return 0};return[0,function(a){b(N,0);return 0},O,L,K];case
4:var
g=ca(a[1]),P=g[4],Q=g[3],R=g[2],S=g[1],T=function(a){b(R,0);return 0};return[0,function(a){b(S,0);return 0},T,Q,P];case
5:var
h=ca(a[1]),U=h[4],V=h[3],W=h[2],X=h[1],Y=function(a){b(W,0);return 0};return[0,function(a){b(X,0);return 0},Y,V,U];case
6:var
i=ca(a[1]),Z=i[4],_=i[3],$=i[2],aa=i[1],ab=function(a){b($,0);return 0};return[0,function(a){b(aa,0);return 0},ab,_,Z];case
7:var
j=ca(a[1]),ac=j[4],ad=j[3],ae=j[2],af=j[1],ag=function(a){b(ae,0);return 0};return[0,function(a){b(af,0);return 0},ag,ad,ac];case
8:var
k=ca(a[2]),ah=k[4],ai=k[3],aj=k[2],ak=k[1],al=function(a){b(aj,0);return 0};return[0,function(a){b(ak,0);return 0},al,ai,ah];case
9:var
am=a[2],an=a[1],l=ca(a[3]),ao=l[4],ap=l[3],aq=l[2],ar=l[1],m=ca(bN(bH(an),am)),as=m[4],at=m[3],au=m[2],av=m[1],aw=function(a){b(as,0);b(ao,0);return 0},ax=function(a){b(ap,0);b(at,0);return 0},ay=function(a){b(au,0);b(aq,0);return 0};return[0,function(a){b(ar,0);b(av,0);return 0},ay,ax,aw];case
10:var
n=ca(a[1]),az=n[4],aA=n[3],aB=n[2],aC=n[1],aD=function(a){b(aB,0);return 0};return[0,function(a){b(aC,0);return 0},aD,aA,az];case
11:var
o=ca(a[1]),aE=o[4],aF=o[3],aG=o[2],aH=o[1],aI=function(a){b(aG,0);return 0};return[0,function(a){b(aH,0);return 0},aI,aF,aE];case
12:var
p=ca(a[1]),aJ=p[4],aK=p[3],aL=p[2],aM=p[1],aN=function(a){b(aL,0);return 0};return[0,function(a){b(aM,0);return 0},aN,aK,aJ];case
13:var
q=ca(a[1]),aO=q[4],aP=q[3],aQ=q[2],aR=q[1],aS=function(a){b(aO,0);return 0},aT=function(a){b(aP,0);return 0},aU=function(a){b(aQ,0);return 0};return[0,function(a){b(aR,0);return 0},aU,aT,aS];default:var
r=ca(a[1]),aV=r[4],aW=r[3],aX=r[2],aY=r[1],aZ=function(a){b(aV,0);return 0},a0=function(a){b(aW,0);return 0},a1=function(a){b(aX,0);return 0};return[0,function(a){b(aY,0);return 0},a1,a0,aZ]}}function
bN(d,c){var
a=0;if(typeof
d==="number")if(typeof
c==="number")return 0;else
switch(c[0]){case
10:break;case
11:a=1;break;case
12:a=2;break;case
13:a=3;break;case
14:a=4;break;case
8:a=5;break;case
9:a=6;break;default:throw[0,B,R3]}else
switch(d[0]){case
0:var
e=0,t=d[1];if(typeof
c!=="number")switch(c[0]){case
0:return[0,bN(t,c[1])];case
8:a=5;e=1;break;case
9:a=6;e=1;break;case
10:e=1;break;case
11:a=1;e=1;break;case
12:a=2;e=1;break;case
13:a=3;e=1;break;case
14:a=4;e=1;break}if(!e)a=7;break;case
1:var
f=0,u=d[1];if(typeof
c!=="number")switch(c[0]){case
1:return[1,bN(u,c[1])];case
8:a=5;f=1;break;case
9:a=6;f=1;break;case
10:f=1;break;case
11:a=1;f=1;break;case
12:a=2;f=1;break;case
13:a=3;f=1;break;case
14:a=4;f=1;break}if(!f)a=7;break;case
2:var
g=0,v=d[1];if(typeof
c==="number")g=1;else
switch(c[0]){case
2:return[2,bN(v,c[1])];case
8:a=5;break;case
9:a=6;break;case
10:break;case
11:a=1;break;case
12:a=2;break;case
13:a=3;break;case
14:a=4;break;default:g=1}if(g)a=7;break;case
3:var
h=0,w=d[1];if(typeof
c==="number")h=1;else
switch(c[0]){case
3:return[3,bN(w,c[1])];case
8:a=5;break;case
9:a=6;break;case
10:break;case
11:a=1;break;case
12:a=2;break;case
13:a=3;break;case
14:a=4;break;default:h=1}if(h)a=7;break;case
4:var
i=0,x=d[1];if(typeof
c==="number")i=1;else
switch(c[0]){case
4:return[4,bN(x,c[1])];case
8:a=5;break;case
9:a=6;break;case
10:break;case
11:a=1;break;case
12:a=2;break;case
13:a=3;break;case
14:a=4;break;default:i=1}if(i)a=7;break;case
5:var
j=0,y=d[1];if(typeof
c==="number")j=1;else
switch(c[0]){case
5:return[5,bN(y,c[1])];case
8:a=5;break;case
9:a=6;break;case
10:break;case
11:a=1;break;case
12:a=2;break;case
13:a=3;break;case
14:a=4;break;default:j=1}if(j)a=7;break;case
6:var
k=0,z=d[1];if(typeof
c==="number")k=1;else
switch(c[0]){case
6:return[6,bN(z,c[1])];case
8:a=5;break;case
9:a=6;break;case
10:break;case
11:a=1;break;case
12:a=2;break;case
13:a=3;break;case
14:a=4;break;default:k=1}if(k)a=7;break;case
7:var
l=0,A=d[1];if(typeof
c==="number")l=1;else
switch(c[0]){case
7:return[7,bN(A,c[1])];case
8:a=5;break;case
9:a=6;break;case
10:break;case
11:a=1;break;case
12:a=2;break;case
13:a=3;break;case
14:a=4;break;default:l=1}if(l)a=7;break;case
8:var
m=0,C=d[2],D=d[1];if(typeof
c==="number")m=1;else
switch(c[0]){case
8:var
E=c[1],F=bN(C,c[2]);return[8,bN(D,E),F];case
10:break;case
11:a=1;break;case
12:a=2;break;case
13:a=3;break;case
14:a=4;break;default:m=1}if(m)throw[0,B,Sa];break;case
9:var
n=0,G=d[3],H=d[2],I=d[1];if(typeof
c==="number")n=1;else
switch(c[0]){case
8:a=5;break;case
9:var
J=c[3],K=c[2],L=c[1],s=ca(bN(bH(H),L)),M=s[4];b(s[2],0);b(M,0);return[9,I,K,bN(G,J)];case
10:break;case
11:a=1;break;case
12:a=2;break;case
13:a=3;break;case
14:a=4;break;default:n=1}if(n)throw[0,B,Sb];break;case
10:var
N=d[1];if(typeof
c!=="number"&&10===c[0])return[10,bN(N,c[1])];throw[0,B,Sc];case
11:var
o=0,O=d[1];if(typeof
c==="number")o=1;else
switch(c[0]){case
10:break;case
11:return[11,bN(O,c[1])];default:o=1}if(o)throw[0,B,Sd];break;case
12:var
p=0,P=d[1];if(typeof
c==="number")p=1;else
switch(c[0]){case
10:break;case
11:a=1;break;case
12:return[12,bN(P,c[1])];default:p=1}if(p)throw[0,B,Se];break;case
13:var
q=0,Q=d[1];if(typeof
c==="number")q=1;else
switch(c[0]){case
10:break;case
11:a=1;break;case
12:a=2;break;case
13:return[13,bN(Q,c[1])];default:q=1}if(q)throw[0,B,Sf];break;default:var
r=0,R=d[1];if(typeof
c==="number")r=1;else
switch(c[0]){case
10:break;case
11:a=1;break;case
12:a=2;break;case
13:a=3;break;case
14:return[14,bN(R,c[1])];default:r=1}if(r)throw[0,B,Sg]}switch(a){case
0:throw[0,B,R6];case
1:throw[0,B,R7];case
2:throw[0,B,R8];case
3:throw[0,B,R9];case
4:throw[0,B,R_];case
5:throw[0,B,R4];case
6:throw[0,B,R5];default:throw[0,B,R$]}}var
b1=[Q,Sh,aL(0)];function
mt(b,a){if(typeof
b==="number")return[0,0,a];else{if(0===b[0])return[0,[0,b[1],b[2]],a];if(typeof
a!=="number"&&2===a[0])return[0,[1,b[1]],a[1]];throw b1}}function
kl(e,b,d){var
a=mt(e,d);if(typeof
b==="number"){if(b){var
c=a[2];if(typeof
c!=="number"&&2===c[0])return[0,a[1],1,c[1]];throw b1}return[0,a[1],0,a[2]]}return[0,a[1],[0,b[1]],a[2]]}function
cG(c,d,a){if(typeof
c==="number")return[0,0,a3(d,a)];else
switch(c[0]){case
0:if(typeof
a!=="number"&&0===a[0]){var
g=cG(c[1],d,a[1]);return[0,[0,g[1]],g[2]]}break;case
1:if(typeof
a!=="number"&&1===a[0]){var
h=cG(c[1],d,a[1]);return[0,[1,h[1]],h[2]]}break;case
2:if(typeof
a!=="number"&&2===a[0]){var
i=cG(c[1],d,a[1]);return[0,[2,i[1]],i[2]]}break;case
3:if(typeof
a!=="number"&&3===a[0]){var
j=cG(c[1],d,a[1]);return[0,[3,j[1]],j[2]]}break;case
4:if(typeof
a!=="number"&&4===a[0]){var
k=cG(c[1],d,a[1]);return[0,[4,k[1]],k[2]]}break;case
5:if(typeof
a!=="number"&&5===a[0]){var
l=cG(c[1],d,a[1]);return[0,[5,l[1]],l[2]]}break;case
6:if(typeof
a!=="number"&&6===a[0]){var
m=cG(c[1],d,a[1]);return[0,[6,m[1]],m[2]]}break;case
7:if(typeof
a!=="number"&&7===a[0]){var
n=cG(c[1],d,a[1]);return[0,[7,n[1]],n[2]]}break;case
8:if(typeof
a!=="number"&&8===a[0]){var
o=a[1],w=a[2],x=c[2];if(cS([0,c[1]],[0,o]))throw b1;var
p=cG(x,d,w);return[0,[8,o,p[1]],p[2]]}break;case
9:if(typeof
a!=="number"&&9===a[0]){var
e=a[2],f=a[1],y=a[3],z=c[3],A=c[2],B=c[1],C=[0,bp(f)];if(cS([0,bp(B)],C))throw b1;var
D=[0,bp(e)];if(cS([0,bp(A)],D))throw b1;var
q=ca(bN(bH(f),e)),E=q[4];b(q[2],0);b(E,0);var
r=cG(bp(z),d,y),F=r[2];return[0,[9,f,e,bH(r[1])],F]}break;case
10:if(typeof
a!=="number"&&10===a[0]){var
s=cG(c[1],d,a[1]);return[0,[10,s[1]],s[2]]}break;case
11:if(typeof
a!=="number"&&11===a[0]){var
t=cG(c[1],d,a[1]);return[0,[11,t[1]],t[2]]}break;case
13:if(typeof
a!=="number"&&13===a[0]){var
u=cG(c[1],d,a[1]);return[0,[13,u[1]],u[2]]}break;case
14:if(typeof
a!=="number"&&14===a[0]){var
v=cG(c[1],d,a[1]);return[0,[14,v[1]],v[2]]}break}throw b1}function
a3(b,a){if(typeof
b==="number")return[0,0,a];else
switch(b[0]){case
0:if(typeof
a!=="number"&&0===a[0]){var
s=a3(b[1],a[1]);return[0,[0,s[1]],s[2]]}break;case
1:if(typeof
a!=="number"&&0===a[0]){var
t=a3(b[1],a[1]);return[0,[1,t[1]],t[2]]}break;case
2:var
aa=b[2],u=mt(b[1],a),e=u[2],ab=u[1];if(typeof
e!=="number"&&1===e[0]){var
v=a3(aa,e[1]);return[0,[2,ab,v[1]],v[2]]}throw b1;case
3:var
ac=b[2],w=mt(b[1],a),f=w[2],ad=w[1];if(typeof
f!=="number"&&1===f[0]){var
x=a3(ac,f[1]);return[0,[3,ad,x[1]],x[2]]}throw b1;case
4:var
ae=b[4],af=b[1],g=kl(b[2],b[3],a),h=g[3],ag=g[1];if(typeof
h!=="number"&&2===h[0]){var
ah=g[2],y=a3(ae,h[1]);return[0,[4,af,ag,ah,y[1]],y[2]]}throw b1;case
5:var
ai=b[4],aj=b[1],i=kl(b[2],b[3],a),j=i[3],ak=i[1];if(typeof
j!=="number"&&3===j[0]){var
al=i[2],z=a3(ai,j[1]);return[0,[5,aj,ak,al,z[1]],z[2]]}throw b1;case
6:var
am=b[4],an=b[1],k=kl(b[2],b[3],a),l=k[3],ao=k[1];if(typeof
l!=="number"&&4===l[0]){var
ap=k[2],A=a3(am,l[1]);return[0,[6,an,ao,ap,A[1]],A[2]]}throw b1;case
7:var
aq=b[4],ar=b[1],m=kl(b[2],b[3],a),n=m[3],as=m[1];if(typeof
n!=="number"&&5===n[0]){var
at=m[2],B=a3(aq,n[1]);return[0,[7,ar,as,at,B[1]],B[2]]}throw b1;case
8:var
au=b[4],av=b[1],o=kl(b[2],b[3],a),p=o[3],aw=o[1];if(typeof
p!=="number"&&6===p[0]){var
ax=o[2],C=a3(au,p[1]);return[0,[8,av,aw,ax,C[1]],C[2]]}throw b1;case
9:var
ay=b[2],D=mt(b[1],a),q=D[2],az=D[1];if(typeof
q!=="number"&&7===q[0]){var
E=a3(ay,q[1]);return[0,[9,az,E[1]],E[2]]}throw b1;case
10:var
F=a3(b[1],a);return[0,[10,F[1]],F[2]];case
11:var
aA=b[1],G=a3(b[2],a);return[0,[11,aA,G[1]],G[2]];case
12:var
aB=b[1],H=a3(b[2],a);return[0,[12,aB,H[1]],H[2]];case
13:if(typeof
a!=="number"&&8===a[0]){var
I=a[1],aC=a[2],aD=b[3],aE=b[1];if(cS([0,b[2]],[0,I]))throw b1;var
J=a3(aD,aC);return[0,[13,aE,I,J[1]],J[2]]}break;case
14:if(typeof
a!=="number"&&9===a[0]){var
K=a[1],aF=a[3],aG=b[3],aH=b[2],aI=b[1],aJ=[0,bp(K)];if(cS([0,bp(aH)],aJ))throw b1;var
L=a3(aG,bp(aF));return[0,[14,aI,K,L[1]],L[2]]}break;case
15:if(typeof
a!=="number"&&10===a[0]){var
M=a3(b[1],a[1]);return[0,[15,M[1]],M[2]]}break;case
16:if(typeof
a!=="number"&&11===a[0]){var
N=a3(b[1],a[1]);return[0,[16,N[1]],N[2]]}break;case
17:var
aK=b[1],O=a3(b[2],a);return[0,[17,aK,O[1]],O[2]];case
18:var
P=b[2],r=b[1];if(0===r[0]){var
T=r[1],aO=T[2],U=a3(T[1],a),aP=U[1],V=a3(P,U[2]);return[0,[18,[0,[0,aP,aO]],V[1]],V[2]]}var
W=r[1],aQ=W[2],X=a3(W[1],a),aR=X[1],Y=a3(P,X[2]);return[0,[18,[1,[0,aR,aQ]],Y[1]],Y[2]];case
19:if(typeof
a!=="number"&&13===a[0]){var
Q=a3(b[1],a[1]);return[0,[19,Q[1]],Q[2]]}break;case
20:if(typeof
a!=="number"&&1===a[0]){var
aL=b[2],aM=b[1],R=a3(b[3],a[1]);return[0,[20,aM,aL,R[1]],R[2]]}break;case
21:if(typeof
a!=="number"&&2===a[0]){var
aN=b[1],S=a3(b[2],a[1]);return[0,[21,aN,S[1]],S[2]]}break;case
23:var
d=b[2],c=b[1];if(typeof
c==="number")switch(c){case
0:return cV(c,d,a);case
1:return cV(c,d,a);case
2:if(typeof
a!=="number"&&14===a[0]){var
Z=a3(d,a[1]);return[0,[23,2,Z[1]],Z[2]]}throw b1;default:return cV(c,d,a)}else
switch(c[0]){case
0:return cV(c,d,a);case
1:return cV(c,d,a);case
2:return cV(c,d,a);case
3:return cV(c,d,a);case
4:return cV(c,d,a);case
5:return cV(c,d,a);case
6:return cV(c,d,a);case
7:return cV(c,d,a);case
8:return cV([8,c[1],c[2]],d,a);case
9:var
aS=c[1],_=cG(c[2],d,a),$=_[2];return[0,[23,[9,aS,_[1]],$[1]],$[2]];case
10:return cV(c,d,a);default:return cV(c,d,a)}}throw b1}function
cV(d,c,b){var
a=a3(c,b);return[0,[23,d,a[1]],a[2]]}function
cW(k,g,a){var
b=m(a),h=0<=g?k:0,d=cT(g);if(d<=b)return a;var
l=2===h?48:32,c=cF(d,l);switch(h){case
0:eZ(a,0,c,0,b);break;case
1:eZ(a,0,c,d-b|0,b);break;default:var
e=0;if(0<b){var
i=0;if(43!==F(a,0)&&45!==F(a,0)&&32!==F(a,0)){e=1;i=1}if(!i){ee(c,0,F(a,0));eZ(a,1,c,(d-b|0)+1|0,b-1|0)}}else
e=1;if(e){var
f=0;if(1<b&&48===F(a,0)){var
j=0;if(bV!==F(a,1)&&88!==F(a,1)){f=1;j=1}if(!j){ee(c,1,F(a,1));eZ(a,2,c,(d-b|0)+2|0,b-2|0)}}else
f=1;if(f)eZ(a,0,c,d-b|0,b)}}return bi(c)}function
iO(k,b){var
c=cT(k),a=m(b),d=F(b,0),e=0;if(58<=d){if(71<=d){if(!(5<d+lN>>>0))e=1}else
if(65<=d)e=1}else{var
f=0;if(32!==d)if(43<=d)switch(d+vG|0){case
5:if(a<(c+2|0)&&1<a){var
j=0;if(bV===F(b,1)||88===F(b,1))j=1;if(j){var
h=cF(c+2|0,48);ee(h,1,F(b,1));eZ(b,2,h,(c-a|0)+4|0,a-2|0);return bi(h)}}e=1;f=1;break;case
0:case
2:break;case
1:case
3:case
4:f=1;break;default:e=1;f=1}else
f=1;if(!f&&a<(c+1|0)){var
g=cF(c+1|0,48);ee(g,0,d);eZ(b,1,g,(c-a|0)+2|0,a-1|0);return bi(g)}}if(e&&a<c){var
i=cF(c,48);eZ(b,0,i,c-a|0,a);return bi(i)}return b}function
Si(k){var
j=0,B=m(k);for(;;){if(B<=j)var
p=k;else{var
o=aU(k,j)+oz|0,q=0;if(59<o>>>0){if(33<o-61>>>0)q=1}else
if(2===o)q=1;if(!q){var
j=j+1|0;continue}var
e=c_(k),a=[0,0],s=a1(e)-1|0,x=0;if(!(s<0)){var
i=x;for(;;){var
f=c$(e,i),g=0;if(32<=f){var
l=f+IY|0,r=0;if(58<l>>>0){if(93<=l)r=1}else
if(56<l-1>>>0){g=1;r=1}if(!r){var
n=1;g=2}}else
if(11<=f){if(13===f)g=1}else
if(8<=f)g=1;switch(g){case
0:var
n=4;break;case
1:var
n=2;break}a[1]=a[1]+n|0;var
A=i+1|0;if(s!==i){var
i=A;continue}break}}if(a[1]===a1(e))var
u=mo(e);else{var
b=aG(a[1]);a[1]=0;var
t=a1(e)-1|0,y=0;if(!(t<0)){var
h=y;for(;;){var
c=c$(e,h),d=0;if(35<=c)if(92===c)d=2;else
if(dL<=c)d=1;else
d=3;else
if(32<=c)if(34<=c)d=2;else
d=3;else
if(14<=c)d=1;else
switch(c){case
8:aZ(b,a[1],92);a[1]++;aZ(b,a[1],98);break;case
9:aZ(b,a[1],92);a[1]++;aZ(b,a[1],bX);break;case
10:aZ(b,a[1],92);a[1]++;aZ(b,a[1],aY);break;case
13:aZ(b,a[1],92);a[1]++;aZ(b,a[1],bF);break;default:d=1}switch(d){case
1:aZ(b,a[1],92);a[1]++;aZ(b,a[1],48+(c/aQ|0)|0);a[1]++;aZ(b,a[1],48+((c/10|0)%10|0)|0);a[1]++;aZ(b,a[1],48+(c%10|0)|0);break;case
2:aZ(b,a[1],92);a[1]++;aZ(b,a[1],c);break;case
3:aZ(b,a[1],c);break}a[1]++;var
z=h+1|0;if(t!==h){var
h=z;continue}break}}var
u=b}var
p=bi(u)}var
v=m(p),w=cF(v+2|0,34);ed(p,0,w,1,v);return bi(w)}}function
Bj(d,f){var
g=cT(f),e=S9[1];switch(d[2]){case
0:var
b=bE;break;case
1:var
b=bW;break;case
2:var
b=69;break;case
3:var
b=c8;break;case
4:var
b=71;break;case
5:var
b=e;break;case
6:var
b=dp;break;case
7:var
b=72;break;default:var
b=70}var
c=Bf(16);iN(c,37);switch(d[1]){case
0:break;case
1:iN(c,43);break;default:iN(c,32)}if(8<=d[2])iN(c,35);iN(c,46);b$(c,a(k+g));iN(c,b);return Bh(c)}function
mu(n,a){if(13<=n){var
g=[0,0],h=m(a)-1|0,o=0;if(!(h<0)){var
c=o;for(;;){if(!(9<aU(a,c)+fA>>>0))g[1]++;var
r=c+1|0;if(h!==c){var
c=r;continue}break}}var
i=g[1],j=aG(m(a)+((i-1|0)/3|0)|0),k=[0,0],d=function(a){ee(j,k[1],a);k[1]++;return 0},e=[0,((i-1|0)%3|0)+1|0],l=m(a)-1|0,p=0;if(!(l<0)){var
b=p;for(;;){var
f=aU(a,b);if(9<f+fA>>>0)d(f);else{if(0===e[1]){d(95);e[1]=3}e[1]+=-1;d(f)}var
q=b+1|0;if(l!==b){var
b=q;continue}break}}return bi(j)}return a}function
S_(b,c){switch(b){case
1:var
a=Sk;break;case
2:var
a=Sl;break;case
4:var
a=Sn;break;case
5:var
a=So;break;case
6:var
a=Sp;break;case
7:var
a=Sq;break;case
8:var
a=Sr;break;case
9:var
a=Ss;break;case
10:var
a=St;break;case
11:var
a=Su;break;case
0:case
13:var
a=Sj;break;case
3:case
14:var
a=Sm;break;default:var
a=Sv}return mu(b,rB(a,c))}function
S$(b,c){switch(b){case
1:var
a=SK;break;case
2:var
a=SL;break;case
4:var
a=SN;break;case
5:var
a=SO;break;case
6:var
a=SP;break;case
7:var
a=SQ;break;case
8:var
a=SR;break;case
9:var
a=SS;break;case
10:var
a=ST;break;case
11:var
a=SU;break;case
0:case
13:var
a=SJ;break;case
3:case
14:var
a=SM;break;default:var
a=SV}return mu(b,rB(a,c))}function
Ta(b,c){switch(b){case
1:var
a=SX;break;case
2:var
a=SY;break;case
4:var
a=S0;break;case
5:var
a=S1;break;case
6:var
a=S2;break;case
7:var
a=S3;break;case
8:var
a=S4;break;case
9:var
a=S5;break;case
10:var
a=S6;break;case
11:var
a=S7;break;case
0:case
13:var
a=SW;break;case
3:case
14:var
a=SZ;break;default:var
a=S8}return mu(b,rB(a,c))}function
Tb(b,c){switch(b){case
1:var
a=Sx;break;case
2:var
a=Sy;break;case
4:var
a=SA;break;case
5:var
a=SB;break;case
6:var
a=SC;break;case
7:var
a=SD;break;case
8:var
a=SE;break;case
9:var
a=SF;break;case
10:var
a=SG;break;case
11:var
a=SH;break;case
0:case
13:var
a=Sw;break;case
3:case
14:var
a=Sz;break;default:var
a=SI}return mu(b,a8q(a,c))}function
e2(b,e,a){function
f(d){switch(b[1]){case
0:var
c=45;break;case
1:var
c=43;break;default:var
c=32}return a8l(a,e,c)}function
j(c){var
b=ry(a);return 3===b?a<0.?Td:Te:4<=b?Tf:c}switch(b[2]){case
5:var
d=Ax(Bj(b,e),a),c=0,k=m(d);for(;;){if(c===k)var
i=0;else{var
g=F(d,c)-46|0,h=0;if(23<g>>>0){if(55===g)h=1}else
if(21<g-1>>>0)h=1;if(!h){var
c=c+1|0;continue}var
i=1}var
l=i?d:o(d,Tc);return j(l)}case
6:return f(0);case
7:return bi(A6(QU,c_(f(0))));case
8:return j(f(0));default:return Ax(Bj(b,e),a)}}function
lm(e,z,y,x){var
c=z,a=y,d=x;for(;;)if(typeof
d==="number")return b(c,a);else
switch(d[0]){case
0:var
A=d[1];return function(b){return ax(c,[5,a,b],A)};case
1:var
C=d[1];return function(b){var
e=0;if(40<=b)if(92===b)var
d=QN;else
if(dL<=b)e=1;else
e=2;else
if(32<=b)if(39<=b)var
d=QO;else
e=2;else
if(14<=b)e=1;else
switch(b){case
8:var
d=QP;break;case
9:var
d=QQ;break;case
10:var
d=QR;break;case
13:var
d=QS;break;default:e=1}switch(e){case
1:var
f=aG(4);aZ(f,0,92);aZ(f,1,48+(b/aQ|0)|0);aZ(f,2,48+((b/10|0)%10|0)|0);aZ(f,3,48+(b%10|0)|0);var
d=bi(f);break;case
2:var
g=aG(1);aZ(g,0,b);var
d=bi(g);break}var
h=m(d),i=cF(h+2|0,39);ed(d,0,i,1,h);return ax(c,[4,a,bi(i)],C)};case
2:var
D=d[2],E=d[1];return r5(c,a,D,E,function(a){return a});case
3:return r5(c,a,d[2],d[1],Si);case
4:return mv(c,a,d[4],d[2],d[3],S_,d[1]);case
5:return mv(c,a,d[4],d[2],d[3],S$,d[1]);case
6:return mv(c,a,d[4],d[2],d[3],Ta,d[1]);case
7:return mv(c,a,d[4],d[2],d[3],Tb,d[1]);case
8:var
h=d[4],i=d[3],j=d[2],g=d[1];if(typeof
j==="number"){if(typeof
i==="number")return i?function(d,b){return ax(c,[4,a,e2(g,d,b)],h)}:function(b){return ax(c,[4,a,e2(g,r3(g),b)],h)};var
V=i[1];return function(b){return ax(c,[4,a,e2(g,V,b)],h)}}else{if(0===j[0]){var
o=j[2],p=j[1];if(typeof
i==="number")return i?function(d,b){return ax(c,[4,a,cW(p,o,e2(g,d,b))],h)}:function(b){return ax(c,[4,a,cW(p,o,e2(g,r3(g),b))],h)};var
W=i[1];return function(b){return ax(c,[4,a,cW(p,o,e2(g,W,b))],h)}}var
q=j[1];if(typeof
i==="number")return i?function(e,d,b){return ax(c,[4,a,cW(q,e,e2(g,d,b))],h)}:function(d,b){return ax(c,[4,a,cW(q,d,e2(g,r3(g),b))],h)};var
Y=i[1];return function(d,b){return ax(c,[4,a,cW(q,d,e2(g,Y,b))],h)}}case
9:return r5(c,a,d[2],d[1],rQ);case
10:var
a=[7,a],d=d[1];continue;case
11:var
a=[2,a,d[1]],d=d[2];continue;case
12:var
a=[3,a,d[1]],d=d[2];continue;case
13:var
F=d[3],G=d[2],r=Bf(16);r4(r,G);var
w=Bh(r);return function(b){return ax(c,[4,a,w],F)};case
14:var
H=d[3],I=d[2];return function(d){var
e=d[1],b=a3(e,bp(bH(I)));if(typeof
b[2]==="number")return ax(c,a,be(b[1],H));throw b1};case
15:var
J=d[1];return function(d,b){return ax(c,[6,a,function(a){return n(d,a,b)}],J)};case
16:var
K=d[1];return function(b){return ax(c,[6,a,b],K)};case
17:var
a=[0,a,d[1]],d=d[2];continue;case
18:var
l=d[1];if(0===l[0]){var
L=d[2],M=l[1][1],N=0,c=function(b,c,d){return function(a){return ax(c,[1,b,[0,a]],d)}}(a,c,L),a=N,d=M;continue}var
O=d[2],P=l[1][1],Q=0,c=function(b,c,d){return function(a){return ax(c,[1,b,[1,a]],d)}}(a,c,O),a=Q,d=P;continue;case
19:throw[0,B,Th];case
20:var
R=d[3],S=[8,a,Ti];return function(a){return ax(c,S,R)};case
21:var
T=d[2];return function(b){return ax(c,[4,a,rB(Tj,b)],T)};case
22:var
U=d[1];return function(b){return ax(c,[5,a,b],U)};case
23:var
f=d[2],k=d[1];if(typeof
k==="number")switch(k){case
0:return e<50?aX(e+1|0,c,a,f):X(aX,[0,c,a,f]);case
1:return e<50?aX(e+1|0,c,a,f):X(aX,[0,c,a,f]);case
2:throw[0,B,Tk];default:return e<50?aX(e+1|0,c,a,f):X(aX,[0,c,a,f])}else
switch(k[0]){case
0:return e<50?aX(e+1|0,c,a,f):X(aX,[0,c,a,f]);case
1:return e<50?aX(e+1|0,c,a,f):X(aX,[0,c,a,f]);case
2:return e<50?aX(e+1|0,c,a,f):X(aX,[0,c,a,f]);case
3:return e<50?aX(e+1|0,c,a,f):X(aX,[0,c,a,f]);case
4:return e<50?aX(e+1|0,c,a,f):X(aX,[0,c,a,f]);case
5:return e<50?aX(e+1|0,c,a,f):X(aX,[0,c,a,f]);case
6:return e<50?aX(e+1|0,c,a,f):X(aX,[0,c,a,f]);case
7:return e<50?aX(e+1|0,c,a,f):X(aX,[0,c,a,f]);case
8:return e<50?aX(e+1|0,c,a,f):X(aX,[0,c,a,f]);case
9:var
v=k[2];return e<50?uy(e+1|0,c,a,v,f):X(uy,[0,c,a,v,f]);case
10:return e<50?aX(e+1|0,c,a,f):X(aX,[0,c,a,f]);default:return e<50?aX(e+1|0,c,a,f):X(aX,[0,c,a,f])}default:var
s=d[3],t=d[1],u=b(d[2],0);return e<50?ux(e+1|0,c,a,s,t,u):X(ux,[0,c,a,s,t,u])}}function
uy(e,d,c,a,b){if(typeof
a==="number")return e<50?aX(e+1|0,d,c,b):X(aX,[0,d,c,b]);else
switch(a[0]){case
0:var
f=a[1];return function(a){return dc(d,c,f,b)};case
1:var
g=a[1];return function(a){return dc(d,c,g,b)};case
2:var
h=a[1];return function(a){return dc(d,c,h,b)};case
3:var
i=a[1];return function(a){return dc(d,c,i,b)};case
4:var
j=a[1];return function(a){return dc(d,c,j,b)};case
5:var
k=a[1];return function(a){return dc(d,c,k,b)};case
6:var
l=a[1];return function(a){return dc(d,c,l,b)};case
7:var
m=a[1];return function(a){return dc(d,c,m,b)};case
8:var
n=a[2];return function(a){return dc(d,c,n,b)};case
9:var
o=a[3],p=a[2],q=bN(bH(a[1]),p);return function(a){return dc(d,c,cq(q,o),b)};case
10:var
r=a[1];return function(e,a){return dc(d,c,r,b)};case
11:var
s=a[1];return function(a){return dc(d,c,s,b)};case
12:var
t=a[1];return function(a){return dc(d,c,t,b)};case
13:throw[0,B,Tl];default:throw[0,B,Tm]}}function
aX(d,b,e,a){var
c=[8,e,Tn];return d<50?lm(d+1|0,b,c,a):X(lm,[0,b,c,a])}function
ux(h,c,f,a,e,d){if(e){var
i=e[1];return function(e){return Tg(c,f,a,i,b(d,e))}}var
g=[4,f,d];return h<50?lm(h+1|0,c,g,a):X(lm,[0,c,g,a])}function
ax(a,b,c){return kb(lm(0,a,b,c))}function
dc(a,b,c,d){return kb(uy(0,a,b,c,d))}function
Tg(a,b,c,d,e){return kb(ux(0,a,b,c,d,e))}function
r5(f,e,d,a,c){if(typeof
a==="number")return function(a){return ax(f,[4,e,b(c,a)],d)};else{if(0===a[0]){var
g=a[2],h=a[1];return function(a){return ax(f,[4,e,cW(h,g,b(c,a))],d)}}var
i=a[1];return function(g,a){return ax(f,[4,e,cW(i,g,b(c,a))],d)}}}function
mv(f,e,d,g,c,b,a){if(typeof
g==="number"){if(typeof
c==="number")return c?function(g,c){return ax(f,[4,e,iO(g,n(b,a,c))],d)}:function(c){return ax(f,[4,e,n(b,a,c)],d)};var
k=c[1];return function(c){return ax(f,[4,e,iO(k,n(b,a,c))],d)}}else{if(0===g[0]){var
h=g[2],i=g[1];if(typeof
c==="number")return c?function(g,c){return ax(f,[4,e,cW(i,h,iO(g,n(b,a,c)))],d)}:function(c){return ax(f,[4,e,cW(i,h,n(b,a,c))],d)};var
l=c[1];return function(c){return ax(f,[4,e,cW(i,h,iO(l,n(b,a,c)))],d)}}var
j=g[1];if(typeof
c==="number")return c?function(h,g,c){return ax(f,[4,e,cW(j,h,iO(g,n(b,a,c)))],d)}:function(g,c){return ax(f,[4,e,cW(j,g,n(b,a,c))],d)};var
m=c[1];return function(g,c){return ax(f,[4,e,cW(j,g,iO(m,n(b,a,c)))],d)}}}function
e3(c,f){var
a=f;for(;;)if(typeof
a==="number")return 0;else
switch(a[0]){case
0:var
g=a[1],h=Bi(a[2]);e3(c,g);return eV(c,h);case
1:var
d=a[2],e=a[1];if(0===d[0]){var
i=d[1];e3(c,e);eV(c,To);var
a=i;continue}var
j=d[1];e3(c,e);eV(c,Tp);var
a=j;continue;case
6:var
m=a[2];e3(c,a[1]);return b(m,c);case
7:e3(c,a[1]);return cR(c);case
8:var
n=a[2];e3(c,a[1]);return as(n);case
2:case
4:var
k=a[2];e3(c,a[1]);return eV(c,k);default:var
l=a[2];e3(c,a[1]);return mg(c,l)}}function
e4(c,f){var
a=f;for(;;)if(typeof
a==="number")return 0;else
switch(a[0]){case
0:var
g=a[1],h=Bi(a[2]);e4(c,g);return bj(c,h);case
1:var
d=a[2],e=a[1];if(0===d[0]){var
i=d[1];e4(c,e);bj(c,Tq);var
a=i;continue}var
j=d[1];e4(c,e);bj(c,Tr);var
a=j;continue;case
6:var
m=a[2];e4(c,a[1]);return bj(c,b(m,0));case
7:var
a=a[1];continue;case
8:var
n=a[2];e4(c,a[1]);return as(n);case
2:case
4:var
k=a[2];e4(c,a[1]);return bj(c,k);default:var
l=a[2];e4(c,a[1]);return s(c,l)}}function
Ts(a){if(S(a,Tt))return Tu;var
g=m(a);function
i(e){var
d=Tv[1],c=aN(ak);return b(ax(function(a){e4(c,a);return _(az(c))},0,d),a)}function
j(d){var
b=d;for(;;){if(b===g)return b;var
c=F(a,b);if(9!==c&&32!==c)return b;var
b=b+1|0;continue}}function
q(d,c){var
b=c;for(;;){if(b===g)return b;if(25<F(a,b)+lN>>>0)return b;var
b=b+1|0;continue}}function
r(f,e){var
b=e;for(;;){if(b===g)return b;var
c=F(a,b),d=0;if(48<=c){if(!(58<=c))d=1}else
if(45===c)d=1;if(d){var
b=b+1|0;continue}return b}}var
h=j(0),n=q(h,h),e=R(a,h,n-h|0),f=j(n),k=r(f,f);if(f===k)var
l=0;else
try{var
s=aE(R(a,f,k-f|0)),l=s}catch(a){a=d(a);if(a[1]!==$)throw a;var
l=i(0)}if(j(k)!==g)i(0);var
p=0;if(c(e,Tw)&&c(e,Tx))var
o=c(e,Ty)?c(e,Tz)?c(e,TA)?c(e,TB)?i(0):1:2:3:0;else
p=1;if(p)var
o=4;return[0,l,o]}function
r6(d,c){var
a=c[1],b=0;return ax(function(a){e3(d,a);return 0},b,a)}function
eh(a){return r6(ke,a)}function
K(a){return r6(da,a)}function
ae(b){var
a=b[1];return ax(function(b){var
a=aN(64);e4(a,b);return az(a)},0,a)}var
r7=[0,0];function
r9(d,c){var
a=d[1+c];return 1-(typeof
a==="number"?1:0)?mh(a)===dM?b(ae(TC),a):mh(a)===fU?kd(a):TD:b(ae(TE),a)}function
Bk(b,a){if(b.length-1<=a)return TF;var
c=Bk(b,a+1|0),d=r9(b,a);return n(ae(TG),d,c)}function
aR(a){function
q(f){var
c=f;for(;;){if(c){var
g=c[2],h=c[1];try{var
e=0,d=b(h,a);e=1}catch(a){}if(e&&d)return[0,d[1]];var
c=g;continue}return 0}}var
h=q(r7[1]);if(h)return h[1];if(a===rP)return TL;if(a===AO)return TM;if(a[1]===AN){var
d=a[2],i=d[3],r=d[2],s=d[1];return ln(ae(r8),s,r,i,i+5|0,TN)}if(a[1]===B){var
e=a[2],j=e[3],t=e[2],u=e[1];return ln(ae(r8),u,t,j,j+6|0,TO)}if(a[1]===AP){var
f=a[2],k=f[3],v=f[2],w=f[1];return ln(ae(r8),w,v,k,k+6|0,TP)}if(0===mh(a)){var
g=a.length-1,x=a[1][1];if(2<g>>>0)var
l=Bk(a,2),m=r9(a,1),c=n(ae(TH),m,l);else
switch(g){case
0:var
c=TI;break;case
1:var
c=TJ;break;default:var
p=r9(a,1),c=b(ae(TK),p)}return o(x,c)}return a[1]}function
r_(u,t){var
e=a7_(t),g=e.length-1-1|0,q=0;if(!(g<0)){var
c=q;for(;;){var
a=p(e,c)[1+c],f=function(a){return function(b){return b?0===a?TQ:TR:0===a?TS:TT}}(c);if(0===a[0])var
h=a[5],i=a[4],j=a[3],k=a[6]?TU:TW,l=a[2],m=a[7],n=f(a[1]),d=[0,Gt(ae(TV),n,m,l,k,j,i,h)];else
if(a[1])var
d=0;else
var
o=f(0),d=[0,b(ae(TX),o)];if(d){var
r=d[1];b(r6(u,TY),r)}var
s=c+1|0;if(g!==c){var
c=s;continue}break}}return 0}function
mw(c){for(;;){var
a=r7[1],b=1-rO(r7,a,[0,c,a]);if(b)continue;return b}}var
T0=TZ.slice();function
T1(e,d){var
f=aR(e);b(K(T2),f);r_(da,d);var
a=a8F(0);if(a<0){var
c=cT(a);rT(p(T0,c)[1+c])}return cR(da)}var
T3=[0];AJ(a(Ko),function(f,j){try{try{var
c=j?T3:P0(0);try{mn(0)}catch(a){}try{var
a=T1(f,c),e=a}catch(a){a=d(a);var
h=aR(f);b(K(T5),h);r_(da,c);var
i=aR(a);b(K(T6),i);r_(da,P0(0));var
e=cR(da)}var
g=e}catch(a){a=d(a);if(a!==rP)throw a;var
g=rT(T4)}return g}catch(a){return 0}});var
T8=[Q,T7,aL(0)];mw(function(a){return a[1]===T8?[0,o(T9,aR(a[2]))]:0});function
dX(a){return a8E(a,0,m(a))}function
Bl(d,h){var
i=0===h.length-1?[0,0]:h,j=i.length-1,b=0;for(;;){p(d[1],b)[1+b]=b;var
x=b+1|0;if(54!==b){var
b=x;continue}var
g=[0,T_],l=54+rX(55,j)|0,t=0;if(!(l<0)){var
c=t;for(;;){var
e=c%55|0,m=iD(c,j),u=p(i,m)[1+m];g[1]=dX(o(g[1],a(k+u)));var
f=g[1],n=F(f,3)<<24,q=F(f,2)<<16,r=F(f,1)<<8,s=((F(f,0)+r|0)+q|0)+n|0,v=(p(d[1],e)[1+e]^s)&l5;p(d[1],e)[1+e]=v;var
w=c+1|0;if(l!==c){var
c=w;continue}break}}d[2]=0;return 0}}function
mx(a){a[2]=(a[2]+1|0)%55|0;var
b=a[2],c=p(a[1],b)[1+b],d=(a[2]+24|0)%55|0,e=(p(a[1],d)[1+d]+(c^(c>>>25|0)&31)|0)&l5,f=a[2];p(a[1],f)[1+f]=e;return e}var
my=[0,Ua.slice(),0];function
r$(a){if(!(l5<a)&&0<a)for(;;){var
b=mx(my),c=iD(b,a);if(((l5-a|0)+1|0)<(b-c|0))continue;return c}return as(T$)}function
sa(b){var
a=mx(my);return(a/Oz+mx(my))/Oz*b}function
Ub(a){return Bl(my,Qi(0))}function
mz(a){var
b=a.length-1<4?1:0,c=b||(a[4]<0?1:0);return c}function
e5(a){a[4]=-a[4]|0;return 0}try{var
a7V=mi(a7U),Bn=a7V}catch(a){a=d(a);if(a!==J)throw a;try{var
a7T=mi(a7S),Bm=a7T}catch(a){a=d(a);if(a!==J)throw a;var
Bm=Uc}var
Bn=Bm}var
Ud=mp(Bn,82),mA=[d5,function(b){var
a=[0,aS(55,0),0];Bl(a,Qi(0));return a}];function
aV(b,e){var
f=b?b[1]:Ud,a=16;for(;;){if(!(e<=a)&&!(rW<(a*2|0))){var
a=a*2|0;continue}if(f)var
c=mh(mA),g=cM===c?mA[1]:d5===c?Rw(mA):mA,d=mx(g);else
var
d=0;return[0,0,aS(a,0),d,a]}}function
sb(a){var
b=0<a[1]?1:0;return b?(a[1]=0,A$(a[2],0,a[2].length-1,0)):b}function
Ue(a){var
b=a[2].length-1;if(4<=a.length-1&&b!==cT(a[4])){a[1]=0;a[2]=aS(cT(a[4]),0);return 0}return sb(a)}function
Uf(b){if(b){var
c=b[3],g=[0,b[1],b[2],c],d=g,a=c;for(;;){if(a){var
e=a[3],f=[0,a[1],a[2],e];d[3]=f;var
d=f,a=e;continue}return g}}return 0}function
Bo(a){var
b=a[4],c=a[3],d=e0(Uf,a[2]);return[0,a[1],d,c,b]}function
Ug(a){return a[1]}function
mB(B,f){var
i=f[2],t=(i.length-1)*2|0,u=t<rW?1:0;if(u){var
j=aS(t,0),k=1-mz(f);f[2]=j;var
l=j.length-1,g=aS(l,0),o=i.length-1-1|0,C=b(B,f),x=0;if(!(o<0)){var
e=x;a:for(;;){var
a=p(i,e)[1+e];for(;;){if(a){var
m=a[1],v=a[2],w=a[3],h=k?a:[0,m,v,0],c=b(C,m),n=p(g,c)[1+c];if(n)n[3]=h;else
p(j,c)[1+c]=h;p(g,c)[1+c]=h;var
a=w;continue}var
A=e+1|0;if(o!==e){var
e=A;continue a}break}break}}if(k){var
q=l-1|0,y=0;if(!(q<0)){var
d=y;for(;;){var
s=p(g,d)[1+d];if(s)s[3]=0;var
z=d+1|0;if(q!==d){var
d=z;continue}break}}var
r=0}else
var
r=k;return r}return u}function
cb(h,a){function
i(b){var
a=b;for(;;){if(a){var
c=a[3];n(h,a[1],a[2]);var
a=c;continue}return 0}}var
c=mz(a);if(1-c)e5(a);try{var
e=a[2],f=e.length-1-1|0,j=0;if(!(f<0)){var
b=j;for(;;){i(p(e,b)[1+b]);var
l=b+1|0;if(f!==b){var
b=l;continue}break}}var
g=1-c,k=g?e5(a):g;return k}catch(b){b=d(b);if(c)throw b;e5(a);throw b}}function
Uh(i,d,c,h,g){var
b=h,a=g;for(;;){if(a){var
e=a[3],f=n(i,a[1],a[2]);if(f){var
j=f[1];if(b)b[3]=a;else
p(d[2],c)[1+c]=a;a[2]=j;var
b=a,a=e;continue}d[1]=d[1]-1|0;var
a=e;continue}return b?(b[3]=0,0):(p(d[2],c)[1+c]=0,0)}}function
Ui(g,a){var
h=a[2],c=mz(a);if(1-c)e5(a);try{var
e=h.length-1-1|0,i=0;if(!(e<0)){var
b=i;for(;;){Uh(g,a,b,0,p(a[2],b)[1+b]);var
k=b+1|0;if(e!==b){var
b=k;continue}break}}var
f=1-c,j=f?e5(a):f;return j}catch(b){b=d(b);if(c)throw b;e5(a);throw b}}function
Uj(i,a,h){function
j(d,c){var
a=d,b=c;for(;;){if(a){var
e=a[3],f=I(i,a[1],a[2],b),a=e,b=f;continue}return b}}var
c=mz(a);if(1-c)e5(a);try{var
f=a[2],e=[0,h],g=f.length-1-1|0,k=0;if(!(g<0)){var
b=k;for(;;){var
m=e[1];e[1]=j(p(f,b)[1+b],m);var
n=b+1|0;if(g!==b){var
b=n;continue}break}}if(1-c)e5(a);var
l=e[1];return l}catch(b){b=d(b);if(c)throw b;e5(a);throw b}}function
Bp(d,c){var
b=d,a=c;for(;;){if(a){var
b=b+1|0,a=a[3];continue}return b}}function
Uk(b){var
g=b[2],c=[0,0],e=g.length-1-1|0,h=0;if(!(e<0)){var
a=h;for(;;){var
i=c[1];c[1]=rX(i,Bp(0,g[1+a]));var
j=a+1|0;if(e!==a){var
a=j;continue}break}}var
f=c[1],d=aS(f+1|0,0),k=b[2];ki(function(b){var
a=Bp(0,b);d[1+a]=p(d,a)[1+a]+1|0;return 0},k);return[0,b[1],b[2].length-1,f,d]}function
sc(a){var
c=a[2];function
d(f,e,k){var
a=f,b=e;for(;;){if(b){var
g=b[1],h=b[2],i=b[3];return[0,[0,g,h],function(b){return d(a,i,b)}]}if(a===c.length-1)return 0;var
j=p(c,a)[1+a],a=a+1|0,b=j;continue}}var
b=0,e=0;return function(a){return d(e,b,a)}}function
Ul(a){var
b=sc(a);function
c(a){return a[1]}return function(a){return rV(c,b,a)}}function
Um(a){var
b=sc(a);function
c(a){return a[2]}return function(a){return rV(c,b,a)}}function
ga(a,b){return 4<=a.length-1?P2(10,aQ,a[3],b)&(a[2].length-1-1|0):as(Uo)}function
aO(a,c,e){var
b=ga(a,c),f=[0,c,e,p(a[2],b)[1+b]];p(a[2],b)[1+b]=f;a[1]=a[1]+1|0;var
d=a[2].length-1<<1<a[1]?1:0;return d?mB(ga,a):d}function
iP(b,f){var
c=ga(b,f),d=0,a=p(b[2],c)[1+c];for(;;){if(a){var
e=a[3];if(0===bY(a[1],f)){b[1]=b[1]-1|0;return d?(d[3]=e,0):(p(b[2],c)[1+c]=e,0)}var
d=a,a=e;continue}return 0}}function
an(f,b){var
g=ga(f,b),c=p(f[2],g)[1+g];if(c){var
d=c[3],j=c[2];if(0===bY(b,c[1]))return j;if(d){var
e=d[3],k=d[2];if(0===bY(b,d[1]))return k;if(e){var
l=e[2],m=e[3];if(0===bY(b,e[1]))return l;var
a=m;for(;;){if(a){var
h=a[2],i=a[3];if(0===bY(b,a[1]))return h;var
a=i;continue}throw J}}throw J}throw J}throw J}function
sd(a,b){function
c(e){var
a=e;for(;;){if(a){var
d=a[3],f=a[2];if(0===bY(a[1],b))return[0,f,c(d)];var
a=d;continue}return 0}}var
d=ga(a,b);return c(p(a[2],d)[1+d])}function
gb(a,c,f){var
d=ga(a,c),g=p(a[2],d)[1+d],b=g;for(;;){if(b){var
j=b[3];if(0!==bY(b[1],c)){var
b=j;continue}b[1]=c;b[2]=f;var
e=0}else
var
e=1;if(e){p(a[2],d)[1+d]=[0,c,f,g];a[1]=a[1]+1|0;var
h=a[2].length-1<<1<a[1]?1:0;if(h)return mB(ga,a);var
i=h}else
var
i=e;return i}}function
gc(c,b){var
e=ga(c,b),a=p(c[2],e)[1+e];for(;;){if(a){var
f=a[3],d=0===bY(a[1],b)?1:0;if(d)return d;var
a=f;continue}return 0}}var
se=[Q,Up,aL(0)],mC=0,Bq=-1;function
km(a,b){a[13]=a[13]+b[3]|0;return ms(b,a[28])}var
Br=1000000010;function
sf(b,a){return I(b[17],a,0,m(a))}function
mD(a){return b(a[19],0)}function
Bs(a,c,b){a[9]=a[9]-c|0;sf(a,b);a[11]=0;return 0}function
mE(d,a){var
b=c(a,Uq);return b?Bs(d,m(a),a):b}function
hk(a,c,d){var
e=c[3],f=c[2];mE(a,c[1]);mD(a);a[11]=1;a[10]=A3(a[8],(a[6]-d|0)+f|0);a[9]=a[6]-a[10]|0;b(a[21],a[10]);return mE(a,e)}function
Bt(b,a){return hk(b,Ur,a)}function
iQ(a,c){var
d=c[2],e=c[3];mE(a,c[1]);a[9]=a[9]-d|0;b(a[20],d);return mE(a,e)}function
Us(a,j,c){if(typeof
c==="number")switch(c){case
0:var
t=iL(a[3]);if(t){var
u=t[1][1],v=function(b,a){if(a){var
c=a[1],d=a[2];return P5(b,c)?[0,b,a]:[0,c,v(b,d)]}return[0,b,0]};u[1]=v(a[6]-a[9]|0,u[1]);return 0}return 0;case
1:iK(a[2]);return 0;case
2:iK(a[3]);return 0;case
3:var
w=iL(a[2]);return w?Bt(a,w[1][2]):mD(a);case
4:var
x=a[10]!==(a[6]-a[9]|0)?1:0;if(x){var
f=a[28],h=f[2];if(h){var
o=h[1];if(h[2]){var
K=h[2];f[1]=f[1]-1|0;f[2]=K;var
i=[0,o]}else{r1(f);var
i=[0,o]}}else
var
i=0;if(i){var
s=i[1],M=s[1];a[12]=a[12]-s[3]|0;a[9]=a[9]+M|0;return 0}return 0}return x;default:var
y=iK(a[5]);return y?sf(a,b(a[25],y[1])):0}else
switch(c[0]){case
0:return Bs(a,j,c[1]);case
1:var
d=c[2],g=c[1],z=d[1],N=d[2],A=iL(a[2]);if(A){var
B=A[1],e=B[2];switch(B[1]){case
0:return iQ(a,g);case
1:return hk(a,d,e);case
2:return hk(a,d,e);case
3:return a[9]<(j+m(z)|0)?hk(a,d,e):iQ(a,g);case
4:return a[11]?iQ(a,g):a[9]<(j+m(z)|0)?hk(a,d,e):((a[6]-e|0)+N|0)<a[10]?hk(a,d,e):iQ(a,g);default:return iQ(a,g)}}return 0;case
2:var
l=a[6]-a[9]|0,O=c[2],P=c[1],C=iL(a[3]);if(C){var
D=C[1][1],E=D[1];if(E){var
k=D[1],Q=E[1];for(;;){if(k){var
F=k[1],R=k[2];if(!(l<=F)){var
k=R;continue}var
G=F}else
var
G=Q;var
n=G;break}}else
var
n=l;var
H=n-l|0;return 0<=H?iQ(a,[0,Uu,H+P|0,Ut]):hk(a,[0,Uw,n+O|0,Uv],a[6])}return 0;case
3:var
I=c[2],S=c[1];if(a[8]<(a[6]-a[9]|0)){var
p=iL(a[2]);if(p){var
q=p[1],r=q[2],L=q[1];if(a[9]<r&&!(3<L-1>>>0))Bt(a,r)}else
mD(a)}var
T=a[9]-S|0,U=1===I?1:a[9]<j?I:5;return hj([0,U,T],a[2]);case
4:return hj(c[1],a[3]);default:var
J=c[1];sf(a,b(a[24],J));return hj(J,a[5])}}function
Bu(a){for(;;){var
d=a[28][2],e=d?[0,d[1]]:0;if(e){var
b=e[1],c=b[1],j=0<=c?1:0,g=b[3],h=b[2],i=a[13]-a[12]|0,f=j||(a[9]<=i?1:0);if(f){Be(a[28]);var
k=0<=c?c:Br;Us(a,k,h);a[12]=g+a[12]|0;continue}return f}return 0}}function
Bv(a,b){km(a,b);return Bu(a)}function
Bw(c,a,b){return Bv(c,[0,a,[0,b],a])}function
sg(a){kk(a);return hj([0,-1,[0,Bq,Ux,0]],a)}function
sh(a,c){var
d=iL(a[1]);if(d){var
e=d[1],b=e[2],f=b[1];if(e[1]<a[12])return sg(a[1]);var
g=b[2];if(typeof
g!=="number")switch(g[0]){case
3:var
h=1-c,j=h?(b[1]=a[13]+f|0,iK(a[1]),0):h;return j;case
1:case
2:var
i=c?(b[1]=a[13]+f|0,iK(a[1]),0):c;return i}return 0}return 0}function
Bx(a,c,b){km(a,b);if(c)sh(a,1);return hj([0,a[13],b],a[1])}function
By(a,e,d){a[14]=a[14]+1|0;if(a[14]<a[15])return Bx(a,0,[0,-a[13]|0,[3,e,d],0]);var
b=a[14]===a[15]?1:0;if(b){var
c=a[16];return Bw(a,m(c),c)}return b}function
Bz(a,d){var
b=1<a[14]?1:0;if(b){if(a[14]<a[15]){km(a,[0,mC,1,0]);sh(a,1);sh(a,0)}a[14]=a[14]-1|0;var
c=0}else
var
c=b;return c}function
BA(a,f){if(a[23])km(a,[0,mC,5,0]);var
c=a[22];if(c){var
d=iK(a[4]);if(d)return b(a[27],d[1]);var
e=0}else
var
e=c;return e}function
si(a,d){var
b=a[4];function
c(b){return BA(a,0)}x(c,b[1]);for(;;){if(1<a[14]){Bz(a,0);continue}a[13]=Br;Bu(a);if(d)mD(a);a[12]=1;a[13]=1;r1(a[28]);sg(a[1]);kk(a[2]);kk(a[3]);kk(a[4]);kk(a[5]);a[10]=0;a[14]=0;a[9]=a[6];return By(a,0,3)}}function
sj(a,d,c){var
b=a[14]<a[15]?1:0;return b?Bw(a,d,c):b}function
BB(c,b,a){return sj(c,b,a)}function
cX(b,a){return BB(b,m(a),a)}function
kn(b,a){return BB(b,1,iI(1,a))}function
ko(a,c){si(a,0);return b(a[18],0)}var
BC=iI(80,32);function
BD(b,d){var
a=d;for(;;){var
c=0<a?1:0;if(c){if(80<a){I(b[17],BC,0,80);var
a=a-80|0;continue}return I(b[17],BC,0,a)}return c}}function
UD(a){return a[1]===se?o(UF,o(a[2],UE)):UG}function
UH(a){return a[1]===se?o(UJ,o(a[2],UI)):UK}function
UL(a){return 0}function
UM(a){return 0}function
BE(i,h){function
j(a){return 0}function
k(a){return 0}function
l(a){return 0}var
c=Bd(0),d=[0,Bq,UN,0];ms(d,c);var
b=kj(0);sg(b);hj([0,1,d],b);var
e=kj(0),f=kj(0),g=kj(0),a=[0,b,kj(0),g,f,e,78,10,68,78,0,1,1,1,1,ml,UO,i,h,l,k,j,0,0,UD,UH,UL,UM,c];a[19]=function(b){return I(a[17],UC,0,1)};a[20]=function(b){return BD(a,b)};a[21]=function(b){return BD(a,b)};return a}function
sk(a){function
b(b){return cR(a)}return BE(function(b,c,d){return AU(a,b,c,d)},b)}function
sl(a){function
b(a){return 0}return BE(function(b,c,d){return iM(a,b,c,d)},b)}var
UP=gH;function
BF(a){return aN(UP)}var
UQ=BF(0),UR=sk(ke),US=sk(da);sl(UQ);function
BG(f,e){var
a=aN(16),c=sl(a);n(f,c,e);ko(c,0);var
d=a[2];if(2<=d){var
b=d-2|0,g=1;if(0<=b&&!((a[2]-b|0)<1))return iH(a[1],g,b);return as(Rx)}return az(a)}function
cY(a,c){var
d=0;if(typeof
c==="number")return 0;else
switch(c[0]){case
0:var
e=c[2];cY(a,c[1]);if(typeof
e==="number")switch(e){case
0:return Bz(a,0);case
1:return BA(a,0);case
2:return ko(a,0);case
3:var
t=a[14]<a[15]?1:0;return t?Bv(a,[0,mC,3,0]):t;case
4:si(a,1);return b(a[18],0);case
5:return kn(a,64);default:return kn(a,37)}else
switch(e[0]){case
0:var
j=[0,UB,e[2],UA],u=a[14]<a[15]?1:0,O=[0,Uz,e[3],Uy],L=j[3],M=j[2],N=j[1];return u?Bx(a,1,[0,-a[13]|0,[1,j,O],(m(N)+M|0)+m(L)|0]):u;case
1:return 0;default:var
P=e[1];kn(a,64);return kn(a,P)}case
1:var
k=c[2],v=c[1];if(0===k[0]){var
Q=k[1];cY(a,v);var
l=[0,se,BG(cY,Q)];if(a[22]){hj(l,a[4]);b(a[26],l)}var
s=a[23];return s?km(a,[0,mC,[5,l],0]):s}var
R=k[1];cY(a,v);var
w=Ts(BG(cY,R));return By(a,w[1],w[2]);case
2:var
f=c[1],H=0;if(typeof
f!=="number"&&0===f[0]){var
n=f[2],U=0;if(typeof
n!=="number"&&1===n[0]){var
B=c[2],A=n[2],z=f[1];H=1;U=1}}if(!H){var
y=c[2],x=f;d=2}break;case
3:var
g=c[1],I=0;if(typeof
g!=="number"&&0===g[0]){var
o=g[2],V=0;if(typeof
o!=="number"&&1===o[0]){var
G=c[2],F=o[2],E=g[1];d=1;I=1;V=1}}if(!I){var
D=c[2],C=g;d=3}break;case
4:var
h=c[1],J=0;if(typeof
h!=="number"&&0===h[0]){var
p=h[2],W=0;if(typeof
p!=="number"&&1===p[0]){var
B=c[2],A=p[2],z=h[1];J=1;W=1}}if(!J){var
y=c[2],x=h;d=2}break;case
5:var
i=c[1],r=0;if(typeof
i==="number"||!(0===i[0]))r=1;else{var
q=i[2],K=0;if(typeof
q!=="number"&&1===q[0]){var
G=c[2],F=q[2],E=i[1];d=1;K=1}if(!K)r=1}if(r){var
D=c[2],C=i;d=3}break;case
6:var
S=c[2];cY(a,c[1]);return b(S,a);case
7:cY(a,c[1]);return ko(a,0);default:var
T=c[2];cY(a,c[1]);return as(T)}switch(d){case
0:cY(a,z);return sj(a,A,B);case
1:cY(a,E);return sj(a,F,iI(1,G));case
2:cY(a,x);return cX(a,y);default:cY(a,C);return kn(a,D)}}function
U(c){return function(d){var
a=d[1],b=0;return ax(function(a){cY(c,a);return 0},b,a)}}function
BH(d){var
c=d[1],a=BF(0),b=sl(a);return ax(function(d){cY(b,d);si(b,0);var
c=az(a);a[2]=0;a[1]=a[4];a[3]=a1(a[1]);return c},0,c)}QL(function(a){ko(UR,0);return ko(US,0)});var
UT=0,UU=b7,UV=b7;function
UW(a){throw ar}(function(h,g,e){var
c=aG(b7),a=[0,0],d=[0,0],f=[0,0];function
i(i){if(a[1]<d[1]){var
g=eU(c,a[1]);a[1]++;return g}if(f[1])throw ar;d[1]=AV(e,c,0,UV);return 0===d[1]?(f[1]=1,b(h,e)):(a[1]=1,eU(c,0))}return[0,0,UT,0,0,0,0,i,aN(UU),g]}(UW,[1,UX,AR],AR));function
sm(b,a){var
c=mh(a)===Q?a:a[1];return AJ(b,c)}var
UY=2;function
UZ(c){var
a=[0,0],d=m(c)-1|0,e=0;if(!(d<0)){var
b=e;for(;;){var
g=F(c,b);a[1]=(fv*a[1]|0)+g|0;var
h=b+1|0;if(d!==b){var
b=h;continue}break}}a[1]=a[1]&fH;var
f=l5<a[1]?a[1]-u7|0:a[1];return f}var
sn=r0([0,a2]),mF=r0([0,a2]),mG=r0([0,hf]),BI=Qc(0,0),U0=[0,0];function
BJ(a){return 2<a?BJ((a+1|0)/2|0)*2|0:a}function
BK(d){U0[1]++;var
b=d.length-1,c=aS((b*2|0)+2|0,BI);p(c,0)[1]=b;var
g=((BJ(b)*32|0)/8|0)-1|0;p(c,1)[2]=g;var
e=b-1|0,h=0;if(!(e<0)){var
a=h;for(;;){var
f=(a*2|0)+3|0,i=p(d,a)[1+a];p(c,f)[1+f]=i;var
j=a+1|0;if(e!==a){var
a=j;continue}break}}return[0,UY,c,mF[1],mG[1],0,0,sn[1],0]}function
so(a,b){var
c=a[2].length-1,d=c<b?1:0;if(d){var
e=aS(b,BI);Ba(a[2],0,e,0,c);a[2]=e;var
f=0}else
var
f=d;return f}var
BL=[0,0],U1=[0,0];function
sp(a){var
b=a[2].length-1;so(a,b+1|0);return b}function
U2(a,e){try{var
b=n(mF[28],e,a[3]);return b}catch(b){b=d(b);if(b===J){var
c=sp(a);a[3]=I(mF[4],e,c,a[3]);a[4]=I(mG[4],c,1,a[4]);return c}throw b}}function
U3(a){var
b=a[1];a[1]=b+1|0;return b}function
U4(a,e){try{var
b=n(sn[28],e,a[7]);return b}catch(b){b=d(b);if(b===J){var
f=U3(a);if(c(e,U5))a[7]=I(sn[4],e,f,a[7]);return f}throw b}}function
mH(a){var
c=sp(a),d=0;if(0!==(c%2|0)&&!((2+((p(a[2],1)[2]*16|0)/32|0)|0)<c)){var
b=sp(a);d=1}if(!d)var
b=c;p(a[2],b)[1+b]=0;return b}function
sq(d,f,a){if(S(a,U6))return f;var
b=m(a)-1|0;for(;;){if(0<=b){if(n(d,a,b)){var
b=b-1|0;continue}var
e=b+1|0,c=b;for(;;){if(0<=c){if(n(d,a,c))return R(a,c+1|0,(e-c|0)-1|0);var
c=c-1|0;continue}return R(a,0,e)}}return R(a,0,1)}}function
sr(e,f,a){if(S(a,U7))return f;var
b=m(a)-1|0;for(;;){if(0<=b){if(n(e,a,b)){var
b=b-1|0;continue}var
c=b;for(;;){if(0<=c){if(n(e,a,c)){var
d=c;for(;;){if(0<=d){if(n(e,a,d)){var
d=d-1|0;continue}return R(a,0,d+1|0)}return R(a,0,1)}}var
c=c-1|0;continue}return f}}return R(a,0,1)}}function
st(b,a){return 47===F(b,a)?1:0}function
BM(a){var
b=m(a)<1?1:0,c=b||(47!==F(a,0)?1:0);return c}function
U$(a){var
d=BM(a);if(d){var
f=m(a)<2?1:0,e=f||c(R(a,0,2),Vb);if(e)var
g=m(a)<3?1:0,b=g||c(R(a,0,3),Va);else
var
b=e}else
var
b=d;return b}function
Vc(f,e){var
b=m(e),c=m(f)-b|0,d=0<=c?1:0;if(d){var
a=0;for(;;){if(a===b)return 1;if(aU(f,c+a|0)!==aU(e,a))return 0;var
a=a+1|0;continue}}return d}function
Vd(d,b){var
a=m(d),c=m(b);return a<=c?S(R(b,c-a|0,a),d)?[0,R(b,0,c-a|0)]:0:0}try{var
a7R=mi(a7Q),su=a7R}catch(a){a=d(a);if(a!==J)throw a;var
su=Ve}function
iR(c){var
d=m(c),a=aN(d+20|0);s(a,39);var
e=d-1|0,f=0;if(!(e<0)){var
b=f;for(;;){if(39===F(c,b))bj(a,Vf);else
s(a,F(c,b));var
g=b+1|0;if(e!==b){var
b=g;continue}break}}s(a,39);return az(a)}function
BN(f,c,b,a,e){if(a)var
g=a[1],h=aD(a,b)?Vg:o(Vm,iR(g)),d=h;else
var
d=Vn;var
i=b?o(Vh,iR(b[1])):Vl,j=o(i,d),k=c?o(Vi,iR(c[1])):Vk,l=o(k,j);return o(cU(Vj,eY(iR,[0,f,e])),l)}function
Vo(a){return sq(st,ss,a)}var
Vp=[0,U8,ss,U9,U_,st,BM,U$,Vc,Vd,su,iR,BN,Vo,function(a){return sr(st,ss,a)}];function
iS(e,d){var
a=F(e,d),b=47===a?1:0;if(b)var
c=b;else
var
f=92===a?1:0,c=f||(58===a?1:0);return c}function
sw(a){var
e=m(a)<1?1:0,c=e||(47!==F(a,0)?1:0);if(c){var
f=m(a)<1?1:0,d=f||(92!==F(a,0)?1:0);if(d)var
g=m(a)<2?1:0,b=g||(58!==F(a,1)?1:0);else
var
b=d}else
var
b=c;return b}function
BO(a){var
d=sw(a);if(d){var
h=m(a)<2?1:0,e=h||c(R(a,0,2),Vw);if(e){var
i=m(a)<2?1:0,f=i||c(R(a,0,2),Vv);if(f){var
j=m(a)<3?1:0,g=j||c(R(a,0,3),Vu);if(g)var
k=m(a)<3?1:0,b=k||c(R(a,0,3),Vt);else
var
b=g}else
var
b=f}else
var
b=e}else
var
b=d;return b}function
BP(b,a){var
c=m(a)<=m(b)?1:0;if(c)var
e=R(b,m(b)-m(a)|0,m(a)),f=f$(a),d=S(f$(e),f);else
var
d=c;return d}function
BQ(d,b){var
a=m(d),c=m(b);if(a<=c){var
e=R(b,c-a|0,a),f=f$(d);return S(f$(e),f)?[0,R(b,0,c-a|0)]:0}return 0}try{var
a7P=mi(a7O),BR=a7P}catch(a){a=d(a);if(a!==J)throw a;var
BR=Vx}function
BS(f){var
g=m(f),b=aN(g+20|0);s(b,34);function
h(c){var
d=1;if(!(c<1)){var
a=d;for(;;){s(b,92);var
e=a+1|0;if(c!==a){var
a=e;continue}break}}return 0}function
d(c,j){var
a=j;for(;;){if(a===g)return s(b,34);var
d=F(f,a);if(34===d){var
h=0;return c<50?e(c+1|0,h,a):X(e,[0,h,a])}if(92===d){var
i=0;return c<50?e(c+1|0,i,a):X(e,[0,i,a])}s(b,d);var
a=a+1|0;continue}}function
e(e,l,k){var
c=l,a=k;for(;;){if(a===g){s(b,34);return h(c)}var
i=F(f,a);if(34===i){h((2*c|0)+1|0);s(b,34);var
j=a+1|0;return e<50?d(e+1|0,j):X(d,[0,j])}if(92===i){var
c=c+1|0,a=a+1|0;continue}h(c);return e<50?d(e+1|0,a):X(d,[0,a])}}(function(a){return kb(d(0,a))}(0));return az(b)}function
mI(a){if(!mp(a,34)&&!mp(a,37))return mp(a,32)?o(VA,o(a,Vz)):a;return _(o(Vy,a))}function
VB(h,d,b,a,g){if(a)var
i=a[1],j=aD(a,b)?VD:o(VM,mI(i)),e=j;else
var
e=VN;var
k=[0,e,VC],l=b?o(VE,mI(b[1])):VL,n=[0,l,k],p=d?o(VF,mI(d[1])):VK,f=cU(VG,eY(BS,g)),c=aN(m(f)+20|0),q=[0,p,n];kh(function(a){var
b=0;if(62<=a){var
d=a-63|0;if(60<d>>>0){if(!(62<=d))b=1}else
if(31===d)b=1}else
if(42<=a){if(60===a)b=1}else
if(33<=a)switch(a+Pe|0){case
2:case
3:case
6:break;default:b=1}return b?(s(c,94),s(c,a)):s(c,a)},f);var
r=[0,VH,[0,az(c),q]];return cU(VJ,[0,VI,[0,mI(h),r]])}function
BT(a){var
d=2<=m(a)?1:0;if(d){var
b=F(a,0),c=0;if(91<=b){if(!(25<b+lN>>>0))c=1}else
if(65<=b)c=1;var
e=c?1:0,f=e?58===F(a,1)?1:0:e}else
var
f=d;if(f){var
g=R(a,2,m(a)-2|0);return[0,R(a,0,2),g]}return[0,VO,a]}function
VP(b){var
a=BT(b),c=a[1];return o(c,sr(iS,sv,a[2]))}var
VQ=[0,Vq,sv,Vr,Vs,iS,sw,BO,BP,BQ,BR,BS,VB,function(a){return sq(iS,sv,BT(a)[2])},VP];function
VU(a){return sq(iS,sx,a)}var
VV=[0,VR,sx,VS,VT,iS,sw,BO,BP,BQ,su,iR,BN,VU,function(a){return sr(iS,sx,a)}],VY=c(AY,VW)?c(AY,VX)?Vp:VQ:VV,VZ=VY[13],BU=3,BV=0;function
BW(c,b,a){return a71(c,b,[0,a])}var
BX=[Q,V1,aL(0)];sm(V4,[0,BX,0,V3,V2]);mw(function(c){if(c[1]===BX){var
d=c[2],f=c[4],g=c[3];if(typeof
d==="number"){var
e=d;if(34<=e)switch(e){case
34:var
a=WC;break;case
35:var
a=WD;break;case
36:var
a=WE;break;case
37:var
a=WF;break;case
38:var
a=WG;break;case
39:var
a=WH;break;case
40:var
a=WI;break;case
41:var
a=WJ;break;case
42:var
a=WK;break;case
43:var
a=WL;break;case
44:var
a=WM;break;case
45:var
a=WN;break;case
46:var
a=WO;break;case
47:var
a=WP;break;case
48:var
a=WQ;break;case
49:var
a=WR;break;case
50:var
a=WS;break;case
51:var
a=WT;break;case
52:var
a=WU;break;case
53:var
a=WV;break;case
54:var
a=WW;break;case
55:var
a=WX;break;case
56:var
a=WY;break;case
57:var
a=WZ;break;case
58:var
a=W0;break;case
59:var
a=W1;break;case
60:var
a=W2;break;case
61:var
a=W3;break;case
62:var
a=W4;break;case
63:var
a=W5;break;case
64:var
a=W6;break;case
65:var
a=W7;break;case
66:var
a=W8;break;default:var
a=W9}else
switch(e){case
0:var
a=V5;break;case
1:var
a=V7;break;case
2:var
a=V8;break;case
3:var
a=V9;break;case
4:var
a=V_;break;case
5:var
a=V$;break;case
6:var
a=Wa;break;case
7:var
a=Wb;break;case
8:var
a=Wc;break;case
9:var
a=Wd;break;case
10:var
a=We;break;case
11:var
a=Wf;break;case
12:var
a=Wg;break;case
13:var
a=Wh;break;case
14:var
a=Wi;break;case
15:var
a=Wj;break;case
16:var
a=Wk;break;case
17:var
a=Wl;break;case
18:var
a=Wm;break;case
19:var
a=Wn;break;case
20:var
a=Wo;break;case
21:var
a=Wp;break;case
22:var
a=Wq;break;case
23:var
a=Wr;break;case
24:var
a=Ws;break;case
25:var
a=Wt;break;case
26:var
a=Wu;break;case
27:var
a=Wv;break;case
28:var
a=Ww;break;case
29:var
a=Wx;break;case
30:var
a=Wy;break;case
31:var
a=Wz;break;case
32:var
a=WA;break;default:var
a=WB}}else
var
h=d[1],a=b(ae(W_),h);return[0,I(ae(V6),a,g,f)]}return 0});rN(W$);rN(Xa);try{rN(a7N)}catch(a){a=d(a);if(a[1]!==$)throw a}try{rN(a7M)}catch(a){a=d(a);if(a[1]!==$)throw a}aV(0,7);var
BY=[Q,Xb,aL(0)];sm(Xc,[0,BY,[0]]);(function(a){throw a});var
BZ=W,Xd=undefined,Xe=BZ.Object,Xf=BZ.Array;mw(function(a){return a[1]===BY?[0,E(a[2].toString())]:0});mw(function(a){return a
instanceof
Xf?0:[0,E(a.toString())]});function
Xg(a){var
b=Xe.keys(a);return b.forEach(a8B(function(b,d,c){return a8$[b]=a[b]}))}function
Xh(d,c){var
b=1,a=c;for(;;){if(a){if(aD(d,a[1]))return[0,b];var
b=b+1|0,a=a[2];continue}return 0}}function
B0(d,g,b){if(S(d,Xi))return b;var
a=[0,0],e=m(b),f=m(d),c=aN(e*2|0);for(;;){if(a[1]<e){try{if(S(R(b,a[1],f),d)){bj(c,g);a[1]=a[1]+f|0}else{s(c,F(b,a[1]));a[1]++}}catch(d){s(c,F(b,a[1]));a[1]++;continue}continue}return az(c)}}function
Xj(e,h,c){if(S(e,Xk))return c;var
a=[0,0],f=m(c),g=m(e),d=aN(f*2|0);for(;;){if(a[1]<f){try{if(S(R(c,a[1],g),e)){bj(d,b(h,0));a[1]=a[1]+g|0}else{s(d,F(c,a[1]));a[1]++}}catch(b){s(d,F(c,a[1]));a[1]++;continue}continue}return az(d)}}function
sy(a){AW(a);return cR(ke)}function
q(b,a){return eX(l(b),a)}function
ah(c){var
b=0,a=l(c);for(;;){if(a){var
d=a[2],b=q(a[1],b),a=d;continue}return b}}function
g(b,a){return l(kf(b,a))}function
bI(j,i,h){var
c=0,b=i,a=h;for(;;){var
e=0;if(b){if(a){var
f=a[2],g=b[2],c=[0,n(j,b[1],a[1]),c],b=g,a=f;continue}}else
if(!a){var
d=c;e=1}if(!e)var
d=as(Q0);return l(d)}}function
gd(f){var
b=Xl,a=f;for(;;){var
c=b[2],d=b[1];if(a){var
e=a[1],b=[0,[0,e[1],d],[0,e[2],c]],a=a[2];continue}var
g=l(c);return[0,l(d),g]}}function
a7(c,b){var
a=[0,0];try{cr(function(c,b){a[1]=[0,[0,c,b],a[1]];return 0},c,b);var
e=l(a[1]);return e}catch(a){a=d(a);if(a[1]===bq)throw[0,bq,Xn];throw a}}function
bk(c,b,a){return hh(c,b,a)}function
B1(c,b,a){var
d=l(b);return hh(function(b,a){return n(c,a,b)},a,d)}function
aK(c){var
b=[0,0],d=m(c);if(!(d<1)){var
a=d;for(;;){b[1]=[0,aU(c,a-1|0),b[1]];var
e=a-1|0;if(1!==a){var
a=e;continue}break}}return b[1]}function
P(c){var
d=aG(z(c)),b=0,a=c;for(;;){if(a){var
e=a[2];aZ(d,b,a[1]);var
b=b+1|0,a=e;continue}return bi(mo(d))}}function
hl(a){return iI(1,a)}function
B2(a,b){return A$(a,0,a.length-1,b)}function
Y(a,b){a[1]=[0,b,a[1]];return 0}function
ge(a,b){a[1]=q(b,a[1]);return 0}function
mJ(a){if(48<=a&&!(57<a))return 1;return 0}function
hm(c,a){return 1-b(c,a)}function
dA(b,a){if(0===b)return 1;if(1===b)return a;var
c=0===(b%2|0)?1:a;return bd(dA(b/2|0,bd(a,a)),c)}function
a4(d,c){var
a=c;for(;;){if(a){var
b=a[1],e=a[2],f=b[2];if(aD(b[1],d))return[0,f];var
a=e;continue}return 0}}function
ei(d,c){var
a=c;for(;;){if(a){var
b=a[1],e=a[2],f=b[2];if(aD(b[1],d))return f;var
a=e;continue}throw J}}function
cc(c,d,f){var
b=0,a=f;for(;;){if(a){var
e=a[1],g=a[2];if(aD(e[1],c))return q(b,[0,[0,c,d],g]);var
b=[0,e,b],a=a[2];continue}return[0,[0,c,d],b]}}function
gf(c,f,e){var
b=0,a=e;for(;;){if(a){var
d=a[1],g=a[2];if(aD(d[1],c))return eX(b,[0,[0,c,f],g]);var
b=[0,d,b],a=a[2];continue}throw J}}function
ej(e,d){var
b=0,a=d;for(;;){if(a){var
c=a[1],f=a[2];if(aD(c[1],e))return eX(b,f);var
b=[0,c,b],a=a[2];continue}return b}}function
sz(e,d){var
b=e,a=d;for(;;){if(a){var
c=a[1],f=a[2],b=cc(c[1],c[2],b),a=f;continue}return b}}function
gg(c,a){return b(c,a)}function
Xp(b,a){return q(a,b)}function
kp(d){var
b=0,a=d;for(;;){if(a){var
c=a[2],e=a[1];if(c){var
b=[0,[0,e,c[1]],b],a=c[2];continue}throw[0,bq,Xq]}return l(b)}}function
sA(g){var
b=0,a=db(bY,g);for(;;){if(a){var
c=a[1],d=a[2];if(d){var
e=d[1],f=d[2];if(aD(c,e)){var
a=[0,e,f];continue}var
b=[0,c,b],a=a[2];continue}return l([0,c,b])}return l(b)}}function
B3(e){var
b=0,a=e;for(;;){if(a){var
c=a[2],d=a[1];if(c){var
b=[0,d,b],a=c[2];continue}var
b=[0,d,b],a=0;continue}return l(b)}}function
B4(d){var
b=0,a=d;for(;;){if(a){var
c=a[2];if(c){var
b=[0,c[1],b],a=c[2];continue}}return l(b)}}function
Xr(a){return a?a[2]:0}function
B5(h,g){var
c=g;a:for(;;){if(c){if(c[2]){var
b=0,a=c;for(;;){if(a){var
d=a[2],e=a[1];if(d){var
f=d[2],b=[0,n(h,e,d[1]),b],a=f;continue}var
b=[0,e,b],a=0;continue}var
c=l(b);continue a}}return c[1]}throw[0,bq,Xs]}}function
cZ(f){var
g=0;return function(h){var
c=g,a=h;for(;;){if(a){var
d=a[2],e=a[1];if(b(f,e)){var
a=d;continue}var
c=[0,e,c],a=d;continue}return l(c)}}}function
aP(b,a){return O(aS(a,b))}function
iT(e,d){if(0<=d){var
c=0,a=e,b=d;for(;;){if(0===b)return l(c);if(a){var
c=[0,a[1],c],a=a[2],b=b-1|0;continue}throw[0,bq,Xt]}}throw[0,bq,Xu]}function
Xv(f,e){var
c=0,a=e;for(;;){if(a){var
d=a[1],g=a[2];if(b(f,d)){var
c=[0,d,c],a=g;continue}return c}return c}}function
mK(f,e){var
c=0,a=e;for(;;){if(a){var
d=a[1],g=a[2];if(b(f,d)){var
c=[0,d,c],a=g;continue}return l(c)}return l(c)}}function
kq(e,c){if(0<=c){if(0===c)return e;var
b=c,a=e;for(;;){if(a){var
d=a[2];if(1===b)return d;var
b=b-1|0,a=d;continue}throw[0,bq,Xw]}}throw[0,bq,Xx]}function
B6(b,a){return kq(a,b)}function
hn(e,d){if(0<=d){var
a=e,c=0,b=d;for(;;){if(0===b)return[0,l(c),a];if(a){var
f=[0,aM(a),c],a=bu(a),c=f,b=b-1|0;continue}throw[0,bq,Xy]}}throw[0,bq,Xz]}function
c0(f,e){var
a=e,c=0;for(;;){if(a){var
d=a[1],g=a[2];if(b(f,d)){var
a=g,c=[0,d,c];continue}return[0,l(c),a]}return[0,l(c),0]}}function
B7(d,c,b){var
a=c0(function(a){return hm(d,a)},b)[2];if(a){var
e=a[2];return c0(function(a){return hm(c,a)},e)[1]}return 0}function
kr(f,e){var
b=0,a=e;for(;;){if(a){var
c=a[1],g=[0,c,a[2]],d=c0(function(b){return function(a){return 0===n(f,b,a)?1:0}}(c),g),b=[0,d[1],b],a=d[2];continue}return l(b)}}function
ks(c,e){var
b=0,a=e,d=z(e);for(;;){if(a){if(d<c)return l([0,a,b]);var
f=hn(a,c),b=[0,f[1],b],a=f[2],d=d-c|0;continue}return l(b)}}function
b2(b,a){try{var
c=aM(kq(a,b-1|0));return c}catch(a){a=d(a);if(a[1]!==bq&&a[1]!==$)throw a;throw[0,bq,XA]}}function
B8(a){return a?0:1}function
gh(b){var
a=b;for(;;){if(a){var
c=a[1];if(a[2]){var
a=a[2];continue}return c}throw[0,bq,XB]}}function
ho(a){if(a&&a[2])return l(bu(l(a)));return 0}function
mL(a){if(a){var
b=a[1];return a[2]?[0,b,gh(a[2])]:[0,b,b]}throw[0,bq,XC]}function
bA(a){a[1]=1;return 0}function
sB(a){a[1]=0;return 0}function
B9(a){a[1]=1-a[1];return 0}function
dd(a,b){a[1]=a[1]+b|0;return 0}function
B_(a,b){a[1]=a[1]-b|0;return 0}function
B$(b,a){var
c=a[2]-b[2],d=b[1]-a[1];return Math.sqrt(d*d+c*c)}function
XD(b,a){return b<a?-1:a<b?1:0}function
L(d,b){if(b<d)throw[0,bq,XE];var
c=[0,0],a=d;for(;;){if(a===b){Y(c,b);return l(c[1])}Y(c,a);var
a=a+1|0;continue}}function
cd(a){return 0===a?0:L(1,z(a))}function
mM(b,a){return 0===a?0:L(b,(b+z(a)|0)-1|0)}function
kt(a){return 0===(a%2|0)?1:0}function
iU(a){return hm(kt,a)}function
XF(a){return a}function
de(a){return a?a[1]:_(XH)}function
sC(d){var
b=0,a=d;for(;;){if(a){var
c=a[1];if(c){var
b=[0,c[1],b],a=a[2];continue}var
a=a[2];continue}return l(b)}}function
al(b,a){return sC(g(b,a))}function
Ca(b,a){return b<a?b:a}function
cs(b,a){return a<b?b:a}function
df(b,a){return b<a?b:a}function
gi(b,a){return a<b?b:a}function
mN(a){return a*yg/180.}function
ce(a){return aV(0,0)}function
ek(b,a){try{var
c=[0,an(b,a)];return c}catch(a){a=d(a);if(a===J)return 0;throw a}}function
ku(b){var
a=[0,0];cb(function(c,b){return Y(a,[0,c,b])},b);return a[1]}function
bJ(a){var
b=aV(0,z(a)*2|0);x(function(a){return aO(b,a[1],a[2])},a);return b}function
Cb(a){var
b=aV(0,z(a)*2|0);x(function(a){return aO(b,a,0)},a);return b}function
iV(a){return ry(a)?0.:a}function
Cc(a,c,b){var
d=p(a,c)[1+c];a[1+c]=p(a,b)[1+b];a[1+b]=d;return 0}function
mO(a){if(1<=a){if(dv<=a){var
c=mO(a%dv|0);return o(P(aP(77,a/dv|0)),c)}var
b=function(c,g){var
a=g;for(;;){if(a){var
d=a[2],e=a[1],f=e[1],h=e[2];if(f<=c)return o(h,b(c-f|0,d));var
a=d;continue}return XJ}};if(0<a&&!(dv<=a))return b(a,XI);throw[0,B,XK]}return XL}function
Cd(a){return f$(mO(a))}function
cl(d){var
a=[0,0];return function(e){var
c=a[1];return c?c[1]:(a[1]=[0,b(d,0)],de(a[1]))}}function
dY(b){if(0===b[0])return b[1];var
c=b[1],d=BW(BU,BV,a1(c)),e=a1(c)-1|0,f=0;if(!(e<0)){var
a=f;for(;;){rx(d,a,c$(c,a));var
g=a+1|0;if(e!==a){var
a=g;continue}break}}return d}function
ay(a){return a<=f_?[1,aG(a)]:[0,BW(BU,BV,a)]}function
aa(a){return 0===a[0]?a74(a[1]):a1(a[1])}function
e6(a,c,b){return 0===a[0]?rx(a[1],c,b):ee(a[1],c,b)}function
bv(a,c,b){return 0===a[0]?rx(a[1],c,b):(aZ(a[1],c,b),0)}function
dZ(a,b){return 0===a[0]?Au(a[1],b):eU(a[1],b)}function
cH(a,b){return 0===a[0]?Au(a[1],b):c$(a[1],b)}function
bl(c){var
b=m(c),d=ay(b);if(0<b){var
e=b-1|0,f=0;if(!(e<0)){var
a=f;for(;;){bv(d,a,aU(c,a));var
g=a+1|0;if(e!==a){var
a=g;continue}break}}}return d}function
Ce(d){var
b=z(d);if(0===b)return ay(0);var
e=ay(b),c=[0,d],f=b-1|0,g=0;if(!(f<0)){var
a=g;for(;;){bv(e,a,aM(c[1]));c[1]=bu(c[1]);var
h=a+1|0;if(f!==a){var
a=h;continue}break}}return e}function
mP(d){var
b=z(d);if(0===b)return ay(0);var
e=ay(b),c=[0,d],f=b-1|0,g=0;if(!(f<0)){var
a=g;for(;;){bv(e,a,aM(c[1]));c[1]=bu(c[1]);var
h=a+1|0;if(f!==a){var
a=h;continue}break}}return e}function
aI(b){var
c=aa(b),d=aN(c),e=c-1|0,f=0;if(!(e<0)){var
a=f;for(;;){s(d,cH(b,a));var
g=a+1|0;if(e!==a){var
a=g;continue}break}}return az(d)}function
kv(c){var
b=ay(c.length-1),d=aa(b)-1|0,e=0;if(!(d<0)){var
a=e;for(;;){bv(b,a,c[1+a]);var
f=a+1|0;if(d!==a){var
a=f;continue}break}}return b}function
iW(c){var
b=aS(aa(c),0),d=b.length-1-1|0,e=0;if(!(d<0)){var
a=e;for(;;){b[1+a]=cH(c,a);var
f=a+1|0;if(d!==a){var
a=f;continue}break}}return b}function
XM(c){var
b=aa(c),d=ay(b);if(0<b){var
e=b-1|0,f=0;if(!(e<0)){var
a=f;for(;;){bv(d,a,cH(c,a));var
g=a+1|0;if(e!==a){var
a=g;continue}break}}}return d}function
a8(a){return iJ(m(a),function(b){return aU(a,b)})}function
kw(a){var
c=g(function(a){return a.length-1},a),d=0,b=aN(bk(function(b,a){return b+a|0},d,c));function
e(a){return s(b,a)}x(function(a){return ki(e,a)},a);return az(b)}function
hp(a){return kw([0,a,0])}function
XN(b){var
c=[0,0],d=aa(b)-1|0;if(!(d<0)){var
a=d;for(;;){Y(c,cH(b,a));var
e=a-1|0;if(0!==a){var
a=e;continue}break}}return c[1]}var
sD=-1;function
iX(c,a){var
e=c?c[1]:XO,b=[0,0],f=[0,a];function
g(c){var
a=0===b[1]?1:0,d=a?(b[1]=c,0):a;return d}var
h=j$(a);function
i(c){try{var
b=rI(a);return b}catch(a){a=d(a);if(a===ar)return sD;throw a}}function
j(c){try{var
b=[0,rI(a)];return b}catch(a){a=d(a);if(a===ar)return 0;throw a}}function
k(c){return a8K(a,c+b[1]|0)}return[0,function(d){var
c=b[1];return a8I(a)-c|0},k,j,i,h,g,f,e]}function
b3(e,j){var
k=e?e[1]:XP,a=[0,0,[0,j]],b=[0,0],c=aa(a[2][1]);function
d(d){var
b=(c-1|0)<a[1]?sD:cH(a[2][1],a[1]);a[1]=a[1]+1|0;return b}var
f=0;function
g(c){var
a=0===b[1]?1:0,d=a?(b[1]=c,0):a;return d}function
h(b){var
a=d(0);return a===-1?0:[0,a]}function
i(c){a[1]=c+b[1]|0;return 0}return[0,function(c){return a[1]-b[1]|0},i,h,d,c,g,f,k]}function
ct(c,b){var
d=c?c[1]:XT,a=[0,0],e=0;function
f(a){return 0}var
g=m(b);function
h(c){return 0<=a[1]?(m(b)-1|0)<a[1]?(a[1]=a[1]+1|0,sD):(a[1]=a[1]+1|0,aU(b,a[1]-1|0)):_(XR)}function
i(c){return 0<=a[1]?(m(b)-1|0)<a[1]?(a[1]=a[1]+1|0,0):(a[1]=a[1]+1|0,[0,aU(b,a[1]-1|0)]):_(XQ)}function
j(b){if(b<0)_(XS);a[1]=b;return 0}return[0,function(b){return a[1]},j,i,h,g,f,e,d]}function
Cf(a){function
b(b){return j$(a)}var
c=[0,a];function
d(b){return eV(a,b)}function
e(b){return mg(a,b)}function
f(b){return mg(a,b)}function
g(b){return P$(a,b)}return[0,function(b){return a8J(a)},g,f,e,d,c,b]}function
dB(k){var
d=[0,ay(k)],a=[0,0,d],b=[0,0];function
c(e){var
g=aa(a[2][1])-1|0;if(g<a[1]){var
d=ay(cs(1,a[1]*2|0)),f=aa(a[2][1])-1|0,h=0;if(!(f<0)){var
c=h;for(;;){bv(d,c,cH(a[2][1],c));var
i=c+1|0;if(f!==c){var
c=i;continue}break}}bv(d,a[1],e);b[1]=cs(b[1],a[1]);a[1]=a[1]+1|0;a[2][1]=d;return 0}b[1]=cs(b[1],a[1]);bv(a[2][1],a[1],e);a[1]=a[1]+1|0;return 0}function
e(a){return b[1]+1|0}var
f=0;function
g(a){return c(a)}function
h(a){return kh(g,a)}function
i(a){return c(a)}function
j(b){a[1]=b;return 0}return[0,[0,function(b){return a[1]},j,i,c,h,f,e],d]}function
dC(g,f){var
c=b(g[1],0),d=ay(c),e=c-1|0,h=0;if(!(e<0)){var
a=h;for(;;){bv(d,a,cH(f[1],a));var
i=a+1|0;if(e!==a){var
a=i;continue}break}}return d}function
cu(a){b(a[4],0);return 0}function
bf(a){var
c=b(a[1],0)-1|0;return b(a[2],c)}function
Cg(a){var
c=b(a[3],0);bf(a);return c}function
sE(a){var
c=b(a[4],0);bf(a);return c}var
kx=aN(ak);function
Ch(a){ck(kx);if(b(a[4],0)===-1)throw ar;bf(a);for(;;){var
c=b(a[4],0);if(c===-1)return az(kx);if(10===c){s(kx,10);return az(kx)}s(kx,c);continue}}function
Ci(a){var
b=[0,0];try{for(;;){var
c=b[1];b[1]=[0,Ch(a),c];continue}}catch(a){a=d(a);if(a===ar)return l(b[1]);throw a}}function
Cj(g,d,a,c){if(0===c)return 0;var
h=aa(d)-1|0,i=(a+1|0)-1|0;if(!(h<a)&&0<=a&&0<=i&&!(h<i)){if(0===d[0]){var
j=(a+c|0)-1|0,n=d[1];if(!(j<a)){var
e=a;for(;;){rx(n,e,b(g[4],0));var
o=e+1|0;if(j!==e){var
e=o;continue}break}}return 0}var
k=d[1],l=g[7];if(l)return rS(l[1],k,a,c);var
m=(a+c|0)-1|0;if(!(m<a)){var
f=a;for(;;){aZ(k,f,b(g[4],0));var
p=f+1|0;if(m!==f){var
f=p;continue}break}}return 0}throw[0,$,XU]}function
Ck(f,e,a,d){if(0===d)return 0;var
g=a1(e)-1|0,h=(a+1|0)-1|0;if(!(g<a)&&0<=a&&0<=h&&!(g<h)){var
i=f[7];if(i)return rS(i[1],e,a,d);var
j=(a+d|0)-1|0;if(!(j<a)){var
c=a;for(;;){aZ(e,c,b(f[4],0));var
k=c+1|0;if(j!==c){var
c=k;continue}break}}return 0}throw[0,$,XV]}function
sF(h,k,e){b(h[2],k);var
c=aG(e);Ck(h,c,0,e);if(e<=f_)return[1,c];var
d=a1(c),f=ay(d);if(0<d){var
g=d-1|0,i=0;if(!(g<0)){var
a=i;for(;;){bv(f,a,c$(c,a));var
j=a+1|0;if(g!==a){var
a=j;continue}break}}}return f}function
Cl(a){return[0,a,0,0,0]}function
ad(a){for(;;){if(0===a[3]){var
c=b(a[1][4],0);if(c===-1)throw ar;a[2]=c;a[3]=N;continue}var
d=0<(a[2]&a[3])?1:0;a[4]=a[4]+1|0;a[3]=a[3]/2|0;return d?1:0}}function
XX(a){if(0<a[3])a[4]=((a[4]/8|0)+1|0)*8|0;a[3]=0;return 0}function
XZ(a){return[0,0,0,0]}function
Cm(a,b){if(0!==b&&1!==b)throw[0,B,X0];return 7===a[2]?(a[3]=[0,a[1]|b,a[3]],a[2]=0,a[1]=0,0):(a[2]=a[2]+1|0,a[1]=a[1]|b<<(8-a[2]|0),0)}function
Cn(a){var
c=0<a[2]?1:0;if(c){var
d=8-a[2]|0,f=1;if(!(d<1)){var
b=f;for(;;){Cm(a,0);var
g=b+1|0;if(d!==b){var
b=g;continue}break}}var
e=0}else
var
e=c;return e}function
X1(a){Cn(a);return Ce(l(a[3]))}function
cv(a,b){return[V,a[1]*b[1]+a[3]*b[2],a[2]*b[1]+a[4]*b[2],a[1]*b[3]+a[3]*b[4],a[2]*b[3]+a[4]*b[4],a[1]*b[5]+a[3]*b[6]+a[5],a[2]*b[5]+a[4]*b[6]+a[6]]}var
sG=[Q,X2,aL(0)];function
mQ(a){var
c=a[1]*a[4]-a[2]*a[3];if(c==0.)throw sG;var
d=1./c;if(d!=0.){var
b=function(a){return d*a},e=b(a[2]*a[5]-a[1]*a[6]),f=b(a[3]*a[6]-a[4]*a[5]),g=b(a[1]),h=b(-a[3]),i=b(-a[2]);return[V,b(a[4]),i,h,g,f,e]}throw sG}function
dg(b,a){return[V,au[1],au[2],au[3],au[4],b,a]}function
Co(b,a){var
c=b[2],d=b[1],e=dg(-d,-c),f=dg(d,c);return cv(f,cv([V,Math.cos(a),Math.sin(a),-Math.sin(a),Math.cos(a),au[5],au[6]],e))}function
e7(a){switch(a[0]){case
0:var
h=a[1],b=h[2],c=h[1],q=a[3],r=a[2],k=dg(-c,-b),l=dg(c,b);return cv(l,cv([V,r,au[2],au[3],q,au[5],au[6]],k));case
1:return Co(a[1],a[2]);case
2:return dg(a[1],a[2]);case
3:var
i=a[1],d=i[2],e=i[1],s=a[2],m=dg(-e,-d),n=dg(e,d);return cv(n,cv([V,au[1],au[2],s,au[4],au[5],au[6]],m));default:var
j=a[1],f=j[2],g=j[1],t=a[2],o=dg(-g,-f),p=dg(g,f);return cv(p,cv([V,au[1],t,au[3],au[4],au[5],au[6]],o))}}function
bO(a,b){var
c=b[2],d=b[1];return[0,d*a[1]+c*a[3]+a[5],d*a[2]+c*a[4]+a[6]]}function
iY(a){return bk(cv,au,g(e7,a))}function
X3(a){var
b=Math.sqrt(a[1]*a[1]+a[2]*a[2]),d=Math.sqrt(a[3]*a[3]+a[4]*a[4]),c=(a[1]*a[4]-a[3]*a[2])/b,e=a[1]*a[3]+a[2]*a[4],f=Math.abs(c)==0.?1.:b/Math.abs(c),g=Math.atan2(a[2],a[1]),h=b*d==0.?0.:z5-Math.acos(e/(b*d)),i=iV(a[6]),j=iV(a[5]),k=iV(h),l=iV(g),m=iV(f);return[0,iV(c),m,l,k,j,i]}function
cI(A,y,w){var
n=[0,X6,[0,X5,[0,X4,[0,[0,4,[0,[0,1,A],0]],0]]]],b=[0,n];x(function(a){var
d=a[1],c=a[2];return x(function(e){var
a=e[1],f=1./e[2],c=a4(a,b[1]),g=c?gf(a,[0,[0,d,f],c[1]],b[1]):cc(a,[0,[0,d,f],0],b[1]);b[1]=g;return 0},c)},n);var
f=b[1],s=L(0,z(f)-1|0),d=a7(g(function(a){return a[1]},f),s),t=g(function(a){var
b=a[2],c=a[1],e=g(function(a){var
b=a[2];return[0,ei(a[1],d),b]},b);return[0,ei(c,d),e]},f),h=bG(g(function(a){return a[2]},t)),o=h.length-1,i=aS(o,-1),j=aS(o,0),u=ei(w,d),c=Bd(0);ms(u,c);for(;;){if(0===c[1]){var
e=[0,ei(y,d)],k=[0,1.];for(;;){var
q=e[1];if(-1===p(i,q)[1+q])return function(a){return a*k[1]};var
r=e[1],l=p(i,r)[1+r],B=p(h,l)[1+l],C=ei(e[1],B);k[1]=k[1]*C;e[1]=l;continue}}var
m=c[2];if(m){var
a=m[1],v=p(h,a)[1+a];x(function(e){return function(d){var
a=d[1],b=0===p(j,a)[1+a]?1:0;return b?(p(j,a)[1+a]=1,p(i,a)[1+a]=e,ms(a,c)):b}}(a),v);Be(c);p(j,a)[1+a]=2;continue}throw Bc}}function
mR(c,b,a){return[0,[0,c,b,a]]}function
hq(a){return a[1][1]}function
ky(a){return a[1][2]}function
kz(a){return a[1][3]}function
bK(b){var
a=b[1];return[0,[0,a[1],a[3],a[2]]]}function
Cp(b,a){return a81(hp(a))}function
Cq(b,a){return Qk(hp(a))}function
cw(n,h){var
o=ay(aa(h)),f=[0,0],d=[0,0],a=aS(ak,0),c=0,r=n.length-1;for(;;){p(a,c)[1+c]=c;var
v=c+1|0;if(aq!==c){var
c=v;continue}var
g=[0,0],b=0;for(;;){var
i=iD(b,r),s=p(n,i)[1+i],t=p(a,b)[1+b];g[1]=((g[1]+t|0)+s|0)%ak|0;Cc(a,b,g[1]);var
u=b+1|0;if(aq!==b){var
b=u;continue}var
q=aa(h)-1|0,z=0;if(!(q<0)){var
e=z;for(;;){d[1]=(d[1]+1|0)%ak|0;var
j=d[1],w=p(a,j)[1+j];f[1]=(f[1]+w|0)%ak|0;Cc(a,d[1],f[1]);var
k=f[1],x=p(a,k)[1+k],l=d[1],m=(p(a,l)[1+l]+x|0)%ak|0,y=p(a,m)[1+m];e6(o,e,dZ(h,e)^y);var
A=e+1|0;if(q!==e){var
e=A;continue}break}}return o}}}Ub(0);function
cx(a){return r$(aq)}function
Cr(a){if(0===aa(a))return ay(0);if(16<=aa(a)){var
d=aa(a);if(16<=d){var
b=dZ(a,d-1|0),l=0;if(16<b||!(1<=b))l=1;else{var
i=d-1|0,e=d-b|0;for(;;){if(e===i)var
j=b===dZ(a,i)?1:0;else{var
h=b===dZ(a,e)?1:0;if(h){var
e=e+1|0;continue}var
j=h}var
f=j?[0,b]:0;break}}if(l)var
f=0;if(f){var
m=f[1],g=ay(aa(a)-m|0),k=aa(g)-1|0,n=0;if(!(k<0)){var
c=n;for(;;){bv(g,c,cH(a,c));var
o=c+1|0;if(k!==c){var
c=o;continue}break}}return g}return a}throw[0,B,X7]}return a}function
iZ(j,n,m,g){var
o=j?j[1]:1,p=Cq(n,m),h=aa(g);if(16<h){var
c=ay(h+nY|0),i=ay(16),f=0;for(;;){bv(i,f,cH(g,f));var
w=f+1|0;if(15!==f){var
f=w;continue}var
b=[0,16];b:for(;;){if(b[1]<h){var
k=cF(16,32),l=cF(16,32),e=0;for(;;){ee(k,e,aj(cH(g,e+b[1]|0)));var
v=e+1|0;if(15!==e){var
e=v;continue}Ql(p,k,0,l,0);var
d=0;for(;;){var
t=eU(l,d);bv(c,(d+b[1]|0)+nY|0,t);var
u=d+1|0;if(15!==d){var
d=u;continue}var
a=0;for(;;){var
q=cH(c,(a+b[1]|0)+nY|0),r=cH(i,a)^q;bv(c,(a+b[1]|0)+nY|0,r);bv(i,a,cH(g,a+b[1]|0));var
s=a+1|0;if(15!==a){var
a=s;continue}dd(b,16);continue b}}}}return o?Cr(c):c}}}return ay(0)}function
hr(u,X,W,f){if(u)var
g=u[1];else
var
A=cx(0),B=cx(0),C=cx(0),D=cx(0),E=cx(0),F=cx(0),G=cx(0),H=cx(0),I=cx(0),J=cx(0),K=cx(0),L=cx(0),M=cx(0),N=cx(0),O=cx(0),g=[0,cx(0),O,N,M,L,K,J,I,H,G,F,E,D,C,B,A];var
v=[0,0],w=[0,g],Z=Cp(X,W),b=aa(f);if(16<=b){var
h=[0,0],i=(b/16|0)-1|0,P=0;if(!(i<0)){var
d=P;a:for(;;){var
r=aS(16,0),a=0;for(;;){r[1+a]=cH(f,(d*16|0)+a|0);var
V=a+1|0;if(15!==a){var
a=V;continue}Y(h,r);var
U=d+1|0;if(i!==d){var
d=U;continue a}break}break}}var
j=l(h[1])}else
var
j=0;var
e=b%16|0,n=16-e|0,S=aP(n,n);if(0===e)var
o=0;else{var
k=[0,0],m=e-1|0,Q=0;if(!(m<0)){var
c=Q;for(;;){Y(k,dZ(f,(b-1|0)-c|0));var
R=c+1|0;if(m!==c){var
c=R;continue}break}}var
o=k[1]}var
T=q(j,[0,bG(q(o,S)),0]);x(function(b){var
d=w[1];if(b.length-1===d.length-1){var
c=iJ(b.length-1,function(a){var
c=p(d,a)[1+a];return p(b,a)[1+a]^c}),f=A4(c.length-1,function(a){return p(c,a)[1+a]}),a=cF(16,32);Qm(Z,f,0,a,0);var
e=iJ(a1(a),function(b){return c$(a,b)});w[1]=e;return Y(v,e)}throw[0,bq,XG]},T);var
y=[0,g,l(v[1])],s=ay(16*z(y)|0),t=[0,0];x(function(a){return ki(function(a){e6(s,t[1],a);t[1]++;return 0},a)},y);return s}function
sM(e){var
c=aN(aQ);try{for(;;){var
a=b(e[3],0);if(a){s(c,a[1]);continue}throw ar}}catch(a){a=d(a);if(a===ar)return az(c);throw a}}function
gj(a){return a82(sM(a))}function
X8(a){return a83(sM(a))}function
X9(a){return a84(sM(a))}function
sN(e,a,b,d,c){var
f=[0,a&aq,(a&uG)>>>8|0,(a&NU)>>>16|0],g=[0,b&aq,(b&uG)>>>8|0],h=0===e?[0,dO,65,cP,84]:[0],i=kw([0,d,[0,f,[0,g,[0,h,0]]]]),j=Ca(16,(c/8|0)+5|0);return a8(R(dX(i),0,j))}function
hs(a){var
b=0;if(93<=a){var
c=a+KW|0;if(30<c>>>0){if(!(32<=c))b=1}else
if(29===c)b=1}else
if(63<=a){if(91===a)b=1}else
if(37<=a)switch(a+M9|0){case
0:case
3:case
4:case
10:case
23:case
25:b=1;break}return b?1:0}function
kH(a,d,c,b){var
e=a?a[1]:0;return[0,d,c,b,e]}var
Ya=[0,function(a){return X$}];function
mS(a){return aV(0,xL)}function
i0(b,a){return an(a,b)}function
sO(c,b,a){gb(a,c,b);return a}function
bm(b){var
a=ce(0);return[0,1,1,0,[0,0,0,mS(0),a],Yb,0,0]}var
f=[Q,Yc,aL(0)];function
aA(a,c){var
d=b(a[1],0),e=a[8];return I(ae(Yd),c,e,d)}function
gk(a){var
b=0;if(14<=a){if(32!==a)b=1}else
if(!(12<=a))switch(a){case
0:case
9:case
10:break;default:b=1}return b?0:1}function
Cs(a){var
b=0;if(14<=a){if(32!==a)b=1}else
if(!(12<=a))switch(a){case
0:case
9:case
10:break;default:b=1}return b?1:0}function
Ye(f,d){if(f){var
a=f[1],g=a[7],h=a[2],c=a[1],o=a[6],p=a[5],q=a[4],r=a[3];if(0===c)var
k=4,l=0,b=function(a,b){return iZ(l,k,a,b)};else{var
i=0;if(typeof
c!=="number"&&1===c[0]){var
e=1;i=1}if(!i)var
e=0;if(e)var
m=8,n=0,b=function(a,b){return iZ(n,m,a,b)};else
var
b=cw}if(5!==g&&6!==g)return b(sN(c,r,q,p,o),d);var
j=h?h[1]:_(X_);return b(a8(j),d)}return d}function
bn(c,g){if(typeof
c!=="number")switch(c[0]){case
6:var
b=0,a=c[1];for(;;){if(a){var
e=a[1],j=a[2];if(!S(e[1],g)){var
b=[0,e,b],a=a[2];continue}var
h=eX(b,j)}else
var
h=b;return[6,h]}case
7:var
d=c[1],i=d[1],k=i[2];d[1]=[0,bn(i[1],g),k];return[7,d]}throw[0,f,Yf]}function
ht(a,c,b){if(typeof
a==="number")return[6,gf(c,b,0)];else
switch(a[0]){case
6:return[6,gf(c,b,a[1])];case
7:var
d=a[1],e=d[1],g=e[2];d[1]=[0,ht(e[1],c,b),g];return[7,d];default:throw[0,f,Yg]}}function
A(a,c,b){if(typeof
a==="number")return[6,cc(c,b,0)];else
switch(a[0]){case
6:return[6,cc(c,b,a[1])];case
7:var
d=a[1],e=d[1],g=e[2];d[1]=[0,A(e[1],c,b),g];return[7,d];default:throw[0,f,Yh]}}function
cJ(c){if(typeof
c!=="number"&&7===c[0]){var
e=c[1],g=e[1],h=g[2],a=g[1];if(0===h[0])return 0;var
b=h[1],i=b[3],m=b[4],n=b[2],p=b[1];if(0===i){e[1]=[0,a,[0,ay(0)]];return 0}try{var
j=Ye(m,sF(p,n,i)),l=0;if(typeof
a!=="number"&&6===a[0]){var
k=ht(a,Yk,[1,aa(j)]);l=1}if(!l)var
k=a;e[1]=[0,k,[0,j]];var
q=0;return q}catch(a){a=d(a);throw[0,f,o(Yj,aR(a))]}}throw[0,f,Yi]}function
kI(b,a){return[5,g(b,a)]}function
gl(h,g){var
c=0,a=g;for(;;){if(a){var
d=a[1],e=a[2],f=d[1],c=[0,[0,f,b(h,d[2])],c],a=e;continue}return[6,c]}}function
e9(c,a){var
d=c[4][2];if(d){var
e=b(d[1],a);i0(a,c[4][3])[1][1]=[0,e];return e}throw[0,B,Yl]}function
kJ(a,d){var
b=a[4],c=a[4][3],e=b[4];iP(c,d);a[4]=[0,b[1],b[2],c,e];return 0}function
gm(f,b,c,a,e){var
d=n(e,c,an(f,b));x(function(b){var
c=sO(b[1],b[2],a[4][3]);a[4][3]=c;return 0},d);kJ(a,c);return at(b,g(function(a){return a[1]},d))?ai(a,b):0}function
ai(c,b){try{var
a=i0(b,c[4][3])[1][1],e=typeof
a==="number"?e9(c,b):2===a[0]?gm(a[1],b,a[2],c,a[4]):a[1];return e}catch(a){a=d(a);if(a===J)return 0;throw a}}function
mT(b){var
a=[0,0],d=b[4][3];cb(function(c,b){a[1]=[0,[0,c,b],a[1]];return 0},d);var
c=a[1];return x(function(a){ai(b,a[1]);return 0},c)}function
C(c,b){var
a=b;for(;;){if(typeof
a!=="number")switch(a[0]){case
1:return a[1];case
2:return a[1];case
8:var
a=ai(c,a[1]);continue}throw[0,f,Ym]}}function
av(a,b){if(typeof
b!=="number"&&5===b[0]){var
c=b[1];if(c){var
e=c[2];if(e){var
g=e[2];if(g){var
h=g[2];if(h&&!h[2]){var
m=h[1],n=g[1],o=e[1],p=c[1];try{var
i=C(a,m),j=C(a,n),k=C(a,o),l=C(a,p),q=gi(k,i),r=gi(l,j),s=df(k,i),t=[0,df(l,j),s,r,q];return t}catch(a){a=d(a);if(a[1]===f)throw[0,f,Yo];throw a}}}}}}throw[0,f,Yn]}function
dD(a){try{var
b=ai(a,a[3]);return b}catch(a){a=d(a);if(a===J)throw[0,f,Yp];throw a}}function
aB(c,b){if(typeof
b!=="number"&&8===b[0]){var
e=b[1];try{var
a=i0(e,c[4][3])[1][1],f=typeof
a==="number"?e9(c,e):2===a[0]?gm(a[1],e,a[2],c,a[4]):aB(c,a[1]);return f}catch(a){a=d(a);if(a===J)return 0;throw a}}return b}function
Ct(l,h){var
a=h[4][3];return cb(function(n,o){var
c=o;for(;;){var
d=c[1],a=d[1],g=0;if(typeof
a==="number"){var
m=c[2];d[1]=[0,e9(h,n)];var
c=[0,d,m];continue}else
switch(a[0]){case
0:var
e=a[1],j=0;if(typeof
e!=="number"&&7===e[0]){var
i=e;j=1}if(!j)g=1;break;case
1:var
f=a[1],k=0;if(typeof
f!=="number"&&7===f[0]){var
i=f;k=1}if(!k)g=1;break;default:return 0}return g?0:b(l,i)}},a)}function
Cu(d,c){var
a=c;for(;;){if(a){var
b=a[1],e=a[2],f=b[2];if(S(b[1],d))return[0,f];var
a=e;continue}return 0}}function
e(d,i,h){var
a=aB(d,h),c=0;if(typeof
a!=="number")switch(a[0]){case
6:var
e=a[1];c=1;break;case
7:var
b=a[1][1][1],j=0;if(typeof
b!=="number"&&6===b[0]){var
e=b[1];c=1;j=1}break}if(c){var
f=Cu(i,e);if(f){var
g=f[1];if(typeof
g!=="number")return[0,aB(d,g)]}return 0}return 0}function
Cv(i,h,g){var
a=aB(i,g),d=0;if(typeof
a!=="number")switch(a[0]){case
6:var
e=a[1];d=1;break;case
7:var
c=a[1][1][1],j=0;if(typeof
c!=="number"&&6===c[0]){var
e=c[1];d=1;j=1}break}if(d){var
f=Cu(h,e);if(f){var
b=f[1];if(typeof
b!=="number"&&8===b[0])return[0,b[1]]}return 0}return 0}function
bw(b,f,d,a){var
c=e(b,f,a);return c?c:e(b,d,a)}function
bs(a){var
j=[0,f,a];return function(h,i,k){var
a=aB(h,k),c=0;if(typeof
a!=="number")switch(a[0]){case
6:var
d=a[1];c=1;break;case
7:var
b=a[1][1][1],l=0;if(typeof
b!=="number"&&6===b[0]){var
d=b[1];c=1;l=1}break}if(c){var
e=a4(i,d);if(e){var
g=e[1];if(typeof
g!=="number")return aB(h,g)}throw j}throw[0,f,o(Yq,i)]}}function
mU(a,m,l){var
k=e(a,m,l);if(k){var
b=k[1],x=0;if(typeof
b==="number"||!(5===b[0]))x=1;else{var
c=b[1];if(c){var
d=c[2];if(d){var
g=d[2];if(g){var
h=g[2];if(h){var
i=h[2];if(i){var
j=i[2];if(j&&!j[2]){var
n=j[1],o=i[1],p=h[1],q=g[1],r=d[1],s=C(a,c[1]),t=C(a,r),u=C(a,q),v=C(a,p),w=C(a,o);return[V,s,t,u,v,w,C(a,n)]}}}}}}}throw[0,f,Yr]}return au}function
cy(d,c){mT(c);function
a(b,e){var
a=e[1][1];if(typeof
a==="number")return n(d,b,e9(c,b));else
switch(a[0]){case
0:return n(d,b,a[1]);case
1:return n(d,b,a[1]);default:return n(d,b,gm(a[1],b,a[2],c,a[4]))}}return cb(a,c[4][3])}function
el(e,c){mT(c);function
a(f,g){for(;;){var
d=g[1],a=d[1];if(typeof
a==="number"){e9(c,f);continue}else
switch(a[0]){case
0:d[1]=[0,b(e,a[1])];return 0;case
1:d[1]=[1,b(e,a[1])];return 0;default:gm(a[1],f,a[2],c,a[4]);continue}}}return cb(a,c[4][3])}function
Ys(d,c){mT(c);var
a=[0,0],f=c[4][3];cb(function(c,b){a[1]=[0,[0,c,b],a[1]];return 0},f);var
b=a[1],e=db(function(b,a){return bY(b[1],a[1])},b);return x(function(e){var
b=e[1],a=e[2][1][1];if(typeof
a==="number")return n(d,b,e9(c,b));else
switch(a[0]){case
0:return n(d,b,a[1]);case
1:return n(d,b,a[1]);default:return n(d,b,gm(a[1],b,a[2],c,a[4]))}},e)}function
mV(b){var
a=[0,0];cy(function(b,c){return Y(a,b)},b);return l(a[1])}function
i1(b){var
a=[0,0];cy(function(c,b){a[1]++;return 0},b);return a[1]}function
bB(a,b){var
c=b[1],d=b[2],e=cs(a[4][1],c);a[4][1]=e;var
f=sO(c,[0,[0,[0,d]],0],a[4][3]);a[4][3]=f;return 0}function
am(a,c){var
b=a[4][1]+1|0;bB(a,[0,b,c]);return b}function
mW(d,c){var
a=[0,0],b=[0,mS(0)];x(function(c){var
d=c[1],e=c[2];a[1]=cs(a[1],d);b[1]=sO(d,e,b[1]);return 0},c);var
e=ce(0);return[0,a[1],d,b[1],e]}function
Cw(a,g,f){var
h=e(a,Yt,g);if(h){var
b=h[1],k=0;if(typeof
b==="number"||!(4===b[0]))k=1;else
if(!c(b[1],Yv))return[0,f,0]}var
i=e(a,Yu,g);if(i){var
d=i[1];if(typeof
d!=="number"&&5===d[0]){var
j=d[1];return ah(al(function(b){if(typeof
b!=="number"&&8===b[0]){var
c=b[1];return[0,Cw(a,aB(a,[8,c]),c)]}return 0},j))}}return[0,f,0]}function
bL(a){var
b=e(a,Yw,ai(a,a[3]));if(b)return Cw(a,b[1],-1);throw[0,f,Yx]}function
e_(c,b,a){if(typeof
a!=="number")switch(a[0]){case
5:var
g=a[1];return kI(function(a){return e_(c,b,a)},g);case
6:var
h=a[1];return gl(function(a){return e_(c,b,a)},h);case
7:var
d=a[1][1],i=d[2];return[7,[0,[0,e_(c,b,d[1]),i]]];case
8:var
e=a[1],f=ek(b,e),j=f?f[1]:e;return[8,j]}return a}function
Cx(b,c,d,a){return typeof
a==="number"?e_(b,c,e9(b,d)):2===a[0]?e_(b,c,gm(a[1],d,a[2],b,a[4])):e_(b,c,a[1])}function
sP(b){var
a=i1(b),d=1,e=a<1?0:1===a?0:L(d,a),c=aV(0,a),f=mV(b);cr(function(a,b){return aO(c,a,b)},f,e);return c}function
hu(b,a){var
d=ek(b,a[3]),j=d?d[1]:a[3],c=[0,0],k=Cx(a,b,0,[0,a[5]]);cy(function(b,a){return Y(c,[0,b,[0,a]])},a);var
e=gd(c[1]),f=e[1],l=e[2],m=bI(function(c,d){return Cx(a,b,c,d)},f,l),n=g(function(a){var
c=ek(b,a);return c?c[1]:a},f),o=a7(n,g(function(a){return[0,[0,[0,a]],0]},m)),h=mW(a[4][2],o),i=ce(0),p=a[4][4];cb(function(d,c){var
a=ek(b,d);return a?aO(i,a[1],c):0},p);h[4]=i;return[0,a[1],a[2],j,h,k,a[6],a[7]]}function
Yy(h,c,i){var
d=B8(h),e=d?B8(c):d;if(e)return e;var
a=g(function(e){var
a=i;for(;;){if(a){var
b=e[2],f=e[1];if(typeof
b!=="number"&&4===b[0]){var
d=a[1],c=d[2],j=0;if(typeof
c==="number"||!(4===c[0]))j=1;else{var
g=c[1],h=b[1];if(aD(f,d[1])&&S(h,g))return 1}}var
a=a[2];continue}return 0}},c);for(;;){if(a){var
b=1-a[1],f=a[2];if(b){var
a=f;continue}return b}return 1}}function
sQ(b,a){gb(a,b,0);return a}function
Yz(b,a){return gc(a,b)}function
sR(g,j,i,c,o,n){var
h=o,a=n;for(;;){if(typeof
a!=="number")switch(a[0]){case
5:var
p=a[1];return x(function(a){return sR(g,j,i,c,h,a)},p);case
6:var
k=a[1],q=0===g?k:b(cZ(function(a){return at(a[1],g)}),k);return x(function(a){return sR(g,j,i,c,h,a[2])},q);case
7:var
a=a[1][1][1];continue;case
8:var
e=a[1],l=1-Yz(e,c[1]);if(l){try{var
r=ai(i,e),f=r}catch(a){a=d(a);if(a!==J)throw a;var
f=0,s=a}if(typeof
f!=="number"&&6===f[0]){var
m=Yy(g,j,f[1]);if(m){c[1]=sQ(e,c[1]);var
h=e,a=f;continue}return m}c[1]=sQ(e,c[1]);var
h=e,a=f;continue}return l}return 0}}function
Cy(h,g,c,f,b,e){var
a=e;for(;;)if(typeof
a==="number"){var
a=[0,e9(c,b)];continue}else
switch(a[0]){case
0:var
d=a[1];if(typeof
d!=="number"&&4<d[0])return sR(h,g,c,f,b,d);return 0;case
1:var
a=[0,a[1]];continue;default:var
a=[1,gm(a[1],b,a[2],c,a[4])];continue}}function
em(a){var
e=function
c(a,b){return c.fun(a,b)},i=[0,0];cy(function(h){return function(a){if(typeof
a!=="number"&&6===a[0]){var
d=a4(YA,a[1]),f=0;if(d){var
b=d[1],g=0;if(typeof
b!=="number"&&4===b[0])if(c(b[1],YB))g=1;else{var
e=1;f=1;g=1}}if(!f)var
e=0;if(e){i[1]=[0,h,i[1]];return 0}}return 0}},a);var
l=i[1];bt(e,function(c,a){if(typeof
a!=="number")switch(a[0]){case
5:var
f=a[1];return kI(b(e,c),f);case
6:var
g=a[1];return gl(b(e,c),g);case
7:var
d=a[1][1],h=d[2];return[7,[0,[0,n(e,c,d[1]),h]]];case
8:if(0!==ek(c,a[1]))return 0;break}return a});var
m=bL(a),p=z(l);if(z(m)!==p){var
j=aV(0,50);x(function(a){return aO(j,a,0)},l);x(function(a){return iP(j,a)},m);el(b(e,j),a)}var
f=[0,aV(0,xL)],q=[0,ai(a,a[3])];Cy(0,0,a,f,a[3],q);Cy(0,0,a,f,0,[0,a[5]]);f[1]=sQ(a[3],f[1]);var
h=[0,0],r=f[1];cb(function(a,b){h[1]=[0,a,h[1]];return 0},r);var
k=h[1],s=g(function(b){try{var
c=ai(a,b);return c}catch(a){a=d(a);if(a===J)return 0;throw a}},k),o=a[4],t=o[4],u=mS(0);a[4]=[0,0,o[2],u,t];var
v=a7(k,s);return x(function(b){return bB(a,b)},v)}function
Cz(h,a){var
d=0;if(typeof
a!=="number")switch(a[0]){case
6:var
e=a[1];d=1;break;case
7:var
c=a[1][1][1],j=0;if(typeof
c!=="number"&&6===c[0]){var
e=c[1];d=1;j=1}break}if(d){var
i=gd(e)[1],g=function(a){return n(ae(YE),h,a)},b=[0,0];for(;;){if(at(g(b[1]),i)){b[1]++;continue}return g(b[1])}}throw[0,f,YD]}function
CA(h,g,f){var
d=AZ(YF),e=0;if(d&&!c(d[1],YG)){var
a=dX(YH);e=1}if(!e)var
a=dX(o(g,kd(b(f,0))));return[5,[0,[3,a],[0,[3,a],0]]]}function
kK(d,a){if(typeof
a!=="number"&&6===a[0]){var
c=a4(d,a[1]);if(c){var
b=c[1];if(typeof
b!=="number"&&8===b[0])return[0,b[1]]}return 0}throw[0,f,YI]}function
CC(b,a){if(typeof
a!=="number"&&5===a[0])return a4(b,kp(a[1]));throw[0,f,YK]}function
CD(a,b,c){var
i=e(a,YL,c);if(i){var
d=i[1],o=0;if(typeof
d==="number"||!(5===d[0]))o=1;else{var
g=d[1];if(g){var
h=g[2];if(h&&!h[2]){var
n=h[1];if(!P5(b,g[1])&&!a8f(b,n)){var
j=e(a,YN,c);if(j)return CB(a,b,j[1]);var
k=bw(a,YP,YO,c);if(k)return CC(b,k[1]);throw[0,f,YQ]}return 0}}}throw[0,f,YM]}var
l=e(a,YR,c);if(l)return CB(a,b,l[1]);var
m=bw(a,YT,YS,c);if(m)return CC(b,m[1]);throw[0,f,YU]}function
CB(g,e,d){var
a=d;for(;;){if(typeof
a!=="number"&&5===a[0]){var
b=a[1];if(b){var
h=b[2],c=CD(g,e,b[1]);if(c)return[0,c[1]];var
a=[5,h];continue}return 0}throw[0,f,YJ]}}function
sS(b,j){var
k=bw(b,YW,YV,j);if(k){var
c=k[1];if(typeof
c!=="number"&&5===c[0]){var
h=0,a=c[1];for(;;){if(a){var
i=a[2],o=a[1];if(i){var
h=[0,[0,o,i[1]],h],a=i[2];continue}throw[0,f,YZ]}return l(h)}}}var
m=e(b,YX,j);if(m){var
d=m[1];if(typeof
d!=="number"&&5===d[0]){var
n=d[1];return ah(g(function(a){return sS(b,a)},n))}}throw[0,f,YY]}function
sT(a,c){var
b=a[5];if(typeof
b!=="number"&&6===b[0]){var
d=b[1];a[5]=[6,cc(Y1,CA(a,c,function(a){return sa(1.)}),d)];return 0}throw[0,f,Y0]}var
kL=Y2.slice();function
kM(d){var
c=aS(32,0);Bb(function(a,d){var
b=a<32?1:0,e=b?(p(c,a)[1+a]=d,0):b;return e},d);var
b=d.length-1;if(b<32&&!(31<b)){var
a=b;for(;;){var
e=a-b|0,f=p(kL,e)[1+e];p(c,a)[1+a]=f;var
g=a+1|0;if(31!==a){var
a=g;continue}break}}return c}function
kN(m,l,e,k,a,j,d){var
n=a8(l),o=a8(k),p=a8(j),i=0,q=kM(n),r=[0,a&aq,(a&uG)>>>8|0,(a&NU)>>>16|0,(a&-16777216)>>>24|0];if(4<=e&&m){var
f=[0,aq,aq,aq,aq];i=1}if(!i)var
f=[0];var
g=dX(kw([0,q,[0,o,[0,r,[0,p,[0,f,0]]]]]));if(3<=e){var
b=[0,g],c=1;for(;;){b[1]=hp(rZ(a8(dX(b[1])),0,d/8|0));var
s=c+1|0;if(50!==c){var
c=s;continue}var
h=b[1];break}}else
var
h=g;return rZ(a8(h),0,d/8|0)}function
sU(o,n,g,m,l,k,f,d){var
h=a8(m),e=kN(o,n,g,l,k,f,d);if(3<=g){var
b=[0,[0]];b[1]=iW(cw(e,bl(dX(kw([0,kL,[0,a8(f),0]])))));var
c=1;for(;;){var
i=aS(d/8|0,0),j=(d/8|0)-1|0,r=0;if(!(j<0)){var
a=r;for(;;){var
t=p(e,a)[1+a]^c;p(i,a)[1+a]=t;var
u=a+1|0;if(j!==a){var
a=u;continue}break}}b[1]=iW(cw(i,kv(b[1])));var
s=c+1|0;if(19!==c){var
c=s;continue}var
q=b[1];return aD(rZ(h,0,16),q)}}return aD(h,iW(cw(e,kv(kL))))}var
Y4=[0,function(a){return Y3}];function
mX(c,d,m,i,b,l,k,j,h,g,a){if(typeof
a!=="number")switch(a[0]){case
3:var
n=a[1],o=i0(b,d[4][3])[1][1];if(typeof
o!=="number"&&1===o[0])return[3,n];if(0===c)if(i)var
w=4,x=0,e=function(a,b){return hr(x,w,a,b)};else
var
y=4,z=0,e=function(a,b){return iZ(z,y,a,b)};else{var
v=0;if(typeof
c!=="number"&&1===c[0]){var
q=1;v=1}if(!v)var
q=0;if(q)if(i)var
A=8,B=0,e=function(a,b){return hr(B,A,a,b)};else
var
C=8,D=0,e=function(a,b){return iZ(D,C,a,b)};else
var
e=cw}var
p=bl(n);if(5!==h&&6!==h)return[3,aI(e(sN(c,b,l,k,j),p))];if(g)return[3,aI(e(a8(g[1]),p))];throw[0,f,Y5];case
5:var
r=a[1],s=i0(b,d[4][3])[1][1];if(typeof
s!=="number"&&1===s[0])return[5,r];return kI(function(a){return mX(c,d,m,i,b,l,k,j,h,g,a)},r);case
6:var
t=a[1],u=i0(b,d[4][3])[1][1];if(typeof
u!=="number"&&1===u[0])return[6,t];return gl(function(a){return mX(c,d,m,i,b,l,k,j,h,g,a)},t);case
7:return mY(c,d,m,i,b,l,k,j,h,g,a)}return a}function
mY(d,k,x,j,q,p,w,o,i,h,b){if(typeof
b!=="number"&&7===b[0]){var
N=b[1][1],a=N[1];if(typeof
a!=="number"&&6===a[0]){var
O=N[2],$=a[1],A=e(k,Y6,a),S=0;if(A){var
m=A[1],g=0;if(typeof
m!=="number")switch(m[0]){case
4:g=c(m[1],Y9)?2:1;break;case
5:var
M=m[1];if(M){var
v=M[1],y=0;if(typeof
v!=="number"&&4===v[0])if(c(v[1],Zb)){g=2;y=1}else{g=1;y=1}if(!y)g=2}else
g=2;break}switch(g){case
2:break;case
0:break;default:var
G=e(k,Y_,a),T=0;if(G){var
n=G[1],l=0;if(typeof
n!=="number")switch(n[0]){case
5:var
I=n[1];if(I){var
t=I[1],U=0;if(typeof
t!=="number"&&6===t[0]){var
J=t[1];l=1;U=1}if(!U)l=2}else
l=2;break;case
6:var
J=n[1];l=1;break}switch(l){case
2:break;case
0:break;default:var
K=e(k,Y$,[6,J]),V=0;if(K){var
u=K[1],z=0;if(typeof
u!=="number"&&4===u[0])if(c(u[1],Za))z=1;else
z=2;var
W=0;switch(z){case
2:W=1;break;case
0:break}if(!W){var
L=0;V=1}}if(!V)var
L=1;var
H=L;T=1}}if(!T)var
H=1;var
C=H;S=1}}if(!S)var
C=0;if(x){var
D=e(k,Y7,a),X=0;if(D){var
s=D[1],Y=0;if(typeof
s!=="number"&&4===s[0])if(c(s[1],Y8))Y=1;else{var
E=1;X=1;Y=1}}if(!X)var
E=0;var
F=E}else
var
F=x;var
_=F||C;if(_)return b;var
P=function(k,e,n){var
c=n;for(;;){var
f=[0,[0,d,h,q,p,k,o,i]];if(0===c[0]){var
a=c[1];if(0===d){if(j)return[0,hr(0,4,e,a)];var
r=aa(a);return[1,kH([0,f],b3(0,a),0,r)]}var
m=0;if(typeof
d!=="number"&&1===d[0]){var
l=1;m=1}if(!m)var
l=0;if(l){if(j)return[0,hr(0,8,e,a)];var
s=aa(a);return[1,kH([0,f],b3(0,a),0,s)]}if(j)return[0,cw(e,a)];var
t=aa(a);return[1,kH([0,f],b3(0,a),0,t)]}var
g=c[1];if(j){cJ(b);if(typeof
b!=="number"&&7===b[0]){var
c=b[1][1][2];continue}throw[0,B,Zd]}return[1,kH([0,[0,[0,d,h,q,p,k,o,i]]],g[1],g[2],g[3])]}},Z=0;if(5!==i&&6!==i){var
r=P(w,sN(d,q,p,w,o),O);Z=1}if(!Z){if(!h)throw[0,f,Zf];var
Q=h[1],ab=a8(Q),r=P(a8(Q),ab,O)}var
R=gl(function(a){return mX(d,k,x,j,q,p,w,o,i,h,a)},$),ac=0===r[0]?ht(R,Ze,[1,aa(r[1])]):R;return[7,[0,[0,ac,r]]]}}throw[0,B,Zc]}function
i2(f,t,a,s,k,b,r,j,i,h,d,c){var
e=a[5],p=0;if(typeof
e!=="number"&&6===e[0]){var
n=a4(Zh,e[1]),q=0;if(n){var
g=n[1],u=0;if(typeof
g!=="number"&&8===g[0]){var
o=g[1];q=1;u=1}}if(!q)var
o=-1;var
l=o;p=1}if(!p)var
l=-1;function
m(h){function
e(e,j,i){var
g=e!==l?1:0,k=g?(bB(a,[0,e,mX(s,a,f,t,e,j,h,d,b,c,i)]),0):g;return k}mT(a);function
g(c,d){var
b=d[1][1];if(typeof
b==="number"){var
f=d[2];return e(c,f,e9(a,c))}else
switch(b[0]){case
0:return e(c,d[2],b[1]);case
1:return e(c,d[2],b[1]);default:var
g=d[2];return e(c,g,gm(b[1],c,b[2],a,b[4]))}}cb(g,a[4][3]);a[5]=bn(a[5],Zg);return[0,a]}if(5!==b&&6!==b)return sU(f,k,b,r,j,i,h,d)?m(kN(f,k,b,j,i,h,d)):0;return c?m(a8(c[1])):0}function
kO(a){var
J=e(a,Zi,a[5]);if(J){var
h=J[1],K=e(a,Zj,h),L=e(a,Zk,h),k=e(a,Zl,h),i=e(a,Zm,h),H=0;if(K){var
p=K[1],b=0;if(typeof
p!=="number"&&4===p[0])if(c(p[1],ZB)||!L)b=1;else{var
y=L[1],d=0;if(typeof
y!=="number"&&1===y[0]){var
Y=y[1]-1|0;if(4<Y>>>0){b=1;d=1}else{var
g=0;switch(Y){case
0:if(i){var
z=i[1],ai=0;if(typeof
z!=="number"&&1===z[0]){var
Z=z[1];g=1;ai=1}if(!ai){b=1;d=1;g=2}}else{b=1;d=1;g=2}break;case
1:if(k){var
A=k[1],I=0;if(typeof
A!=="number"&&1===A[0]){var
l=A[1],aj=0;if(0===(l%8|0)&&40<=l&&!(N<l)){var
_=[0,[0,l,3]];I=1;aj=1}if(!aj){b=1;d=1;g=2;I=1}}if(!I){b=1;d=1;g=2}}else
if(i){var
B=i[1],ak=0;if(typeof
B==="number"||!(1===B[0]))ak=1;else{var
Z=B[1];g=1}if(ak){b=1;d=1;g=2}}else{b=1;d=1;g=2}break;case
2:b=1;d=1;g=2;break;default:if(i){var
C=i[1],al=0;if(typeof
C==="number"||!(1===C[0]))al=1;else{var
az=C[1],$=e(a,ZC,h);if($){var
aa=$[1],ab=e(a,ZD,aa);if(ab){var
ac=e(a,ZE,ab[1]),am=0;if(ac){var
D=ac[1],an=0;if(typeof
D!=="number"&&4===D[0]){var
E=D[1],ao=0;if(c(E,ZF))if(c(E,ZG))if(c(E,ZH)){an=1;ao=1}else{var
ap=0;if(k){var
F=k[1],aA=0;if(typeof
F!=="number"&&1===F[0]){var
n=[0,[0,F[1],4]];ap=1;aA=1}}if(!ap){var
ag=e(a,ZI,aa),aq=0;if(ag){var
G=ag[1],aB=0;if(typeof
G!=="number"&&1===G[0]){var
ah=[0,[0,G[1],4]];aq=1;aB=1}}if(!aq)var
ah=0;var
n=ah}}else
var
n=[0,[1,6===az?1:0]];else
var
n=ZJ;if(!ao){var
ad=n;am=1;an=1}}}if(!am)var
ad=0;var
ae=ad}else
var
ae=0;var
af=ae}else
var
af=0;var
_=af}if(al){b=1;d=1;g=2}}else{b=1;d=1;g=2}}switch(g){case
2:break;case
0:var
j=_;H=1;b=1;d=1;break;default:var
j=[0,[0,40,Z]];H=1;b=1;d=1}}}if(!d)b=1}}if(!H)var
j=0;var
M=function(e,b){var
d=0;if(j){var
g=0,c=j[1];if(typeof
c!=="number"&&0!==c[0]){var
a=48;d=1;g=1}}if(!d)var
a=32;if(m(b)<a)throw[0,f,o(e,Zn)];return R(b,0,a)};if(j){var
au=j[1],O=e(a,Zo,h);if(O){var
q=O[1];if(typeof
q!=="number"&&3===q[0]){var
av=M(Zq,q[1]),P=e(a,Zr,h);if(P){var
r=P[1];if(typeof
r!=="number"&&3===r[0]){var
aw=M(Zt,r[1]),Q=e(a,Zu,h);if(Q){var
s=Q[1];if(typeof
s!=="number"&&1===s[0]){var
ax=s[1],S=e(a,Zw,a[5]);if(S){var
t=S[1],aC=0;if(typeof
t==="number"||!(5===t[0]))aC=1;else{var
u=t[1];if(u){var
v=u[1],ar=0;if(typeof
v!=="number"&&3===v[0]){var
T=u[2];if(T){if(!T[2]){var
ay=v[1],U=e(a,Zy,h),as=0;if(U){var
w=U[1],aD=0;if(typeof
w!=="number"&&3===w[0]){var
V=[0,w[1]];as=1;aD=1}}if(!as)var
V=0;var
W=e(a,Zz,h),at=0;if(W){var
x=W[1],aE=0;if(typeof
x!=="number"&&3===x[0]){var
X=[0,x[1]];at=1;aE=1}}if(!at)var
X=0;return[0,au,aw,av,ax,ay,X,V]}ar=1}else
ar=1}}}}throw[0,f,Zx]}}throw[0,f,Zv]}}throw[0,f,Zs]}}throw[0,f,Zp]}throw[0,f,ZA]}throw[0,f,ZK]}function
mZ(d){var
c=[0,0];function
a(b,a){var
d=a?(c[1]=c[1]|1<<(b-1|0),0):a;return d}function
e(a){return at(a,d)}function
b(a){return hm(e,a)}a(3,b(1));a(4,b(0));a(5,b(2));a(6,b(3));a(7,1);a(8,1);a(9,b(4));a(10,b(5));a(11,b(6));a(12,b(7));var
f=L(13,32);x(function(b){return a(b,1)},f);return c[1]}function
CE(c){var
a=[0,0];function
b(a){return aD(c>>(a-1|0)&1,0)}if(b(3))Y(a,1);if(b(4))Y(a,0);if(b(5))Y(a,2);if(b(6))Y(a,3);if(b(9))Y(a,4);if(b(10))Y(a,5);if(b(11))Y(a,6);if(b(12))Y(a,7);return a[1]}function
ZL(c){var
b=[0,0],a=0;for(;;){dd(b,F(c,a));var
d=a+1|0;if(15!==a){var
a=d;continue}return b[1]%3|0}}var
CF=aV(0,16);function
i3(g,b,f){try{var
c=an(CF,[0,g,b,f]);return c}catch(c){c=d(c);if(c===J){var
a=[0,gj(ct(0,f))],i=[0,0],h=[0,0],j=[0,0];for(;;){if(i[1]){var
k=R(a[1],0,32);aO(CF,[0,g,b,f],k);return k}dd(h,1);var
q=b?b[1]:ZN,r=cU(ZM,aP(o(g,o(a[1],q)),64)),s=a8(R(a[1],0,16)),t=a8(R(a[1],16,16)),l=aI(hr([0,t],4,s,bl(r))),e=R(l,16,m(l)+oz|0);j[1]=F(e,m(e)-1|0);var
u=ct(0,e),n=ZL(e),v=0===n?gj:1===n?X8:X9;a[1]=v(u);var
p=64<=h[1]?1:0,w=p?j[1]<=(h[1]+oz|0)?1:0:p;i[1]=w;continue}}throw c}}function
dE(a){return dL<m(a)?R(a,0,dL):a}var
m0=iI(16,0);function
sV(h,l,g,e,k,a){if(48<=m(e)&&48<=m(a)){if(h){var
c=h[1];if(32!==c.length-1)b(K(ZO),c.length-1);var
i=c}else{var
n=[0,R(a,0,48),0],p=cU(ZQ,[0,g,[0,R(e,40,8),n]]);if(l)var
q=[0,a],j=function(a){return i3(g,q,a)};else
var
j=function(a){return gj(ct(0,a))};var
d=a8(j(p));if(32!==d.length-1)b(K(ZR),d.length-1);var
i=d}return iZ(ZP,8,i,bl(o(m0,k)))}throw[0,f,ZS]}function
sW(e,b,a,d){if(48<=m(a)){var
g=bl(o(m0,d)),h=cU(ZT,[0,b,[0,R(a,40,8),0]]);if(e)var
i=0,c=function(a){return i3(b,i,a)};else
var
c=function(a){return gj(ct(0,a))};return iZ(ZU,8,a8(c(h)),g)}throw[0,f,ZV]}function
CG(e,c,b,a){if(48<=m(a)&&48<=m(b)){var
g=R(a,0,32),h=[0,R(b,0,48),0],i=cU(ZW,[0,c,[0,R(a,32,8),h]]);if(e)var
j=[0,b],d=function(a){return i3(c,j,a)};else
var
d=function(a){return gj(ct(0,a))};return S(d(i),g)}throw[0,f,ZX]}function
sX(d,b,a){if(48<=m(a)){var
e=R(a,0,32),g=cU(ZY,[0,b,[0,R(a,32,8),0]]);if(d)var
h=0,c=function(a){return i3(b,h,a)};else
var
c=function(a){return gj(ct(0,a))};return S(c(g),e)}throw[0,f,ZZ]}function
CH(F,r,a){var
G=e(a,Z2,a[5]);if(G){var
s=G[1],c=kO(a),H=c[7],t=c[6],I=c[5],n=c[4],J=c[3],o=c[2],d=c[1];if(typeof
d==="number")var
k=0,j=N,i=4;else
if(0===d[0])var
k=0,j=d[1],i=d[2];else{var
O=d[1],S=0;if(H&&t){var
al=t[1];if(F)var
k=[0,F[1]],j=ak,i=5;else{var
P=e(a,Z6,s),z=0;if(P){var
x=P[1],T=0;if(typeof
x!=="number"&&3===x[0]){var
Q=x[1];if(sX(O,dE(r),o)){var
R=sW(O,dE(r),o,al);if(!(16<=m(Q)))throw[0,f,Z1];var
D=bl(Q),ae=iW(R),Y=Z0[1],Z=Cq(8,ae),q=aa(D);if(0===q)var
E=ay(0);else{var
A=ay(q),l=[0,0];a:for(;;){if(l[1]<q){var
B=cF(16,32),C=cF(16,32),h=0;for(;;){ee(B,h,aj(cH(D,h+l[1]|0)));var
ac=h+1|0;if(15!==h){var
h=ac;continue}Ql(Z,B,0,C,0);var
g=0;for(;;){var
_=eU(C,g);bv(A,g+l[1]|0,_);var
ab=g+1|0;if(15!==g){var
g=ab;continue}dd(l,16);continue a}}}var
ad=Y?Cr:XF,E=ad(A);break}}var
b=iW(E),U=0;if(97===p(b,9)[10]&&aQ===p(b,10)[11]&&98===p(b,11)[12]){var
af=p(b,3)[4]<<24,ag=p(b,2)[3]<<16|af,ah=p(b,1)[2]<<8,y=[0,p(b,0)[1]<<0|ah|ag];U=1}if(!U)var
y=0;if(!y)throw[0,$,Z9];if(!aD(y[1],n))throw[0,$,Z8];var
k=[0,aI(R)],j=ak,i=5;z=1;T=1}else{var
k=0,j=ak,i=5;z=1;T=1}}}if(!z)throw[0,f,Z7]}}else
S=1;if(S)throw[0,$,Z_]}var
K=e(a,Z3,s),V=0;if(K){var
u=K[1],W=0;if(typeof
u!=="number"&&0===u[0])if(u[1])W=1;else{var
v=0;V=1;W=1}}if(!V)var
v=1;var
L=e(a,Z4,s),X=0;if(L){var
w=L[1],am=0;if(typeof
w!=="number"&&3===w[0]){var
M=w[1];X=1;am=1}}if(!X)var
M=Z5;a[7]=[0,[0,[0,d,o,J,n,I,t,H],v,M]];var
ai=CE(n);return[0,i2(1-v,0,a,d,r,i,o,J,n,I,j,k),ai]}return[0,[0,a],0]}function
sY(g,f,e){var
c=dX(hp(g));if(3<=e){var
a=[0,c],b=1;for(;;){a[1]=dX(a[1]);var
h=b+1|0;if(50!==b){var
b=h;continue}var
d=a[1];break}}else
var
d=c;return a8(R(d,0,f/8|0))}function
m1(b,e){var
c=A_(b),d=b.length-1-1|0,f=0;if(!(d<0)){var
a=f;for(;;){var
g=p(b,a)[1+a]^e;p(c,a)[1+a]=g;var
h=a+1|0;if(d!==a){var
a=h;continue}break}}return c}function
Z$(m,l,h,r,q,k){var
w=e(h,_a,h[5]);if(w){var
G=w[1],i=kO(h),x=i[7],y=i[6],n=i[5],o=i[4],c=i[3],j=i[2],d=i[1];if(typeof
d==="number")var
b=N,a=4;else
if(0===d[0])var
b=d[1],a=d[2];else
var
M=ak,O=d[1]?6:5,b=M,a=O;var
z=e(h,_b,G),E=0;if(z){var
s=z[1],F=0;if(typeof
s!=="number"&&0===s[0])if(s[1])F=1;else{var
g=1;E=1;F=1}}if(!E)var
g=0;if(!(1<a-5>>>0)&&ak===b&&y&&x){var
J=x[1],K=y[1],C=l?l[1]:_h,D=m?m[1]:_g;if(sX(6===a?1:0,dE(D),j))var
v=sW(6===a?1:0,dE(D),j,K);else{if(!CG(6===a?1:0,dE(C),j,c))throw[0,f,_f];var
v=sV(0,6===a?1:0,dE(C),c,J,j)}var
L=[0,aI(v)];return mY(d,h,g,0,r,q,iW(v),b,a,L,k)}if(0===l){var
A=m?m[1]:_d;if(sU(g,A,a,j,c,o,n,b))return mY(d,h,g,0,r,q,kN(g,A,a,c,o,n,b),b,a,0,k);throw[0,f,_c]}var
B=sY(kM(a8(de(l))),b,a);if(2===a)var
t=aI(cw(B,bl(c)));else{var
u=[0,bl(c)],p=19;for(;;){var
H=u[1];u[1]=cw(m1(B,p),H);var
I=p-1|0;if(0!==p){var
p=I;continue}var
t=aI(u[1]);break}}if(sU(g,t,a,j,c,o,n,b))return mY(d,h,g,0,r,q,kN(g,t,a,c,o,n,b),b,a,0,k);throw[0,f,_e]}return k}function
CI(m,h,p){var
q=kM(a8(h));if(m)var
d=m[1],j=d[4],c=d[3],i=d[2],b=d[1];else
var
g=kO(p),j=g[7],c=g[3],i=g[2],b=g[1];if(typeof
b==="number")var
k=N,a=4;else
if(0===b[0])var
k=b[1],a=b[2];else
var
u=ak,v=b[1]?6:5,k=u,a=v;if(5!==a&&6!==a){var
n=sY(q,k,a);if(2===a)var
o=aI(cw(n,bl(c)));else{var
l=[0,bl(c)],e=19;for(;;){var
s=l[1];l[1]=cw(m1(n,e),s);var
t=e-1|0;if(0!==e){var
e=t;continue}var
o=aI(l[1]);break}}return[0,[0,_k,o]]}if(CG(6===a?1:0,dE(h),i,c)){if(j){var
r=j[1];return[0,[0,aI(sV(0,6===a?1:0,dE(h),c,r,i)),_i]]}throw[0,f,_j]}return 0}function
sZ(f,e,d,h){var
i=S(e,_m)?d:e,b=sY(kM(a8(i)),h,f),g=kM(a8(d));if(2===f)return aI(cw(b,kv(g)));var
c=[0,cw(b,kv(g))],a=1;for(;;){var
j=c[1];c[1]=cw(m1(b,a),j);var
k=a+1|0;if(19!==a){var
a=k;continue}return aI(c[1])}}function
s0(j,i,h,g,e,d,f){var
b=kN(j,i,d,h,g,e,f);if(2===d)return aI(cw(b,kv(kL)));var
c=[0,cw(b,bl(dX(kw([0,kL,[0,a8(e),0]]))))],a=1;for(;;){var
l=c[1];c[1]=cw(m1(b,a),l);var
m=a+1|0;if(19!==a){var
a=m;continue}var
k=P(aP(0,16));return o(aI(c[1]),k)}}function
m2(a){var
i=e(a,_n,a[5]);if(i){var
c=i[1],q=0;if(typeof
c==="number"||!(5===c[0]))q=1;else{var
g=c[1];if(g){var
h=g[1],l=0;if(typeof
h!=="number"&&3===h[0]){var
k=g[2];if(k){if(!k[2])return[0,h[1],a];l=1}else
l=1}}}}var
b=CA(a,_o,function(a){return sa(1.)}),m=a[7],n=a[6],o=A(a[5],_p,b),p=[0,a[1],a[2],a[3],a[4],o,n,m];if(typeof
b!=="number"&&5===b[0]){var
d=b[1];if(d){var
f=d[1],r=0;if(typeof
f==="number"||!(3===f[0]))r=1;else{var
j=d[2];if(j&&!j[2])return[0,f[1],p]}}}throw[0,B,_q]}function
s1(d,c,b,i,h,g){var
e=i2(0,1,g,_x,i,2,c,d,b,h,40,0),j=[6,[0,_w,[0,_v,[0,_u,[0,[0,_t,[3,d]],[0,[0,_s,[3,c]],[0,[0,_r,[1,b]],0]]]]]]];if(e){var
a=e[1],k=am(a,j),l=a[7],m=a[6],n=A(a[5],_y,[8,k]);return[0,a[1],a[2],a[3],a[4],n,m,l]}throw[0,f,_z]}function
_A(a,h,g,f){var
b=mZ(g),c=sZ(2,h,a,40),d=m2(f),e=d[1],i=d[2];return s1(c,s0(0,a,c,b,e,2,40),b,a,e,i)}function
s2(d,c,b,i,h,g){var
e=i2(0,1,g,_I,i,3,c,d,b,h,N,0),j=[6,[0,_H,[0,_G,[0,_F,[0,[0,_E,[3,d]],[0,[0,_D,[3,c]],[0,_C,[0,[0,_B,[1,b]],0]]]]]]]];if(e){var
a=e[1],k=am(a,j),l=a[7],m=a[6],n=A(a[5],_J,[8,k]);return[0,a[1],a[2],a[3],a[4],n,m,l]}throw[0,f,_K]}function
CJ(e,d,c,j,i,h,b){var
g=i2(1-b,1,h,_V,j,4,d,e,c,i,N,0),k=[6,[0,_U,[0,_T,[0,_S,[0,[0,_R,[0,b]],[0,_Q,[0,_P,[0,[0,_O,[3,e]],[0,[0,_N,[3,d]],[0,[0,_M,[1,c]],_L]]]]]]]]]];if(g){var
a=g[1],l=am(a,k),m=a[7],n=a[6],o=A(a[5],_W,[8,l]);return[0,a[1],a[2],a[3],a[4],o,n,m]}throw[0,f,_X]}function
_Y(a,h,g,f){var
b=mZ(g),c=sZ(3,h,a,N),d=m2(f),e=d[1],i=d[2];return s2(c,s0(0,a,c,b,e,3,N),b,a,e,i)}function
s3(e,d,c,j,i,b,h){var
g=i2(1-b,1,h,0,j,4,d,e,c,i,N,0),k=[6,[0,_8,[0,_7,[0,_6,[0,[0,_5,[0,b]],[0,_4,[0,_3,[0,[0,_2,[3,e]],[0,[0,_1,[3,d]],[0,[0,_0,[1,c]],_Z]]]]]]]]]];if(g){var
a=g[1],l=am(a,k),m=a[7],n=a[6],o=A(a[5],_9,[8,l]);return[0,a[1],a[2],a[3],a[4],o,n,m]}throw[0,f,__]}function
s4(b,g,e,d,c,n,m,l,k,j,i){var
o=[0,[0,$g,[3,e]],[0,[0,$f,[3,d]],[0,[0,$e,[1,c]],[0,$d,[0,$c,[0,[0,$b,[3,n]],[0,[0,$a,[3,m]],[0,[0,_$,[3,l]],0]]]]]]]],p=b?6:5,q=[6,[0,$m,[0,$l,[0,$k,[0,[0,$j,[0,g]],[0,$i,[0,[0,$h,[1,p]],o]]]]]]],r=[0,j],s=ak,t=b?6:5,h=i2(1-g,1,i,[1,b],$n,t,d,e,c,k,s,r);if(h){var
a=h[1],u=am(a,q),v=a[7],w=a[6],x=A(a[5],$o,[8,u]);return[0,a[1],a[2],a[3],a[4],x,w,v]}throw[0,f,$p]}function
m3(e){var
b=aS(8,0),a=0;for(;;){var
c=r$(aq);p(b,a)[1+a]=c;var
d=a+1|0;if(7!==a){var
a=d;continue}return hp(b)}}function
CK(i,y,Z,Y,X,W){var
n=dE(Z),j=dE(Y),z=m3(0),A=m3(0),B=m3(0),C=m3(0),x=aS(32,0),g=0;for(;;){var
U=r$(aq);p(x,g)[1+g]=U;var
V=g+1|0;if(31!==g){var
g=V;continue}var
o=bl(hp(x)),D=mZ(X);if(i)var
P=0,l=function(a){return i3(n,P,a)};else
var
l=function(a){return gj(ct(0,a))};var
f=cU($u,[0,l(cU($t,[0,n,[0,z,0]])),[0,z,[0,A,0]]]),Q=a8(l(cU($v,[0,n,[0,A,0]]))),S=R(aI(hr([0,a8(m0)],8,Q,o)),16,32);if(i)var
T=[0,f],m=function(a){return i3(j,T,a)};else
var
m=function(a){return gj(ct(0,a))};var
u=cU($x,[0,m(cU($w,[0,j,[0,B,[0,f,0]]])),[0,B,[0,C,0]]]),v=a8(m(cU($y,[0,j,[0,C,[0,f,0]]]))),w=R(aI(hr([0,a8(m0)],8,v,o)),16,32),E=m2(W),a=aS(16,0),b=0,_=E[2],$=E[1],ab=[0,v],K=a8w($q,cQ(D));for(;;){p(a,b)[1+b]=iC(P3($s,a8y(P3(a8x($r,b*8|0),K),b*8|0)));var
O=b+1|0;if(7!==b){var
b=O;continue}var
L=y?84:70;p(a,8)[9]=L;p(a,9)[10]=97;p(a,10)[11]=aQ;p(a,11)[12]=98;var
e=12;for(;;){p(a,e)[1+e]=0;var
N=e+1|0;if(15!==e){var
e=N;continue}var
M=a8(aI(sV(ab,i,j,u,w,f))),t=bl(hp(a)),G=Cp(8,M),k=aa(t);if(0===k)var
F=ay(0);else{var
q=ay(k),h=[0,0];c:for(;;){if(h[1]<k){var
r=cF(16,32),s=cF(16,32),d=0;for(;;){ee(r,d,aj(dZ(t,d+h[1]|0)));var
J=d+1|0;if(15!==d){var
d=J;continue}Qm(G,r,0,s,0);var
c=0;for(;;){var
H=eU(s,c);e6(q,c+h[1]|0,H);var
I=c+1|0;if(15!==c){var
c=I;continue}dd(h,16);continue c}}}var
F=q;break}}var
ac=aI(o);return s4(i,y,u,f,D,aI(F),w,S,$,ac,_)}}}}var
$z=0,$A=1;function
e$(a){return e(a,$B,a[5])?1:0}function
$C(d,c){var
m=d[7];if(m){var
j=m[1],k=j[2],a=j[1],n=a[7],o=a[6],e=a[5],g=a[4],h=a[3],b=a[2],i=a[1],r=j[3];if(typeof
i==="number")return s3(h,b,g,c,e,k,d);else{if(0===i[0]){var
p=i[1];if(40===p)return s1(h,b,g,c,e,d);if(N===p)return 4===i[2]?CJ(h,b,g,c,e,d,k):s2(h,b,g,c,e,d);throw[0,f,$D]}var
l=i[1];if(n){var
s=n[1];if(o){var
q=o[1];if(sX(l,dE(c),b))return s4(l,k,h,b,g,r,s,q,e,aI(sW(l,dE(c),b,q)),d);throw[0,f,$E]}throw[0,f,$F]}throw[0,f,$G]}}throw[0,f,$H]}function
$I(a,r){var
m=a[7];if(m){var
j=m[1],k=j[2],b=j[1],l=b[7],n=b[6],g=b[5],h=b[4],c=b[3],d=b[2],e=b[1],s=j[3],o=CI([0,[0,e,d,c,l]],r,a);if(o){var
p=o[1],i=p[2],t=p[1];if(typeof
e==="number")return s3(c,d,h,i,g,k,a);else{if(0===e[0]){var
q=e[1];if(40===q)return s1(c,d,h,i,g,a);if(N===q)return 4===e[2]?CJ(c,d,h,i,g,a,k):s2(c,d,h,i,g,a);throw[0,f,$J]}var
u=e[1];if(l){var
v=l[1];if(n)return s4(u,k,c,d,h,s,v,n[1],g,t,a);throw[0,f,$K]}throw[0,f,$L]}}throw[0,f,$M]}throw[0,f,$N]}var
CL=[Q,$Q,aL(0)];function
$O(c,a,b){var
g=c?c[1]:1,d=g?hu(sP(a),a):a;try{try{var
h=$C(d,b),e=h}catch(a){var
e=$I(d,b)}return e}catch(a){throw[0,f,$P]}}sm($T,[0,CL,$S,$R]);var
$U=[0,6];function
CM(d,c){for(;;){var
a=b(c[4],0);if(a===-1)throw ar;if(gk(a)){d[1]++;continue}return a}}var
kP=[Q,$V,aL(0)],dh=[Q,$W,aL(0)];function
$X(e){var
d=aa(e),c=ay((d*2|0)+1|0);e6(c,d*2|0,62);var
f=d-1|0,h=0;if(!(f<0)){var
a=h;for(;;){var
i=dZ(e,a),g=aK(b(ae($Y),i));e6(c,a*2|0,aM(g));e6(c,(a*2|0)+1|0,aM(bu(g)));var
j=a+1|0;if(f!==a){var
a=j;continue}break}}return c}function
CN(b,a){var
c=hl(a);return aj(aE(o($Z,o(hl(b),c))))}function
$0(f){var
c=[0,0],g=[0,0];try{for(;;){if(g[1]){var
t=mP(l(c[1]));return t}var
a=CM([0,0],f),b=CM([0,0],f);if(62===a){bA(g);bf(f)}else{var
h=0;if(62===b){var
i=0;if(!(48<=a)||57<a)i=1;var
j=0;if(i){var
k=0;if(97<=a&&!(bE<a))k=1;if(!k){var
m=0;if(65<=a&&!(70<a))m=1;if(!m){h=1;j=1}}}if(!j){Y(c,CN(a,48));bA(g)}}else
h=1;if(h){var
n=0;if(!(48<=a)||57<a)n=1;var
e=0;if(n){var
o=0;if(97<=a&&!(bE<a)){e=1;o=1}if(!o&&65<=a&&!(70<a))e=1}else
e=1;var
p=0;if(e){var
q=0;if(!(48<=b)||57<b)q=1;var
r=0;if(q){var
s=0;if(97<=b&&!(bE<b))s=1;if(!s&&(!(65<=b)||70<b))r=1}if(!r){Y(c,CN(a,b));p=1}}if(!p)throw J}}continue}}catch(a){a=d(a);if(a===ar)return mP(l(c[1]));if(a===J)throw[0,kP,$1];throw a}}function
m4(i,h,g,f,e,d,b){function
c(b,a){return bd(b+Pe|0,dA(a,85))}var
j=c(e,0),k=c(f,1)+j|0,l=c(g,2)+k|0,m=c(h,3),n=(c(i,4)+m|0)+l|0;function
a(a){return aj(n<<(24-a|0)>>>24|0)}if(4===d){var
o=[0,a(24),b],p=[0,a(16),o],q=[0,a(8),p];return[0,a(0),q]}if(3===d){var
r=[0,a(24),b],s=[0,a(16),r];return[0,a(8),s]}if(2===d){var
t=[0,a(24),b];return[0,a(16),t]}return 1===d?[0,a(24),b]:b}function
kQ(d,a){if(d){var
e=d[2];if(e){var
f=e[2],b=e[1],c=d[1];if(!f)return m4(c,b,co,62,33,1,a);var
g=f[2],h=f[1];if(!g)return m4(c,b,h,co,62,2,a);var
i=g[2],j=g[1];if(!i)return m4(c,b,h,j,co,3,a);if(!i[2])return m4(c,b,h,j,i[1],4,a)}}return a}function
$2(f,j,i){var
a=j,c=i;for(;;){var
g=b(f[4],0);if(g===-1)throw ar;var
d=aj(g);if(gk(d)){if(5===z(a)){var
k=kQ(l(a),c),a=0,c=k;continue}continue}if(b5===d){var
m=[0,0,[0,0,[0,0,[0,0,kQ(l(a),c)]]]],a=0,c=m;continue}if(co===d){var
h=b(f[4],0);if(h===-1)throw ar;var
e=aj(h);if(62===e)return mP(l(kQ(l(a),c)));if(5===z(a)){var
n=kQ(l(a),c),a=[0,e,0],c=n;continue}var
a=[0,e,a];continue}if(33<=d&&!(dn<d)){if(5===z(a)){var
o=kQ(l(a),c),a=[0,d,0],c=o;continue}var
a=[0,d,a];continue}throw[0,$,$3]}}function
$4(a){try{var
b=$2(a,0,0);return b}catch(a){throw[0,f,$5]}}function
CO(a){if(a){var
b=a[2];if(b){var
c=b[2];if(c){var
d=c[2];if(d&&!d[2]){var
m=d[1],n=c[1],o=b[1],p=a[1],q=[0,rE(cQ(m),cQ(dA(0,ak))),0],r=[0,rE(cQ(n),cQ(dA(1,ak))),q],s=[0,rE(cQ(o),cQ(dA(2,ak))),r],e=bk(a8n,Rg,[0,rE(cQ(p),cQ(dA(3,ak))),s]),f=cQ(dA(1,85)),g=cQ(dA(2,85)),h=cQ(dA(3,85)),t=cQ(dA(0,85)),i=cQ(dA(4,85)),j=rF(e,he(e,f)),k=rF(j,he(j,g)),l=rF(k,he(k,h));return[0,iC(mb(rF(l,he(l,i)),i)),iC(mb(he(l,i),h)),iC(mb(he(k,h),g)),iC(mb(he(j,g),f)),iC(mb(he(e,f),t))]}}}}throw[0,B,$6]}function
$7(o){var
c=[0,0],d=[0,0],e=b3(0,o);for(;;){if(d[1]){var
a=function(a){return aj(a+33|0)},p=c[1];return mP(q(ah(kf(function(d){var
e=z(d);if(4<=e){var
b=CO(d),f=b[5],g=b[4],h=b[3],i=b[2],j=b[1];if(0===((((j+i|0)+h|0)+g|0)+f|0))return $8;var
k=[0,a(f),0],l=[0,a(g),k],m=[0,a(h),l],n=[0,a(i),m];return[0,a(j),n]}var
c=CO(q(d,aP(0,4-e|0))),o=c[4],p=c[3],r=c[2],s=c[1],t=[0,a(c[5]),0],u=[0,a(o),t],v=[0,a(p),u],w=[0,a(r),v];return iT([0,a(s),w],e+1|0)},p)),$9))}var
k=b(e[3],0),l=b(e[3],0),h=b(e[3],0),f=b(e[3],0);if(k){var
g=k[1],j=0;if(l){var
i=l[1],n=0;if(h){var
m=h[1];if(f)c[1]=[0,[0,g,[0,i,[0,m,[0,f[1],0]]]],c[1]];else{bA(d);c[1]=[0,[0,g,[0,i,[0,m,0]]],c[1]]}}else
if(f)n=1;else{bA(d);c[1]=[0,[0,g,[0,i,0]],c[1]]}if(!n)j=1}else
if(!h&&!f){bA(d);c[1]=[0,[0,g,0],c[1]];j=1}if(!j)throw[0,B,$_]}else
bA(d);continue}}function
$$(a){return bl(a85(aI(a)))}function
s5(c){if(0===aa(c))return ay(0);try{var
b=bl(a86(aI(c)));return b}catch(b){b=d(b);if(b[1]===CL){var
e=b[3],f=b[2];throw[0,kP,o(aad,o(aac,o(f,o(aab,o(e,o(aaa,a(k+aa(c))))))))]}throw b}}function
ao(b){var
j=ad(b),i=ad(b),g=ad(b),f=ad(b);if(0===j){if(1===i&&1===g&&1===f)return 2}else
if(1===j)if(0===i){if(0===g){if(0===f)return 3}else
if(1===g&&1===f)return 4}else
if(1===i)if(0===g){if(0===f)return 5}else
if(1===g){if(0===f)return 6;if(1===f)return 7}var
e=ad(b);if(0===j){if(0===i){if(1===g&&1===f&&1===e)return 10}else
if(1===i&&0===g&&0===f&&0===e)return 11}else
if(1===j)if(0===i){if(0===g){if(1===f){if(0===e)return N+ao(b)|0;if(1===e)return 8}}else
if(1===g&&0===f&&0===e)return 9}else
if(1===i&&0===g&&1===f&&1===e)return 64+ao(b)|0;var
c=ad(b);if(0===j){if(0===i){if(0===g){if(0===f){if(1===e&&1===c)return 13}else
if(1===f&&1===e&&1===c)return 1}else
if(1===g&&0===f&&0===e&&0===c)return 12}else
if(1===i)if(0===g){if(1===f&&1===e&&1===c)return c3+ao(b)|0}else
if(1===g&&0===f&&0===e&&0===c)return Ne+ao(b)|0}else
if(1===j)if(0===i){if(1===g&&0===f&&1===e){if(0===c)return 16;if(1===c)return 17}}else
if(1===i&&0===g&&1===f&&0===e){if(0===c)return 14;if(1===c)return 15}var
d=ad(b);if(0===j)if(0===i){if(0===g){if(0===f){if(0===e){if(1===c&&1===d)return 22}else
if(1===e&&0===c&&0===d)return 23}else
if(1===f)if(0===e){if(0===c&&0===d)return 20}else
if(1===e&&0===c&&0===d)return 19}else
if(1===g)if(0===f){if(0===e){if(1===c&&1===d)return 26}else
if(1===e&&1===c&&1===d)return 21}else
if(1===f&&0===e&&0===c&&0===d)return 28}else
if(1===i)if(0===g){if(0===f){if(1===e)if(0===c){if(0===d)return 27}else
if(1===c&&1===d)return 18}else
if(1===f&&0===e)if(0===c){if(0===d)return 24}else
if(1===c&&1===d)return 25}else
if(1===g&&0===f&&1===e&&1===c&&1===d)return ak+ao(b)|0;var
a=ad(b);if(0===j)if(0===i){if(0===g){if(0===f){if(0===e){if(0===c){if(1===d){if(0===a)return 29;if(1===a)return 30}}else
if(1===c&&0===d){if(0===a)return 45;if(1===a)return 46}}else
if(1===e&&0===c&&1===d){if(0===a)return 47;if(1===a)return 48}}else
if(1===f)if(0===e){if(0===c){if(1===d){if(0===a)return 33;if(1===a)return 34}}else
if(1===c)if(0===d){if(0===a)return 35;if(1===a)return 36}else
if(1===d){if(0===a)return 37;if(1===a)return 38}}else
if(1===e&&0===c&&1===d){if(0===a)return 31;if(1===a)return 32}}else
if(1===g)if(0===f){if(0===e){if(1===c&&0===d){if(0===a)return 53;if(1===a)return 54}}else
if(1===e)if(0===c){if(0===d){if(0===a)return 39;if(1===a)return 40}else
if(1===d){if(0===a)return 41;if(1===a)return 42}}else
if(1===c&&0===d){if(0===a)return 43;if(1===a)return 44}}else
if(1===f&&0===e)if(0===c){if(1===d){if(0===a)return 61;if(1===a)return 62}}else
if(1===c)if(0===d){if(0===a)return 63;if(1===a)return 0}else
if(1===d){if(0===a)return pB+ao(b)|0;if(1===a)return Po+ao(b)|0}}else
if(1===i)if(0===g){if(0===f){if(1===e&&0===c&&1===d){if(0===a)return 59;if(1===a)return 60}}else
if(1===f)if(0===e){if(0===c){if(1===d){if(0===a)return 49;if(1===a)return 50}}else
if(1===c&&0===d){if(0===a)return 51;if(1===a)return 52}}else
if(1===e&&0===c)if(0===d){if(0===a)return 55;if(1===a)return 56}else
if(1===d){if(0===a)return 57;if(1===a)return 58}}else
if(1===g&&0===f)if(0===e){if(1===c)if(0===d){if(0===a)return Kw+ao(b)|0;if(1===a)return gH+ao(b)|0}else
if(1===d&&1===a)return Kc+ao(b)|0}else
if(1===e&&0===c&&0===d&&0===a)return JZ+ao(b)|0;var
h=ad(b);if(0===j&&1===i)if(0===g){if(0===f&&1===e&&1===c&&0===d)if(0===a){if(0===h)return Ih+ao(b)|0;if(1===h)return w7+ao(b)|0}else
if(1===a){if(0===h)return KM+ao(b)|0;if(1===h)return or+ao(b)|0}}else
if(1===g&&0===f)if(0===e){if(1===c&&1===d&&0===a){if(0===h)return Mw+ao(b)|0;if(1===h)return wv+ao(b)|0}}else
if(1===e)if(0===c){if(0===d){if(1===a){if(0===h)return yE+ao(b)|0;if(1===h)return Nq+ao(b)|0}}else
if(1===d)if(0===a){if(0===h)return ME+ao(b)|0;if(1===h)return b7+ao(b)|0}else
if(1===a){if(0===h)return Ij+ao(b)|0;if(1===h)return Oj+ao(b)|0}}else
if(1===c&&0===d)if(0===a){if(0===h)return HK+ao(b)|0;if(1===h)return NJ+ao(b)|0}else
if(1===a){if(0===h)return NS+ao(b)|0;if(1===h)return LI+ao(b)|0}var
m=ad(b),l=ad(b);if(0===j&&0===i&&0===g&&0===f&&0===e&&0===c&&0===d&&1===a)if(0===h){if(0===m&&0===l)return OB+ao(b)|0}else
if(1===h&&0===m){if(0===l)return HW+ao(b)|0;if(1===l)return HM+ao(b)|0}var
k=ad(b);if(0===j&&0===i&&0===g&&0===f&&0===e&&0===c&&0===d)if(0===a){if(0===h&&0===m&&0===l&&1===k)return-1}else
if(1===a)if(0===h){if(0===m){if(1===l){if(0===k)return Mr+ao(b)|0;if(1===k)return Im+ao(b)|0}}else
if(1===m)if(0===l){if(0===k)return OP+ao(b)|0;if(1===k)return Om+ao(b)|0}else
if(1===l){if(0===k)return N1+ao(b)|0;if(1===k)return PI+ao(b)|0}}else
if(1===h&&1===m)if(0===l){if(0===k)return K7+ao(b)|0;if(1===k)return LA+ao(b)|0}else
if(1===l){if(0===k)return NC+ao(b)|0;if(1===k)return GI+ao(b)|0}throw[0,$,aae]}function
ap(b){var
k=ad(b),j=ad(b);if(1===k){if(0===j)return 3;if(1===j)return 2}var
l=ad(b);if(0===k&&1===j){if(0===l)return 1;if(1===l)return 4}var
n=ad(b);if(0===k&&0===j&&1===l){if(0===n)return 6;if(1===n)return 5}var
m=ad(b);if(0===k&&0===j&&0===l&&1===n&&1===m)return 7;var
i=ad(b);if(0===k&&0===j&&0===l&&1===n&&0===m){if(0===i)return 9;if(1===i)return 8}var
g=ad(b);if(0===k&&0===j&&0===l&&0===n&&1===m)if(0===i){if(0===g)return 10;if(1===g)return 11}else
if(1===i&&1===g)return 12;var
f=ad(b);if(0===k&&0===j&&0===l&&0===n&&0===m&&1===i)if(0===g){if(0===f)return 13}else
if(1===g&&1===f)return 14;var
e=ad(b);if(0===k&&0===j&&0===l&&0===n&&1===m&&1===i&&0===g&&0===f&&0===e)return 15;var
d=ad(b);if(0===k&&0===j&&0===l&&0===n)if(0===m){if(0===i){if(1===g)if(0===f){if(0===e&&0===d)return 18}else
if(1===f&&1===e&&1===d)return 64+ap(b)|0}else
if(1===i)if(0===g){if(1===f&&1===e&&1===d)return 16}else
if(1===g&&0===f&&0===e&&0===d)return 17}else
if(1===m&&1===i&&0===g&&1===f&&1===e&&1===d)return 0;var
c=ad(b);if(0===k&&0===j&&0===l&&0===n)if(0===m){if(0===i){if(0===g){if(1===f)if(0===e){if(0===d&&0===c)return OB+ap(b)|0}else
if(1===e&&0===d){if(0===c)return HW+ap(b)|0;if(1===c)return HM+ap(b)|0}}else
if(1===g)if(0===f){if(1===e&&1===d&&1===c)return 24}else
if(1===f&&0===e&&0===d&&0===c)return 25}else
if(1===i)if(0===g){if(1===f&&0===e&&0===d&&0===c)return 23}else
if(1===g&&0===f&&1===e&&1===d&&1===c)return 22}else
if(1===m&&1===i&&0===g)if(0===f){if(1===e&&1===d&&1===c)return 19}else
if(1===f)if(0===e){if(0===d&&0===c)return 20}else
if(1===e&&0===d&&0===c)return 21;var
a=ad(b);if(0===k&&0===j&&0===l&&0===n)if(0===m){if(0===i){if(0===g){if(0===f){if(0===e&&0===d&&0===c&&1===a)return-1}else
if(1===f)if(0===e){if(0===d){if(1===c){if(0===a)return Mr+ap(b)|0;if(1===a)return Im+ap(b)|0}}else
if(1===d)if(0===c){if(0===a)return OP+ap(b)|0;if(1===a)return Om+ap(b)|0}else
if(1===c){if(0===a)return N1+ap(b)|0;if(1===a)return PI+ap(b)|0}}else
if(1===e&&1===d)if(0===c){if(0===a)return K7+ap(b)|0;if(1===a)return LA+ap(b)|0}else
if(1===c){if(0===a)return NC+ap(b)|0;if(1===a)return GI+ap(b)|0}}else
if(1===g)if(0===f){if(0===e){if(1===d)if(0===c){if(0===a)return 52}else
if(1===c&&1===a)return 55}else
if(1===e)if(0===d){if(0===c){if(0===a)return 56}else
if(1===c&&1===a)return 59}else
if(1===d&&0===c&&0===a)return 60}else
if(1===f)if(0===e){if(0===d){if(1===c&&1===a)return pB+ap(b)|0}else
if(1===d)if(0===c){if(0===a)return Po+ap(b)|0;if(1===a)return Kw+ap(b)|0}else
if(1===c&&1===a)return 53}else
if(1===e&&0===d&&0===c&&0===a)return 54}else
if(1===i)if(0===g){if(1===f)if(0===e){if(0===d){if(1===c){if(0===a)return 50;if(1===a)return 51}}else
if(1===d)if(0===c){if(0===a)return 44;if(1===a)return 45}else
if(1===c){if(0===a)return 46;if(1===a)return 47}}else
if(1===e&&0===d)if(0===c){if(0===a)return 57;if(1===a)return 58}else
if(1===c){if(0===a)return 61;if(1===a)return ak+ap(b)|0}}else
if(1===g&&0===f)if(0===e){if(1===d)if(0===c){if(0===a)return 48;if(1===a)return 49}else
if(1===c){if(0===a)return 62;if(1===a)return 63}}else
if(1===e)if(0===d){if(0===c){if(0===a)return 30;if(1===a)return 31}else
if(1===c){if(0===a)return 32;if(1===a)return 33}}else
if(1===d&&0===c){if(0===a)return 40;if(1===a)return 41}}else
if(1===m&&1===i&&0===g)if(0===f){if(1===e)if(0===d){if(0===c){if(0===a)return N+ap(b)|0;if(1===a)return c3+ap(b)|0}else
if(1===c){if(0===a)return 26;if(1===a)return 27}}else
if(1===d&&0===c){if(0===a)return 28;if(1===a)return 29}}else
if(1===f)if(0===e){if(0===d){if(1===c){if(0===a)return 34;if(1===a)return 35}}else
if(1===d)if(0===c){if(0===a)return 36;if(1===a)return 37}else
if(1===c){if(0===a)return 38;if(1===a)return 39}}else
if(1===e&&0===d&&1===c){if(0===a)return 42;if(1===a)return 43}var
h=ad(b);if(0===k&&0===j&&0===l&&0===n&&0===m&&0===i&&1===g)if(0===f){if(0===e){if(1===d)if(0===c){if(1===a){if(0===h)return Kc+ap(b)|0;if(1===h)return Mw+ap(b)|0}}else
if(1===c&&0===a){if(0===h)return wv+ap(b)|0;if(1===h)return yE+ap(b)|0}}else
if(1===e)if(0===d){if(0===c){if(1===a){if(0===h)return NJ+ap(b)|0;if(1===h)return NS+ap(b)|0}}else
if(1===c&&0===a){if(0===h)return LI+ap(b)|0;if(1===h)return Ih+ap(b)|0}}else
if(1===d&&0===c&&1===a){if(0===h)return w7+ap(b)|0;if(1===h)return KM+ap(b)|0}}else
if(1===f)if(0===e){if(0===d){if(1===c&&0===a){if(0===h)return Ne+ap(b)|0;if(1===h)return or+ap(b)|0}}else
if(1===d&&1===c&&0===a){if(0===h)return gH+ap(b)|0;if(1===h)return JZ+ap(b)|0}}else
if(1===e&&0===d)if(0===c){if(1===a){if(0===h)return Nq+ap(b)|0;if(1===h)return ME+ap(b)|0}}else
if(1===c)if(0===a){if(0===h)return b7+ap(b)|0;if(1===h)return Ij+ap(b)|0}else
if(1===a){if(0===h)return Oj+ap(b)|0;if(1===h)return HK+ap(b)|0}throw[0,$,aaf]}function
aag(a){var
c=ad(a);if(1===c)return aah;var
d=ad(a),b=ad(a);if(0===c)if(0===d){if(1===b)return 1}else
if(1===d){if(0===b)return aao;if(1===b)return aap}var
e=ad(a);if(0===c&&0===d&&0===b&&1===e)return 0;var
g=ad(a),f=ad(a);if(0===c&&0===d&&0===b&&0===e&&1===g){if(0===f)return aai;if(1===f)return aaj}var
h=ad(a);if(0===c&&0===d&&0===b&&0===e&&0===g&&1===f){if(0===h)return aak;if(1===h)return aal}var
m=ad(a),i=ad(a),j=ad(a),k=ad(a),l=ad(a);if(0===c&&0===d&&0===b&&0===e&&0===g&&0===f&&0===h&&0===m)if(0===i){if(0===j&&0===k&&1===l){var
n=ad(a),o=ad(a),p=ad(a),q=ad(a),r=ad(a),s=ad(a),t=ad(a),u=ad(a),v=ad(a),w=ad(a),x=ad(a),y=ad(a);if(0===n&&0===o&&0===p&&0===q&&0===r&&0===s&&0===t&&0===u&&0===v&&0===w&&0===x&&1===y)return 3;throw[0,$,aam]}}else
if(1===i&&1===j&&1===k&&1===l)return 2;throw[0,$,aan]}function
CP(i,U,E,h,q,T,D,S,C){if(0<i)throw[0,dh,aaq];if(D)var
e=1,b=0;else
var
e=0,b=1;var
j=XZ(0),g=Cl(C),a=[0,0],r=[0,0],k=[0,aS(h,b)],l=aS(h,0),c=[0,1];function
F(a){ki(function(a){return Cm(j,a)},a);return Cn(j)}function
f(c,f){if(0<=c){var
d=a[1],e=(a[1]+c|0)-1|0;if(!(e<d)){var
b=d;for(;;){p(l,b)[1+b]=f;var
g=b+1|0;if(e!==b){var
b=g;continue}break}}return dd(a,c)}throw[0,$,aar]}try{for(;;){if(h<=a[1]){F(l);k[1]=l;a[1]=0;bA(c);if(E)XX(g);r[1]++;var
w=q<=r[1]?1:0,K=w?0<q?1:0:w;if(K)throw ar;continue}if(0<=i){if(0===i){var
L=c[1]?ao:ap,x=L(g);if(-1===x){if(0<a[1])f(h-a[1]|0,b)}else{var
M=c[1]?b:e;f(x,M);B9(c)}continue}throw[0,dh,aat]}var
o=aag(g);if(typeof
o==="number")switch(o){case
0:var
N=c[1]?b:e,O=a[1],I=[0,a[1]];if(c[1])var
v=e,m=b;else
var
v=b,m=e;var
n=function(a){return function(f){for(;;){var
b=k[1],e=0;if(0<=a[1]&&a[1]<b.length-1){var
c=a[1],d=p(b,c)[1+c]!==f?1:0;e=1}if(!e)var
d=0;if(d){a[1]++;continue}return a[1]}}}(I);try{var
A=0;if(0===a[1]&&c[1])A=1;if(!A)n(m);n(v);var
J=n(m),y=J}catch(a){var
y=h}f(y-O|0,N);break;case
1:if(c[1]){f(ao(g),b);f(ap(g),e)}else{f(ap(g),e);f(ao(g),b)}break;case
2:throw[0,dh,aau];default:throw ar}else{var
P=o[1],Q=c[1]?b:e,R=a[1],G=[0,a[1]];if(c[1])var
t=e,s=b;else
var
t=b,s=e;var
u=function(a){return function(f){for(;;){var
b=k[1],e=0;if(0<=a[1]&&a[1]<b.length-1){var
c=a[1],d=p(b,c)[1+c]!==f?1:0;e=1}if(!e)var
d=0;if(d){a[1]++;continue}return a[1]}}}(G);try{var
B=0;if(0===a[1]&&c[1])B=1;if(!B)u(s);var
H=u(t),z=H}catch(a){var
z=h}f((z-R|0)-P|0,Q);B9(c)}continue}}catch(a){a=d(a);if(a===ar)return X1(j);throw[0,$,aas]}}function
d0(b,a){return 0<=a?p(b,a)[1+a]:0}function
aaB(az,j,o,Q,i){if(2===az){var
G=o-1|0;if(!(15<G>>>0))switch(G){case
0:throw[0,dh,aaw];case
1:throw[0,dh,aax];case
3:throw[0,dh,aay];case
7:var
t=(bd(bd(j,o),Q)+7|0)/8|0,H=rA(aa(i),t)-1|0,ad=0;if(!(H<0)){var
n=ad;a:for(;;){var
u=bd(n,t),h=[0,j];for(;;){if(h[1]<t){var
ae=dZ(i,u+h[1]|0),af=(dZ(i,(u+h[1]|0)-j|0)+ae|0)%ak|0;e6(i,u+h[1]|0,af);h[1]=h[1]+1|0;continue}var
ag=n+1|0;if(H!==n){var
n=ag;continue a}break}break}}return i;case
15:throw[0,dh,aaz]}throw[0,dh,aav]}var
R=b3(0,i),S=(bd(bd(j,o),Q)+7|0)/8|0;function
A(a){return[0,aS(S,0)]}var
B=A(0),C=A(0),T=[0,0],q=[0,0],U=[0,0],D=[0,0],aA=A(0);for(;;){if(q[1]){var
V=l(T[1]),ab=g(function(a){return a.length-1},V),ac=0,E=ay(bk(function(b,a){return b+a|0},ac,ab)),F=[0,0];x(function(b){var
c=b.length-1-1|0,d=0;if(!(c<0)){var
a=d;for(;;){bv(E,F[1],b[1+a]);F[1]++;var
e=a+1|0;if(c!==a){var
a=e;continue}break}}return 0},V);return E}sB(D);var
W=b(R[4],0);if(W===-1)bA(q);else
U[1]=W;if(!q[1]){bA(D);aA[1]=C[1];var
Z=S-1|0,aB=0;if(!(Z<0)){var
m=aB;for(;;){var
_=b(R[4],0);if(_===-1)bA(q);else
p(C[1],m)[1+m]=_;var
aC=m+1|0;if(Z!==m){var
m=aC;continue}break}}}if(D[1]){var
r=(bd(o,j)+7|0)/8|0,X=U[1],k=C[1],s=B[1],a=A_(k);if(4<X>>>0)throw[0,dh,aaA];switch(X){case
0:break;case
1:var
I=a.length-1-1|0,ah=0;if(!(I<0)){var
e=ah;for(;;){var
ai=d0(a,e-r|0),aj=(d0(k,e)+ai|0)%ak|0;p(a,e)[1+e]=aj;var
al=e+1|0;if(I!==e){var
e=al;continue}break}}break;case
2:var
J=a.length-1-1|0,am=0;if(!(J<0)){var
f=am;for(;;){var
an=d0(s,f),ao=(d0(k,f)+an|0)%ak|0;p(a,f)[1+f]=ao;var
ap=f+1|0;if(J!==f){var
f=ap;continue}break}}break;case
3:var
K=a.length-1-1|0,aq=0;if(!(K<0)){var
d=aq;for(;;){var
ar=d0(s,d),as=(d0(a,d-r|0)+ar|0)/2|0,at=(d0(k,d)+as|0)%ak|0;p(a,d)[1+d]=at;var
au=d+1|0;if(K!==d){var
d=au;continue}break}}break;default:var
O=a.length-1-1|0,av=0;if(!(O<0)){var
c=av;for(;;){var
aw=d0(k,c),w=d0(a,c-r|0),y=d0(s,c),z=d0(s,c-r|0),v=(w+y|0)-z|0,L=cT(v-w|0),M=cT(v-y|0),N=cT(v-z|0),$=0;if(L<=M&&L<=N)var
P=w;else
$=1;if($)var
P=M<=N?y:z;p(a,c)[1+c]=(aw+P|0)%ak|0;var
ax=c+1|0;if(O!==c){var
c=ax;continue}break}}}B[1]=a;Y(T,B[1]);continue}continue}}function
aaC(n){var
f=[0,0],o=b3(0,n);try{for(;;){var
m=b(o[4],0);if(m===-1)throw ar;Y(f,m);continue}}catch(b){b=d(b);if(b===ar){f[1]=l(f[1]);var
p=function(g,f){var
b=g,a=f;for(;;){if(a){var
c=a[1],h=[0,c,a[2]],d=c0(function(b){return function(a){return aD(b,a)}}(c),h),e=d[1],i=d[2],j=aM(e),b=[0,[0,z(e),j],b],a=i;continue}return l(b)}},g=[0,p(0,f[1])],a=[0,0],e=[0,0],h=[0,0],i=function(f){var
b=0<e[1]?1:0;if(b){Y(a,e[1]-1|0);var
d=l(h[1]);x(function(b){return Y(a,b)},d);h[1]=0;e[1]=0;var
c=0}else
var
c=b;return c};for(;;){if(0===g[1]){i(0);Y(a,N);return Ce(l(a[1]))}var
j=aM(g[1]),c=j[1],q=j[2];if(1<=c){if(3<=c){var
r=j[2];i(0);var
k=[0,c];for(;;){if(0<k[1]){Y(a,is-Ca(k[1],N)|0);Y(a,r);B_(k,N);continue}break}}else{if(N<(c+e[1]|0))i(0);ge(h,aP(q,c));dd(e,c)}g[1]=bu(g[1]);continue}throw[0,B,aaD]}}throw b}}function
aaE(c){var
h=dB(id),e=h[1],i=[0,0],n=h[2];try{for(;;){if(!i[1]){var
a=b(c[4],0);if(a===-1)throw ar;if(N<=a)if(N<a){var
j=b(c[4],0);if(j===-1)throw ar;var
k=is-a|0,o=1;if(!(k<1)){var
f=o;for(;;){b(e[4],j);var
p=f+1|0;if(k!==f){var
f=p;continue}break}}}else
bA(i);else{var
l=a+1|0,q=1;if(!(l<1)){var
g=q;for(;;){var
m=b(c[4],0);if(m===-1)throw ar;b(e[4],m);var
r=g+1|0;if(l!==g){var
g=r;continue}break}}}continue}break}}catch(a){a=d(a);if(a!==ar)throw a;K(aaF)}return dC(e,n)}function
aaG(d,aA,l,a){var
h=0===l[0]?b3(0,l[1]):l[1],aC=a2(a,aaH);if(0<=aC){var
a8=0;if(0<aC&&c(a,aaI)){var
a9=0;if(c(a,aaJ)&&c(a,aaK)){var
a_=0;if(c(a,aaL)&&c(a,aaM)){a9=1;a_=1}if(!a_)return aaE(h)}if(!a9){var
aD=bw(d,aaP,aaO,aA),X=0;if(aD){var
B=aD[1],n=0;if(typeof
B!=="number")switch(B[0]){case
5:var
aE=B[1];if(aE){var
N=aE[1];if(typeof
N==="number"){var
M=1;X=1;n=2}else
if(6===N[0]){var
aF=N;n=1}else
n=2}else
n=2;break;case
6:var
aF=B;n=1;break}switch(n){case
2:break;case
0:break;default:var
aH=e(d,aaQ,aF);if(aH){var
O=aH[1],a$=0;if(typeof
O!=="number"&&1===O[0]){var
aI=O[1];a$=1}if(!a$)throw[0,f,aaR]}else
var
aI=1;var
M=aI;X=1}}if(!X)var
M=1;var
H=aS(id,0),I=aS(id,0),r=[0,0],j=[0,0],J=[0,4],s=[0,9],k=[0,oc],t=[0,0],g=[0,ak],u=[0,0],ao=function(d,c){var
a=d,b=c;for(;;){if(aq<a){var
e=[0,p(I,a)[1+a],b],a=p(H,a)[1+a],b=e;continue}return[0,a,b]}},ap=function(d){for(;;){if(24<r[1]){var
e=j[1]>>>(32-s[1]|0)|0;j[1]=j[1]<<s[1];B_(r,s[1]);return e}var
a=b(d[4],0);if(a===-1){if(0===J[1])throw ar;J[1]+=-1;var
c=0}else
var
c=a;j[1]=j[1]|c<<(24-r[1]|0);dd(r,8);continue}},as=function(a){for(;;){if(ak===g[1]){g[1]=ap(a);continue}return 0}},at=function(a){k[1]=oc;s[1]=9;g[1]=ak;return 0};r[1]=0;j[1]=0;J[1]=4;at(0);var
au=dB(16034),A=au[1],av=[0,0],bo=au[2];as(h);if(is===g[1])return ay(0);u[1]=g[1];b(A[4],g[1]);for(;;){if(av[1])return dC(A,bo);t[1]=ap(h);var
aw=t[1];if(ak===aw){at(0);B2(H,0);B2(I,0);as(h);u[1]=g[1];b(A[4],g[1])}else
if(is===aw)bA(av);else{if(k[1]<=t[1])var
bp=[0,u[1],0],K=q(ao(g[1],0),bp);else
var
K=ao(t[1],0);u[1]=aM(K);x(A[4],K);var
ax=k[1],bq=g[1];p(H,ax)[1+ax]=bq;var
az=k[1],br=u[1];p(I,az)[1+az]=br;k[1]++;g[1]=t[1];var
L=(k[1]+M|0)-512|0,Z=0;if(gH<L>>>0){if(w7===L)Z=1}else
if(510<L-1>>>0)Z=1;if(Z)s[1]++}continue}}}else
a8=1;if(a8){if(0===l[0])return s5(l[1]);var
al=[0,0],bs=l[1],bm=function(a){if(0<a1(a)){var
c=b(bs[4],0);if(c===-1)throw ar;aZ(a,0,aj(c));return 1}return 0},am=function(c,a){var
b=0<a?1:0;return b?Y(al,iH(c,0,a)):b},bn=0,aa=0?bn[1]:1,E=aG(b7),v=aG(b7),F=a88(aa),w=0,o=0;for(;;){if(0===o){var
ab=bm(E);if(0!==ab){var
w=0,o=ab;continue}var
ad=1;for(;;){var
ba=0;if(ad&&!aa){var
af=1;ba=1}if(!ba)var
af=0;var
ag=Qn(F,E,0,af,v,0,b7,1),bl=ag[1];am(v,ag[3]);if(1-bl){var
ad=0;continue}break}}else{var
G=Qn(F,E,w,o,v,0,b7,1),ac=G[2],bk=G[1];am(v,G[3]);if(1-bk){var
w=w+ac|0,o=o-ac|0;continue}}a87(F);var
an=al[1],z=0,y=an;for(;;){if(y){var
z=z+m(y[1])|0,y=y[2];continue}var
ah=ay(z),ai=[0,z-1|0];x(function(b){var
c=m(b)-1|0;if(!(c<0)){var
a=c;for(;;){bv(ah,ai[1],aU(b,a));ai[1]+=-1;var
d=a-1|0;if(0!==a){var
a=d;continue}break}}return 0},an);return ah}}}}else{var
_=0;if(c(a,aaS)){var
$=0;if(c(a,aaT))if(c(a,aaU)){if(c(a,aaV)){var
bb=0;if(c(a,aaW)&&c(a,aaX)){$=1;bb=1}if(!bb){var
aJ=bw(d,aaZ,aaY,aA);if(aJ){var
C=aJ[1],D=0;if(typeof
C!=="number")switch(C[0]){case
5:var
aK=C[1];if(aK){var
aL=aK[1];D=2}else
D=1;break;case
6:var
aL=C;D=2;break}switch(D){case
0:break;case
1:break;default:var
i=aB(d,aL),aN=e(d,aa1,i),bc=0;if(aN){var
P=aN[1],bt=0;if(typeof
P!=="number"&&1===P[0]){var
aO=P[1];bc=1;bt=1}}if(!bc)var
aO=0;var
aP=e(d,aa2,i),bd=0;if(aP){var
Q=aP[1],bu=0;if(typeof
Q!=="number"&&0===Q[0]){var
aQ=Q[1];bd=1;bu=1}}if(!bd)var
aQ=0;var
aR=e(d,aa3,i),be=0;if(aR){var
R=aR[1],bx=0;if(typeof
R!=="number"&&0===R[0]){var
aT=R[1];be=1;bx=1}}if(!be)var
aT=0;var
aV=e(d,aa4,i),bf=0;if(aV){var
S=aV[1],by=0;if(typeof
S!=="number"&&1===S[0]){var
aW=S[1];bf=1;by=1}}if(!bf)var
aW=or;var
aX=e(d,aa5,i),bg=0;if(aX){var
T=aX[1],bz=0;if(typeof
T!=="number"&&1===T[0]){var
aY=T[1];bg=1;bz=1}}if(!bg)var
aY=0;var
a0=e(d,aa6,i),bh=0;if(a0){var
U=a0[1],bB=0;if(typeof
U!=="number"&&0===U[0]){var
a3=U[1];bh=1;bB=1}}if(!bh)var
a3=1;var
a4=e(d,aa7,i),bi=0;if(a4){var
V=a4[1],bC=0;if(typeof
V!=="number"&&0===V[0]){var
a5=V[1];bi=1;bC=1}}if(!bi)var
a5=0;var
a6=e(d,aa8,i),bj=0;if(a6){var
W=a6[1],bD=0;if(typeof
W!=="number"&&1===W[0]){var
a7=W[1];bj=1;bD=1}}if(!bj)var
a7=0;return CP(aO,aQ,aT,aW,aY,a3,a5,a7,h)}throw[0,f,aa0]}return CP(0,0,0,or,0,1,0,0,h)}}}else{_=1;$=1}if(!$)return $0(h)}else
_=1;if(_)return $4(h)}throw[0,dh,b(ae(aaN),a)]}function
m5(a,j,i){var
q=bw(a,aa_,aa9,j);if(q){var
g=q[1],c=0;if(typeof
g!=="number")switch(g[0]){case
4:var
r=g[1];c=3;break;case
5:var
E=g[1];if(E){var
p=E[1],F=0;if(typeof
p!=="number"&&4===p[0]){var
r=p[1];c=3;F=1}if(!F)c=1}else
c=2;break}var
G=0;switch(c){case
0:break;case
1:break;case
2:G=1;break;default:var
s=aaG(a,j,i,r),t=bw(a,abb,aba,j),H=0;if(t){var
h=t[1],d=0;if(typeof
h!=="number")switch(h[0]){case
5:var
C=h[1];if(C){var
o=C[1],I=0;if(typeof
o!=="number"&&6===o[0]){var
D=o[1];d=1;I=1}if(!I)d=2}else
d=2;break;case
6:var
D=h[1];d=1;break}switch(d){case
2:break;case
0:break;default:var
b=[6,D];H=1}}if(!H)var
b=abc;var
u=e(a,abd,b);if(u){var
k=u[1],J=0;if(typeof
k!=="number"&&1===k[0]){var
v=k[1];if(1!==v){var
w=e(a,abf,b);if(w){var
l=w[1],K=0;if(typeof
l!=="number"&&1===l[0]){var
x=l[1];K=1}if(!K)throw[0,f,abg]}else
var
x=1;var
y=e(a,abh,b);if(y){var
m=y[1],L=0;if(typeof
m!=="number"&&1===m[0]){var
z=m[1];L=1}if(!L)throw[0,f,abi]}else
var
z=8;var
A=e(a,abj,b);if(A){var
n=A[1],M=0;if(typeof
n!=="number"&&1===n[0]){var
B=n[1];M=1}if(!M)throw[0,f,abk]}else
var
B=1;try{var
N=aaB(v,x,z,B,s);return N}catch(a){throw[0,kP,abl]}}J=1}if(!J)throw[0,f,abe]}return s}if(!G)throw[0,f,aa$]}if(0===i[0])return i[1];throw[0,dh,abm]}function
abF(q,p){cJ(p);if(typeof
p!=="number"&&7===p[0]){var
M=p[1],N=M[1],k=N[1],Y=0;if(typeof
k==="number"||!(6===k[0]))Y=1;else{var
O=N[2],W=k[1];if(0===O[0]){var
X=O[1],P=aB(q,I(bs(abI),q,abH,k));if(typeof
P!=="number"&&1===P[0]){var
Q=m5(q,k,[0,X]),e=g(function(b){var
a=b[1];if(c(a,abn)&&c(a,abo)&&c(a,abp)&&c(a,abq))return b;return[0,a,aB(q,b[2])]},W),G=a4(abr,e),i=a4(abs,e),d=0;if(G){var
h=G[1],m=0;if(typeof
h!=="number")switch(h[0]){case
5:var
K=h[1];if(K)if(K[2])m=2;else
m=1;else{d=1;m=3}break;case
4:m=1;break}var
r=0;switch(m){case
3:r=2;break;case
0:d=1;r=2;break;case
1:if(!i){var
J=b(cZ(function(a){return S(a[1],abD)}),e);r=1}break}var
C=0;switch(r){case
2:C=1;break;case
0:var
R=0;if(typeof
h!=="number"&&5===h[0]){var
J=gf(abC,[5,h[1][2]],e);R=1}if(!R){d=1;C=1}break}if(!C){var
a=J;d=2}}else
if(i){var
B=i[1],n=0;if(typeof
B!=="number")switch(B[0]){case
5:var
L=B[1];if(L)if(L[2]){d=1;n=2}else
n=1;else
n=2;break;case
4:n=1;break}switch(n){case
2:break;case
0:break;default:var
a=b(cZ(function(a){return S(a[1],abE)}),e);d=2}}else{var
a=e;d=2}var
D=0;switch(d){case
1:if(i){var
w=i[1],T=0;if(typeof
w!=="number"&&5===w[0]){var
H=w[1];if(H){var
a=gf(abu,[5,H[2]],e);D=1;T=1}else
T=1}}break;case
0:break;default:D=1}if(D){var
o=a4(abv,a),j=a4(abw,a),s=0;if(o){var
x=o[1],t=0;if(typeof
x!=="number")switch(x[0]){case
5:if(x[1]){s=1;t=2}else
t=1;break;case
6:t=1;break}switch(t){case
2:break;case
0:s=1;break;default:var
l=ej(abB,a)}}else
if(j)s=1;else
var
l=a;if(s){var
u=0;if(j){var
y=j[1],v=0;if(typeof
y!=="number")switch(y[0]){case
5:if(y[1]){u=1;v=2}else
v=1;break;case
6:v=1;break}switch(v){case
2:break;case
0:u=1;break;default:var
l=ej(abA,a)}}else
u=1;if(u){var
E=0;if(o){var
z=o[1],U=0;if(typeof
z!=="number"&&5===z[0]){var
l=gf(abz,[5,z[1][2]],a);U=1}if(!U)E=1}else
E=1;if(E){var
F=0;if(j){var
A=j[1],V=0;if(typeof
A!=="number"&&5===A[0]){var
l=gf(aby,[5,A[1][2]],a);V=1}if(!V)F=1}else
F=1;if(F)throw[0,f,abx]}}}M[1]=[0,[6,gf(abK,[1,aa(Q)],l)],[0,Q]];return 0}throw[0,f,abt]}throw[0,f,abJ]}}}throw[0,f,abG]}var
s6=[0,function(a){return abL}];function
d1(c,h){var
a=h;for(;;){if(typeof
a!=="number")switch(a[0]){case
7:var
d=a[1][1][1];cJ(a);var
e=bw(c,abO,abN,d);if(e){var
g=e[1];if(typeof
g!=="number")switch(g[0]){case
4:case
5:abF(c,a);if(typeof
a!=="number"&&7===a[0]){var
i=b(s6[1],a[1][1][1]);if(S(b(s6[1],d),i))return 0;continue}throw[0,B,abQ]}throw[0,f,abP]}return 0;case
8:var
a=aB(c,[8,a[1]]);continue}throw[0,f,abM]}}function
m6(b,a){try{var
c=d1(b,a);return c}catch(a){a=d(a);if(a[1]===dh)return 0;throw a}}function
abR(e,a){var
g=bw(bm(0),abT,abS,a);if(g){var
c=g[1],k=0;if(typeof
c==="number")k=1;else
switch(c[0]){case
4:return[0,m5(bm(0),a,[1,e])];case
5:var
h=c[1];if(h){var
l=h[2],d=m5(bm(0),a,[1,e]),b=l;for(;;){if(b){var
i=b[1];if(typeof
i!=="number"&&4===i[0]){var
m=b[2],n=bw(bm(0),abX,abW,a),o=bw(bm(0),abZ,abY,a),p=bn(bn(bn(bn(a,ab0),ab1),ab2),ab3),j=function(b){if(b){var
a=b[1],d=0;if(typeof
a==="number"||!(5===a[0]))d=1;else{var
c=a[1];if(c)return[5,c[2]]}}return ab4},q=j(o),r=j(n),s=A(A(p,ab5,q),ab6,r),d=m5(bm(0),s,[0,d]),b=m;continue}throw[0,f,abV]}return[0,d]}}break;default:k=1}}throw[0,kP,abU]}function
s7(a){switch(a){case
0:return ab7;case
1:return ab8;case
2:return ab9;default:return ab_}}function
m7(S,i,m,z,h){var
d=z?z[1]:1;cJ(h);if(typeof
h!=="number"&&7===h[0]){var
n=h[1],C=n[1],D=C[2],T=C[1];if(0===D[0]){var
U=D[1];if(0===m)var
E=U,o=T;else{var
x=n[1],y=x[2],R=x[1];if(0!==y[0])throw[0,B,ach];var
l=y[1],G=0;if(m&&3===m[1]){var
q=function(b,a){return 0<=a?dZ(b,a):0},r=dB(id),k=r[1],H=r[2],s=rA(aa(l),d)-1|0,I=0;if(!(s<0)){var
a=I;for(;;){b(k[4],2);var
t=d-1|0,K=0;if(!(t<0)){var
c=K;for(;;){var
M=q(l,bd(a-1|0,d)+c|0),N=(q(l,bd(a,d)+c|0)-M|0)%ak|0;b(k[4],N);var
O=c+1|0;if(t!==c){var
c=O;continue}break}}var
L=a+1|0;if(s!==a){var
a=L;continue}break}}var
J=dC(k,H),E=J,o=A(R,acf,[6,[0,[0,ace,[1,d]],acd]])}else
G=1;if(G)throw[0,f,acg]}switch(i){case
0:var
j=$X;break;case
1:var
j=$7;break;case
2:var
j=aaC;break;default:var
j=$$}var
F=j(E),V=aa(F),u=e(S,ab$,o);if(u){var
g=u[1],p=0;if(typeof
g!=="number")switch(g[0]){case
4:var
P=[0,[4,g[1]],0],v=[5,[0,[4,s7(i)],P]];p=1;break;case
5:var
Q=g[1],v=[5,[0,[4,s7(i)],Q]];p=1;break}if(!p)throw[0,f,aca];var
w=v}else
var
w=[4,s7(i)];n[1]=[0,ht(A(o,acc,w),acb,[1,V]),[0,F]];return 0}}throw[0,f,aci]}var
bC=aN(30);function
acp(a){ck(bC);s(bC,40);kh(function(b){var
a=b+GB|0;if(52<a>>>0){if(!(NK<=a))switch(a+40|0){case
8:s(bC,92);return s(bC,98);case
9:s(bC,92);return s(bC,bX);case
10:s(bC,92);return s(bC,aY);case
12:s(bC,92);return s(bC,bE);case
13:s(bC,92);return s(bC,bF)}}else
if(49<a-2>>>0){s(bC,92);return s(bC,b)}return s(bC,b)},a);s(bC,41);return az(bC)}function
acq(a){ck(bC);s(bC,60);kh(function(a){return bj(bC,b(ae(acr),a))},a);s(bC,62);return az(bC)}function
acs(c){var
d=Math.floor(c);if(d==c){if(!(fH<c)&&!(c<u7))return a(k+(d|0));return P(ho(aK(kd(c))))}if(c<0.0001&&-0.0001<c)return b(ae(act),c);return kd(c)}function
CQ(a){if(15<a>>>0)throw[0,$,acu];switch(a){case
0:return 48;case
1:return 49;case
2:return 50;case
3:return 51;case
4:return 52;case
5:return 53;case
6:return 54;case
7:return 55;case
8:return 56;case
9:return 57;case
10:return 65;case
11:return 66;case
12:return 67;case
13:return 68;case
14:return 69;default:return 70}}var
gn=aN(30);function
s8(c){var
k=m(c);if(2<=k){var
e=1;for(;;){var
j=e<=(k-1|0)?1:0;if(j){var
g=aU(c,e);if(33<=g&&!(co<g)&&!hs(g)&&35!==g){var
e=e+1|0;continue}var
h=1}else
var
h=j;break}}else
var
h=0;if(h){if(!S(c,acx)&&47===aU(c,0)){ck(gn);s(gn,47);var
i=m(c)-1|0,n=1;if(!(i<1)){var
d=n;for(;;){var
a=F(c,d);if(a){var
l=0;if(33<=a&&!(co<a)&&!hs(a)&&35!==a){s(gn,a);l=1}if(!l){s(gn,35);s(gn,CQ(a/16|0));s(gn,CQ(a%16|0))}}else{b(K(acv),c);bj(gn,acw)}var
o=d+1|0;if(i!==d){var
d=o;continue}break}}return az(gn)}throw[0,f,acy]}return c}function
acA(n,a,j,m){var
f=n,c=m;for(;;){var
d=f?f[1]:0;if(c){var
g=c[1],e=g[1];if(c[2]){var
h=g[2],o=c[2];b(a,[0,s8(e)]);var
k=0;if(typeof
h!=="number")switch(h[0]){case
3:case
4:case
5:case
6:k=1;break}if(!k)b(a,acC);var
p=d?S(e,acD):d;fa([0,p],a,j,h);var
f=[0,d],c=o;continue}var
i=g[2];b(a,[0,s8(e)]);var
l=0;if(typeof
i!=="number")switch(i[0]){case
3:case
4:case
5:case
6:l=1;break}if(!l)b(a,acE);var
q=d?S(e,acF):d;return fa([0,q],a,j,i)}return 0}}function
acz(m,d,j,l){var
e=m,a=l;for(;;){var
f=e?e[1]:0;if(a){var
g=a[2],c=a[1];if(g){var
k=g[1];fa([0,f],d,j,c);var
h=0;if(typeof
k==="number")h=1;else
switch(k[0]){case
3:case
4:case
5:case
6:break;default:h=1}if(h){var
i=0;if(typeof
c==="number")i=1;else
switch(c[0]){case
3:case
5:case
6:break;default:i=1}if(i)b(d,acB)}var
e=[0,f],a=g;continue}return fa([0,f],d,j,c)}return 0}}function
fa(h,c,f,e){var
g=h?h[1]:0;if(typeof
e==="number")return b(c,acG);else
switch(e[0]){case
0:return b(c,[0,rQ(e[1])]);case
1:return b(c,[0,a(k+e[1])]);case
2:return b(c,[0,acs(e[1])]);case
3:var
i=e[1];return g?b(c,[0,acq(i)]):b(c,[0,acp(i)]);case
4:return b(c,[0,s8(e[1])]);case
5:var
n=e[1];b(c,acH);acz([0,g],c,f,n);return b(c,acI);case
6:var
o=e[1];b(c,acJ);acA([0,g],c,f,o);return b(c,acK);case
7:var
j=e[1][1],p=j[2];fa([0,g],c,f,j[1]);b(c,acL);b(c,[1,p]);return b(c,acM);default:var
l=e[1];try{var
q=an(f,l),m=q}catch(a){a=d(a);if(a!==J)throw a;var
m=l}b(c,[0,a(k+m)]);return b(c,acN)}}var
s9=aN(aQ);function
bP(a){ck(s9);var
b=aV(0,0);fa(0,function(a){return 0===a[0]?bj(s9,a[1]):0},b,a);return az(s9)}Y4[1]=bP;s6[1]=bP;Ya[1]=bP;function
s_(g,j){if(0===j[0])return b(g[5],j[1]);var
h=[7,[0,[0,0,j[1]]]];cJ(h);if(typeof
h!=="number"&&7===h[0]){var
o=h[1][1][2];if(0===o[0]){var
a=o[1],p=0<aa(a)?1:0;if(p){var
c=aa(a),q=0;if(0===c)return 0;var
k=aa(a)-1|0;if(!(k<0)&&!(k<0)){if(0===a[0]){var
l=(c|0)-1|0,r=a[1];if(!(l<0)){var
d=q;for(;;){var
s=Au(r,d);b(g[4],s);var
t=d+1|0;if(l!==d){var
d=t;continue}break}}return 0}var
i=a[1],m=g[6];if(m){var
u=m[1];if(0<=c&&!((a1(i)-c|0)<0))return P9(u,i,0,c);return as(QF)}var
n=(c|0)-1|0;if(!(n<0)){var
e=q;for(;;){b(g[4],c$(i,e));var
v=e+1|0;if(n!==e){var
e=v;continue}break}}return 0}throw[0,$,XW]}return p}}throw[0,f,acQ]}function
s$(b){if(0===b)throw[0,$,acY];var
a=[0,bk(cs,AQ,b)],c=[0,0];for(;;){var
d=0<a[1]?1:0;a[1]=a[1]>>>8|0;if(d){dd(c,1);continue}return cs(1,c[1])}}function
ta(f,e,d){var
c=f-1|0;if(!(c<0)){var
a=c;for(;;){b(d[4],(e&aq<<(a*8|0))>>>(a*8|0)|0);var
g=a-1|0;if(0!==a){var
a=g;continue}break}}return 0}function
m8(ao,am,ak,aj,bh,M,bg,c,d){var
ap=ao?ao[1]:0,q=am?am[1]:0,bi=ak?ak[1]:1,w=aj?aj[1]:0;if(bh)throw[0,f,ac8];if(bg)sT(c,kd(sa(1.)));if(q){var
aq=M?1:0;if(1-ap)sb(c[4][4]);if(aq)iP(c[4][4],c[3]);var
a$=0,ba=ku(c[4][4]),bb=cs(bk(cs,AQ,g(function(a){return a[2]},ba)),a$),bc=mV(c),bd=al(function(a){return gc(c[4][4],a)?0:[0,a]},bc),af=ce(0),be=al(function(e){var
a=ai(c,e);if(typeof
a!=="number"&&7===a[0]){var
b=a[1][1][1];if(typeof
b!=="number"&&6===b[0]){var
f=a4(ac6,b[1]),g=0;if(f){var
d=f[1],h=0;if(typeof
d!=="number"&&8===d[0]){aO(af,d[1],0);g=1;h=1}}return 0}}return[0,e]},bd),ag=ks(cM,db(hf,al(function(a){if(!gc(af,a)){var
b=0;if(a!==c[3]||!aq)b=1;if(b)return[0,a]}return 0},be))),bf=mM(bb+1|0,ag);cr(function(b,a){return x(function(b){return aO(c[4][4],b,a)},b)},ag,bf)}var
ax=0;if(!ap&&!q)ax=1;var
ay=0;if(!ax&&0<c[4][4][1]){var
bj=1,bl=M?1:w?1:0;if(bl)iP(c[4][4],c[3]);var
T=ce(0),D=ce(0),aK=c[4][4];cb(function(b,a){if(1-gc(D,a))aO(D,a,0);return aO(T,a,b)},aK);var
U=[0,0];cb(function(a,b){return Y(U,[0,a,sd(T,a)])},D);var
i=U[1],V=ce(0),aL=ah(g(function(a){return a[2]},i));x(function(a){return aO(V,a,0)},aL);var
aM=mV(c),E=al(function(a){return gc(V,a)?0:[0,a]},aM),W=z(i),aN=g(z,g(function(a){return a[2]},i)),aP=0,aQ=W+bk(function(b,a){return b+a|0},aP,aN)|0,p=ce(0),aR=cd(i),aS=g(function(a){return a[1]},i);cr(function(a,b){return aO(p,a,b)},aS,aR);var
X=ah(g(function(a){return a[2]},i)),aT=mM(W+1|0,X);cr(function(a,b){return aO(p,a,b)},X,aT);var
aU=mM(aQ+1|0,E);cr(function(a,b){return aO(p,a,b)},E,aU);var
F=hu(p,c);c[3]=F[3];c[4]=F[4];c[5]=F[5];g(function(a){return an(p,a)},E);var
aW=g(function(a){return a[2]},i),aX=function(a){return an(p,a)},bs=g(function(a){return g(aX,a)},aW),aY=g(function(a){return a[1]},i),Z=a7(cd(g(function(a){return an(p,a)},aY)),bs);x(function(n){var
f=n[2],t=n[1],p=dB(32000),d=p[1],u=p[2],q=g(function(a){return o(bP(ai(c,a)),acR)},f);x(function(a){return kJ(c,a)},f);var
i=0,h=0,e=g(m,q);for(;;){if(e){var
j=e[1],i=[0,h+j|0,i],h=h+j|0,e=e[2];continue}var
v=[0,0,ho(l(i))];cr(function(e,c){b(d[5],a(k+e));b(d[5],acS);b(d[5],a(k+c));return b(d[5],acT)},f,v);var
w=b(d[1],0);x(d[5],q);var
r=dC(d,u),y=[0,[0,acV,[1,z(f)]],[0,[0,acU,[1,w]],0]],s=[7,[0,[0,[6,[0,acX,[0,[0,acW,[1,aa(r)]],y]]],[0,r]]]];if(bi)m7(c,3,0,0,s);return bB(c,[0,t,s])}},Z);var
r=bj,O=Z;ay=1}if(!ay)var
r=0,O=0;var
y=w?[0,ac7]:M,az=0;if(r||q)az=1;else
if(y)var
br=2===y[1][1]?c:hu(sP(c),c),A=br;else
var
A=c;if(az)var
A=c;if(w)var
bm=w[1],bn=r||q,P=$O([0,1-bn],A,bm);else
var
P=A;if(y){var
u=y[1],s=u[1];if(typeof
s==="number")switch(s){case
0:var
t=_A;break;case
1:var
t=_Y;break;default:var
t=function(d,c,b,a){return a}}else
switch(s[0]){case
0:var
S=s[1],t=function(a,g,h,i){var
b=mZ(h),c=sZ(4,g,a,N),d=m2(i),e=d[1],f=d[2];return s3(c,s0(1-S,a,c,b,e,4,N),b,a,e,S,f)};break;case
1:var
aI=s[1],t=function(a,b,c,d){return CK($z,aI,a,b,c,d)};break;default:var
aJ=s[1],t=function(a,b,c,d){return CK($A,aJ,a,b,c,d)}}var
h=t(u[3],u[2],u[4],P)}else
var
h=P;var
aE=h[2],aF=h[1],aG=n(ae(acj),aF,aE);b(d[5],aG);var
B=[0,0],aA=0;if(!e$(h)&&!r&&!q){var
ar=cy;aA=1}if(!aA)var
ar=Ys;var
aB=0;if(!e$(h)&&!r&&!q){var
C=sP(h);aB=1}if(!aB)var
C=aV(0,0);var
as=[0,1];ar(function(f,e){Y(B,b(d[1],0));var
g=r?f:as[1];function
c(a){return s_(d,a)}c([0,a(k+g)]);c(acO);fa(0,c,C,e);c(acP);as[1]++;return 0},h);var
at=b(d[1],0);if(!r&&!q){var
aw=l(B[1]);b(d[5],acl);b(d[5],acm);var
aH=a(k+(z(aw)+1|0));b(d[5],aH);b(d[5],acn);b(d[5],aco);x(function(i){var
e=a(k+i),f=(10-m(e)|0)-1|0,g=0;if(!(f<0)){var
c=g;for(;;){b(d[3],48);var
h=c+1|0;if(f!==c){var
c=h;continue}break}}b(d[5],e);return b(d[5],ack)},aw);b(d[5],ade);var
R=h[5];if(typeof
R!=="number"&&6===R[0]){var
bp=cc(adg,[8,h[3]],R[1]),bq=[6,cc(adh,[1,z(B[1])+1|0],bp)];fa(adi,function(a){return s_(d,a)},C,bq);b(d[5],adj);b(d[5],a(k+at));return b(d[5],adk)}throw[0,f,adf]}var
j=[0,acZ],bo=l(B[1]),$=hn(bo,z(O)),aZ=$[2],a0=$[1];ge(j,l(g(function(a){return[0,1,a,0]},a0)));x(function(a){var
b=a[2],c=a[1],d=0===b?0:L(0,z(b)-1|0);return ge(j,l(g(function(a){return[0,2,c,a]},d)))},O);ge(j,l(g(function(a){return[0,1,a,0]},aZ)));var
a1=j[1],G=s$(g(function(a){return a[1]},a1)),a2=j[1],H=s$(g(function(a){return a[2]},a2)),a3=j[1],I=s$(g(function(a){return a[3]},a3)),ab=dB(id),v=ab[1],a5=ab[2],a6=l(j[1]);x(function(a){var
b=a[3],c=a[2];ta(G,a[1],v);ta(H,c,v);return ta(I,b,v)},a6);var
ac=dC(v,a5),J=h[5],aC=0;if(typeof
J!=="number"&&6===J[0]){var
ad=J[1];aC=1}if(!aC)var
ad=0;var
a8=[0,[0,ac1,[5,[0,[1,G],[0,[1,H],[0,[1,I],0]]]]],[0,[0,ac0,[1,aa(ac)]],0]],a9=[0,[0,ac2,[1,z(j[1])]],a8],a_=[0,ac4,[0,[0,ac3,[8,h[3]]],a9]],K=[7,[0,[0,[6,B1(function(a,b){return cc(a[1],a[2],b)},a_,ad)],[0,ac]]]];m7(h,3,ac5,[0,(G+H|0)+I|0],K);var
au=e(h,ac9,K),aD=0;if(au){var
Q=au[1],bt=0;if(typeof
Q!=="number"&&1===Q[0]){var
av=Q[1];aD=1;bt=1}}if(!aD)var
av=_(ac_);b(d[5],a(k+av));b(d[5],ac$);fa(ada,function(a){return s_(d,a)},C,K);b(d[5],adb);b(d[5],adc);b(d[5],a(k+at));return b(d[5],add)}function
adl(d,c,b,a,i,h,g,f,e){var
j=d?d[1]:0,k=c?c[1]:0,l=b?b[1]:1,m=a?a[1]:0;return m8([0,j],[0,k],[0,l],[0,m],i,h,g,f,Cf(e))}function
tb(h,g,f,e,k,j,i,c,b){var
l=h?h[1]:0,m=g?g[1]:0,n=f?f[1]:1,o=e?e[1]:0;if(i)sT(c,b);var
a=AT(b);try{adl([0,l],[0,m],[0,n],[0,o],k,j,0,c,a);var
p=mm(a);return p}catch(b){b=d(b);mm(a);throw b}}function
CR(a){return bi(mo(c_(a)))}function
CS(a){var
b=m(a);if(0===b)return 0;try{var
d=aU(a,0)+Kj|0,e=0;if(57<d>>>0){if(-31===d&&2<=b){var
f=[3,R(a,1,b-2|0)];e=1}}else
if(5<d+NK>>>0){var
f=[4,CR(a)];e=1}if(e)var
g=f;else{if(function(e,d){var
a=d;for(;;){var
b=a===-1?1:0;if(b)var
c=b;else{if(46!==aU(e,a)){var
a=a-1|0;continue}var
c=0}return c}}(a,b-1|0))try{var
l=[1,aE(a)],c=l}catch(d){try{var
i=0;if(1<b&&45===aU(a,0)&&45===aU(a,1)){var
k=[1,aE(R(a,1,b-1|0))],h=k;i=1}if(!i)throw aH}catch(b){var
h=[2,iB(a)]}var
c=h}else
try{var
n=[2,iB(a)],c=n}catch(d){var
j=0;if(1<b&&45===aU(a,0)&&45===aU(a,1))var
c=[2,iB(R(a,1,b-1|0))];else
j=1;if(j)throw aH}var
g=c}return g}catch(b){return[4,CR(a)]}}var
adm=iJ(17,function(a){return cF(a,32)}),go=aN(30);function
CT(a){if(sE(a)===-1)return adn;for(;;){var
f=b(a[4],0);if(f!==-1){var
n=0;if(14<=f){if(32!==f)n=1}else
if(!(12<=f))switch(f){case
0:case
9:case
10:break;default:n=1}var
t=n?1:0;if(!t)continue;bf(a)}var
c=sE(a);if(c===-1)return ado;if(34===c){cu(a);ck(go);s(go,34);for(;;){var
j=b(a[4],0);if(j===-1)throw ar;if(34===j){s(go,34);return az(go)}if(92===j){var
m=b(a[4],0);if(m===-1)throw ar;if(34===m){s(go,34);continue}s(go,92);s(go,m);continue}s(go,j);continue}}var
g=0;if(93<=c){var
k=c+KW|0;if(30<k>>>0){if(!(32<=k))g=1}else
if(29===k)g=1}else
if(63<=c){if(91===c)g=1}else
if(37<=c)switch(c+M9|0){case
0:case
3:case
4:case
10:case
23:case
25:g=1;break}var
u=g?1:0;if(u){cu(a);return hl(c)}var
d=0,r=b(a[1],0);for(;;){var
i=b(a[4],0);if(i!==-1){var
e=0;if(92<=i){var
l=i-123|0;if(2<l>>>0){if(-30===l)e=1}else
if(1!==l)e=1}else{var
h=i-14|0;if(76<h>>>0)if(-2<=h)e=1;else
switch(h+14|0){case
0:case
9:case
10:e=1;break}else{var
o=h-18|0;if(!(30<o>>>0))switch(o){case
0:case
5:case
8:case
9:case
15:case
28:case
30:e=1;break}}}var
q=e?1:0;if(!q){var
d=d+1|0;continue}}b(a[2],r);var
p=16<d?aG(d):adm[1+d];Ck(a,p,0,d);return bi(p)}}}function
CU(a){return CS(CT(a))}var
adp=0;function
tc(c){var
a=adp;for(;;){var
b=CS(CT(c));if(typeof
b==="number"&&!b)return l(a);var
a=[0,b,a];continue}}function
fb(a){return tc(ct(0,a))}function
kR(a){if(10!==a&&13!==a)return 0;return 1}var
td=aN(30);function
kS(d){ck(td);var
e=[0,0],a=[0,0];for(;;){if(a[1])return az(td);var
c=b(d[4],0);if(c===-1)bA(a);else
if(kR(c))bA(e);else
if(e[1]){bf(d);bA(a)}else
s(td,c);continue}}function
te(f,a){for(;;){var
c=b(a[1],0);b(a[2],c-1|0);var
d=b(a[3],0);b(a[2],c-1|0);if(d){var
e=hm(f,d[1]);if(e)continue;return e}throw ar}}function
adq(a){te(kR,a);te(function(a){return hm(kR,a)},a);te(kR,a);return cu(a)}function
CV(c,a){try{if(b7<c)throw ar;b(a[2],c);var
q=b(a[3],0),r=b(a[3],0),s=b(a[3],0),t=b(a[3],0),u=b(a[3],0),v=b(a[3],0),w=b(a[3],0),x=b(a[3],0);try{var
y=g(de,[0,q,[0,r,[0,s,[0,t,[0,u,[0,v,[0,w,[0,x,0]]]]]]]]),e=y}catch(a){var
e=0}var
p=0;if(e&&37===e[1]){var
h=e[2];if(h&&80===h[1]){var
i=h[2];if(i&&68===i[1]){var
j=i[2];if(j&&70===j[1]){var
k=j[2];if(k&&45===k[1]){var
l=k[2];if(l){var
m=l[2];if(m&&46===m[1]){var
z=l[1],n=mK(mJ,m[2]);if(0===n)throw[0,f,aA(a,ads)];b(a[6],c);var
A=aE(P(n)),o=[0,aE(hl(z)),A];p=1}}}}}}}if(!p)var
o=CV(c+1|0,a);return o}catch(b){b=d(b);if(b!==ar&&b[1]!==$)throw b;throw[0,f,aA(a,adr)]}}var
adt=0;function
m9(a){return CV(adt,a)}function
CW(a){if(typeof
a==="number")switch(a){case
0:return adw;case
1:return adx;case
2:return ady;case
3:return adz;case
4:return adA;case
5:return adB;case
6:return adC;case
7:return adD;case
8:return adE;case
9:return adF;case
10:return adG;default:return adH}else
switch(a[0]){case
0:return bP([0,a[1]]);case
1:return bP([1,a[1]]);case
2:return bP([2,a[1]]);case
3:return bP([3,a[1]]);case
4:return a[1];default:return adI}}function
tf(a){var
b=gk(a);return b?b:hs(a)}var
m_=aN(30);function
i4(e,d,a){for(;;){var
c=b(a[4],0);if(c===-1){if(e)return 0;throw ar}if(b(d,c))return bf(a);continue}}var
adJ=1;function
fc(a){return i4(1,Cs,a)}function
CX(e){var
a=0;for(;;){var
c=b(e[4],0);if(c===-1)return l(a);var
d=aj(c);if(tf(d)){bf(e);return l(a)}var
a=[0,d,a];continue}}function
tg(d){ck(m_);for(;;){var
a=b(d[4],0);if(a===-1)return az(m_);var
c=aj(a);if(tf(c)){bf(d);return az(m_)}s(m_,c);continue}}function
adK(j){var
a=CX(j);if(a){var
i=a[1];if(bE===i){var
b=a[2];if(b&&97===b[1]){var
c=b[2];if(c&&cP===c[1]){var
d=c[2];if(d&&dO===d[1]){var
e=d[2];if(e&&bW===e[1]&&!e[2])return adL}}}}else
if(bX===i){var
f=a[2];if(f&&bF===f[1]){var
g=f[2];if(g&&dn===g[1]){var
h=g[2];if(h&&bW===h[1]&&!h[2])return adM}}}}return 11}function
th(c){var
h=b(c[1],0);try{var
a=CU(c),g=0;if(typeof
a==="number")g=1;else
switch(a[0]){case
1:var
e=[1,a[1]];break;case
2:var
e=[2,a[1]];break;default:g=1}if(g)var
e=11;return e}catch(a){a=d(a);if(a[1]===$&&S(a[2],adN))return 11;if(a[1]!==f&&a[1]!==$)throw a;b(c[2],h);return[2,iB(tg(c))]}}var
kT=aN(30);function
CY(a){ck(kT);cu(a);s(kT,47);var
d=[0,0];for(;;){if(d[1])return[4,az(kT)];var
c=b(a[4],0);if(c===-1)bA(d);else
if(tf(c)){bf(a);bA(d)}else
if(35===c){var
e=b(a[4],0),f=b(a[4],0),g=e!==-1?1:0,h=g?f!==-1?1:0:g;if(h){var
i=hl(aj(f));s(kT,aj(aE(o(adO,o(hl(aj(e)),i)))))}}else
s(kT,c);continue}}function
CZ(a){i4(0,kR,a);return 9}function
ti(a){try{var
b=aj(aE(o(adQ,P(a))));return b}catch(a){throw[0,f,adP]}}var
c1=aN(16);function
C0(c){try{ck(c1);var
e=[0,1];if(40===aj(b(c[4],0)))for(;;){if(0<e[1]){var
g=aj(b(c[4],0)),j=g+GB|0;if(1<j>>>0)if(52===j){var
a=aj(b(c[4],0));if(10!==a){var
i=0;if(98<=a)if(dn<=a)i=1;else{var
p=0;switch(a-98|0){case
0:s(c1,8);break;case
4:s(c1,12);break;case
12:s(c1,10);break;case
16:s(c1,13);break;case
18:s(c1,9);break;default:i=1;p=1}}else
if(13===a){if(10!==aj(b(c[4],0)))bf(c)}else
i=1;if(i){var
l=0;if(48<=a&&!(55<a)){var
h=aj(b(c[4],0)),m=0;if(48<=h&&!(55<h)){var
k=aj(b(c[4],0)),n=0;if(48<=k&&!(55<k)){s(c1,ti([0,a,[0,h,[0,k,0]]]));n=1}if(!n){bf(c);s(c1,ti([0,a,[0,h,0]]))}m=1}if(!m){bf(c);s(c1,ti([0,a,0]))}l=1}if(!l)s(c1,a)}}}else
s(c1,g);else
if(j){e[1]+=-1;if(0<e[1])s(c1,g)}else{e[1]++;s(c1,g)}continue}var
o=[3,az(c1)];return o}throw[0,B,adS]}catch(a){a=d(a);if(a[1]===$)throw[0,f,aA(c,adR)];throw a}}function
C1(a){function
h(c,b){try{var
d=aj(aE(o(adU,P([0,c,[0,b,0]]))));return d}catch(b){throw[0,f,aA(a,adT)]}}var
c=aN(16);try{b(a[4],0);var
e=[0,0],i=function(a){return s(c,a)},j=function(e){for(;;){var
c=b(a[4],0);if(-1===c)throw ar;var
d=aj(c);if(gk(d))continue;return d}};for(;;){if(e[1]){var
l=[3,az(c)];return l}var
g=j(0),k=j(0);if(62===g){bf(a);bA(e)}else
if(62===k){i(h(g,48));bA(e)}else
i(h(g,k));continue}}catch(b){b=d(b);if(b===ar)return[3,az(c)];if(b[1]===$)throw[0,f,aA(a,adV)];throw b}}function
adW(d){var
b=CU(d);if(typeof
b!=="number"&&4===b[0]){var
a=b[1];if(!c(a,adX))return 8;if(!c(a,adY))return 7;if(!c(a,adZ))return 5;if(!c(a,ad0))return 0;if(!c(a,ad1))return 6}return 11}function
tj(c,a){try{var
d=b(a[1],0),e=Q6(c,function(c){return de(b(a[3],0))});b(a[2],d);return e}catch(a){throw[0,$,ad2]}}function
C2(a){try{if(c(tj(9,a),ad3)){var
b=tj(10,a),f=0;if(c(b,ad4)&&c(b,ad5)){var
g=c(tj(11,a),ad6)?1:0,d=g;f=1}if(!f)var
d=0;var
e=d}else
var
e=0;return e}catch(a){return 1}}function
C3(a){i4(adJ,gk,a);i4(1,function(a){var
b=0;if(12<=a){if(32!==a&&13<=a)b=1}else
if(9!==a&&a)b=1;return b?1:0},a);var
c=aj(b(a[4],0));return 10===c?0:13===c?10===aj(b(a[4],0))?0:bf(a):bf(a)}function
ad7(a){for(;;){var
c=function(g,c){var
a=0,k=b(c[1],0);for(;;){var
d=a===m(g)?1:0,i=0;if(d)var
e=d;else{var
f=b(c[3],0);if(f){var
j=f[1];if(j===F(g,a)){var
a=a+1|0;continue}var
h=0;i=1}else
var
e=0}if(!i)var
h=e;b(c[2],k);return h}};if(!c(ad8,a)&&!c(ad9,a)&&!c(ad_,a)&&!c(ad$,a)){var
d=a[5];if(b(a[1],0)===d)return b(a[1],0);cu(a);continue}return b(a[1],0)}}function
kU(a){try{C3(a);var
g=b(a[1],0),i=ad7(a);b(a[2],g);var
e=ay(i-g|0),h=aa(e)-1|0,j=0;if(!(h<0)){var
c=j;for(;;){bv(e,c,b(a[4],0));var
l=c+1|0;if(h!==c){var
c=l;continue}break}}var
k=[5,[0,e]];return k}catch(a){a=d(a);throw[0,f,o(aea,aR(a))]}}function
C4(a,j,q,p,o){function
r(b){throw[0,f,aA(a,aec)]}var
e=b(j,Xv(function(a){if(typeof
a==="number"&&6===a)return 0;return 1},q))[2];if(typeof
e!=="number"&&6===e[0]){var
s=e[1],t=b(a[1],0),u=function(c){var
a=c;for(;;){if(typeof
a!=="number")switch(a[0]){case
1:return[0,a[1]];case
8:var
a=b(j,b(p,a[1]))[2];continue}return 0}},k=a4(aed,s);if(k){var
v=k[1];try{var
l=u(v);if(l){var
c=l[1],g=b(a[1],0);try{C3(a);var
d=b(a[1],0);if(o){var
h=ay(c);if(0<c)Cj(a,h,0,c);b(a[2],d+c|0);var
n=C2(a)?(b(a[2],g),kU(a)):(b(a[2],d+c|0),[5,[0,h]]),i=n}else{b(a[2],d+c|0);var
i=C2(a)?(b(a[2],g),kU(a)):(b(a[2],d+c|0),[5,[1,kH(0,a,d,c)]])}var
m=i}catch(b){throw[0,f,aA(a,aeb)]}}else
var
m=kU(a);return m}catch(c){b(a[2],t);return kU(a)}}return kU(a)}return r(0)}function
en(m,l,z,a,y,x,w,v){try{fc(a);var
c=b(a[4],0);if(c===-1)var
n=10;else{bf(a);var
i=0;if(48<=c){var
q=0;if(bE!==c&&bX!==c){i=1;q=1}if(!q)var
e=adK(a)}else
if(37===c)var
e=CZ(a);else
if(47<=c)var
e=CY(a);else
i=1;if(i){var
r=0;if(!(48<=c)||57<c)r=1;var
j=0;if(r&&!(43===c||45===c||46===c)){var
g=0;if(63<=c){if(94<=c){if(dO===c){b(a[4],0);b(a[4],0);var
B=aj(b(a[4],0));bf(a);bf(a);bf(a);var
C=97===B?10:z?10:C4(a,x,y,v,w),f=C;g=1}}else
if(82<=c){var
s=0;switch(c-82|0){case
0:cu(a);var
h=8;break;case
9:cu(a);l[1]++;var
h=1;break;case
11:cu(a);l[1]+=-1;var
h=2;break;default:s=1}if(!s){var
f=h;g=1}}}else
if(40===c){var
f=C0(a);g=1}else
if(60<=c){var
t=0;switch(c+L$|0){case
0:aj(b(a[4],0));var
D=aj(b(a[4],0));bf(a);bf(a);var
E=60===D?(cu(a),cu(a),m[1]++,3):C1(a),p=E;break;case
1:t=1;break;default:b(a[4],0);var
F=aj(b(a[4],0));bf(a);bf(a);var
G=62===F?(cu(a),cu(a),m[1]+=-1,4):11,p=G}if(!t){var
f=p;g=1}}if(!g){var
u=0;if(97<=c&&!(b5<c))var
o=adW(a);else
u=1;if(u)var
o=73===c?10:11;var
e=o;j=2}}else
j=1;var
k=0;switch(j){case
1:var
f=th(a);k=1;break;case
0:k=1;break}if(k)var
e=f}var
n=e}return n}catch(a){a=d(a);var
A=aR(a);b(K(aee),A);return 10}}function
tk(c){var
d=[0,0],e=[0,0],a=0;for(;;){var
g=function(a){return aef},b=en(e,d,0,c,0,g,0,function(a){return 0});if(typeof
b==="number")switch(b){case
4:if(0===e[1]&&0===d[1])return l([0,4,a]);break;case
10:return l(a);case
11:throw[0,f,aA(c,aeg)]}var
a=[0,b,a];continue}}function
i5(n,a,j,i,h){var
e=[0,0],g=[0,0];return function(d,v){var
a=v;for(;;){var
c=en(e,g,0,d,a,i,j,h);if(typeof
c==="number")switch(c){case
7:return l([0,c,a]);case
9:var
a=[0,c,a];continue;case
10:return l(a);case
11:throw[0,f,aA(d,aeh)];case
2:case
4:if(n&&0===e[1]&&0===g[1]){var
x=b(d[1],0),o=en(e,g,0,d,[0,c,a],i,j,h);if(typeof
o!=="number"&&5===o[0]){var
k=o[1],r=en(e,g,0,d,[0,[5,k],[0,c,a]],i,j,h);if(typeof
r==="number"&&5===r){var
s=en(e,g,0,d,[0,5,[0,[5,k],[0,c,a]]],i,j,h);if(typeof
s==="number"&&7===s)return l([0,7,[0,5,[0,[5,k],[0,c,a]]]]);return l([0,7,[0,5,[0,[5,k],[0,c,a]]]])}return l([0,7,[0,5,[0,[5,k],[0,c,a]]]])}b(d[2],x);return l([0,c,a])}var
a=[0,c,a];continue}else
if(1===c[0]){var
m=c[1];if(n&&0===e[1]&&0===g[1]){var
t=b(d[1],0),p=en(e,g,0,d,a,i,j,h);if(typeof
p!=="number"&&1===p[0]){var
y=p[1],u=en(e,g,0,d,a,i,j,h);if(typeof
u==="number"&&6===u){var
a=[0,6,[0,[1,y],[0,[1,m],a]]];continue}b(d[2],t);return l([0,[1,m],a])}b(d[2],t);return l([0,[1,m],a])}var
a=[0,[1,m],a];continue}if(n){var
q=0;if(typeof
c==="number"){if(0===c)q=1}else
switch(c[0]){case
1:case
5:break;default:q=1}var
w=q?1:0;if(w&&0===e[1]&&0===g[1])return l([0,c,a])}var
a=[0,c,a];continue}}(a,0)}function
aei(a){return aV(0,Gv)}function
aej(c,b,e){try{an(c,b);var
a=0;return a}catch(a){a=d(a);if(a===J)return aO(c,b,e);throw a}}function
C5(b,a){try{var
c=[0,an(b,a)];return c}catch(a){a=d(a);if(a===J)return 0;throw a}}function
eo(a,e,d,c,i){var
j=b(a[1],0),g=C5(e,i);if(g){var
h=g[1];if(0===h[0]){b(a[2],h[1]);var
k=i5(0,a,c,d,function(b){return eo(a,e,d,c,b)});b(a[2],j);return k}throw[0,B,aek]}throw[0,f,aA(a,ael)]}function
aem(i){var
b=0,a=i;for(;;){if(a){var
c=a[1];if(typeof
c==="number")switch(c){case
0:var
b=[0,aen,b],a=a[2];continue;case
9:var
a=a[2];continue}else
switch(c[0]){case
0:var
b=[0,[1,[0,c[1]]],b],a=a[2];continue;case
1:var
f=c[1],d=a[2];if(d){var
j=0,g=d[1];if(typeof
g==="number"||!(1===g[0]))j=1;else{var
e=d[2];if(e){var
h=e[1];if(typeof
h==="number"&&8===h){var
b=[0,[1,[8,f]],b],a=e[2];continue}}}}var
b=[0,[1,[1,f]],b],a=a[2];continue;case
2:var
b=[0,[1,[2,c[1]]],b],a=a[2];continue;case
3:var
b=[0,[1,[3,c[1]]],b],a=a[2];continue;case
4:var
b=[0,[1,[4,c[1]]],b],a=a[2];continue}var
b=[0,[0,c],b],a=a[2];continue}return l(b)}}function
C6(a){function
b(i,h){var
b=i,a=h;for(;;){if(a){var
e=a[1];if(0!==e[0]){var
c=a[2];if(c){var
g=c[1],j=e[1];if(0!==g[0]){var
d=g[1];if(typeof
d!=="number"&&4===d[0]){var
b=[0,[0,d[1],j],b],a=c[2];continue}}}}throw[0,f,aeo]}return b}}try{var
e=[1,[6,b(0,a)]];return e}catch(a){a=d(a);if(a[1]===f&&!c(a[2],aep)){K(aeq);return aer}throw a}}function
C7(a){return[1,[5,kf(function(a){if(0===a[0])throw[0,f,aes];return a[1]},a)]]}function
tm(h,g){var
b=h,a=g;for(;;){if(a){var
c=a[1];if(0===c[0]){var
d=c[1];if(typeof
d==="number")switch(d){case
1:var
e=tm(0,a[2]),b=[0,e[1],b],a=e[2];continue;case
2:var
i=a[2];return[0,C7(b),i];case
3:var
f=tl(0,a[2]),b=[0,f[1],b],a=f[2];continue}}var
b=[0,c,b],a=a[2];continue}return[0,C7(b),0]}}function
tl(h,g){var
b=h,a=g;for(;;){if(a){var
c=a[1];if(0===c[0]){var
d=c[1];if(typeof
d==="number")switch(d){case
1:var
e=tm(0,a[2]),b=[0,e[1],b],a=e[2];continue;case
3:var
f=tl(0,a[2]),b=[0,f[1],b],a=f[2];continue;case
4:var
i=a[2];return[0,C6(b),i]}}var
b=[0,c,b],a=a[2];continue}return[0,C6(b),0]}}function
aet(i,h){var
b=i,a=h;for(;;){if(a){var
c=a[1];if(0===c[0]){var
d=c[1];if(typeof
d==="number"){var
e=d-1|0;if(!(2<e>>>0))switch(e){case
0:var
f=tm(0,a[2]),b=[0,f[1],b],a=f[2];continue;case
1:break;default:var
g=tl(0,a[2]),b=[0,g[1],b],a=g[2];continue}}}var
b=[0,c,b],a=a[2];continue}return l(b)}}function
ba(P,T){var
U=P?P[1]:0;try{var
h=aet(0,aem(T));if(h){var
w=h[1];if(0!==w[0]){var
n=w[1],c=0;if(typeof
n==="number"||!(1===n[0]))c=2;else{var
p=h[2];if(p){var
y=p[1],k=n[1];if(0!==y[0]){var
a=0,B=y[1];if(typeof
B!=="number"&&1===B[0]){var
q=p[2];if(q){var
C=q[1];if(0===C[0]){var
D=C[1];if(typeof
D==="number"&&6===D){var
l=q[2];if(l){var
r=l[1];if(0===r[0]){var
E=r[1];if(typeof
E==="number"&&7===E&&!l[2]){var
i=[0,k,0];c=1;a=1}else
a=1}else{var
g=r[1],s=l[2],o=0;if(s){var
F=s[1];if(0===F[0]){var
e=0,t=F[1];if(typeof
t==="number"){if(7===t)if(s[2])e=1;else{var
i=[0,k,g];c=1;a=1;o=1;e=1}}else
if(5===t[0]){var
j=0;if(typeof
g!=="number"&&6===g[0]){var
G=l[2],H=G[2];if(H){var
I=H[1],m=G[1][1][1],S=g[1];if(0===I[0]){var
L=I[1];if(typeof
L==="number"&&5===L){var
M=0===m[0]?aa(m[1]):m[1][3];try{var
u=ei(aez,S),Q=0;if(typeof
u!=="number"&&1===u[0]){var
O=u[1];Q=1}if(!Q)var
O=-1;var
N=O}catch(a){a=d(a);if(a!==J)throw a;var
N=-1}if(N!==M){var
i=[0,k,[7,[0,[0,A(g,aey,[1,M]),m]]]];c=1;a=1;o=1;e=1;j=1}else{var
i=[0,k,[7,[0,[0,g,m]]]];c=1;a=1;o=1;e=1;j=1}}else{e=1;j=1}}else{e=1;j=1}}else{e=1;j=1}}if(!j)e=1}}}if(!o){var
i=[0,k,g];c=1;a=1}}}else
a=1}else
a=1}else
a=1}else
a=1}}}else
c=2}var
v=0;switch(c){case
2:if(!h[2]){var
i=[0,0,n];v=1}break;case
0:break;default:v=1}if(v)return i}}var
R=z(h);b(K(aeu),R);x(function(a){if(0===a[0]){var
c=CW(a[1]);return b(K(aev),c)}var
d=bP(a[1]);return b(K(aew),d)},h);throw[0,f,aex]}catch(a){a=d(a);if(a[1]===f){if(U)return[0,ml,0];throw a}throw a}}function
C8(h,s,g,n,m,G,F,E,c,D){var
i=b(g,eo(h,s,g,n,m))[2];if(typeof
i!=="number"&&7===i[0]){var
t=i[1][1][1],u=e(c,aeC,t);if(u){var
o=u[1];if(typeof
o!=="number"&&1===o[0]){var
I=o[1],v=e(c,aeE,t);if(v){var
p=v[1];if(typeof
p!=="number"&&1===p[0]){var
J=p[1],j=Z$(F,E,c,m,D,i);d1(c,j);if(typeof
j!=="number"&&7===j[0]){var
w=j[1][1][2];if(0===w[0]){var
a=b3(0,w[1]);try{var
k=[0,0],y=I*2|0,K=1;if(!(y<1)){var
q=K;for(;;){fc(a);var
r=th(a),C=0;if(typeof
r!=="number"&&1===r[0]){Y(k,r[1]);var
N=q+1|0;if(y!==q){var
q=N;continue}C=1}if(!C)throw[0,f,aA(a,aeI)];break}}k[1]=l(k[1]);var
z=[0,0],A=[0,0],L=kp(k[1]),B=[0,db(XD,G)];x(function(d){var
c=B[1],e=d[2],f=d[1];if(c&&c[1]===A[1]){B[1]=c[2];b(a[2],e+J|0);var
h=0;Y(z,[0,f,[0,[0,[1,b(g,i5(1,a,n,g,function(b){return eo(a,s,g,n,b)}))[2]]],h]])}A[1]++;return 0},L);bB(c,[0,m,0]);var
M=z[1];return M}catch(b){b=d(b);if(b===ar)throw[0,f,aA(a,aeH)];throw b}}}throw[0,f,aA(h,aeG)]}}throw[0,f,aA(h,aeF)]}}throw[0,f,aA(h,aeD)]}var
H=bP(i);throw[0,f,aA(h,b(ae(aeB),H))]}function
aeJ(f){for(;;){var
_=b(f[1],0);fc(f);var
a=kS(f);if(!S(a,aeK)&&!S(a,aeL)){var
d=function(a){var
b=48<=a?1:0,c=b?a<=57?1:0:b;return c};if(18<=m(a)&&d(F(a,0))&&d(F(a,1))&&d(F(a,2))&&d(F(a,3))&&d(F(a,4))&&d(F(a,5))&&d(F(a,6))&&d(F(a,7))&&d(F(a,8))&&d(F(a,9))&&d(F(a,11))&&d(F(a,12))&&d(F(a,13))&&d(F(a,14))&&d(F(a,15))){var
K=aE(R(a,11,5)),L=aE(R(a,0,10)),M=F(a,17);return bE===M?[2,L,K]:aY===M?[1,L,K]:0}var
g=aK(a);if(g){var
N=g[1];if(48===N){var
k=g[2];if(k&&48===k[1]){var
l=k[2];if(l&&48===l[1]){var
n=l[2];if(n&&48===n[1]){var
o=n[2];if(o&&48===o[1]){var
p=o[2];if(p&&48===p[1]){var
q=p[2];if(q&&48===q[1]){var
r=q[2];if(r&&48===r[1]){var
s=r[2];if(s&&48===s[1]){var
t=s[2];if(t&&48===t[1]){var
u=t[2];if(u&&32===u[1]){var
O=u[2];if(O){var
P=O[2];if(P){var
Q=P[2];if(Q){var
T=Q[2];if(T){var
U=T[2];if(U){var
v=U[2];if(v&&32===v[1]){var
V=v[2];if(V&&aY===V[1])return aeM}}}}}}}}}}}}}}}}}else
if(bX===N){var
D=g[2];if(D&&bF===D[1]){var
E=D[2];if(E&&97===E[1]){var
G=E[2];if(G&&cO===G[1]){var
H=G[2];if(H&&cP===H[1]){var
I=H[2];if(I&&bW===I[1]){var
Y=I[2];if(Y&&bF===Y[1]){var
$=aK(a),aa=32,ab=(_+7|0)+z(mK(function(a){return aD(aa,a)},$))|0;b(f[2],ab);return 2}}}}}}}}var
h=tc(ct(0,a));if(h){var
i=h[1],e=0;if(typeof
i==="number")e=1;else
switch(i[0]){case
1:var
w=h[2];if(w){var
x=w[1],Z=0;if(typeof
x!=="number"&&1===x[0])if(w[2])Z=1;else{var
X=x[1],W=i[1];e=2;Z=1}}break;case
4:if(!c(i[1],aeN)){var
y=h[2];if(y){var
A=y[1],j=0;if(typeof
A!=="number"&&1===A[0]){var
B=y[2];if(B){var
C=B[1],J=0;if(typeof
C!=="number"&&1===C[0])if(B[2]){j=1;J=1}else{var
X=C[1],W=A[1];e=2;j=1;J=1}if(!J)j=1}else
j=1}}}break;default:e=1}switch(e){case
1:break;case
0:break;default:return[0,W,X]}}return 0}continue}}function
aeO(c){function
e(a){throw[0,f,aA(c,aeP)]}var
g=[0,0];try{var
h=[0,0],b=[0,0];for(;;){if(!h[1]){var
a=aeJ(c),i=0;if(typeof
a==="number")switch(a){case
0:e(0);break;case
2:bA(h);break;default:i=1}else
switch(a[0]){case
0:b[1]=a[1];break;case
1:Y(g,[0,b[1],[0,a[1],a[2]]]);b[1]++;break;case
2:b[1]++;break;default:i=1}continue}break}}catch(a){a=d(a);if(a!==ar&&a[1]!==mk&&a[1]!==$)throw a;e(0)}return g[1]}function
C9(a){var
N=b(a[1],0),i=[0,f,aA(a,aeS)];function
$(a){return 0}var
aa=0,r=en([0,0],[0,0],0,a,0,function(a){return aeT},aa,$);if(typeof
r!=="number"&&1===r[0]){var
ab=r[1];b(a[2],N);var
ac=function(c,d){var
a=d;for(;;){var
e=0,f=function(a){return ba(0,a)},g=ce(0),h=function(b,d,e){return function(a){return eo(c,e,d,b,a)}}(e,f,g),i=0,b=en([0,0],[0,0],1,c,0,function(a){return ba(0,a)},i,h);if(typeof
b==="number"&&10<=b)return l(a);var
a=[0,b,a];continue}};try{var
ad=1,ae=function(a){return ba(0,a)},af=ce(0),ag=function(b){return eo(a,af,ae,ad,b)},m=ac(a,0),W=0,O=aM(m);if(typeof
O!=="number"&&1===O[0]){var
X=0,P=aM(bu(m));if(typeof
P!=="number"&&1===P[0]){var
ah=1,ai=l(m),s=C4(a,function(a){return ba(0,a)},ai,ag,ah);if(typeof
s==="number"&&11<=s)throw i;var
c=ba(0,q(m,q([0,s,0],aeW)))[2];W=1;X=1}if(!X)throw J}if(!W)throw J}catch(b){throw[0,f,aA(a,aeV)]}if(typeof
c!=="number"&&7===c[0]){d1(bm(0),c);var
Q=e(bm(0),aeX,c);if(Q){var
t=Q[1],al=0;if(typeof
t==="number"||!(5===t[0]))al=1;else{var
u=t[1];if(u){var
v=u[1],h=0;if(typeof
v!=="number"&&1===v[0]){var
w=u[2];if(w){var
y=w[1],j=0;if(typeof
y!=="number"&&1===y[0]){var
A=w[2];if(A){var
B=A[1],L=0;if(typeof
B!=="number"&&1===B[0])if(A[2]){h=1;j=1;L=1}else{var
C=B[1],D=y[1],E=v[1];if(0<=E&&0<=D&&0<=C&&0<((E+D|0)+C|0)){if(typeof
c!=="number"&&7===c[0]){var
R=c[1][1][2];if(0===R[0]){var
F=b3(0,R[1]),d=[0,0];try{for(;;){try{var
n=function(a){function
c(d,a){if(0===d)return 0;var
e=b(F[4],0);if(e===-1)throw[0,f,aA(F,aeR)];return bd(e,a)+c(d-1|0,a/ak|0)|0}return 0===a?0:c(a,dA(a-1|0,ak))},M=n(E),o=n(D),p=n(C);if(2<M>>>0)var
k=1;else
switch(M){case
0:var
k=[4,o,p];break;case
1:var
k=[1,o,p];break;default:var
k=[3,o,p]}}catch(a){throw[0,f,aA(F,aeQ)]}Y(d,k);continue}}catch(h){d[1]=l(d[1]);var
S=e(bm(0),aeY,c);if(S){var
G=S[1],Z=0;if(typeof
G!=="number"&&5===G[0]){var
T=G[1];if(iU(z(T)))throw[0,f,aA(a,ae0)];var
aj=kp(T),U=g(function(d){var
b=d[1],e=0;if(typeof
b!=="number"&&1===b[0]){var
c=d[2];if(typeof
c!=="number"&&1===c[0])return[0,b[1],c[1]];e=1}throw[0,f,aA(a,ae1)]},aj);Z=1}if(!Z)throw[0,f,aA(a,aeZ)]}else{var
V=e(bm(0),ae3,c),_=0;if(V){var
I=V[1],am=0;if(typeof
I!=="number"&&1===I[0]){var
U=[0,[0,0,I[1]],0];_=1;am=1}}if(!_)throw[0,f,aA(a,ae4)]}var
H=[0,0];x(function(c){var
e=c[2],g=c[1];try{var
h=iT(d[1],e)}catch(b){throw[0,f,aA(a,ae2)]}d[1]=kq(d[1],e);var
b=[0,g];return x(function(a){if(typeof
a!=="number")switch(a[0]){case
1:Y(H,[0,b[1],[0,a[1],a[2]]]);b[1]++;return 0;case
3:Y(H,[0,b[1],[1,a[1],a[2]]]);b[1]++;return 0}b[1]++;return 0},h)},U);b(a[2],N);return[0,l(H[1]),ab]}}}throw i}h=1;j=1;L=1}if(!L){h=1;j=1}}else{h=1;j=1}}if(!j)h=1}else
h=1}}}}throw i}throw i}K(aeU);throw i}function
C_(c,b,a){var
d=0;return ba(0,eo(c,b,function(a){return ba(0,a)},d,a))[2]}function
m$(a){try{m9(a);var
g=ba(ae5,tk(a))[2],b=e(bm(0),ae6,g),f=0;if(b){var
h=0,c=b[1];if(typeof
c!=="number")switch(c[0]){case
1:case
2:var
d=1;f=1;h=1;break}}if(!f)var
d=0;return d}catch(a){return 0}}var
C$=[Q,ae9,aL(0)],ae8=[Q,ae7,aL(0)];function
Da(b,a){return cc(aff,[1,b],ej(afe,ej(afd,ej(afc,ej(afb,ej(afa,ej(ae$,ej(ae_,a))))))))}function
afg(j,O,N,i,a){if(j){var
Q=j[1];if(!(1<=Q)&&-1!==Q)throw C$}var
p=[0,1],w=[0,0],T=m$(a);b(a[2],0);var
k=[0,0],U=ce(0),c=aei(0),V=m9(a),ax=V[2],ay=V[1];function
y(a){return aej(c,a[1],a[2])}var
W=[0,0],l=[0,0],A=[0,0],X=[0,1];function
Z(f,e){var
d=[0,0];cb(function(b,a){return 0===a[0]?Y(d,[0,b,[0,[0,0],a[2]]]):0},c);var
g=q(d[1],f),h=mW([0,function(b){return C_(a,c,b)}],g),b=bm(0);return[0,b[1],b[2],b[3],h,e,b[6],b[7]]}function
H(b){throw[0,f,aA(a,adu)]}var
n=[0,a[5]-4|0];try{var
I=[0,1],K=[0,b7];for(;;){if(I[1]){n[1]=n[1]-1|0;b(a[2],n[1]);if(0<=K[1])K[1]+=-1;else
H(0);var
L=kS(a),M=5<=m(L)?1:0,aw=M?S(R(L,0,5),adv):M;if(aw)sB(I);continue}b(a[2],n[1]);break}}catch(a){H(0)}adq(a);i4(0,mJ,a);var
_=mK(mJ,CX(a));if(_){A[1]=aE(P(_));for(;;){if(W[1]){if(aD(j,afh)){var
az=T?p[1]-1|0:p[1];throw[0,ae8,az]}var
$=a4(afi,l[1]);if($){var
B=$[1];if(typeof
B!=="number"&&8===B[0]){var
aa=B[1],r=function(d){var
a=C5(c,d);if(a){var
b=a[1];return 0===b[0]?b[2]:0}throw J},ab=[0,0];cb(function(b,a){return 0===a[0]?Y(ab,b):0},c);var
aB=ab[1],aC=i?function(b){var
d=ba(0,eo(a,c,function(a){return ba(0,a)},i,b)),e=d[2],f=d[1];return[0,f,[0,[0,[0,e]],r(b)]]}:function(a){return[0,a,[0,[0,0],r(a)]]},C=g(aC,aB),ac=[0,0];cb(function(b,a){return 0===a[0]?0:Y(ac,[0,b,a[1],a[2]])},c);var
s=ac[1];x(function(a){return aO(U,a[1],a[2])},s);if(i){var
ad=aV(0,dm),ae=aV(0,dm);x(function(a){var
b=a[2];aO(ad,b,a);return gb(ae,b,0)},s);var
aF=ku(ae),aG=g(function(a){return a[1]},aF),aH=eY(function(a){return sd(ad,a)},aG),aI=g(function(a){var
b=aM(a)[2];return[0,b,g(function(a){return a[3]},a)]},aH),aJ=Z(C,[6,l[1]]),af=ah(g(function(d){var
b=d[1],e=d[2],f=r(b),g=C8(a,c,function(a){return ba(0,a)},i,b,e,O,N,aJ,f);k[1]=[0,b,k[1]];return g},aI))}else{var
aT=Z(C,[6,l[1]]),aU=function(b,d){var
e=r(b);return C8(a,c,function(a){return ba(0,a)},i,b,d,O,N,aT,e)},ao=aV(0,dm),ap=aV(0,dm),aq=aV(0,dm);x(function(a){var
b=a[2];aO(ap,b,a);return gb(aq,b,0)},s);var
aW=ku(aq),aX=g(function(a){return a[1]},aW),aY=eY(function(a){return sd(ap,a)},aX);x(function(a){var
b=g(function(a){return a[1]},a),c=g(function(a){return a[3]},a);return x(function(a){return aO(ao,a,c)},b)},aY);var
af=g(function(a){return[0,a[1],[0,[0,[2,ao,a[2],a[3],aU]],0]]},s)}var
ag=q(af,C),aK=l[1],aL=0,aN=[6,Da(z(ag),aK)],h=[0,ay,ax,aa,mW([0,function(b){return C_(a,c,b)}],ag),aN,T,aL],aj=e(h,afk,ai(h,aa)),a3=0;if(aj){var
D=aj[1],a5=0;if(typeof
D!=="number"&&4===D[0]){var
ak=D[1];try{var
an=m9(ct(0,o(afl,R(ak,1,m(ak)-1|0)))),aQ=an[2],aS=an[1],am=aQ,al=aS}catch(a){a=d(a);sy(aR(a));var
am=h[2],al=h[1]}h[1]=al;h[2]=am;a3=1;a5=1}}var
aP=k[1];x(function(a){return kJ(h,a)},aP);h[4][4]=U;return h}throw[0,f,aA(a,afj)]}throw[0,f,aA(a,afm)]}b(a[2],A[1]);w[1]++;fc(a);var
ar=function(b){if(aD(Cg(a),afn)){var
e=aeO(a),f=b?function(a){return 0}:y;return x(f,e)}var
c=1-b;if(c){var
d=C9(a),g=d[1];k[1]=[0,d[2],k[1]];return x(y,g)}return c};if(j&&!(j[1]<=w[1]))ar(1);else
ar(0);var
aZ=function(a){return ba(0,a)},a0=function(d){return function(b){return eo(a,c,d,i,b)}}(aZ),t=ba(0,i5(1,a,i,function(a){return ba(0,a)},a0))[2],v=0;if(typeof
t!=="number")switch(t[0]){case
6:var
u=t[1];v=2;break;case
7:var
G=t[1][1][1],au=0;if(typeof
G!=="number"&&6===G[0]){var
u=G[1];v=2;au=1}if(!au)v=1;break}switch(v){case
0:break;case
1:break;default:if(X[1]){l[1]=sz(u,l[1]);sB(X)}var
as=a4(afp,u),a6=0;if(as){var
E=as[1],a7=0;if(typeof
E!=="number"&&1===E[0]){b(a[2],E[1]);var
a2=function(d){var
b=C9(a),c=b[1];k[1]=[0,b[2],k[1]];return x(y,c)};if(!j||j[1]<=w[1])a2(0);a6=1;a7=1}}var
at=a4(afq,u);if(at){var
F=at[1],av=0;if(typeof
F!=="number"&&1===F[0]){var
a1=F[1];p[1]=p[1]+1|0;A[1]=a1;av=1}if(!av)throw[0,f,aA(a,afr)]}else
bA(W);continue}throw[0,f,aA(a,afo)]}}throw[0,f,aA(a,afs)]}function
afw(a){b(a[2],0);var
j=[0,0];for(;;){try{var
M=b(a[1],0);try{for(;;){var
k=b(a[1],0);try{var
c=kS(a),q=bX===F(c,0)?1:0;if(q){var
r=bF===F(c,1)?1:0;if(r){var
s=97===F(c,2)?1:0;if(s){var
t=cO===F(c,3)?1:0;if(t){var
u=cP===F(c,4)?1:0;if(u)var
v=bW===F(c,5)?1:0,e=v?bF===F(c,6)?1:0:v;else
var
e=u}else
var
e=t}else
var
e=s}else
var
e=r}else
var
e=q;var
w=7<m(c)?1:0,K=1-e;if(w)var
L=60===F(c,7)?1:0,y=L||(32===F(c,7)?1:0);else
var
y=w;if(y)b(a[2],k+7|0);var
o=K}catch(c){var
l=b(a[1],0)===k?1:0;if(l)var
n=l;else
var
J=a[5],n=J<=b(a[1],0)?1:0;var
o=1-n}if(o)continue;var
D=1,E=function(a){return ba(0,a)},G=ce(0),H=function(c,d,e){return function(b){return eo(a,e,d,c,b)}}(D,E,G),g=ba(0,i5(1,a,1,function(a){return ba(0,a)},H))[2],h=0;if(typeof
g!=="number")switch(g[0]){case
6:var
p=g[1];h=2;break;case
7:var
i=g[1][1][1],A=0;if(typeof
i!=="number"&&6===i[0]){var
p=i[1];h=2;A=1}if(!A)h=1;break}var
B=0;switch(h){case
0:break;case
1:break;default:var
I=ej(afv,p);B=1}if(!B)throw[0,f,aA(a,afu)];break}}catch(a){a=d(a);var
C=aR(a);throw[0,f,b(ae(aft),C)];var
O=a}x(function(a){j[1]=cc(a[1],a[2],j[1]);return 0},I);var
N=M<b(a[1],0)?1:0,z=N}catch(a){var
z=0}if(z)continue;return j[1]}}function
afx(a){for(;;){fc(a);var
d=b(a[1],0),f=function(a){return 0},g=1,c=en([0,0],[0,0],0,a,0,function(a){return ba(0,a)},g,f);if(typeof
c==="number"){if(10===c)return 0}else
if(1===c[0])return b(a[2],d);var
e=d<b(a[1],0)?1:0;if(e)continue;return e}}function
afy(a){var
c=[0,0];for(;;){var
g=b(a[3],0);bf(a);if(0!==g){var
h=b(a[1],0);try{var
i=1,j=function(a){return ba(0,a)},k=ce(0),l=function(c,d,e){return function(b){return eo(a,e,d,c,b)}}(i,j,k),e=ba(afz,i5(1,a,1,function(a){return ba(0,a)},l)),d=e[1],f=0<d?1:0,m=e[2],n=f?d<fH?1:0:f;if(n)c[1]=cc(d,m,c[1]);afx(a);if(b(a[1],0)===h)kS(a)}catch(b){kS(a)}continue}return c[1]}}function
afA(s,r,a){var
j=a[8];b(K(afB),j);var
e=afw(a),h=m9(a),k=h[2],l=h[1];b(a[2],0);var
m=afy(a),c=g(function(a){return[0,a[1],[0,[0,[0,a[2]]],0]]},m),n=z(c);b(K(afC),n);var
i=a4(afD,e);if(i){var
d=i[1];if(typeof
d!=="number"&&8===d[0]){var
o=d[1];b(a[2],0);var
p=Da(z(c),e),q=m$(a);K(afF);return[0,l,k,o,mW(0,c),[6,p],q,0]}throw[0,f,aA(a,afE)]}throw[0,f,aA(a,afG)]}function
afH(c,b,a){var
d=aR(a),e=aR(b);throw[0,f,aA(c,n(ae(afI),e,d))]}function
na(i,g,e,a,c){try{var
l=afg(i,g,e,a,c);return l}catch(a){a=d(a);if(a[1]===f){var
h=a[2];if(10<=m(h)&&S(R(h,0,10),afJ))throw a}else
if(a===C$)throw[0,f,afL];var
j=aR(a);b(K(afK),j);try{var
k=afA(g,e,c);return k}catch(b){b=d(b);return afH(c,a,b)}}}function
afM(e,a,d,c,b){var
f=a?a[1]:afN;return na(e,d,c,1,iX([0,f],b))}function
afO(e,a,d,c,b){var
f=a?a[1]:afP;return na(e,d,c,0,iX([0,f],b))}function
afQ(d,c,b,a){return na(d,c,b,1,a)}function
Db(d,c,b,a){return na(d,c,b,0,a)}function
tn(b){if(e$(b)){var
a=kO(b)[1];if(typeof
a!=="number"&&0===a[0]){var
h=a[1];return 40===h?afV:N===h?afW:0}var
f=e(b,afR,b[5]);if(f){var
g=e(b,afS,f[1]),i=0;if(g){var
d=g[1],j=0;if(typeof
d!=="number"&&0===d[0])if(d[1])j=1;else{var
c=0;i=1;j=1}}if(!i)var
c=1;if(typeof
a==="number")return[0,[0,c]];else{if(0===a[0])throw[0,B,afT];return a[1]?[0,[2,c]]:[0,[1,c]]}}throw[0,B,afU]}return 0}function
to(a){return e$(a)?CE(kO(a)[4]):0}function
afX(g){var
e=dB(id),c=e[1],f=[0,0],d=[0,0],h=e[2];for(;;){if(f[1])return dC(c,h);var
a=b(g[4],0);if(a===-1)throw[0,$,afY];if(ex===a){if(aq===d[1])bA(f);else
d[1]=ex;b(c[4],ex)}else{d[1]=a;b(c[4],a)}continue}}function
afZ(a,c){if(typeof
c==="number")switch(c){case
0:return b(a,af0);case
1:return b(a,af1);case
2:return b(a,af2);case
3:return b(a,af3);case
4:return b(a,af4);case
5:return b(a,af5);case
6:return b(a,af6);case
7:return b(a,af7);case
8:return b(a,af8);case
9:return b(a,af9);case
10:return b(a,af_);case
11:return b(a,af$);case
12:return b(a,aga);case
13:return b(a,agb);case
14:return b(a,agc);case
15:return b(a,agd);case
16:return b(a,age);case
17:return b(a,agf);case
18:return b(a,agg);case
19:return b(a,agh);default:return b(a,agi)}else
switch(c[0]){case
0:b(a,[1,[2,c[1]]]);return b(a,agj);case
1:b(a,[1,[1,c[1]]]);return b(a,agk);case
2:b(a,[1,[1,c[1]]]);return b(a,agl);case
3:b(a,[1,[2,c[1]]]);return b(a,agm);case
4:var
g=c[2],h=c[1];b(a,agn);x(function(c){return b(a,[1,[2,c]])},h);b(a,ago);b(a,[1,[2,g]]);return b(a,agp);case
5:b(a,[1,[4,c[1]]]);return b(a,agq);case
6:b(a,[1,[1,c[1]]]);return b(a,agr);case
7:b(a,[1,[4,c[1]]]);return b(a,ags);case
8:var
d=c[1];b(a,[1,[2,d[1]]]);b(a,[1,[2,d[2]]]);b(a,[1,[2,d[3]]]);b(a,[1,[2,d[4]]]);b(a,[1,[2,d[5]]]);b(a,[1,[2,d[6]]]);return b(a,agt);case
9:var
i=c[2];b(a,[1,[2,c[1]]]);b(a,[1,[2,i]]);return b(a,agu);case
10:var
j=c[2];b(a,[1,[2,c[1]]]);b(a,[1,[2,j]]);return b(a,agv);case
11:var
k=c[6],l=c[5],m=c[4],n=c[3],o=c[2];b(a,[1,[2,c[1]]]);b(a,[1,[2,o]]);b(a,[1,[2,n]]);b(a,[1,[2,m]]);b(a,[1,[2,l]]);b(a,[1,[2,k]]);return b(a,agw);case
12:var
p=c[4],q=c[3],r=c[2];b(a,[1,[2,c[1]]]);b(a,[1,[2,r]]);b(a,[1,[2,q]]);b(a,[1,[2,p]]);return b(a,agx);case
13:var
s=c[4],t=c[3],u=c[2];b(a,[1,[2,c[1]]]);b(a,[1,[2,u]]);b(a,[1,[2,t]]);b(a,[1,[2,s]]);return b(a,agy);case
14:var
v=c[4],w=c[3],y=c[2];b(a,[1,[2,c[1]]]);b(a,[1,[2,y]]);b(a,[1,[2,w]]);b(a,[1,[2,v]]);return b(a,agz);case
15:b(a,[1,[2,c[1]]]);return b(a,agA);case
16:b(a,[1,[2,c[1]]]);return b(a,agB);case
17:b(a,[1,[2,c[1]]]);return b(a,agC);case
18:b(a,[1,[2,c[1]]]);return b(a,agD);case
19:var
z=c[2];b(a,[1,[4,c[1]]]);b(a,[1,[2,z]]);return b(a,agE);case
20:b(a,[1,[1,c[1]]]);return b(a,agF);case
21:b(a,[1,[2,c[1]]]);return b(a,agG);case
22:var
A=c[2];b(a,[1,[2,c[1]]]);b(a,[1,[2,A]]);return b(a,agH);case
23:var
B=c[2];b(a,[1,[2,c[1]]]);b(a,[1,[2,B]]);return b(a,agI);case
24:var
e=c[1];b(a,[1,[2,e[1]]]);b(a,[1,[2,e[2]]]);b(a,[1,[2,e[3]]]);b(a,[1,[2,e[4]]]);b(a,[1,[2,e[5]]]);b(a,[1,[2,e[6]]]);return b(a,agJ);case
25:b(a,[1,[3,c[1]]]);return b(a,agK);case
26:b(a,[2,c[1]]);return b(a,agL);case
27:b(a,[1,[3,c[1]]]);return b(a,agM);case
28:var
C=c[3],D=c[2];b(a,[1,[2,c[1]]]);b(a,[1,[2,D]]);b(a,[1,[3,C]]);return b(a,agN);case
29:var
E=c[2];b(a,[1,[2,c[1]]]);b(a,[1,[2,E]]);return b(a,agO);case
30:var
F=c[6],G=c[5],H=c[4],I=c[3],J=c[2];b(a,[1,[2,c[1]]]);b(a,[1,[2,J]]);b(a,[1,[2,I]]);b(a,[1,[2,H]]);b(a,[1,[2,G]]);b(a,[1,[2,F]]);return b(a,agP);case
31:b(a,[1,[4,c[1]]]);return b(a,agQ);case
32:b(a,[1,[4,c[1]]]);return b(a,agR);case
33:var
K=c[1];x(function(c){return b(a,[1,[2,c]])},K);return b(a,agS);case
34:var
L=c[1];x(function(c){return b(a,[1,[2,c]])},L);return b(a,agT);case
35:var
M=c[1];x(function(c){return b(a,[1,[2,c]])},M);return b(a,agU);case
36:var
N=c[1];x(function(c){return b(a,[1,[2,c]])},N);return b(a,agV);case
37:var
O=c[2],P=c[1];x(function(c){return b(a,[1,[2,c]])},O);b(a,[1,[4,P]]);return b(a,agW);case
38:var
Q=c[2],R=c[1];x(function(c){return b(a,[1,[2,c]])},Q);b(a,[1,[4,R]]);return b(a,agX);case
39:b(a,[1,[2,c[1]]]);return b(a,agY);case
40:b(a,[1,[2,c[1]]]);return b(a,agZ);case
41:var
S=c[3],T=c[2];b(a,[1,[2,c[1]]]);b(a,[1,[2,T]]);b(a,[1,[2,S]]);return b(a,ag0);case
42:var
U=c[3],V=c[2];b(a,[1,[2,c[1]]]);b(a,[1,[2,V]]);b(a,[1,[2,U]]);return b(a,ag1);case
43:var
W=c[4],X=c[3],Y=c[2];b(a,[1,[2,c[1]]]);b(a,[1,[2,Y]]);b(a,[1,[2,X]]);b(a,[1,[2,W]]);return b(a,ag2);case
44:var
Z=c[4],_=c[3],$=c[2];b(a,[1,[2,c[1]]]);b(a,[1,[2,$]]);b(a,[1,[2,_]]);b(a,[1,[2,Z]]);return b(a,ag3);case
45:b(a,[1,[4,c[1]]]);return b(a,ag4);case
46:var
f=c[1];return b(a,[3,[0,f[1],f[2]]]);case
47:b(a,[1,[4,c[1]]]);return b(a,ag5);case
48:b(a,[1,[4,c[1]]]);return b(a,ag6);case
49:var
aa=c[2];b(a,[1,[4,c[1]]]);b(a,[2,aa]);return b(a,ag7);case
50:b(a,[1,[4,c[1]]]);return b(a,ag8);case
51:var
ab=c[2];b(a,[1,[4,c[1]]]);b(a,[2,ab]);return b(a,ag9);default:return 0}}function
Dc(f){var
a=f;for(;;){if(a){var
d=a[1];if(typeof
d!=="number"&&4===d[0]){var
b=d[1],e=0;if(c(b,ag_)&&c(b,ag$)&&c(b,aha)&&c(b,ahb))e=1;if(!e)return 1}var
a=a[2];continue}return 0}}var
gp=aN(30);function
kV(a){ck(gp);x(function(b){if(typeof
b==="number")var
a=ahc;else
switch(b[0]){case
0:var
a=b[1];break;case
1:var
a=CW(b[1]);break;case
2:var
a=bP(b[1]);break;default:var
g=b[1],h=g[1],v=g[2],w=P(l(B6(2,l(B6(2,aK(bP(h))))))),x=aI(v),i=bw(bm(0),ahe,ahd,h),t=0;if(i){var
c=i[1],f=0;if(typeof
c!=="number")switch(c[0]){case
4:var
k=[0,[4,c[1]],0];f=1;break;case
5:var
k=c[1];f=1;break}if(f){var
j=k;t=1}}if(!t)var
j=0;var
y=Dc(j)?ahf:ahj,a=o(ahi,o(w,o(ahh,o(y,o(x,ahg)))))}var
n=0<gp[2]?1:0;if(n){var
d=gp[2]-1|0,u=0;if(0<=d&&!(gp[2]<=d)){var
p=c$(gp[1],d);u=1}if(!u)var
p=as(Ry);var
q=1-hs(p);if(q)var
r=0<m(a)?1:0,e=r?1-hs(F(a,0)):r;else
var
e=q}else
var
e=n;if(e)s(gp,32);return bj(gp,a)},a);return az(gp)}var
tp=[Q,ahk,aL(0)],Dd=[Q,ahn,aL(0)];function
ahl(a){cu(a);return[1,[4,o(ahm,tg(a))]]}function
cz(a){K(aho);throw Dd}function
ahp(b){var
a=th(b);if(typeof
a!=="number")switch(a[0]){case
1:return[1,[2,a[1]]];case
2:return[1,[2,a[1]]]}return cz(b)}function
ahq(a){return[2,ba(0,tk(a))[2]]}function
ahr(k,H,G){var
i=G;for(;;){if(typeof
i!=="number")switch(i[0]){case
4:var
d=i[1],s=a2(d,ahu),j=0;if(0<=s){if(0<s)if(c(d,ahv)){if(c(d,ahw)){if(!c(d,ahx))throw[0,f,ahC];j=c(d,ahy)?2:1}}else
j=1}else{var
l=0;if(c(d,ahD)&&c(d,ahE))if(c(d,ahF))if(c(d,ahG)){if(c(d,ahH)){j=2;l=1}}else{j=1;l=1}else
l=1;if(!l)return 4}switch(j){case
2:var
t=e(k,ahz,H);if(t){var
u=e(k,d,t[1]);if(u){var
i=u[1];continue}throw[0,f,ahA]}throw[0,f,ahB];case
0:return 1;default:return 3}case
5:var
g=i[1];if(g){var
m=g[1],J=0;if(typeof
m==="number"||!(4===m[0]))J=1;else{var
h=m[1],v=a2(h,ahI),a=0;if(0<=v)if(0<v){if(c(h,ahJ))if(c(h,ahK))if(c(h,ahL))if(c(h,ahM))a=2;else{var
w=g[2];if(w){var
x=w[2];if(x){var
y=x[2];a=y&&!y[2]?1:2}else
a=2}else
a=2}else{var
n=g[2];if(n){if(!n[2]){var
i=aB(k,n[1]);continue}a=2}else
a=2}else{var
A=g[2];if(A){if(!A[2])return 3;a=2}else
a=2}}else{var
o=g[2];if(o){if(!o[2]){var
B=e(k,ahN,o[1]);if(B){var
p=B[1];if(typeof
p!=="number"&&1===p[0])return p[1]}throw[0,f,ahO]}a=2}else
a=2}else
if(c(h,ahP))if(c(h,ahQ))if(c(h,ahR))if(c(h,ahS)){if(c(h,ahT))a=2}else{var
C=g[2];if(C){var
q=C[1];if(typeof
q!=="number"&&5===q[0])return z(q[1]);a=2}else
a=2}else{var
D=g[2];if(D){if(!D[2])return 3;a=2}else
a=2}else{var
E=g[2];if(E){if(!E[2])return 1;a=2}else
a=2}else{var
F=g[2];if(F){if(!F[2])return 4;a=2}else
a=2}var
r=0;switch(a){case
2:r=1;break;case
0:if(!g[2])r=1;break}if(!r)return 1}}break}var
I=bP(i);b(K(ahs),I);throw[0,f,aht]}}function
ahU(h,N,a){try{var
g=ba(0,q(ahX,q(tk(a),ahW)))[2];fc(a);var
aJ=aj(b(a[4],0)),at=0,aK=aj(b(a[4],0));if(73===aJ&&68===aK){var
O=bw(h,ahZ,ahY,g),au=0;if(O){var
l=O[1],H=0;if(typeof
l!=="number")switch(l[0]){case
4:var
as=[0,[4,l[1]],0];H=1;break;case
5:var
as=l[1];H=1;break}if(H){var
P=as;au=1}}if(!au)var
P=0;if(1-Dc(P))b(a[4],0);var
Q=bw(h,ah1,ah0,g),av=0;if(Q){var
u=Q[1],aX=0;if(typeof
u!=="number"&&1===u[0]){var
R=u[1];av=1;aX=1}}if(!av){K(ah2);var
R=cz(a)}var
S=bw(h,ah4,ah3,g);if(S){var
k=S[1],I=0;if(typeof
k!=="number")switch(k[0]){case
4:var
j=k[1],J=0;if(c(j,ait)){var
L=0;if(c(j,aiu)&&c(j,aiv)&&c(j,aiw))if(c(j,aix)&&c(j,aiy)){var
am=e(h,aiz,N),aw=0;if(am){var
E=am[1],aY=0;if(typeof
E!=="number"&&6===E[0]){var
ap=e(h,j,E),aW=ap?ap[1]:(K(aiB),cz(a)),an=aW;aw=1;aY=1}}if(!aw){K(aiA);var
an=cz(a)}var
F=an;J=1;L=1}else
L=1;if(!L){var
F=k;J=1}}if(!J)var
F=k;var
ao=F;I=1;break;case
5:var
ao=k;I=1;break}var
T=I?ao:(K(ah5),cz(a))}else{var
aq=bw(h,aiD,aiC,g),ax=0;if(aq){var
G=aq[1],az=0;if(typeof
G!=="number"&&0===G[0])if(G[1]){var
ar=aiF;ax=1;az=1}else
az=1}if(!ax){K(aiE);var
ar=cz(a)}var
T=ar}var
U=bw(h,ah7,ah6,g),aA=0;if(U){var
v=U[1],aZ=0;if(typeof
v!=="number"&&1===v[0]){var
V=v[1];aA=1;aZ=1}}if(!aA){K(ah8);var
V=cz(a)}var
W=bw(h,ah_,ah9,g),aB=0;if(W){var
w=W[1],a0=0;if(typeof
w!=="number"&&1===w[0]){var
X=w[1];aB=1;a0=1}}if(!aB){K(ah$);var
X=cz(a)}var
x=bd(bd(ahr(h,N,T),R),V),aL=0===(x%8|0)?x/8|0:(x/8|0)+1|0,Y=bd(aL,X),Z=bw(bm(0),aib,aia,g),aC=0;if(Z){var
m=Z[1],s=0;if(typeof
m!=="number")switch(m[0]){case
4:var
ai=m[1];if(!c(ai,ain)||!c(ai,aio))s=1;break;case
5:var
B=m[1];if(B){var
C=B[1],M=0;if(typeof
C!=="number"&&4===C[0]){var
ak=C[1],aD=0;if(c(ak,aiq)&&c(ak,air)){M=1;aD=1}if(!aD)if(B[2])M=1;else{s=1;M=1}}}else
s=2;break}var
aE=0;switch(s){case
2:aE=1;break;case
0:try{var
aF=0,ah=abR(a,g),aP=ah?ah[1]:(K(aim),cz(a))}catch(c){c=d(c);if(c[1]!==dh){if(c[1]===kP)throw[0,f,o(ail,c[2])];throw c}var
aM=c[2];b(K(aic),aM);var
y=cz(a);aF=1}if(!aF)var
y=aP;break;default:try{var
aS=afX(a)}catch(a){a=d(a);var
aQ=aR(a);b(K(aip),aQ);throw a}var
y=aS}if(!aE){var
_=y;aC=1}}if(!aC){try{var
D=ay(Y);if(0<Y){var
al=aa(D)-1|0,aU=0;if(!(al<0)){var
r=aU;for(;;){bv(D,r,b(a[4],0));var
aV=r+1|0;if(al!==r){var
r=aV;continue}break}}}}catch(a){a=d(a);var
aT=aR(a);b(K(ais),aT);throw a}var
_=D}fc(a);var
$=aj(b(a[4],0)),ab=aj(b(a[4],0)),aN=69!==$?1:0,aO=aN||(73!==ab?1:0);if(aO){n(K(aid),$,ab);i4(1,function(a){var
b=Cs(a);if(b)var
c=69!==a?1:0,d=c?73!==a?1:0:c;else
var
d=b;return d},a)}var
ac=bw(bm(0),aif,aie,g),aG=0;if(ac){var
p=ac[1],i=0;if(typeof
p==="number")i=1;else
switch(p[0]){case
4:var
af=p[1];if(c(af,aih)&&c(af,aii))i=2;break;case
5:var
z=p[1];if(z){var
A=z[1],t=0;if(typeof
A!=="number"&&4===A[0]){var
ag=A[1],aH=0;if(c(ag,aij)&&c(ag,aik)){i=2;t=1;aH=1}if(!aH)if(z[2]){i=2;t=1}else
t=1}if(!t)i=2}else
i=2;break;default:i=1}switch(i){case
2:break;case
1:break;default:var
ad=g;aG=1}}if(!aG)var
ad=bk(bn,g,aig);var
ae=[0,ad,_];at=1}if(!at){K(aiG);var
ae=cz(a)}return ae}catch(c){c=d(c);var
aI=aR(c);b(K(ahV),aI);return cz(a)}}function
aiH(e,d,b){var
a=tg(b);if(c(a,aiI)){if(c(a,aiJ)){if(c(a,aiK)&&c(a,aiL))return c(a,aiM)?c(a,aiN)?[0,a]:aiO:aiP;return cz(b)}return[3,ahU(e,d,b)]}return cz(b)}function
aiQ(b){var
a=C0(b);if(typeof
a!=="number"&&3===a[0])return[1,[3,a[1]]];return cz(b)}function
aiR(b){var
a=C1(b);if(typeof
a!=="number"&&3===a[0])return[1,[3,a[1]]];return cz(b)}function
aiX(r,q,a){var
i=[0,0];try{for(;;){try{fc(a);var
j=sE(a);if(j===-1)throw tp;var
b=aj(j),c=0;if(94<=b){if(!(25<b+lN>>>0))c=2}else
if(65<=b)if(91<=b){var
m=0;switch(b-91|0){case
0:cu(a);var
k=aiV;break;case
1:m=1;break;default:cu(a);var
k=aiW}if(!m){var
e=k;c=1}}else
c=2;else
if(34<=b){var
h=0;switch(b+IY|0){case
3:CZ(a);var
g=0;break;case
6:var
g=aiQ(a);break;case
13:var
g=ahl(a);break;case
26:cu(a);var
n=de(Cg(a));bf(a);var
p=60===n?ahq(a):aiR(a),g=p;break;case
0:case
5:c=2;h=1;break;case
1:case
2:case
4:case
7:case
8:case
10:case
24:case
25:case
27:case
28:case
29:case
30:h=1;break;default:var
e=ahp(a);c=1;h=1}if(!h){var
e=g;c=1}}switch(c){case
0:throw[0,f,aiU];case
2:var
e=aiH(r,q,a);break}}catch(a){a=d(a);if(a[1]===f)throw[0,f,o(aiS,a[2])];if(a[1]!==$&&a!==ar){if(a===Dd)throw[0,f,aiT];throw a}throw tp;var
s=a}if(typeof
e!=="number")i[1]=[0,e,i[1]];continue}}catch(a){a=d(a);if(a===tp)return l(i[1]);throw a}}function
aiY(aR,e){if(e){var
H=e[1],a_=0;if(typeof
H==="number")a_=1;else
switch(H[0]){case
2:a_=1;break;case
0:var
j=H[1],aZ=a2(j,ajg);if(0<=aZ){if(!(0<aZ))return[0,17,e[2]];var
a0=a2(j,ajh);if(0<=a0){if(!(0<a0))return[0,7,e[2]];if(!c(j,aji))return[0,2,e[2]];if(!c(j,ajj))return[0,12,e[2]];if(!c(j,ajk))return[0,0,e[2]];if(!c(j,ajl))return[0,4,e[2]]}else{if(!c(j,ajm))return[0,13,e[2]];if(!c(j,ajn))return[0,14,e[2]];if(!c(j,ajo))return[0,10,e[2]];if(!c(j,ajp))return[0,11,e[2]];if(!c(j,ajq))return[0,5,e[2]]}}else{var
a1=a2(j,ajr);if(0<=a1){if(!(0<a1))return[0,16,e[2]];if(!c(j,ajs)){var
bB=e[2];aR[1]+=-1;return[0,20,bB]}if(!c(j,ajt))return[0,6,e[2]];if(!c(j,aju))return[0,1,e[2]];if(!c(j,ajv))return[0,3,e[2]]}else{if(!c(j,ajw))return[0,8,e[2]];if(!c(j,ajx))return[0,9,e[2]];if(!c(j,ajy))return[0,15,e[2]];if(!c(j,ajz)){var
bC=e[2];aR[1]++;return[0,19,bC]}if(!c(j,ajA))return[0,18,e[2]]}}break;case
1:var
I=H[1],a=0;if(typeof
I!=="number")switch(I[0]){case
2:var
o=e[2];if(o){var
Y=o[1],d=I[1],h=0;if(typeof
Y!=="number")switch(Y[0]){case
0:var
p=Y[1],a3=a2(p,ajB);if(0<=a3){if(!(0<a3))return[0,[21,d],o[2]];if(!c(p,ajC))return[0,[16,d],o[2]];if(!c(p,ajD))return[0,[17,d],o[2]];if(!c(p,ajE))return[0,[40,d],o[2]];if(!c(p,ajF))return[0,[6,d|0],o[2]];if(!c(p,ajG))return[0,[2,d|0],o[2]];if(!c(p,ajH))return[0,[0,d],o[2]];a=1;h=1}else{if(!c(p,ajI))return[0,[39,d],o[2]];if(!c(p,ajJ))return[0,[1,d|0],o[2]];if(!c(p,ajK))return[0,[3,d],o[2]];if(!c(p,ajL))return[0,[18,d],o[2]];if(!c(p,ajM))return[0,[15,d],o[2]];if(!c(p,ajN))return[0,[20,d|0],o[2]];a=1;h=1}break;case
1:var
aA=Y[1],i=0;if(typeof
aA!=="number"&&2===aA[0]){var
w=o[2];if(w){var
Z=w[1],n=aA[1],k=0;if(typeof
Z!=="number")switch(Z[0]){case
0:var
J=Z[1];if(!c(J,ajO))return[0,[23,d,n],w[2]];if(!c(J,ajP))return[0,[22,d,n],w[2]];if(!c(J,ajQ))return[0,[29,d,n],w[2]];if(!c(J,ajR))return[0,[10,d,n],w[2]];if(!c(J,ajS))return[0,[9,d,n],w[2]];a=1;h=1;i=1;k=1;break;case
1:var
_=Z[1],m=0;if(typeof
_!=="number")switch(_[0]){case
2:var
L=w[2];if(L){var
$=L[1],u=_[1],s=0;if(typeof
$!=="number")switch($[0]){case
0:var
a4=$[1];if(!c(a4,ajT))return[0,[41,d,n,u],L[2]];if(!c(a4,ajU))return[0,[42,d,n,u],L[2]];a=1;h=1;i=1;k=1;m=1;s=1;break;case
1:var
aB=$[1],v=0;if(typeof
aB!=="number"&&2===aB[0]){var
z=L[2];if(z){var
aa=z[1],x=aB[1],y=0;if(typeof
aa!=="number")switch(aa[0]){case
0:var
M=aa[1];if(!c(M,ajV))return[0,[43,d,n,u,x],z[2]];if(!c(M,ajW))return[0,[44,d,n,u,x],z[2]];if(!c(M,ajX))return[0,[14,d,n,u,x],z[2]];if(!c(M,ajY))return[0,[12,d,n,u,x],z[2]];if(!c(M,ajZ))return[0,[13,d,n,u,x],z[2]];a=1;h=1;i=1;k=1;m=1;s=1;v=1;y=1;break;case
1:var
aC=aa[1],C=0;if(typeof
aC!=="number"&&2===aC[0]){var
aD=z[2];if(aD){var
aE=aD[1],P=0;if(typeof
aE!=="number"&&1===aE[0]){var
aF=aE[1],ah=0;if(typeof
aF!=="number"&&2===aF[0]){var
F=aD[2];if(F){var
aG=F[1],a$=0;if(typeof
aG!=="number"&&0===aG[0]){var
ab=aG[1],ac=aF[1],ad=aC[1];if(!c(ab,aj0))return[0,[24,[V,d,n,u,x,ad,ac]],F[2]];if(!c(ab,aj1))return[0,[11,d,n,u,x,ad,ac],F[2]];if(!c(ab,aj2))return[0,[8,[V,d,n,u,x,ad,ac]],F[2]];if(!c(ab,aj3))return[0,[30,d,n,u,x,ad,ac],F[2]];a=1;h=1;i=1;k=1;m=1;s=1;v=1;y=1;C=1;P=1;ah=1;a$=1}if(!a$){a=1;h=1;i=1;k=1;m=1;s=1;v=1;y=1;C=1;P=1;ah=1}}else{a=1;h=1;i=1;k=1;m=1;s=1;v=1;y=1;C=1;P=1;ah=1}}if(!ah){a=1;h=1;i=1;k=1;m=1;s=1;v=1;y=1;C=1;P=1}}if(!P){a=1;h=1;i=1;k=1;m=1;s=1;v=1;y=1;C=1}}else{a=1;h=1;i=1;k=1;m=1;s=1;v=1;y=1;C=1}}if(!C){a=1;h=1;i=1;k=1;m=1;s=1;v=1;y=1}break}if(!y){a=1;h=1;i=1;k=1;m=1;s=1;v=1}}else{a=1;h=1;i=1;k=1;m=1;s=1;v=1}}if(!v){a=1;h=1;i=1;k=1;m=1;s=1}break}if(!s){a=1;h=1;i=1;k=1;m=1}}else{a=1;h=1;i=1;k=1;m=1}break;case
3:var
aH=w[2];if(aH){var
aI=aH[1],bb=0;if(typeof
aI!=="number"&&0===aI[0]){var
bD=_[1];if(!c(aI[1],aj4))return[0,[28,d,n,bD],aH[2]];a=1;h=1;i=1;k=1;m=1;bb=1}if(!bb){a=1;h=1;i=1;k=1;m=1}}else{a=1;h=1;i=1;k=1;m=1}break}if(!m){a=1;h=1;i=1;k=1}break}if(!k){a=1;h=1;i=1}}else{a=1;h=1;i=1}}if(!i){a=1;h=1}break}if(!h)a=1}else
a=1;break;case
3:var
ae=e[2];if(ae){var
aJ=ae[1],bc=0;if(typeof
aJ!=="number"&&0===aJ[0]){var
a5=aJ[1],a6=I[1];if(!c(a5,aj5))return[0,[27,a6],ae[2]];if(!c(a5,aj6))return[0,[25,a6],ae[2]];a=1;bc=1}if(!bc)a=1}else
a=1;break;case
4:var
q=e[2];if(q){var
N=q[1],r=I[1],aO=0;if(typeof
N==="number")aO=1;else
switch(N[0]){case
3:aO=1;break;case
0:var
A=N[1];if(!c(A,aj7))return[0,[50,r],q[2]];if(!c(A,aj8))return[0,[31,r],q[2]];if(!c(A,aj9))return[0,[47,r],q[2]];if(!c(A,aj_))return[0,[48,r],q[2]];if(!c(A,aj$))return[0,[32,r],q[2]];if(!c(A,aka))return[0,[7,r],q[2]];if(!c(A,akb))return[0,[5,r],q[2]];if(!c(A,akc))return[0,[45,r],q[2]];a=1;break;case
1:var
O=N[1],aP=0;if(typeof
O!=="number"&&2===O[0]){var
aL=q[2];if(aL){var
aM=aL[1],bd=0;if(typeof
aM!=="number"&&0===aM[0]){var
bG=O[1];if(!c(aM[1],akf))return[0,[19,r,bG],aL[2]];bd=1}if(!bd){a=1;aP=1}}else{a=1;aP=1}}if(!aP){var
af=q[2];if(af){var
aK=af[1],be=0;if(typeof
aK!=="number"&&0===aK[0]){var
a7=aK[1];if(!c(a7,akd)){var
bF=af[2];return[0,[51,r,ba(0,[0,O,0])[2]],bF]}if(!c(a7,ake)){var
bE=af[2];return[0,[49,r,ba(0,[0,O,0])[2]],bE]}a=1;be=1}if(!be)a=1}else
a=1}break;default:var
ag=q[2];if(ag){var
aN=ag[1],bf=0;if(typeof
aN==="number"||!(0===aN[0]))bf=1;else{var
a8=aN[1],a9=N[1];if(!c(a8,akg))return[0,[51,r,a9],ag[2]];if(!c(a8,akh))return[0,[49,r,a9],ag[2]];a=1}if(bf)a=1}else
a=1}if(aO)a=1}else
a=1;break}break;default:return[0,[46,H[1]],e[2]]}}var
T=0,G=e;for(;;){if(G){var
U=G[1],bg=0;if(typeof
U!=="number")switch(U[0]){case
1:case
2:break;default:var
ai=[0,[0,U,T],G[2]];bg=1}if(!bg){var
T=[0,U,T],G=G[2];continue}}else
var
ai=[0,T,0];var
t=ai[1],bt=ai[2],D=function(c,a){try{var
b=kf(function(b){if(typeof
b!=="number"&&1===b[0]){var
a=b[1];if(typeof
a!=="number"&&2===a[0])return a[1]}throw[0,f,c]},a);return b}catch(a){return aiZ}},bh=0;if(t){var
aj=t[1],bH=0;if(typeof
aj!=="number"&&0===aj[0]){var
E=aj[1];if(c(E,ai1))if(c(E,ai2)){var
Q=0;if(c(E,ai3))if(c(E,ai4))if(c(E,ai5)){if(!c(E,ai6)){var
W=t[2],bi=0;if(W){var
ak=W[1],bj=0;if(typeof
ak!=="number"&&1===ak[0]){var
am=ak[1],bk=0;if(typeof
am!=="number"&&4===am[0]){var
bw=am[1],aT=[38,bw,D(ai9,W[2])];bi=1;bj=1;bk=1}if(!bk)bj=1}}if(!bi)var
aT=[36,D(ai8,W)];var
B=aT;Q=1}}else{var
B=[34,D(ai_,t[2])];Q=1}else{var
an=t[2];if(an){var
ao=an[1],R=0;if(typeof
ao!=="number"&&1===ao[0]){var
ap=ao[1],S=0;if(typeof
ap!=="number"&&2===ap[0]){var
aq=an[2];if(aq){var
ar=aq[1],aQ=0;if(typeof
ar!=="number"&&1===ar[0]){var
aU=ar[1];if(typeof
aU==="number"&&2===aU){var
bx=ap[1],as=l(aq[2]),bl=0;if(as){var
at=as[1],bm=0;if(typeof
at!=="number"&&1===at[0]){var
aV=at[1];if(typeof
aV==="number"&&1===aV){var
by=as[2],B=[4,g(function(a){if(typeof
a!=="number"&&1===a[0]){var
b=a[1];if(typeof
b!=="number"&&2===b[0])return b[1]}throw[0,f,aja]},by),bx];Q=1;R=1;S=1;aQ=1;bl=1;bm=1}else
bm=1}}if(!bl)throw[0,f,ai$]}else{R=1;S=1;aQ=1}}if(!aQ){R=1;S=1}}else{R=1;S=1}}if(!S)R=1}}}else{var
au=t[2];if(au){var
av=au[1],bn=0;if(typeof
av!=="number"&&1===av[0]){var
aW=av[1];if(typeof
aW==="number"&&2===aW){var
aw=l(au[2]),bo=0;if(aw){var
ax=aw[1],bp=0;if(typeof
ax!=="number"&&1===ax[0]){var
aX=ax[1];if(typeof
aX==="number"&&1===aX){var
bz=aw[2],B=[26,[5,al(function(b){if(typeof
b!=="number"&&1===b[0]){var
a=b[1];if(typeof
a!=="number")switch(a[0]){case
2:return[0,[2,a[1]]];case
3:return[0,[3,a[1]]]}}K(ajc);return 0},bz)]];Q=1;bn=1;bo=1;bp=1}else
bp=1}}if(!bo)throw[0,f,ajb]}else
bn=1}}}if(!Q){var
bv=kV(l(t));b(K(ai7),bv);var
B=[52,kV(l(t))]}}else{var
X=t[2],bq=0;if(X){var
ay=X[1],br=0;if(typeof
ay!=="number"&&1===ay[0]){var
az=ay[1],bs=0;if(typeof
az!=="number"&&4===az[0]){var
bA=az[1],aY=[37,bA,D(aje,X[2])];bq=1;br=1;bs=1}if(!bs)br=1}}if(!bq)var
aY=[35,D(ajd,X)];var
B=aY}else
var
B=[33,D(ajf,t[2])];var
aS=B;bh=1;bH=1}}if(!bh){var
bu=kV(l(t));b(K(ai0),bu);var
aS=[52,kV(l(t))]}return[0,aS,bt]}}function
tq(o,n,a){var
i=0;if(a&&!a[2]){var
h=a[1];i=1}if(!i){var
j=g(aa,a),k=0,m=bk(function(b,a){return b+a|0},k,j),e=ay(m+z(a)|0),b=[0,0];x(function(c){var
d=aa(c)-1|0,f=0;if(!(d<0)){var
a=f;for(;;){var
g=dZ(c,a);bv(e,b[1],g);b[1]++;var
h=a+1|0;if(d!==a){var
a=h;continue}break}}bv(e,b[1],32);b[1]++;return 0},a);var
h=e}var
d=aiX(o,n,b3(0,h)),c=0,p=[0,0];for(;;){if(d){var
f=aiY(p,d),d=f[2],c=[0,f[1],c];continue}return l(c)}}function
bo(b,c,a){return tq(b,c,g(function(d){var
a=aB(b,d);d1(b,a);cJ(a);if(typeof
a!=="number"&&7===a[0]){var
c=a[1][1][2];if(0===c[0])return c[1]}throw[0,f,YC]},a))}function
bg(y){var
a=0,b=g(kV,g(function(b){var
a=[0,0];afZ(function(b){a[1]=[0,b,a[1]];return 0},b);return l(a[1])},y));for(;;){if(b){var
h=b[2],c=b[1];if(h){var
k=h[2],d=h[1],s=0;if(0<m(c)&&hs(F(c,m(c)-1|0)))s=1;if(!s){var
t=0;if(!(0<m(d))||!hs(F(d,0)))t=1;if(t){var
a=[0,aki,[0,c,a]],b=[0,d,k];continue}}var
a=[0,c,a],b=[0,d,k];continue}var
a=[0,c,a],b=0;continue}var
n=l(a),i=[0,0];x(function(a){i[1]=i[1]+m(a)|0;return 0},n);var
j=ay(i[1]),e=[0,n],o=[0,0];for(;;){if(0===e[1])return[7,[0,[0,[6,[0,[0,akj,[1,aa(j)]],0]],[0,j]]]];var
p=aM(e[1]),q=m(p);if(0<q){var
r=q-1|0,u=0;if(!(r<0)){var
f=u;for(;;){var
v=F(p,f);bv(j,o[1],v);o[1]++;var
w=f+1|0;if(r!==f){var
f=w;continue}break}}}e[1]=bu(e[1]);continue}}}function
fd(a){if(typeof
a!=="number")switch(a[0]){case
1:return[1,a[1]];case
8:return[0,a[1]]}throw[0,B,akk]}function
kW(b,N){var
k=N;for(;;){var
h=function(a){return typeof
a==="number"?0:[0,C(b,a)]},j=aB(b,k);if(typeof
j!=="number")switch(j[0]){case
3:var
l=j[1],B=e(b,akn,ai(b,b[3]));if(B){var
D=e(b,ako,B[1]);if(D){var
E=CD(b,[3,l],D[1]);if(E){var
k=aB(b,E[1]);continue}return[1,l]}return[1,l]}return[1,l];case
4:var
m=j[1],F=e(b,akp,b[5]);if(F){var
G=e(b,akq,F[1]);if(G){var
H=e(b,m,G[1]);if(H){var
k=H[1];continue}return[1,m]}return[1,m]}throw[0,f,akr];case
5:var
o=j[1];if(o){var
d=o[1],M=0;if(typeof
d==="number")M=1;else
switch(d[0]){case
1:case
8:var
g=o[2];if(g){var
p=g[1],a=0;if(typeof
p!=="number"&&4===p[0]){var
i=p[1];if(c(i,aks))if(c(i,akt))if(c(i,aku))if(c(i,akv))if(c(i,akw))if(c(i,akx))if(c(i,aky))if(c(i,akz))a=1;else{var
q=g[2];if(q){var
r=q[2];if(r){var
s=r[2],I=r[1],J=q[1];if(!s){var
S=h(I),T=h(J);return[2,fd(d),T,S,0]}if(!s[2]){var
P=h(s[1]),Q=h(I),R=h(J);return[2,fd(d),R,Q,P]}a=1}else
a=1}else
a=1}else{var
t=g[2];if(t){if(!t[2]){var
U=h(t[1]);return[5,fd(d),U]}a=1}else
a=1}else{var
u=g[2];if(u){var
v=u[2];if(v){var
w=v[2];if(w){var
x=w[2];if(x){if(!x[2]){var
V=w[1],W=v[1],X=u[1],Y=C(b,x[1]),Z=C(b,V),_=C(b,W),$=C(b,X);return[6,fd(d),$,_,Z,Y]}a=1}else
a=1}else
a=1}else
a=1}else
a=1}else{var
y=g[2];if(y){if(!y[2]){var
aa=h(y[1]);return[4,fd(d),aa]}a=1}else
a=1}else{var
z=g[2];if(z){if(!z[2]){var
ab=h(z[1]);return[9,fd(d),ab]}a=1}else
a=1}else{var
A=g[2];if(A){if(!A[2]){var
ac=h(A[1]);return[8,fd(d),ac]}a=1}else
a=1}else{if(!g[2])return[7,fd(d)];a=1}else{if(!g[2])return[3,fd(d)];a=1}}}break;default:M=1}}break;case
6:var
L=e(b,akA,[6,j[1]]);if(L){var
k=L[1];continue}return 0}var
O=bP(j);n(K(akl),akm,O);return 0}}function
gq(a){return 0===a[0]?[8,a[1]]:[1,a[1]]}function
hv(a){return a?[2,a[1]]:0}function
kX(a){if(typeof
a==="number")return 0;else
switch(a[0]){case
0:return a[1];case
1:return[3,a[1]];case
2:var
b=a[3],c=a[2],d=a[1],e=[0,hv(a[4]),0],f=[0,hv(b),e],g=[0,akB,[0,hv(c),f]];return[5,[0,gq(d),g]];case
3:return[5,[0,gq(a[1]),akC]];case
4:var
h=a[1],i=[0,akD,[0,hv(a[2]),0]];return[5,[0,gq(h),i]];case
5:var
j=a[1],k=[0,akE,[0,hv(a[2]),0]];return[5,[0,gq(j),k]];case
6:var
l=[0,akF,[0,[2,a[2]],[0,[2,a[3]],[0,[2,a[4]],[0,[2,a[5]],0]]]]];return[5,[0,gq(a[1]),l]];case
7:return[5,[0,gq(a[1]),akG]];case
8:var
m=a[1],n=[0,akH,[0,hv(a[2]),0]];return[5,[0,gq(m),n]];default:var
o=a[1],p=[0,akI,[0,hv(a[2]),0]];return[5,[0,gq(o),p]]}}function
fe(a){var
c=a[2],d=a[1];function
b(a){return a<Hq?Hq:Kq<a?Kq:a}var
e=b(c);return[0,b(d),e]}function
De(b,a){if(typeof
a!=="number")switch(a[0]){case
2:var
c=a[1];if(0===c[0]){var
d=a[2];if(d){var
e=a[3],f=d[1];if(e){var
t=a[4],g=fe(bO(b,[0,f,e[1]]));return[2,c,[0,g[1]],[0,g[2]],t]}var
u=a[4];return[2,c,[0,fe(bO(b,[0,f,0.]))[1]],0,u]}var
h=a[3];if(h){var
v=a[4];return[2,c,0,[0,fe(bO(b,[0,0.,h[1]]))[2]],v]}}break;case
4:var
i=a[1];if(0===i[0]){var
j=a[2];if(j)return[4,i,[0,fe(bO(b,[0,0.,j[1]]))[2]]]}break;case
5:var
k=a[1];if(0===k[0]){var
l=a[2];if(l)return[5,k,[0,fe(bO(b,[0,l[1],0.]))[1]]]}break;case
6:var
m=a[1];if(0===m[0]){var
w=a[4],x=a[3],n=fe(bO(b,[0,a[2],a[5]])),y=n[2],z=n[1],o=fe(bO(b,[0,w,x]));return[6,m,z,o[2],o[1],y]}break;case
8:var
p=a[1];if(0===p[0]){var
q=a[2];if(q)return[8,p,[0,fe(bO(b,[0,0.,q[1]]))[2]]]}break;case
9:var
r=a[1];if(0===r[0]){var
s=a[2];if(s)return[9,r,[0,fe(bO(b,[0,s[1],0.]))[1]]]}break}return a}function
kY(a){var
b=e(a,akJ,a[5]);if(b){var
c=am(a,bn(b[1],akK)),d=a[7],g=a[6],h=A(a[5],akL,[8,c]);return[0,a[1],a[2],c,a[4],h,g,d]}throw[0,f,akM]}function
tr(a,b){a[1]++;return b[4][1]+a[1]|0}function
Df(f){var
a=f;for(;;){if(a){var
b=a[1],c=b[4],g=a[2],h=b[3];if(c)var
d=c;else{var
e=Df(h);if(!e){var
a=g;continue}var
d=e}return d}return 0}}function
kZ(a){if(a){var
b=a[1],c=b[4],d=b[3],e=kZ(a[2]),f=c?kZ(d):0;return(1+f|0)+e|0}return 0}function
Dg(a){return g(akS,a)}function
akS(a){var
d=a[4],b=a[3],c=a[2],e=a[1],f=0===b?c:d?A(c,akT,[1,kZ(b)]):A(c,akU,[1,-kZ(b)|0]);return[0,e,f,Dg(b),d]}function
Dh(b,a){var
c=a[2],d=a[1],e=a[4],f=a[3],h=b?A(c,akV,[8,b[1]]):c,i=[0,d];return[0,d,h,g(function(a){return Dh(i,a)},f),e]}function
Di(a){var
c=a[4],b=a[3],d=a[2],e=a[1];if(b){var
f=mL(b),h=f[2][1],i=A(A(d,akW,[8,f[1][1]]),akX,[8,h]);return[0,e,i,g(Di,b),c]}return[0,e,d,b,c]}function
ts(b){var
c=b[4],a=b[3],d=b[2],e=b[1];if(a){var
h=a[1];if(a[2]){var
f=a[2],i=g(function(a){return a[1]},f),j=[0,gh(f),0],k=ho([0,h,f]);return[0,e,d,g(ts,q(bI(function(a,b){var
c=a[4],d=a[3],e=a[1];return[0,e,A(a[2],akY,[8,b]),d,c]},k,i),j)),c]}return[0,e,d,g(ts,a),c]}return[0,e,d,a,c]}function
tt(b){var
c=b[4],a=b[3],d=b[2],e=b[1];if(a){var
f=a[1];if(a[2]){var
h=a[2],i=ho([0,f,h]),j=g(function(a){return a[1]},i);return[0,e,d,g(tt,[0,f,bI(function(a,b){var
c=a[4],d=a[3],e=a[1];return[0,e,A(a[2],akZ,[8,b]),d,c]},h,j)]),c]}return[0,e,d,g(tt,a),c]}return[0,e,d,a,c]}function
tu(f,e,d){if(d){var
a=d[1],j=d[2],h=c0(function(b){return a[1]<b[1]?1:0},j),b=a[3],k=h[2],l=h[1],m=a[2],g=kX(b);if(0===g)var
c=0;else{var
i=0;if(typeof
b==="number"||!(0===b[0]))i=1;else
var
c=[0,[0,ak2,b[1]],0];if(i)var
c=[0,[0,ak1,g],0]}var
n=tu(f,e,k),o=a[4],p=tu(f,e,l);return[0,[0,tr(f,e),[6,[0,[0,ak0,[3,m]],c]],p,o],n]}return 0}function
ff(l,a){if(0===l)return kY(a);var
d=[0,0],u=ts(tt([0,0,0,g(Di,tu(d,a,l)),0]))[3],v=0,m=Dg(g(function(a){return Dh(v,a)},u));if(m)var
c=tr(d,a),b=g(function(a){var
b=a[4],d=a[3],e=a[1];return[0,e,A(a[2],akN,[8,c]),d,b]},m),i=function(a){var
b=a[2],c=a[1];return[0,[0,c,b],ah(g(i,a[3]))]},p=ah(g(i,b)),j=mL(b),r=j[2][1],s=j[1][1],t=Df(b)?[0,[0,akO,[1,kZ(b)]],0]:0,h=[0,[0,[0,c,[6,q([0,[0,akQ,[8,s]],[0,[0,akP,[8,r]],0]],t)]],p],c];else
var
k=tr(d,a),h=[0,[0,[0,k,akR],0],k];var
w=h[2],y=h[1];x(function(b){bB(a,b);return 0},y);var
n=e(a,ak3,a[5]);if(n){var
o=am(a,A(n[1],ak4,[8,w])),z=a[7],B=a[6],C=A(a[5],ak5,[8,o]);return[0,a[1],a[2],o,a[4],C,B,z]}throw[0,f,ak6]}function
Dj(d,a,x,h){var
i=e(a,ak7,x);if(i){var
c=i[1];for(;;){var
j=e(a,ak8,c),u=0;if(j){var
f=j[1],z=0;if(typeof
f!=="number"&&3===f[0]){var
k=f[1];u=1;z=1}}if(!u){K(ak9);var
k=ak_}var
l=e(a,ak$,c);if(l)var
m=kW(a,l[1]);else{var
q=e(a,alc,c);if(q)var
r=q[1],s=e(a,ald,r),y=s?kW(a,s[1]):[0,aB(a,r)],t=y;else
var
t=0;var
m=t}var
n=e(a,ala,c),v=0;if(n){var
g=n[1],w=0;if(typeof
g!=="number"&&1===g[0])if(0<g[1]){var
o=1;v=1;w=1}else
w=1}if(!v)var
o=0;b(h,[0,d[1],k,m,o]);d[1]++;Dj(d,a,c,h);if(0<d[1])d[1]+=-1;var
p=e(a,alb,c);if(p){var
c=p[1];continue}return 0}}return 0}function
dF(a){var
c=e(a,ale,a[5]);if(c){var
d=e(a,alf,c[1]);if(d){var
b=[0,0],g=d[1];Dj([0,0],a,g,function(a){b[1]=[0,a,b[1]];return 0});return l(b[1])}return 0}throw[0,f,alg]}function
hw(a){var
b=e(a,alq,ai(a,a[3]));if(b){var
d=sS(a,b[1]);return g(function(r){var
g=r[2],h=r[1];if(typeof
h!=="number"&&1===h[0]){var
x=h[1]+1|0,l=e(a,ali,g),s=0;if(l){var
i=l[1],t=0;if(typeof
i!=="number"&&4===i[0]){var
b=i[1],u=0;if(c(b,all))if(c(b,alm))if(c(b,aln))if(c(b,alo))if(c(b,alp)){t=1;u=1}else
var
d=2;else
var
d=4;else
var
d=1;else
var
d=0;else
var
d=3;if(!u){var
m=d;s=1;t=1}}}if(!s)var
m=5;var
n=e(a,alj,g),v=0;if(n){var
j=n[1],y=0;if(typeof
j!=="number"&&3===j[0]){var
o=[0,j[1]];v=1;y=1}}if(!v)var
o=0;var
p=e(a,alk,g),w=0;if(p){var
k=p[1],z=0;if(typeof
k!=="number"&&1===k[0]){var
q=k[1];w=1;z=1}}if(!w)var
q=1;return[0,m,o,x,q]}throw[0,f,alh]},d)}return 0}function
Dl(a){if(a){var
b=a[1],c=a[2];return 1<b[3]?[0,Dk,[0,b,c]]:a}return[0,Dk,0]}function
Dm(a){return P(aP(aj(((a-1|0)%26|0)+65|0),((a-1|0)/26|0)+1|0))}function
Dn(f,d){var
c=f-(d[3]-d[4]|0)|0;switch(d[1]){case
0:var
b=a(k+c);break;case
1:var
b=mO(c);break;case
2:var
b=Cd(c);break;case
3:var
b=Dm(c);break;case
4:var
b=f$(Dm(c));break;default:var
b=alr}var
e=d[2],g=e?e[1]:als;return o(g,b)}function
tv(b,e){var
a=e;for(;;){if(a){var
c=a[1],d=a[2];if(d){if(b<d[1][3])return Dn(b,c);var
a=a[2];continue}return Dn(b,c)}throw J}}function
Do(c,a){var
b=c-(a[3]-a[4]|0)|0;return[0,a[1],a[2],b,b]}function
Dp(i,f){var
j=g(Dl,g(hw,i)),m=ah(bI(function(e,a){return g(function(b){var
a=e;for(;;){if(a){var
c=a[1],d=a[2];if(d){if(b<d[1][3])return Do(b,c);var
a=a[2];continue}return Do(b,c)}throw J}},a)},j,f)),k=cd(ah(f)),c=0,b=bI(function(a,b){return[0,a[1],a[2],b,a[4]]},m,k);for(;;){if(b){var
a=b[1],e=b[2];if(e){var
d=e[1],h=e[2];if(a[1]===d[1]&&aD(a[2],d[2])&&(d[3]-d[4]|0)===(a[3]-a[4]|0)){var
b=[0,a,h];continue}var
c=[0,a,c],b=b[2];continue}return l([0,a,c])}return l(c)}}function
Dq(a){var
b=am(a,bn(ai(a,a[3]),alt));a[3]=b;a[5]=A(a[5],alu,[8,b]);return 0}function
nb(a,b){if(0===b)return Dq(a);var
d=ah(g(function(b){var
c=b[4],e=0,f=1===c?0:[0,[0,alB,[1,c]],0],d=b[2],g=d?[0,[0,alv,[3,d[1]]],0]:0,h=q(g,f);switch(b[1]){case
0:var
a=alw;break;case
1:var
a=alx;break;case
2:var
a=aly;break;case
3:var
a=alz;break;case
4:var
a=alA;break;default:var
a=0}var
i=[0,[6,q(a,h)],e];return[0,[1,b[3]-1|0],i]},b)),c=am(a,A(ai(a,a[3]),alD,[6,[0,[0,alC,[5,d]],0]]));a[3]=c;a[5]=A(a[5],alE,[8,c]);return 0}function
tw(a){var
d=hq(a),e=ky(a),f=kz(a),c=cI(rq,d,0),g=b(c,f);return[5,[0,alG,[0,alF,[0,[2,b(c,e)],[0,[2,g],0]]]]]}function
k0(a){return[0,0,tw(a),alI,0,alH]}function
nc(a){switch(a){case
0:return 0;case
1:return 90;case
2:return d7;default:return pK}}function
nd(c){var
a=c%Jq|0,b=0;if(0<=a){if(d7<=a){if(pK===a)b=3;else
if(!(gS<=a))b=2}else
if(90===a)b=1;else
if(!a)return 0}else
if(-270===a)b=1;else
if(-180===a)b=2;else
if(uD===a)b=3;switch(b){case
0:throw[0,f,alJ];case
1:return 1;case
2:return 2;default:return 3}}var
Dr=[0,alQ];function
Ds(a,b,v,u,t){var
w=e(b,alR,a);if(w){var
l=w[1],U=0;if(typeof
l!=="number"&&4===l[0]){var
x=l[1];if(!c(x,alT)){var
D=e(b,al3,a),E=D?[0,D[1]]:v,F=e(b,al4,a),G=F?[0,F[1]]:u;if(typeof
a!=="number"&&6===a[0]){var
H=a4(al6,a[1]),V=0;if(H){var
o=H[1],ak=0;if(typeof
o!=="number"&&8===o[0]){var
S=o[1],r=ai(b,S),W=0;if(typeof
r!=="number"&&5===r[0]){var
T=[0,[5,r[1]]];W=1}if(!W)var
T=[0,[5,[0,[8,S],0]]];var
p=T;V=1;ak=1}}if(!V)var
p=e(b,al7,a);var
L=e(b,al8,a),X=0;if(L){var
q=L[1],al=0;if(typeof
q!=="number"&&1===q[0]){var
M=nd(q[1]);X=1;al=1}}if(!X)var
M=t;var
ae=0;if(typeof
a!=="number"&&6===a[0]){var
k=0,h=a[1];for(;;){if(h){var
s=h[1],i=s[1];if(c(i,alK)&&c(i,alL)&&c(i,alM)&&c(i,alN)&&c(i,alO)&&c(i,alP)){var
k=[0,s,k],h=h[2];continue}var
h=h[2];continue}var
af=[6,k],ag=E?E[1]:amb;if(G){var
N=G[1];Dr[1]=N;var
O=N}else{K(ama);var
O=Dr[1]}if(p){var
j=p[1],Y=0;if(typeof
j!=="number"&&5===j[0]){var
aj=j[1],Q=g(function(a){var
c=aB(b,a);if(typeof
c!=="number"&&7===c[0])return a;throw[0,f,al$]},aj);Y=1}if(!Y){var
Z=0,P=aB(b,j);if(typeof
P!=="number"&&7===P[0]){var
Q=[0,j,0];Z=1}if(!Z)throw[0,f,al_]}var
R=Q}else
var
R=0;return[0,[0,R,O,ag,M,af],ae]}}throw[0,f,al9]}throw[0,B,al5]}U=c(x,alU)?1:2}var
_=0;switch(U){case
0:break;case
1:break;default:_=1}if(!_)throw[0,f,alS]}var
m=I(bs(alW),b,alV,a);if(typeof
m!=="number"&&5===m[0]){var
aa=m[1],ab=g(function(a){if(typeof
a!=="number"&&8===a[0]){var
c=a[1];try{var
e=ai(b,c);return e}catch(a){a=d(a);if(a===J)throw[0,f,alZ];throw a}}throw[0,f,alY]},aa),y=e(b,al0,a),ac=y?[0,y[1]]:v,z=e(b,al1,a),ad=z?[0,z[1]]:u,A=e(b,al2,a),$=0;if(A){var
n=A[1],am=0;if(typeof
n!=="number"&&1===n[0]){var
C=nd(n[1]);$=1;am=1}}if(!$)var
C=t;return ah(g(function(a){return Ds(a,b,ac,ad,C)},ab))}throw[0,f,alX]}function
aw(a){try{var
b=ai(a,a[3])}catch(a){a=d(a);if(a===J)throw[0,f,amc];throw a}return Ds(I(bs(ame),a,amd,b),a,0,0,0)}function
Dt(i,a){var
j=e(a,amf,i);if(j){var
b=j[1],l=0;if(typeof
b!=="number"&&4===b[0]){var
k=b[1];if(!c(k,amh))return 1;l=c(k,ami)?1:2}var
m=0;switch(l){case
0:break;case
1:break;default:m=1}if(!m)throw[0,f,amg]}var
h=I(bs(amk),a,amj,i);if(typeof
h!=="number"&&5===h[0]){var
n=h[1],o=g(function(b){if(typeof
b!=="number"&&8===b[0]){var
c=b[1];try{var
e=ai(a,c);return e}catch(a){a=d(a);if(a===J)throw[0,f,amn];throw a}}throw[0,f,amm]},n),p=g(function(b){return Dt(b,a)},o),q=0;return bk(function(b,a){return b+a|0},q,p)}throw[0,f,aml]}function
amo(a){try{var
b=ai(a,a[3])}catch(a){a=d(a);if(a===J)throw[0,f,amp];throw a}return Dt(I(bs(amr),a,amq,b),a)}function
aC(a){return amo(a)}function
tx(b){var
a=[0,b];return function(b){a[1]++;return a[1]}}function
Du(a,b){var
c=z(b);if((c-2|0)<a)throw[0,bq,amS];var
d=hn(b,(c-a|0)/2|0),f=d[1],e=hn(d[2],a);return[0,f,e[1],e[2]]}function
ty(a,c,f){if(10<=z(c)){var
d=Du(5,c),g=d[3],h=d[2],i=d[1],e=b(a,0),j=ty(a,i,e);return[1,h,j,ty(a,g,e),f,e]}return[0,c,f,b(a,0)]}function
tz(h,c,a,d,g){if(10<=z(d)){var
e=Du(5,d),i=e[3],j=e[2],k=e[1],f=h?c:b(a,0),l=tz(0,c,a,k,f);return[1,j,l,tz(0,c,a,i,f),g,f]}var
m=h?c:b(a,0);return[0,d,g,m]}function
Dv(d,k,a){var
e=a[1];if(e)var
h=gd(g(function(a){if(typeof
a!=="number"&&8===a[0])return[0,[8,a[1]],0];var
c=b(d,0);return[0,[8,c],[0,[0,c,a]]]},e)),l=h[1],j=sC(h[2]),i=[0,[0,amT,[5,l]],0];else
var
j=0,i=0;var
c=a[5];if(typeof
c!=="number"&&6===c[0]){var
m=q(c[1],i),n=[0,[0,amV,[1,nc(a[4])]],0],o=[6,q([0,amZ,[0,[0,amY,[8,k]],[0,[0,amX,a[3]],[0,[0,amW,a[2]],n]]]],m)];return[0,b(d,0),o,j]}throw[0,f,amU]}function
tA(e,d,a){if(0===a[0]){var
k=a[3],l=a[2],m=a[1],v=g(function(a){return Dv(e,k,a)},m),n=g(function(a){var
b=a[2],c=a[1];ge(d,a[3]);return[0,c,b]},v),w=0===l?0:[0,[0,am3,[8,l]],0],x=[0,[0,am0,[1,z(m)]],0],y=gd(n),A=gg(function(a){return a[1]},y);return[0,[0,k,[6,q([0,am2,[0,[0,am1,[5,g(function(a){return[8,a]},A)]],x]],w)]],n]}var
o=a[5],p=a[4],C=a[3],D=a[1],b=tA(e,d,a[2]),c=tA(e,d,C);if(b){var
E=b[1][1];if(c){var
F=c[1][1];if(b){var
f=b[1][2];if(typeof
f!=="number"&&6===f[0]){var
r=a4(am5,f[1]);if(r){var
h=r[1];if(typeof
h!=="number"&&1===h[0]){var
G=h[1];if(c){var
i=c[1][2];if(typeof
i!=="number"&&6===i[0]){var
s=a4(am8,i[1]);if(s){var
j=s[1];if(typeof
j!=="number"&&1===j[0]){var
H=j[1],I=g(function(a){return Dv(e,o,a)},D),t=g(function(a){var
b=a[2],c=a[1];ge(d,a[3]);return[0,c,b]},I),J=0===p?0:[0,[0,anb,[8,p]],0],K=gd(t),u=gg(function(a){return a[1]},K),L=[0,[0,am_,[1,(G+H|0)+z(u)|0]],0],M=q([0,E,0],q(u,[0,F,0])),N=[0,[0,o,[6,q([0,ana,[0,[0,am$,[5,g(function(a){return[8,a]},M)]],L]],J)]],t];return q(N,q(b,c))}}throw[0,B,am9]}}throw[0,B,am7]}}throw[0,B,am6]}}throw[0,B,am4]}throw[0,B,anc]}throw[0,B,and]}function
k1(e,a){var
b=[0,0],c=tx(a[4][1]),d=tA(c,b,ty(c,e,0)),f=aM(d)[1],g=q(d,b[1]);x(function(b){bB(a,b);return 0},g);return[0,a,f]}function
i7(j,i,a){try{var
c=ai(a,a[3]),h=0;if(typeof
c!=="number"&&6===c[0]){var
g=c[1];h=1}if(!h)var
g=0;var
d=g}catch(a){var
d=0}var
k=q([0,anf,[0,[0,ane,[8,j]],0]],d),e=am(a,[6,B1(function(a,b){return cc(a[1],a[2],b)},k,i)]),b=a[5];if(typeof
b!=="number"&&6===b[0]){var
l=[6,cc(anh,[8,e],b[1])];return[0,a[1],a[2],e,a[4],l,a[6],a[7]]}throw[0,f,ang]}function
hx(c,g,a){if(typeof
a==="number")return 0;else
switch(a[0]){case
0:return 0;case
1:return 0;default:var
b=a[1];if(0===b[0]){var
e=b[1];if(c){var
h=c[1];try{var
i=an(h,e);return i}catch(a){a=d(a);if(a===J)return 0;throw a}}var
f=Xh(e,bL(g));return f?f[1]:0}return b[1]+1|0}}function
Dw(a,e,d){if(typeof
a!=="number")switch(a[0]){case
0:case
1:case
3:case
7:break;default:var
c=a[1];if(0===c[0]){var
f=c[1];try{var
h=an(e,an(d,f));return h}catch(c){var
g=bP(kX(a));b(K(ani),g);return au}}return au}return au}function
anj(f,e,a){var
b=dF(a);return ff(g(function(a){var
b=Dw(a[3],f,e);if(cS(b,au)){var
c=a[4],d=De(b,a[3]);return[0,a[1],a[2],d,c]}return a},b),a)}function
tB(a,f,e,d){var
b=kW(a,d),c=Dw(b,f,e);return cS(c,au)?[0,am(a,kX(De(c,b)))]:0}function
Dx(b,j,i,a){var
f=e(b,ank,a);if(f){var
d=f[1],k=0;if(typeof
d==="number"||!(4===d[0]))k=1;else
if(!c(d[1],anl)){var
g=e(b,anm,a);if(g){var
h=tB(b,j,i,g[1]);return h?[0,A(a,ann,[8,h[1]])]:0}return 0}}return 0}function
ano(j,i,a){var
b=cd(aw(a)),d=aw(a);return cr(function(f,h){var
d=e(a,anp,f[5]);if(d){var
b=d[1];if(typeof
b!=="number"&&5===b[0]){var
g=b[1];return x(function(d){if(typeof
d!=="number"&&8===d[0]){var
f=d[1],b=ai(a,f),k=e(a,ans,b);if(k){var
g=k[1],p=0;if(typeof
g==="number"||!(4===g[0]))p=1;else
if(!c(g[1],ant)){var
l=e(a,anu,b);if(l){var
m=tB(a,j,i,l[1]);return m?bB(a,[0,f,A(b,anv,[8,m[1]])]):0}var
n=e(a,anw,b);if(n){var
h=n[1];if(typeof
h!=="number"&&6===h[0]){var
o=Dx(a,j,i,h);return o?bB(a,[0,f,A(b,anx,o[1])]):0}}return 0}}return 0}return K(anr)},g)}return K(anq)}return 0},d,b)}function
Dy(a,b){var
c=A(dD(a),any,b);return bB(a,[0,a[3],c])}function
anz(d,c,a){var
f=e(a,anA,dD(a));if(f){var
b=f[1];if(typeof
b!=="number")switch(b[0]){case
5:var
g=tB(a,d,c,[5,b[1]]);return g?Dy(a,[8,g[1]]):0;case
6:var
h=Dx(a,d,c,[6,b[1]]);return h?Dy(a,h[1]):0}}return 0}function
bQ(p,o,x,a,w){var
i=bm(0);cy(function(b,a){bB(i,[0,b,a]);return 0},a);var
y=Bo(a[4][4]);i[4][4]=y;var
e=bL(a),q=k1(w,i),j=q[1],A=q[2],B=[0,a[1],a[2],j[3],j[4],a[5],j[6],a[7]];try{var
n=ai(a,a[3]),v=0;if(typeof
n!=="number"&&6===n[0]){var
u=n[1];v=1}if(!v)var
u=0;var
r=u}catch(a){var
r=0}var
c=i7(A,r,B),h=bL(c);if(x){if(o){var
C=o[1];try{var
D=g(function(a){var
b=a[1],c=eW(h,a[2]-1|0);return[0,eW(e,b-1|0),c]},C)}catch(a){throw[0,f,anB]}var
s=D}else
var
J=z(h),s=z(e)===J?a7(e,h):(K(anF),0);var
E=bJ(s);el(function(a){return e_(c,E,a)},c);if(p){var
F=p[1],t=bL(c),k=bJ(F),l=bJ(a7(t,cd(t))),G=z(h),m=z(e)===G?anj(k,l,c):(K(anE),c);try{ano(k,l,m)}catch(a){a=d(a);var
H=aR(a);b(K(anC),H)}try{anz(k,l,m)}catch(a){a=d(a);var
I=aR(a);b(K(anD),I)}return m}return c}return c}function
Dz(b,a){try{var
c=[0,b2(a,bL(b))];return c}catch(a){a=d(a);if(a[1]===bq)return 0;throw a}}function
DA(c,b){var
a=Dz(c,b);return a?[3,[0,a[1]]]:0}function
ne(c,a,b){var
d=0===a?0:[0,[0,anJ,[8,a]],0],e=[0,[0,anG,[1,b]],0];return[6,q([0,anI,[0,[0,anH,[5,g(function(a){return[8,a]},c)]],e]],d)]}function
nf(a){return 0===a[0]?a[3]:a[5]}function
i8(a){if(0===a[0])return z(a[1]);var
b=a[3],c=a[2],d=z(a[1]),e=i8(b);return(i8(c)+e|0)+d|0}function
tC(b,e){var
a=e;for(;;){if(0===a[0]){var
f=a[3],g=a[2],h=a[1];return bB(b,[0,f,ne(h,g,i8(a))])}var
c=a[3],d=a[2],i=a[5],j=a[4],k=a[1],l=i8(a),m=q(k,[0,nf(c),0]);bB(b,[0,i,ne(q([0,nf(d),0],m),j,l)]);tC(b,d);var
a=c;continue}}var
DB=[Q,anL,aL(0)];function
anK(a,k,b){if(0===a[0]){var
e=a[2],f=a[1];return ne(f,e,i8(a))}var
c=a[3],d=a[2],g=a[4],h=a[1];tC(b,d);tC(b,c);var
i=i8(a),j=q(h,[0,nf(c),0]);return ne(q([0,nf(d),0],j),g,i)}function
DC(d,c,a){if(a){var
b=a[1];if(typeof
b!=="number"&&8===b[0]){var
e=a[2];if(b[1]===d)return[0,[8,c],e]}return[0,b,DC(d,c,a[2])]}return 0}function
anP(a){var
b=[0,0];cy(function(c,a){if(typeof
a!=="number"&&6===a[0]&&aD(a4(anR,a[1]),anQ)){b[1]=[0,[0,c,a],b[1]];return 0}return 0},a);return b[1]}function
anS(a,c){var
j=am(a,ai(a,c)),b=anP(a);try{var
g=x(function(h){var
i=h[2],k=h[1],d=e(a,anM,i);if(d){var
b=d[1];if(typeof
b!=="number"&&5===b[0]){var
f=b[1],g=at([8,c],f);if(g){bB(a,[0,k,A(i,anO,[5,DC(c,j,f)])]);throw DB}return g}}return _(anN)},b);return g}catch(a){a=d(a);if(a===DB)return 0;throw[0,f,anT]}}function
anU(a){for(;;){var
e=kr(hf,db(hf,bL(a))),c=b(b0(function(a){return 1<z(a)?1:0}),e);if(c){var
d=c[1];if(d){anS(a,d[1]);continue}}return 0}}function
DD(a,g,b){var
c=ai(a,b);if(Cv(a,anV,c))bB(a,[0,b,A(c,anW,[8,g])]);var
f=e(a,anX,c);if(f){var
d=f[1];if(typeof
d!=="number"&&5===d[0]){var
h=d[1];return x(function(c){if(typeof
c!=="number"&&8===c[0])return DD(a,b,c[1]);return 0},h)}}return 0}function
anY(a){var
b=Cv(a,anZ,ai(a,a[3]));if(b)return DD(a,0,b[1]);throw[0,f,an0]}function
dG(d,c,b,a){var
e=b?b[1]:0;if(e){var
f=a[5],g=a[4],h=a[3],i=a[2],j=a[1];return[0,[0,bg(c),j],i,h,g,f]}var
k=bo(d,a[3],a[1]),l=a[5],m=a[4],n=a[3],o=a[2];return[0,[0,bg(q(c,k)),0],o,n,m,l]}function
DE(h,g,f){var
c=bo(h,g,f),i=0,d=z(b(b0(function(a){return aD(i,a)}),c)),j=1,e=z(b(b0(function(a){return aD(j,a)}),c)),a=e<d?d-e|0:0;if(0!==a)b(K(aob),a);return aP(1,a)}function
k2(d,c,b,a){var
e=b?b[1]:0;if(e){var
f=a[5],g=a[4],h=a[3],i=a[2],j=[0,bg(q(aod,q(c,aoc))),0];return[0,q(a[1],j),i,h,g,f]}var
k=q(aof,c),l=q(DE(d,a[3],a[1]),k),m=a[5],n=a[4],o=a[3],p=a[2];return[0,[0,bg(q(aoe,q(bo(d,a[3],a[1]),l))),0],p,o,n,m]}function
ng(i){var
g=[0,0];cy(function(r,a){var
f=0;if(typeof
a!=="number")switch(a[0]){case
6:var
h=a[1];f=1;break;case
7:var
d=a[1][1][1],p=0;if(typeof
d!=="number"&&6===d[0]){var
h=d[1];f=1;p=1}break}if(f){var
j=a4(aol,h);if(j){var
b=j[1],q=0;if(typeof
b==="number"||!(4===b[0]))q=1;else{var
k=b[1],n=0;if(c(k,aom)&&c(k,aon))n=1;if(!n){var
l=e(i,aoo,a);if(l){var
o=l[1];return x(function(c){var
b=e(i,c,o);if(b){var
a=b[1];if(typeof
a!=="number"&&6===a[0]){var
d=a[1];return x(function(b){var
a=b[1],c=g[1],d=S(a,aoj)?aok:R(a,1,m(a)-1|0);g[1]=[0,d,c];return 0},d)}}return 0},i6)}return 0}}}return 0}return 0},i);var
a=aop,s=sA(g[1]);for(;;){if(A1(function(a){return function(c){var
b=m(a)<=m(c)?1:0,d=b?S(R(c,0,m(a)),a):b;return d}}(a),s)){if(S(a,aog))var
h=aoh;else
if(b5===F(a,0))var
h=o(aoi,a);else{var
f=c_(a),d=a1(f);if(0===d)var
n=f;else{var
j=aG(d),k=d-1|0,p=0;if(!(k<0)){var
b=p;for(;;){var
l=c$(f,b),q=0===b?aj(l+1|0):l;aZ(j,b,q);var
r=b+1|0;if(k!==b){var
b=r;continue}break}}var
n=j}var
h=bi(n)}var
a=h;continue}return a}}function
dH(b,a){if(S(a,aoq))throw[0,f,aor];return o(aos,o(b,R(a,1,m(a)-1|0)))}function
tD(d,b){var
h=aV(0,aQ);function
n(l,c){if(typeof
c!=="number"&&8===c[0]){var
a=c[1],i=1-gc(h,a);if(i){var
m=bo(d,l,[0,[8,a],0]),n=g(function(a){if(typeof
a!=="number")switch(a[0]){case
7:return[7,dH(b,a[1])];case
19:var
p=a[2];return[19,dH(b,a[1]),p];case
31:var
e=a[1],q=at(e,DF)?e:dH(b,e);return[31,q];case
32:var
f=a[1],r=at(f,DF)?f:dH(b,f);return[32,r];case
37:var
s=a[2];return[37,dH(b,a[1]),s];case
38:var
t=a[2];return[38,dH(b,a[1]),t];case
45:return[45,dH(b,a[1])];case
46:var
j=a[1],c=j[1],u=j[2],k=bw(d,aov,aou,c),o=0;if(k){var
g=k[1],y=0;if(typeof
g!=="number"&&4===g[0]){var
m=g[1];if(at(m,aot))var
n=c;else
var
v=[4,dH(b,m)],n=A(bn(bn(c,aoy),aox),aow,v);var
l=n;o=1;y=1}}if(!o)var
l=c;return[46,[0,l,u]];case
47:return[47,dH(b,a[1])];case
49:var
h=a[2];if(typeof
h!=="number"&&4===h[0]){var
w=a[1];return[49,w,[4,dH(b,h[1])]]}break;case
51:var
i=a[2];if(typeof
i!=="number"&&4===i[0]){var
x=a[1];return[51,x,[4,dH(b,i[1])]]}break}return a},m),e=ai(d,a),j=0;if(typeof
e!=="number"&&7===e[0]){var
o=e[1],f=bg(n),k=0;if(typeof
f!=="number"&&7===f[0]){o[1]=f[1][1];k=1}if(!k)_(aoC);j=1}if(!j)_(aoB);return aO(h,a,0)}return i}return _(aoA)}return el(function(a){if(typeof
a!=="number"&&6===a[0]){var
u=a[1],o=e(d,aoD,a);if(o){var
j=o[1],B=0;if(typeof
j==="number"||!(4===j[0]))B=1;else{var
p=j[1],s=0;if(c(p,aoE)&&c(p,aoF))s=1;if(!s){var
q=e(d,aoG,a);if(q){var
k=q[1],i=[0,k],t=g(function(f){var
c=e(d,f,k);if(c){var
a=c[1];if(typeof
a!=="number"&&6===a[0]){var
h=a[1];return[6,g(function(a){var
c=a[2];return[0,dH(b,a[1]),c]},h)]}}return aoz},i6);cr(function(b,a){i[1]=A(i[1],b,a);return 0},i6,t);var
l=[0,i[1]],f=[0,k]}else
var
l=0,f=0;var
r=a4(aoH,u),C=0;if(r){var
h=r[1],m=0;if(typeof
h!=="number")switch(h[0]){case
5:var
v=h[1],w=0===f?aoJ:de(f);x(function(a){return n(w,a)},v);m=1;break;case
8:var
y=[8,h[1]],z=0===f?aoK:de(f);n(z,y);m=1;break}if(m)C=1}return l?A(a,aoI,l[1]):a}}}return a}return a},d)}function
ep(d,aE){var
a=aB(d,aE);function
h(a){return C(d,a)}var
y=I(bs(apA),d,apz,a);if(typeof
y!=="number"&&5===y[0]){var
aF=g(h,y[1]),U=e(d,apC,a),ak=0;if(U){var
A=U[1],aV=0;if(typeof
A!=="number"&&5===A[0]){var
s=[0,g(h,A[1])];ak=1;aV=1}}if(!ak)var
s=0;var
D=I(bs(apE),d,apD,a);if(typeof
D!=="number"&&1===D[0]){var
V=D[1];if(!(4<V>>>0)){var
al=0;switch(V){case
0:var
E=I(bs(apH),d,apG,a),am=0;if(typeof
E!=="number"&&5===E[0]){var
aG=E[1],k=g(function(a){if(typeof
a!=="number"&&1===a[0])return a[1];throw[0,f,apJ]},aG),W=e(d,apK,a),an=0;if(W){var
F=W[1],aW=0;if(typeof
F!=="number"&&1===F[0]){var
X=F[1];an=1;aW=1}}if(!an)var
X=1;var
Y=e(d,apL,a),ao=0;if(Y){var
G=Y[1],ap=0;if(typeof
G!=="number"&&5===G[0]){var
ae=G[1],aO=2*z(k)|0;if(z(ae)===aO){var
Z=g(h,ae);ao=1;ap=1}else
ap=1}}if(!ao){var
aH=g(function(a){return a-1|0},k),v=0,n=aP(0.,z(k)),j=aH;for(;;){var
aq=0;if(n){if(j){var
v=[0,j[1],[0,n[1],v]],n=n[2],j=j[2];continue}}else
if(!j){var
Z=l(v);aq=1}if(!aq)throw[0,bq,Xo];break}}var
_=e(d,apM,a),ar=0;if(_){var
H=_[1],aX=0;if(typeof
H!=="number"&&5===H[0]){var
J=g(h,H[1]);ar=1;aX=1}}if(!ar){if(!s)throw[0,f,apR];var
J=s[1]}var
L=I(bs(apO),d,apN,a),as=0;if(typeof
L!=="number"&&1===L[0]){var
t=L[1];d1(d,a);var
aJ=z(J)/2|0,at=0,aK=bd(bk(bd,1,k),aJ);if(typeof
a!=="number"&&7===a[0]){var
aa=a[1][1][2];if(0===aa[0]){var
M=aS(aK,1),ab=M.length-1-1|0,aL=Cl(b3(0,aa[1])),aM=0;if(!(ab<0)){var
m=aM;for(;;){if(!(0<=t))throw[0,bq,XY];if(0===t)var
ac=0;else{var
w=[0,Rf],S=t-1|0;if(!(S<0)){var
q=S;for(;;){var
aA=ad(aL)<<q;w[1]=w[1]|aA;var
aC=q-1|0;if(0!==q){var
q=aC;continue}break}}var
ac=w[1]}p(M,m)[1+m]=ac;var
aN=m+1|0;if(ab!==m){var
m=aN;continue}break}}var
u=[2,[0,k,X,Z,J,t,M]];am=1;as=1;at=1}}if(!at)throw[0,B,apQ]}if(!as)throw[0,f,apP]}if(!am)throw[0,f,apI];break;case
1:al=1;break;case
2:var
af=e(d,apS,a),au=0;if(af){var
N=af[1],aY=0;if(typeof
N!=="number"&&5===N[0]){var
ag=g(h,N[1]);au=1;aY=1}}if(!au)var
ag=apT;var
ah=e(d,apU,a),av=0;if(ah){var
O=ah[1],aZ=0;if(typeof
O!=="number"&&5===O[0]){var
ai=g(h,O[1]);av=1;aZ=1}}if(!av)var
ai=apV;var
u=[0,[0,ag,ai,h(I(bs(apX),d,apW,a))]];break;case
3:var
P=I(bs(apZ),d,apY,a),aw=0;if(typeof
P!=="number"&&5===P[0]){var
aQ=P[1],Q=I(bs(ap2),d,ap1,a),ax=0;if(typeof
Q!=="number"&&5===Q[0]){var
aR=Q[1],R=I(bs(ap5),d,ap4,a),ay=0;if(typeof
R!=="number"&&5===R[0]){var
aT=g(h,R[1]),aU=g(h,aR),u=[1,[0,g(function(a){return ep(d,a)},aQ),aU,aT]];aw=1;ax=1;ay=1}if(!ay)throw[0,f,ap6]}if(!ax)throw[0,f,ap3]}if(!aw)throw[0,f,ap0];break;default:d1(d,a);var
az=0;if(typeof
a!=="number"&&7===a[0]){var
aj=a[1][1][2];if(0===aj[0]){var
aD=tc(ct(0,aI(aj[1]))),T=function(a){if(a){var
b=a[1],f=0;if(typeof
b==="number"||!(4===b[0]))f=1;else{var
d=b[1],e=0;if(c(d,apn)&&c(d,apo))e=1;if(!e)return l(T(l(a[2])))}}return a},x=function(a){if(a){var
b=a[1];if(typeof
b!=="number"&&4===b[0]&&!c(b[1],app)){var
e=a[2],d=c0(function(a){return cS(apq,a)},e),f=d[1];return[0,f,x(bu(d[2]))]}return[0,[0,b,0],x(a[2])]}return 0},r=function(a){try{var
b=i(x(T(a)));return b}catch(a){throw[0,f,apy]}},i=function(f){if(f){var
e=f[1],j=f[2];if(j){var
k=j[1],l=j[2];if(l){var
m=l[1];if(m){var
n=m[1],D=0;if(typeof
n==="number"||!(4===n[0]))D=1;else
if(!c(n[1],apx)&&!m[2]){var
A=i(l[2]),C=r(k);return[0,[1,r(e),C],A]}}}if(k){var
p=k[1],E=0;if(typeof
p==="number"||!(4===p[0]))E=1;else
if(!c(p[1],apw)&&!k[2]){var
z=i(j[2]);return[0,[0,r(e)],z]}}}if(e){var
g=e[1],u=0;if(typeof
g==="number")u=1;else
switch(g[0]){case
1:if(!e[2]){var
w=g[1];return[0,[4,w],i(f[2])]}break;case
2:if(!e[2]){var
x=g[1];return[0,[3,x],i(f[2])]}break;case
4:var
a=g[1];if(c(a,aps)){if(c(a,apt)){if(!e[2]){var
y=i(f[2]),q=a2(a,aoL),h=0;if(0<=q)if(0<q){var
s=a2(a,aoM);if(0<=s)if(0<s)if(c(a,aoN))if(c(a,aoO))if(c(a,aoP))if(c(a,aoQ))if(c(a,aoR))if(c(a,aoS))if(c(a,aoT))if(c(a,aoU))h=1;else
var
d=31;else
var
d=20;else
var
d=19;else
var
d=18;else
var
d=17;else
var
d=16;else
var
d=37;else
var
d=34;else
var
d=30;else
if(c(a,aoY))if(c(a,aoZ))if(c(a,ao0))if(c(a,ao1))if(c(a,ao2))if(c(a,ao3))if(c(a,ao4))if(c(a,ao5))if(c(a,ao6))h=1;else
var
d=29;else
var
d=15;else
var
d=28;else
var
d=14;else
var
d=13;else
var
d=27;else
var
d=12;else
var
d=11;else
var
d=26}else
var
d=36;else{var
t=a2(a,ao7);if(0<=t)if(0<t)if(c(a,ao8))if(c(a,ao9))if(c(a,ao_))if(c(a,ao$))if(c(a,apa))if(c(a,apb))if(c(a,apc))if(c(a,apd))h=1;else
var
d=10;else
var
d=25;else
var
d=24;else
var
d=9;else
var
d=8;else
var
d=33;else
var
d=23;else
var
d=35;else
var
d=7;else
if(c(a,ape))if(c(a,apf))if(c(a,apg))if(c(a,aph))if(c(a,api))if(c(a,apj))if(c(a,apk))if(c(a,apl))if(c(a,apm))h=1;else
var
d=6;else
var
d=4;else
var
d=32;else
var
d=3;else
var
d=22;else
var
d=2;else
var
d=21;else
var
d=1;else
var
d=0}if(h){var
v=o(aoV,a);b(K(aoW),v);throw[0,B,aoX]}return[0,d,y]}}else
if(!e[2])return[0,apu,i(f[2])]}else
if(!e[2])return[0,apv,i(f[2])];break;default:u=1}}throw[0,$,apr]}return 0},u=[3,r(aD)];az=1}}if(!az)throw[0,f,ap7]}if(!al)return[0,u,aF,s]}}throw[0,f,apF]}throw[0,f,apB]}function
i9(a,i,h){var
g=e(a,h,i);if(g){var
b=g[1],n=0;if(typeof
b==="number"||!(5===b[0]))n=1;else{var
c=b[1];if(c){var
d=c[2];if(d){var
f=d[2];if(f&&!f[2]){var
j=d[1],k=c[1],l=C(a,f[1]),m=C(a,j);return[0,C(a,k),m,l]}}}}}return ap8}function
DG(d){var
a=d;for(;;){var
c=0;if(typeof
a==="number")c=1;else
switch(a[0]){case
3:var
b=a[1][2];break;case
4:var
b=a[1];break;case
6:case
7:var
b=a[2];break;default:c=1}if(c)return a;var
a=b;continue}}function
hy(a,o,bj){var
l=bj;for(;;){if(typeof
l!=="number")switch(l[0]){case
4:var
n=l[1];if(c(n,ap9)&&c(n,ap_)){if(c(n,ap$)){var
aE=0;if(c(n,aqa)){if(c(n,aqb)){if(!c(n,aqc))return 3;if(c(n,aqd)){var
aH=e(a,aqe,o);if(aH){var
aI=e(a,n,aH[1]);if(aI){var
l=aI[1];continue}throw J}throw J}aE=1}}else
aE=1;if(aE)return 1}return 0}return 2;case
5:var
h=l[1];if(h){var
w=h[1],i=0;if(typeof
w==="number"||!(4===w[0]))i=1;else{var
k=w[1];if(c(k,aqf))if(c(k,aqg))if(c(k,aqh)){var
d=0;if(c(k,aqi))if(c(k,aqj)){if(c(k,aqk))if(c(k,aql))if(c(k,aqm))if(c(k,aqn)){i=1;d=1}else{var
G=h[2];if(G){var
H=G[1],D=0;if(typeof
H!=="number"&&4===H[0]){var
I=G[2];if(I){var
K=I[2];if(K){if(!K[2]){var
bk=K[1],bl=H[1],bm=hy(a,o,I[1]);return[6,bl,bm,ep(a,bk)]}d=1;D=1}else{d=1;D=1}}else{d=1;D=1}}if(!D)d=1}else{i=1;d=1}}else{var
L=h[2];if(L){if(!L[2])return[5,hy(a,o,L[1])];d=1}else{i=1;d=1}}else{var
M=h[2];if(M){if(!M[2]){var
N=M[1],bn=i9(a,N,aqo),bo=i9(a,N,aqp),aJ=e(a,aqq,N),bb=0;if(aJ){var
O=aJ[1],v=0;if(typeof
O!=="number"&&5===O[0]){var
P=O[1];if(P){var
Q=P[2];if(Q){var
R=Q[2];if(R){var
S=R[2];if(S&&!S[2]){var
bp=R[1],bq=Q[1],br=P[1],bs=C(a,S[1]),bt=C(a,bp),bu=C(a,bq),aK=[V,C(a,br),bu,bt,bs];bb=1;v=1}else
v=1}else
v=1}else
v=1}else
v=1}}if(!bb)var
aK=[V,IJ,rq,IJ,rq];return[2,bn,bo,aK]}d=1}else{i=1;d=1}}}else{var
$=h[2];if($){if(!$[2]){var
aX=$[1],ab=aB(a,aX);if(typeof
ab!=="number"&&7===ab[0]){var
y=ab[1][1][1],aY=e(a,aqA,y);if(aY){var
ac=aY[1];if(typeof
ac!=="number"&&1===ac[0]){var
q=ac[1];if(1!==q&&3!==q&&4!==q)throw J;var
aZ=e(a,aqB,y);if(aZ)var
a0=hy(a,o,aZ[1]);else{var
a4=q-1|0,bc=0;if(!(3<a4>>>0)){var
bd=0;switch(a4){case
0:var
ae=0;break;case
1:bd=1;break;case
2:var
ae=1;break;default:var
ae=2}if(!bd){var
a0=ae;bc=1}}if(!bc)throw[0,B,aqF]}var
a1=e(a,aqC,y),be=0;if(a1){var
ad=a1[1],bf=0;if(typeof
ad!=="number"&&5===ad[0]){var
a3=ad[1];if(z(a3)===(2*q|0)){var
a2=bG(g(function(b){return C(a,b)},a3));be=1;bf=1}else
bf=1}}if(!be)var
a2=bG(ah(aP(aqD,q)));return[3,[0,q,a0,a2,e(a,aqE,y),aX]]}}throw J}throw J}d=1}else{i=1;d=1}}if(!d){var
T=h[2];if(T){var
U=T[2];if(U){var
W=U[2];if(W&&!W[2]){var
X=U[1],bv=W[1],bw=T[1];if(typeof
X!=="number"&&1===X[0]){var
r=X[1],Y=hy(a,o,bw),aL=function(e){try{var
d=aV(0,r+1|0),c=b3(0,e),g=0;if(!(r<0)){var
a=g;for(;;){var
h=b(c[4],0),i=b(c[4],0);aO(d,a,[0,h,[0,i,[0,b(c[4],0),0]]]);var
j=a+1|0;if(r!==a){var
a=j;continue}break}}return d}catch(a){throw[0,f,aqs]}},aM=function(e){try{var
d=aV(0,r+1|0),a=b3(0,e),g=0;if(!(r<0)){var
c=g;for(;;){var
h=b(a[4],0),i=b(a[4],0),j=b(a[4],0);aO(d,c,[0,h,[0,i,[0,j,[0,b(a[4],0),0]]]]);var
k=c+1|0;if(r!==c){var
c=k;continue}break}}return d}catch(a){throw[0,f,aqt]}},p=aB(a,bv),aF=0;if(typeof
p!=="number")switch(p[0]){case
3:var
aN=p[1],x=ay(m(aN)),aQ=aa(x)-1|0,bx=0;if(!(aQ<0)){var
u=bx;for(;;){e6(x,u,F(aN,u));var
by=u+1|0;if(aQ!==u){var
u=by;continue}break}}var
s=0,Z=DG(Y);if(typeof
Z==="number")switch(Z){case
2:var
aR=aM(x);s=3;break;case
0:break;case
1:s=1;break;default:s=2}else
switch(Z[0]){case
1:case
2:s=1;break;case
4:case
5:s=2;break}switch(s){case
0:throw[0,f,aqv];case
1:var
aR=aL(x);break;case
2:throw[0,f,aqw]}var
aS=aR;aF=1;break;case
7:d1(a,p);var
bg=0;if(typeof
p!=="number"&&7===p[0]){var
aT=p[1][1][2];if(0===aT[0]){var
aU=aT[1],t=0,_=DG(Y);if(typeof
_==="number")switch(_){case
2:var
aW=aM(aU);t=3;break;case
0:break;case
1:t=1;break;default:t=2}else
switch(_[0]){case
1:case
2:t=1;break;case
4:case
5:t=2;break}switch(t){case
0:throw[0,f,aqy];case
1:var
aW=aL(aU);break;case
2:throw[0,f,aqz]}var
aS=aW;aF=1;bg=1}}if(!bg)throw[0,f,aqx];break}if(aF)return[4,Y,aS];throw[0,f,aqu]}throw[0,f,aqr]}}}else
i=1}}else{var
af=h[2];if(af){var
ag=af[1],aG=0;if(typeof
ag!=="number"&&5===ag[0]){var
ai=af[2];if(ai){var
aj=ai[2];if(aj){var
ak=aj[2],a5=aj[1],a6=ai[1],a7=ag[1];if(!ak){var
bC=bG(g(function(a){if(typeof
a!=="number"&&4===a[0])return a[1];throw J},a7)),bD=hy(a,o,a6);return[7,bC,bD,ep(a,a5),aqG]}if(!ak[2]){var
bz=ak[1],bA=bG(g(function(a){if(typeof
a!=="number"&&4===a[0])return a[1];throw J},a7)),bB=hy(a,o,a6);return[7,bA,bB,ep(a,a5),bz]}aG=1}else
aG=1}else
aG=1}}else
i=1}else{var
al=h[2];if(al){if(!al[2]){var
A=al[1],bE=i9(a,A,aqH),bF=i9(a,A,aqI),a8=e(a,aqJ,A),bh=0;if(a8){var
am=a8[1],E=0;if(typeof
am!=="number"&&5===am[0]){var
ax=am[1];if(ax){var
az=ax[2];if(az){var
aA=az[2];if(aA&&!aA[2]){var
bX=az[1],bY=ax[1],bZ=C(a,aA[1]),b0=C(a,bX),a9=[V,C(a,bY),b0,bZ];bh=1;E=1}else
E=1}else
E=1}else
E=1}}if(!bh)var
a9=[V,1.,1.,1.];var
a_=e(a,aqK,A),bi=0;if(a_){var
an=a_[1],j=0;if(typeof
an!=="number"&&5===an[0]){var
ao=an[1];if(ao){var
ap=ao[2];if(ap){var
aq=ap[2];if(aq){var
ar=aq[2];if(ar){var
as=ar[2];if(as){var
at=as[2];if(at){var
au=at[2];if(au){var
av=au[2];if(av){var
aw=av[2];if(aw&&!aw[2]){var
bH=av[1],bI=au[1],bJ=at[1],bK=as[1],bL=ar[1],bM=aq[1],bN=ap[1],bO=ao[1],bP=C(a,aw[1]),bQ=C(a,bH),bR=C(a,bI),bS=C(a,bJ),bT=C(a,bK),bU=C(a,bL),bV=C(a,bM),bW=C(a,bN),a$=[V,C(a,bO),bW,bV,bU,bT,bS,bR,bQ,bP];bi=1;j=1}else
j=1}else
j=1}else
j=1}else
j=1}else
j=1}else
j=1}else
j=1}else
j=1}else
j=1}}if(!bi)var
a$=aqL.slice();return[1,bE,bF,a9,a$]}}else
i=1}else{var
aC=h[2];if(aC){if(!aC[2]){var
aD=aC[1],b1=i9(a,aD,aqM),b2=i9(a,aD,aqN),ba=e(a,aqO,aD),b4=ba?C(a,ba[1]):1.;return[0,b1,b2,b4]}}else
i=1}}if(i&&!h[2]){var
l=w;continue}}break;case
8:var
l=aB(a,[8,l[1]]);continue}throw J}}function
DH(c,b,a){try{var
e=hy(c,b,a);return e}catch(a){a=d(a);throw a}}function
aqP(j){var
a=A9(32,j);if(a&&!c(a[1],aqQ)){var
b=a[2];if(b){var
d=b[2];if(d){var
k=b[1];if(!c(d[1],aqS)){var
e=d[2];if(e&&!c(e[1],aqT)){var
f=e[2];if(f){var
g=f[2];if(g){var
l=f[1];if(!c(g[1],aqU)){var
h=g[2];if(h&&!c(h[1],aqV)){var
i=h[2];if(i){var
m=i[1],n=aE(l);return[0,m,[0,aE(k),n]]}}}}}}}}}}return _(aqR)}function
DI(b,a){return an(b,a)[1]}function
aqW(f){var
a=A9(32,f);if(a&&!c(a[1],aqX)){var
b=a[2];if(b){var
d=b[2];if(d){var
e=d[2];if(e){var
g=d[1],h=b[1],i=aK(e[1]);return[0,h,g,aE(P(al(function(a){if(10!==a&&13!==a)return[0,a];return 0},i)))]}}}}return _(aqY)}function
k3(c,b){var
d=m(c);if(m(b)<d)return 0;var
a=d-1|0;for(;;){if(0<=a){var
f=F(c,a),e=F(b,a)===f?1:0;if(e){var
a=a-1|0;continue}return e}return 1}}function
aqZ(a){function
f(a){return k3(aq0,a)}var
h=B7(function(a){return k3(aq1,a)},f,a);function
i(a){return k3(aq2,a)}var
j=B7(function(a){return k3(aq3,a)},i,a);function
k(a){return k3(aq4,a)}var
l=mK(function(a){return hm(k,a)},a),n=g(function(b){var
c=aK(b),a=c0(function(a){return cS(32,a)},c),d=a[1],e=P(a[2]);return[0,P(d),e]},l),d=cZ(function(a){return m(a)<5?1:0}),c=g(aqP,b(d,h)),e=bJ(c),o=g(aqW,b(d,j)),p=al(function(a){return[0,[0,a[1],a[2][2]]]},c),q=al(function(a){var
d=a[3],f=a[2],b=DI(e,a[1]),c=DI(e,f);if(-1<b&&-1<c)return[0,[0,b,c,d]];return 0},o);return[0,n,al(function(c){var
a=c[2],b=a[1],d=a[2];return-1<b?[0,[0,b,d]]:0},c),q,p]}function
aq5(a){try{var
b=aqZ(Ci(a));return b}catch(a){a=d(a);return _(aR(a))}}function
arj(j){var
f=[0,0];try{for(;;){var
a=Ch(j);if(0===m(a)||35===F(a,0))var
b=0;else{try{var
q=[0,Q_(a,59)],c=q}catch(a){a=d(a);if(a!==J)throw a;var
c=0,r=a}if(c){var
g=c[1],e=[0,0],h=[0,g+1|0],k=R(a,0,g);try{for(;;){var
p=e[1];e[1]=[0,aE(o(arl,R(a,h[1],4))),p];dd(h,5);continue}}catch(a){var
n=l(e[1]),b=[0,[0,o(ark,k),n]]}}else
var
b=0}if(b){var
i=b[1];f[1]=[0,[0,i[1],i[2]],f[1]]}continue}}catch(a){a=d(a);if(a===ar)return l(f[1]);throw a}}var
DJ=cl(function(a){return arj(ct(0,aI(s5(bl(ari)))))}),arp=O(aro.slice()),arr=O(arq.slice()),DN=cl(function(c){var
a=q(arp,arr);return bJ(q(b(DJ,0),a))}),DO=cl(function(h){var
e=b(DJ,0),c=g(function(a){return[0,a[2],a[1]]},e);function
f(a){return at(1,g(mJ,aK(a)))}var
a=aV(0,z(c));x(function(b){var
c=b[2],e=b[1];try{var
g=f(an(a,e)),h=g?1-f(c):g,i=h?gb(a,e,c):h;return i}catch(b){b=d(b);if(b===J)return aO(a,e,c);throw b}},c);return a}),ars=bJ(DK),art=bJ(g(function(a){return[0,a[2],a[1]]},DK));function
nh(a){switch(a){case
0:return aru;case
1:return arv;case
2:return arw;case
3:return arx;case
4:return ary;case
5:return arz;case
6:return arA;case
7:return arB;case
8:return arC;case
9:return arD;case
10:return arE;case
11:return arF;case
12:return arG;default:return arH}}function
tE(a){if(typeof
a==="number")switch(a){case
0:return arN;case
1:return arO;case
2:return arP;case
3:return arQ;default:return arR}else{if(0===a[0]){var
c=a[2],d=a[1],e=bk(o,arT,g(function(a){var
b=a[2],c=a[1];return n(ae(arS),b,c)},c)),f=tE(d);return n(ae(arU),f,e)}var
h=tE(a[1]);return b(ae(arV),h)}}function
ar2(b){switch(b[0]){case
0:return o(ar3,nh(b[1]));case
1:var
d=b[1],f=o(arY,o(arX,o(tE(d[5]),arW))),h=o(ar0,o(arZ,o(d[2],f))),c=d[1];if(typeof
c==="number")switch(c){case
0:var
a=arI;break;case
1:var
a=arJ;break;default:var
a=arK}else
var
e=c[1][3],a=o(arM,bk(o,arL,g(function(a){return a[1]},e)));return o(ar4,o(ar1,o(a,h)));default:return o(ar5,b[1])}}function
asl(e){var
c=ct(0,e),a=[0,0];try{for(;;){fc(c);var
b=CY(c);if(typeof
b!=="number"&&4===b[0]){var
d=b[1];if(S(d,asm))throw aH;a[1]=[0,d,a[1]];continue}throw aH}}catch(b){return l(a[1])}}function
DP(a,s){var
d=e(a,asn,s);if(d){var
b=d[1],f=e(a,aso,b),t=f?C(a,f[1]):0.,g=e(a,asp,b),u=g?C(a,g[1]):0.,h=e(a,asq,b),v=h?C(a,h[1]):0.,i=e(a,asr,b),w=i?C(a,i[1]):0.,j=e(a,ass,b),x=j?C(a,j[1]):0.,k=kK(ast,b);if(k)var
l=[0,[0,k[1]]];else{var
o=kK(asv,b);if(o)var
p=[0,[1,o[1]]];else
var
q=kK(asw,b),y=q?[0,[2,q[1]]]:0,p=y;var
l=p}var
m=e(a,asu,b),r=0;if(m){var
c=m[1],z=0;if(typeof
c!=="number"&&3===c[0]){var
n=[0,asl(c[1])];r=1;z=1}}if(!r)var
n=0;return[0,[0,t,u,v,w,x,l,n,0]]}return 0}function
ni(a){var
i=a2(a,asO),e=0;if(0<=i)if(0<i){var
j=a2(a,asP),d=0;if(0<=j){var
g=0;if(0<j&&c(a,asQ))if(c(a,asR))if(c(a,asS))if(c(a,asT)){if(!c(a,asU))return asV;d=3;g=1}else{d=1;g=1}else{d=2;g=1}else
g=1;if(!g)return asZ}else
if(c(a,as0))if(c(a,as1)){if(!c(a,as2))return as6;if(c(a,as3))if(c(a,as4))if(c(a,as5))d=3;else
d=1;else
d=2}else{e=2;d=3}else{e=3;d=3}switch(d){case
3:break;case
0:return asY;case
1:return asW;default:return asX}}else
e=1;else{var
k=a2(a,as_),b=0;if(0<=k){var
h=0;if(0<k){var
f=0;if(c(a,as$))if(c(a,ata))if(c(a,atb))if(c(a,atc)){if(c(a,atd))if(c(a,ate)){b=3;h=1;f=1}else{h=1;f=1}}else
f=1;else{b=2;h=1;f=1}else{b=1;h=1;f=1}if(!f)return atg}if(!h)return ath}else
if(c(a,atk))if(c(a,atl))if(c(a,atm))if(c(a,atn))if(c(a,ato))if(c(a,atp))b=3;else
b=2;else
b=1;else{e=2;b=3}else{e=3;b=3}else{e=1;b=3}switch(b){case
3:break;case
0:return atf;case
1:return atj;default:return ati}}switch(e){case
0:return 0;case
1:return as9;case
2:return as7;default:return as8}}function
DQ(a,i){var
D=e(a,atB,i);if(D){var
b=D[1],J=0;if(typeof
b==="number")J=1;else
switch(b[0]){case
4:var
n=b[1];if(!c(n,atC))return 4;if(!c(n,atD))return 2;if(!c(n,atE))return 3;break;case
6:var
E=e(a,atF,i);if(E){var
o=E[1],X=0;if(typeof
o==="number"||!(4===o[0]))X=1;else{var
d=o[1],K=0;if(c(d,atH)&&c(d,atI)&&c(d,atJ)&&c(d,atK))K=1;if(!K){var
F=e(a,atL,b);if(F){var
p=F[1],u=0;if(typeof
p==="number"||!(4===p[0]))u=1;else{var
q=p[1],M=0;if(c(q,atN))if(c(q,atO))if(c(q,atP)){u=2;M=1}else
var
r=3;else
var
r=2;else
var
r=4;if(!M)var
j=r}var
v=0;switch(u){case
1:v=1;break;case
2:v=1;break}if(v)throw[0,f,atM]}else{var
x=e(a,atu,i);if(x)var
y=x[1],H=bw(a,atw,atv,y)?1:e(a,atx,y)?1:0;else
var
H=0;if(H)var
j=0;else{var
A=e(a,aty,i);if(A){var
C=e(a,atz,A[1]),N=0;if(C){var
m=C[1],Y=0;if(typeof
m!=="number"&&1===m[0]){var
I=0<(m[1]&8)?1:0;N=1;Y=1}}if(!N)throw[0,f,atA]}else
var
I=0;var
j=I?0:1}}var
G=e(a,atQ,b);if(G){var
s=G[1],O=0,P=function(a){var
b=a[2],c=a[1],d=L(0,z(b)-1|0);return bI(function(b,a){return[0,c+a|0,b]},b,d)};if(typeof
s==="number"||!(5===s[0]))O=1;else{var
V=s[1],k=0,h=g(function(b){return aB(a,b)},V);for(;;){if(h){var
l=h[1];if(typeof
l!=="number"&&1===l[0]){var
Q=h[2],R=l[1],T=function(a){if(typeof
a!=="number"&&4===a[0])return a[1];throw[0,B,asM]},w=c0(function(a){if(typeof
a!=="number"&&4===a[0])return 1;return 0},Q),U=w[2],k=[0,[0,R,g(T,w[1])],k],h=U;continue}throw[0,f,asL]}var
W=ah(g(P,k)),t=[0,j,g(function(a){return[0,a[2],a[1]]},W)];break}}if(O)throw[0,f,asN]}else
var
t=j;return S(d,atR)?[1,t]:t}}}throw[0,f,atG];default:J=1}}return 0}function
tF(e){if(e){var
h=e[1],u=0;if(typeof
h==="number"||!(1===h[0]))u=1;else{var
a=e[2];if(a){var
b=a[1],c=h[1],v=0;if(typeof
b!=="number")switch(b[0]){case
1:var
i=a[2];if(i){var
d=i[1],j=b[1],k=0,n=i[2];if(typeof
d!=="number")switch(d[0]){case
1:var
l=d[1];k=1;break;case
2:var
l=d[1];k=1;break}if(k){if(j<c)throw[0,f,aub];var
o=aP(l,(j-c|0)+1|0),p=a7(L(c,j),o);return q(p,tF(n))}throw[0,f,aua]}v=1;break;case
5:var
r=a[2],s=b[1],m=g(function(a){if(typeof
a!=="number")switch(a[0]){case
1:return a[1];case
2:return a[1]}throw[0,f,auc]},s),t=tF(r);return q(a7(mM(c,m),m),t)}}}throw[0,f,at$]}return 0}function
aus(U){var
c=U;for(;;){if(c){if(98===c[1]){var
y=c[2];if(y&&bW===y[1]){var
z=y[2];if(z&&c8===z[1]){var
A=z[2];if(A&&cO===A[1]){var
B=A[2];if(B&&aY===B[1]){var
C=B[2];if(C&&98===C[1]){var
D=C[2];if(D&&bE===D[1]){var
f=D[2];if(f){var
P=f[1];if(99===P){var
E=f[2];if(E&&dp===E[1]){var
F=E[2];if(F&&97===F[1]){var
G=F[2];if(G&&bF===G[1]){var
d=0,a=G[2];for(;;){if(a){var
N=a[1],Q=0;if(bW===N){var
g=a[2];if(g&&aY===g[1]){var
h=g[2];if(h&&aQ===h[1]){var
i=h[2];if(i&&98===i[1]){var
j=i[2];if(j&&bE===j[1]){var
k=j[2];if(k&&99===k[1]){var
m=k[2];if(m&&dp===m[1]){var
n=m[2];if(n&&97===n[1]){var
o=n[2];if(o&&bF===o[1]){var
S=o[2],H=[0,l(d),S];Q=1}}}}}}}}}if(!Q){var
d=[0,N,d],a=a[2];continue}}else
var
H=[0,l(d),0];return[0,[0,[0,H[1]],H[2]]]}}}}}else
if(bF===P){var
I=f[2];if(I&&97===I[1]){var
J=I[2];if(J&&aY===J[1]){var
K=J[2];if(K&&c8===K[1]){var
L=K[2];if(L&&bW===L[1]){var
e=0,b=L[2];for(;;){if(b){var
O=b[1],R=0;if(bW===O){var
p=b[2];if(p&&aY===p[1]){var
q=p[2];if(q&&aQ===q[1]){var
r=q[2];if(r&&98===r[1]){var
s=r[2];if(s&&bE===s[1]){var
t=s[2];if(t&&bF===t[1]){var
u=t[2];if(u&&97===u[1]){var
v=u[2];if(v&&aY===v[1]){var
w=v[2];if(w&&c8===w[1]){var
x=w[2];if(x&&bW===x[1]){var
T=x[2],M=[0,l(e),T];R=1}}}}}}}}}}if(!R){var
e=[0,O,e],b=b[2];continue}}else
var
M=[0,l(e),0];return[0,[0,[1,M[1]],M[2]]]}}}}}}}}}}}}}}var
c=c[2];continue}return 0}}function
tG(m){var
a=m;for(;;){if(a){var
k=a[1],n=a[2];if(gk(k)){var
a=n;continue}if(60===k){var
h=a[2];if(h){var
b=h[2];if(b){var
c=b[1],d=h[1];if(62===c){var
o=b[2];return[0,aE(P([0,48,[0,bV,[0,d,0]]])),o]}var
e=b[2];if(e){var
i=e[1];if(62===i){var
p=e[2];return[0,aE(P([0,48,[0,bV,[0,d,[0,c,0]]]])),p]}var
g=e[2];if(g){var
l=g[1];if(62===l){var
q=g[2];return[0,aE(P([0,48,[0,bV,[0,d,[0,c,[0,i,0]]]]])),q]}var
j=g[2];if(j&&62===j[1]){var
r=j[2];return[0,aE(P([0,48,[0,bV,[0,d,[0,c,[0,i,[0,l,0]]]]]])),r]}}}}}}throw[0,f,aut]}throw J}}function
tH(a){throw[0,f,auu]}function
tI(f){var
a=f;for(;;){if(a){var
c=a[1],h=a[2];if(gk(c)){var
a=h;continue}if(60===c){var
i=a[2],d=c0(function(a){return cS(62,a)},i),e=d[2],b=d[1];x(function(a){var
d=0;if(!(48<=a)||57<a)d=1;var
e=0;if(d){var
f=0;if(97<=a&&!(bE<a))f=1;if(!f){var
g=0;if(65<=a&&!(70<a))g=1;if(!g){var
b=0;e=1}}}if(!e)var
b=1;var
c=1-b;return c?tH(0):c},b);if(0<z(b)&&kt(z(b))){var
j=ks(2,b),k=g(function(a){if(a){var
b=a[2];if(b&&!b[2])return aj(aE(P([0,48,[0,bV,[0,a[1],[0,b[1],0]]]])))}throw[0,B,auv]},j),l=e?bu(e):0;return[0,P(k),l]}return tH(0)}}return tH(0)}}function
DR(c){var
a=aus(c);if(a){var
b=a[1],d=b[1];return[0,d,DR(b[2])]}return 0}function
auw(i){if(0===i[0]){var
m=[0,0],n=[0,i[1]];try{for(;;){var
o=tG(n[1]),x=o[1],p=tI(o[2]),y=p[1];n[1]=p[2];Y(m,[0,x,y]);continue}}catch(a){a=d(a);if(a===J)return l(m[1]);throw a}}var
j=[0,0],k=[0,i[1]];try{for(;;){var
r=tG(k[1]),a=r[1],s=tG(r[2]),e=s[2],b=s[1];if(b<a)throw[0,f,aux];if(e){var
t=e[1],w=0;if(60===t){var
u=tI(e),z=u[2],A=u[1],B=L(0,b-a|0),C=g(function(b){return function(e){if(c(b,auy)){var
a=l(aK(b)),d=[0,aj(aM(a)+e|0),0];return P(q(l(bu(a)),d))}return auz}}(A),B);ge(j,l(a7(L(a,b),C)));k[1]=z}else
if(91===t){var
h=[0,e[2]],D=L(0,b-a|0),E=g(function(b){return function(d){var
a=tI(b[1]),c=a[1];b[1]=a[2];return c}}(h),D);ge(j,a7(L(a,b),E));var
v=h[1],F=v?bu(v):0;h[1]=F;k[1]=h[1]}else
w=1;if(!w)continue}throw[0,f,auA]}}catch(a){a=d(a);if(a===J)return l(j[1]);throw a}}function
auE(n,j,y){var
o=e(n,auF,y);if(o){var
a=o[1];try{for(;;){var
r=0;if(typeof
a==="number"||!(7===a[0]))r=1;else{if(0!==a[1][1][2][0]){cJ(a);continue}d1(n,a);var
s=0;if(typeof
a!=="number"&&7===a[0]){var
m=a[1][1][2];if(0===m[0]){var
u=m[1];try{var
w=XN(u),x=ah(g(auw,DR(b(cZ(gk),w))))}catch(a){a=d(a);var
v=aR(a);b(K(auD),v);throw a}var
A=[0,gg(bJ,x)],p=A;s=1}}if(!s)throw[0,B,auC]}if(r){var
t=bP(a);throw[0,f,b(ae(auB),t)]}break}}catch(a){a=d(a);var
z=aR(a);b(K(auG),z);var
p=0}var
l=p}else
var
l=0;switch(j[0]){case
0:return j;case
1:var
c=j[1],q=c[4];if(q){var
h=q[1];return[1,[0,c[1],c[2],c[3],[0,[0,h[1],h[2],h[3],h[4],h[5],h[6],h[7],l]],c[5]]]}return[1,[0,c[1],c[2],c[3],[0,[0,0.,0.,0.,0.,0.,0,0,l]],c[5]]];default:var
k=j[2],i=k[3];return[2,j[1],[0,k[1],k[2],[0,i[1],i[2],i[3],i[4],i[5],i[6],i[7],l],k[4],k[5]],j[3]]}}function
DS(a){var
b=0;switch(a[0]){case
1:var
c=a[1][4];if(c){var
d=c[1][8];b=1}break;case
2:var
d=a[2][3][8];b=1;break}return b?d:0}function
DT(a,b){var
ag=e(a,atq,b),p=0;if(ag){var
A=ag[1],i=0;if(typeof
A!=="number"&&4===A[0])if(c(A[1],atr)){p=1;i=1}else{var
ah=e(a,ats,b),T=0;if(ah){var
B=ah[1],aJ=0;if(typeof
B!=="number"&&4===B[0])if(ni(B[1])&&!e(a,att,b)){var
o=1;i=1;T=1;aJ=1}else{var
o=0;i=1;T=1;aJ=1}}if(!T){var
o=0;i=1}}if(!i)p=1}else
p=1;if(p)var
o=0;if(o){var
al=e(a,atV,b),U=0;if(al){var
D=al[1],aK=0;if(typeof
D!=="number"&&4===D[0]){var
am=ni(D[1]);if(!am)throw[0,f,atX];var
bj=am[1],S=[0,bj,DQ(a,b)];aK=1}if(!aK)U=1}else
U=1;if(U)throw[0,f,atW]}else{var
an=e(a,atY,b),aL=0;if(an){var
E=an[1],aM=0;if(typeof
E!=="number"&&4===E[0]){var
n=E[1],aN=0;if(c(n,atZ)&&c(n,at0)&&c(n,at1)&&c(n,at2)){aM=1;aN=1}if(!aN){var
aH=1;aL=1;aM=1}}}if(!aL)var
aH=0;if(aH){var
ai=e(a,atS,b),V=0;if(ai){var
C=ai[1],aO=0;if(typeof
C!=="number"&&4===C[0]){var
m=C[1];if(c(m,asc))if(c(m,asd))if(c(m,ase))if(c(m,asf))var
d=0;else{var
Z=e(a,ar6,b),ba=Z?Z[1]:asb,r=I(bs(ar8),a,ar7,b),aQ=0;if(typeof
r==="number"||!(6===r[0]))aQ=1;else
var
bb=r[1],bc=mU(a,ar_,b),d=[0,[0,[0,av(a,I(bs(asa),a,ar$,b)),bc,bb,ba]]];if(aQ)throw[0,f,ar9]}else
var
d=asg;else
var
d=ash;else
var
d=asi;if(!d)throw[0,f,atU];var
bg=d[1],bh=DP(a,b),bi=DQ(a,b),$=e(a,asx,b),aR=0;if($){var
t=$[1],aS=0;if(typeof
t!=="number"&&4===t[0])if(c(t[1],asK))aS=1;else{var
u=[0,b];aR=1;aS=1}}if(!aR)var
u=e(a,asy,b);if(u){var
bd=u[1],aa=e(a,asz,b),aT=0;if(aa){var
v=aa[1],br=0;if(typeof
v!=="number"&&1===v[0]){var
j=v[1],aU=0;if(!(aq<j)&&0<=j){var
ab=e(a,asC,b),aV=0;if(ab){var
w=ab[1],bt=0;if(typeof
w!=="number"&&1===w[0]){var
k=w[1],aW=0;if(!(aq<k)&&0<=k){var
ac=e(a,asF,bd),aX=0;if(ac){var
l=ac[1],W=0;if(typeof
l!=="number")switch(l[0]){case
1:var
af=l[1];W=1;break;case
2:var
af=l[1];W=1;break}if(W){var
x=af;aX=1}}if(!aX)var
x=0.;var
ad=e(a,asG,b),aY=0;if(ad){var
y=ad[1],bu=0;if(typeof
y!=="number"&&5===y[0]){var
ae=y[1];if(z(ae)!==((k-j|0)+1|0))throw[0,f,asI];var
be=aP(x,j),bf=g(function(c){var
b=aB(a,c);if(typeof
b!=="number")switch(b[0]){case
1:return b[1];case
2:return b[1]}throw[0,f,asJ]},ae),aj=[0,bG(q(be,q(bf,aP(x,aq-k|0))))];aT=1;br=1;aU=1;aV=1;bt=1;aW=1;aY=1;bu=1}}if(!aY)throw[0,f,asH]}if(!aW)throw[0,f,asE]}}if(!aV)throw[0,f,asD]}if(!aU)throw[0,f,asB]}}if(!aT)throw[0,f,asA]}else
var
aj=0;var
_=e(a,asj,b),aZ=0;if(_){var
s=_[1],bv=0;if(typeof
s!=="number"&&4===s[0]){var
ak=s[1];aZ=1;bv=1}}if(!aZ)var
ak=ask;var
S=[1,[0,bg,ak,aj,bh,bi]];aO=1}if(!aO)V=1}else
V=1;if(V)throw[0,f,atT]}else{var
ao=e(a,at3,b),a0=0;if(ao){var
F=ao[1],a1=0;if(typeof
F!=="number"&&4===F[0])if(c(F[1],at4))a1=1;else{var
aI=1;a0=1;a1=1}}if(!a0)var
aI=0;if(!aI)throw[0,f,auH];var
aC=e(a,auk,b),X=0;if(aC){var
O=aC[1],a2=0;if(typeof
O!=="number"&&4===O[0]){var
bq=O[1],aD=e(a,aum,b),a3=0;if(aD){var
P=aD[1],a4=0;if(typeof
P!=="number"&&5===P[0]){var
Q=P[1];if(Q&&!Q[2]){var
h=aB(a,Q[1]),at=e(a,aud,h);if(!at)throw[0,f,auj];var
K=at[1],ap=e(a,at5,K),a5=0;if(ap){var
G=ap[1],bw=0;if(typeof
G!=="number"&&1===G[0]){var
bk=G[1],ar=e(a,at7,K),a6=0;if(ar){var
H=ar[1],bx=0;if(typeof
H!=="number"&&3===H[0]){var
bl=H[1],as=e(a,at9,K),a7=0;if(as){var
J=as[1],by=0;if(typeof
J!=="number"&&3===J[0]){var
bm=[0,J[1],bl,bk],au=e(a,aue,h),a8=0;if(au){var
L=au[1],bz=0;if(typeof
L!=="number"&&4===L[0]){var
bn=L[1],aw=DP(a,h);if(!aw)throw[0,f,aui];var
bo=aw[1],ax=e(a,aug,h),a9=0;if(ax){var
M=ax[1],bA=0;if(typeof
M!=="number"&&5===M[0]){var
ay=tF(M[1]);a9=1;bA=1}}if(!a9)var
ay=0;var
az=e(a,auh,h),a_=0;if(az){var
N=az[1],bB=0;if(typeof
N!=="number"&&1===N[0]){var
aA=N[1];a_=1;bB=1}}if(!a_)var
aA=dv;var
aE=e(a,auo,b),a$=0,bp=[0,bm,bn,bo,ay,aA];if(aE){var
R=aE[1],Y=0;if(typeof
R!=="number")switch(R[0]){case
4:var
aF=[0,R[1]];Y=1;break;case
7:var
aG=kK(auq,b);if(!aG)throw[0,f,aur];var
aF=[1,aG[1]];Y=1;break}if(Y){var
S=[2,bq,bp,aF];a2=1;a3=1;a4=1;a5=1;bw=1;a6=1;bx=1;a7=1;by=1;a8=1;bz=1;a$=1}}if(!a$)throw[0,f,aup]}}if(!a8)throw[0,f,auf]}}if(!a7)throw[0,f,at_]}}if(!a6)throw[0,f,at8]}}if(!a5)throw[0,f,at6]}else
a4=1}}if(!a3)throw[0,f,aun]}if(!a2)X=1}else
X=1;if(X)throw[0,f,aul]}}return auE(a,S,b)}function
auY(a){if(0<=a&&!(vV<a)){var
b=function(a){return[0,a>>>8|0,[0,a&aq,0]]};if(jQ<=a){var
c=a-65536|0,d=b(u1|c&lx);return q(b(jC|c>>>10|0),d)}return b(a)}throw[0,bq,auZ]}function
au0(a){return P(q(au1,g(aj,ah(g(auY,a)))))}function
k4(a){throw[0,bq,au2]}function
tJ(p){var
q=aK(p),a=0,b=g(function(a){return a},q);for(;;){if(b){var
d=b[2],j=b[1];if(d){var
e=d[2],k=d[1];if(e){var
f=e[2],m=e[1];if(f){var
n=f[2],o=f[1],c=j<<8|k;if(jC<=c&&!(lu<c)){if(jC<=c&&!(vX<c)){var
h=m<<8|o;if(u1<=h&&!(lu<h)){var
a=[0,((c&lx)<<10|h>>>6|0)+jQ|0,a],b=n;continue}return k4(0)}return k4(0)}var
a=[0,c,a],b=[0,m,[0,o,n]];continue}return k4(0)}var
i=j<<8|k;if(jC<=i&&!(lu<i))return k4(0);var
a=[0,i,a],b=0;continue}return k4(0)}return l(a)}}function
tK(a,d){var
c=d;for(;;)if(typeof
c==="number")switch(c){case
0:return 0;case
1:return b(a,DL);case
2:return b(a,arm);case
3:return b(a,DM);default:return b(a,arn)}else{if(0===c[0]){var
e=c[2];tK(a,c[1]);return b(a,e)}var
f=c[1];b(a,DL);var
c=f;continue}}function
DU(b){var
a=aV(0,eE);function
c(b){return aO(a,b[2],b[1])}tK(function(a){return x(c,a)},b);return a}function
au3(b){var
a=aV(0,eE);function
c(b){return aO(a,b[1],b[2])}tK(function(a){return x(c,a)},b);return a}function
DV(a,j){var
e=a[2],l=0;if(2===e[0]){var
d=e[3];if(0===d[0]&&!c(d[1],au9)){var
h=1;l=1}}if(!l)var
h=0;if(h){var
m=aK(j),i=g(function(a){return a},m);if(iU(z(i)))throw[0,f,au_];var
n=kp(i),k=g(function(c){return b(a[1],c[1]<<8|c[2])},n)}else
var
o=aK(j),k=g(function(c){return b(a[1],c)},o);return ah(g(function(a){return a[2]},k))}function
DW(i,c){var
a=i?i[1]:0;if(a)sy(o(ar2(c),au$));switch(c[0]){case
0:var
e=c[2];break;case
1:var
e=c[1][5];break;default:var
e=0}var
j=DS(c);if(j){var
l=j[1];if(a)eh(ava);var
k=ku(l);try{if(a)x(function(a){var
b=a[2],c=a[1];return n(eh(avh),c,b)},k);var
r=1,s=bJ(g(function(a){var
b=a[1];return[0,tJ(a[2]),b]},k)),h=r,f=s}catch(a){a=d(a);var
m=aR(a);b(K(avb),m);var
h=0,f=ce(0)}}else
var
h=0,f=ce(0);var
p=au3(e),q=b(DO,0);return function(c){if(a)b(eh(avc),c);try{if(h){var
e=an(f,[0,c,0]);if(a)b(eh(ave),e);var
g=[0,e]}else{var
i=an(q,[0,c,0]);if(a)b(eh(avf),i);var
j=an(p,i);if(a)b(eh(avg),j);var
g=[0,j]}return g}catch(e){e=d(e);if(e===J){if(a)b(K(avd),c);return 0}throw e}}}function
DX(a){var
b=2<=m(a)?1:0;if(b)var
c=V===F(a,0)?1:0,d=c?aq===F(a,1)?1:0:c;else
var
d=b;return d}function
avi(a){if(0<=a&&!(aq<a))try{var
f=an(art,a),c=an(b(DN,0),f),e=0;if(c&&!c[2]){var
d=[0,c[1]];e=1}if(!e){b(K(avl),a);var
d=0}return d}catch(c){b(K(avk),a);return 0}return _(avj)}function
avm(a){if(dL<a){if(xT<a){if(o5<a){if(vV<a)throw[0,f,avn];return[0,a>>>18|0|d$,[0,(a>>>12|0)&63|N,[0,(a>>>6|0)&63|N,[0,a&63|N,0]]]]}return[0,a>>>12|0|dT,[0,(a>>>6|0)&63|N,[0,a&63|N,0]]]}return[0,a>>>6|0|c3,[0,a&63|N,0]]}return[0,a,0]}function
tL(a){return P(g(aj,ah(g(avm,a))))}function
avo(a){if(DX(a))return tJ(R(a,2,m(a)-2|0));var
b=aK(a);return al(avi,g(function(a){return a},b))}function
eq(a){try{var
e=tL(avo(a));return e}catch(a){a=d(a);var
c=aR(a);b(K(avp),c);return avq}}function
k5(g){if(g){var
c=g[2],a=g[1];if(0===(a>>>7|0))return[0,a,k5(c)];if(c){var
d=c[2],b=c[1];if(6===(a>>>5|0)&&2===(b>>>6|0))return[0,(a&31)<<6|b&63,k5(d)];if(d){var
e=d[2],f=d[1];if(14===(a>>>4|0)&&2===(b>>>6|0)&&2===(f>>>6|0))return[0,(a&15)<<12|(b&63)<<6|f&63,k5(e)];if(e){var
h=e[1],i=e[2];if(30===(a>>>3|0)&&2===(b>>>6|0)&&2===(f>>>6|0)&&2===(h>>>6|0))return[0,(a&7)<<18|(b&63)<<12|(f&63)<<6|h&63,k5(i)]}}}K(avr);return 0}return 0}function
tM(a){var
b=aK(a);return k5(g(function(a){return a},b))}function
DY(c,a){if(a){var
e=a[2],f=a[1];try{var
g=DY([0,an(ars,an(b(DO,0),[0,f,0])),c],e);return g}catch(a){a=d(a);if(a===J)throw aH;throw a}}return l(c)}function
avs(b){try{var
a=P(g(aj,DY(0,b)));return a}catch(a){a=d(a);if(a===aH)return au0(b);throw a}}function
bx(a){return avs(tM(a))}function
tN(a){return DX(a)?bx(eq(a)):a}function
c2(b){var
a=aq5(ct(0,aI(s5(bl(b))))),c=a[3],d=a[2],e=a[1],f=bJ(a[4]),h=bJ(g(function(a){return[0,[0,a[1],a[2]],a[3]]},c)),i=bJ(d);return[0,bJ(e),i,h,f]}var
avt=0,avu=[0,[0,13,cl(function(a){return c2(arh)})],avt],avv=[0,[0,12,cl(function(a){return c2(arg)})],avu],avw=[0,[0,11,cl(function(a){return c2(aq9)})],avv],avx=[0,[0,10,cl(function(a){return c2(aq7)})],avw],avy=[0,[0,9,cl(function(a){return c2(aq8)})],avx],avz=[0,[0,8,cl(function(a){return c2(aq6)})],avy],avA=[0,[0,7,cl(function(a){return c2(arf)})],avz],avB=[0,[0,6,cl(function(a){return c2(are)})],avA],avC=[0,[0,5,cl(function(a){return c2(ard)})],avB],avD=[0,[0,4,cl(function(a){return c2(arc)})],avC],avE=[0,[0,3,cl(function(a){return c2(arb)})],avD],avF=[0,[0,2,cl(function(a){return c2(ara)})],avE],avG=[0,[0,1,cl(function(a){return c2(aq$)})],avF],DZ=[0,[0,0,cl(function(a){return c2(aq_)})],avG];function
D0(a){switch(a){case
0:return 331;case
1:return OA;case
2:return JA;case
3:return 334;case
4:return od;case
5:return od;case
6:return od;case
7:return od;case
8:return jJ;case
9:return jJ;case
10:return jJ;case
11:return jJ;case
12:return 336;default:return IE}}function
D1(h,g,b,f,a){if(typeof
b==="number"&&!b){var
e=ek(h,a);return e?e[1]:0}var
c=ek(f,a),i=c?c[1]:avH,d=ek(g,P(bu(aK(i))));return d?d[1]:0}function
D2(j,e,d,c,b,i,a){if(a){var
f=a[2],g=a[1];if(f){var
k=f[1],m=D2(j,e,d,c,b,i,[0,k,f[2]]);if(j)var
h=ek(i,[0,g,k]),n=h?h[1]:0,l=n;else
var
l=0;return(D1(e,d,c,b,g)+l|0)+m|0}return D1(e,d,c,b,g)}return 0}function
tO(f,c,e,d){var
a=b(ei(e,DZ),0),h=a[4],i=a[3],j=a[2],k=DU(c),l=aK(d);return D2(f,j,h,c,k,i,g(function(a){return a},l))}function
D3(a){return b(ei(a,DZ),0)}function
avI(a){switch(a){case
0:return bX;case
1:return b5;case
2:return cO;case
3:return cP;case
4:return bF;case
5:return dt;case
6:return dL;case
7:return hZ;case
8:return 88;case
9:return 93;case
10:return aQ;case
11:return dp;case
12:return 0;default:return c5}}function
avJ(a){return 12<=a?13<=a?4:65541:8<=a?33:32}function
D4(a){return[0,3,0,avN,avM,1.,avL,wF,0,0,0,0,avK,0,au,au,au,au,1.,1.,0.,0.,rq,0.,0,0,0.,1,0,0,au]}var
w=[0,D4(0)];function
nj(a){return[0,w[1][14],[0,[0,w[1][11],w[1][4]]],[0,[0,w[1][10],w[1][6]]],w[1][5],w[1][8],w[1][9],w[1][12],w[1][7],[V,w[1][19],w[1][18]],w[1][3]]}function
tP(a){return[0,w[1][14],[0,[0,w[1][11],w[1][4]]],0,w[1][5],w[1][8],w[1][9],w[1][12],w[1][7],[V,w[1][19],1.],w[1][3]]}function
D5(a){return[0,w[1][14],0,[0,[0,w[1][10],w[1][6]]],w[1][5],w[1][8],w[1][9],w[1][12],w[1][7],[V,1.,w[1][18]],w[1][3]]}var
D6=function
c(a,b){return c.fun(a,b)},D7=function
c(a,b){return c.fun(a,b)},D8=function
d(a,b,c){return d.fun(a,b,c)},k6=[],D9=function
b(a){return b.fun(a)},D_=function
b(a){return b.fun(a)},D$=function
b(a){return b.fun(a)},Ea=function
b(a){return b.fun(a)},Eb=function
c(a,b){return c.fun(a,b)},Ec=function
c(a,b){return c.fun(a,b)},Ed=function
c(a,b){return c.fun(a,b)},tQ=function
e(a,b,c,d){return e.fun(a,b,c,d)},Ee=function
c(a,b){return c.fun(a,b)},tR=function
d(a,b,c){return d.fun(a,b,c)},nk=function
e(a,b,c,d){return e.fun(a,b,c,d)},i_=function
d(a,b,c){return d.fun(a,b,c)},k7=function
d(a,b,c){return d.fun(a,b,c)},bR=function
e(a,b,c,d){return e.fun(a,b,c,d)},Ef=function
c(a,b){return c.fun(a,b)},Eg=function
d(a,b,c){return d.fun(a,b,c)},Eh=function
c(a,b){return c.fun(a,b)};function
avO(a){return avP}bt(D6,function(a,b){var
j=e(a,avQ,b);if(j){var
d=j[1],u=e(a,avR,d),k=e(a,avS,d),r=0;if(k){var
g=k[1],w=0;if(typeof
g!=="number"&&0===g[0]){var
l=g[1];r=1;w=1}}if(!r)var
l=0;var
m=e(a,avT,d),s=0;if(m){var
h=m[1],x=0;if(typeof
h!=="number"&&0===h[0]){var
o=h[1];s=1;x=1}}if(!s)var
o=0;var
p=e(a,avU,b),t=0;if(p){var
i=p[1],y=0;if(typeof
i!=="number"&&6===i[0]){var
q=[6,i[1]];t=1;y=1}}if(!t)var
q=avV;var
v=n(Eh,a,[0,[0,b,0],0,q,0,avW]),c=av(a,I(bs(avY),a,avX,b));return[0,[0,u,l,o,v],c[1],c[2],c[3],c[4]]}throw[0,f,avZ]});bt(D7,function(a,d){var
l=e(a,av0,d),u=0;if(l){var
h=l[1],v=0;if(typeof
h!=="number"&&4===h[0]){var
s=h[1],w=0;if(c(s,av5))if(c(s,av6)){v=1;w=1}else
var
t=av7;else
var
t=av8;if(!w){var
i=t;u=1;v=1}}}if(!u)var
i=0;if(i){var
z=i[1],m=e(a,av1,d);if(m){var
b=n(D6,a,m[1]),A=b[5],B=b[4],D=b[3],E=b[2],F=b[1],o=e(a,av2,d),x=0;if(o){var
j=o[1],H=0;if(typeof
j!=="number"&&5===j[0]){var
G=j[1],p=[0,g(function(b){return C(a,b)},G)];x=1;H=1}}if(!x)var
p=0;var
q=e(a,av3,d),y=0;if(q){var
k=q[1],I=0;if(typeof
k!=="number"&&6===k[0]){var
r=[0,ep(a,[6,k[1]])];y=1;I=1}}if(!y)var
r=0;return[0,[0,z,F,[0,E,D,B,A],p,r]]}throw[0,f,av4]}return 0});bt(D8,function(a,_,b){var
x=e(a,av9,b);if(x){var
L=n(D7,a,x[1]);w[1][28]=L}var
y=e(a,av_,b),O=0;if(y){var
j=y[1],P=0;if(typeof
j!=="number"&&2===j[0]){w[1][18]=j[1];O=1;P=1}}var
z=e(a,av$,b),Q=0;if(z){var
k=z[1],R=0;if(typeof
k!=="number"&&2===k[0]){w[1][19]=k[1];Q=1;R=1}}var
A=e(a,awa,b),S=0;if(A){var
l=A[1],c=0;if(typeof
l!=="number")switch(l[0]){case
4:c=1;break;case
5:var
H=l[1];if(H){var
J=0,I=H[1];if(typeof
I!=="number"&&4===I[0]){c=1;J=1}if(!J)c=2}else
c=2;break}switch(c){case
2:break;case
0:break;default:w[1][27]=0;S=1}}var
B=e(a,awb,b),T=0;if(B){var
d=B[1],t=0;if(typeof
d!=="number")switch(d[0]){case
1:w[1][5]=d[1];t=1;break;case
2:w[1][5]=d[1];t=1;break}if(t)T=1}var
C=e(a,awc,b),U=0;if(C){var
m=C[1],V=0;if(typeof
m!=="number"&&1===m[0]){w[1][9]=m[1];U=1;V=1}}var
D=e(a,awd,b),W=0;if(D){var
o=D[1],X=0;if(typeof
o!=="number"&&1===o[0]){w[1][8]=o[1];W=1;X=1}}var
E=e(a,awe,b),Y=0;if(E){var
h=E[1],u=0;if(typeof
h!=="number")switch(h[0]){case
1:w[1][7]=h[1];u=1;break;case
2:w[1][7]=h[1];u=1;break}if(u)Y=1}var
F=e(a,awf,b);if(F){var
p=F[1],Z=0;if(typeof
p==="number"||!(5===p[0]))Z=1;else{var
q=p[1];if(q){var
r=q[1],K=0;if(typeof
r!=="number"&&5===r[0]){var
s=q[2];if(s){if(!s[2]){var
i=s[1],v=0,M=r[1];if(typeof
i!=="number")switch(i[0]){case
1:var
G=i[1];v=1;break;case
2:var
G=i[1];v=1;break}if(v){var
N=[0,g(function(a){if(typeof
a!=="number")switch(a[0]){case
1:return a[1];case
2:return a[1]}throw[0,f,awh]},M),G];w[1][12]=N;return 0}throw[0,f,awg]}K=1}else
K=1}}}}return 0});bt(k6,[0,0]);bt(D9,function(b){var
a=w[1];return[0,a[1],a[2],a[3],w[1][4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15],a[16],a[17],a[18],a[19],a[20],a[21],a[22],a[23],a[24],a[25],a[26],a[27],a[28],a[29],a[30]]});bt(D_,function(a){return Y(k6,b(D9,0))});bt(D$,function(c){var
a=k6[1];if(a){var
b=a[1];k6[1]=a[2];w[1]=b;return 0}throw[0,f,awi]});bt(Ea,function(a){return awj});bt(Eb,function(a,c){var
j=e(a,awk,c),l=0;if(j){var
d=j[1],b=0;if(typeof
d!=="number"&&5===d[0]){var
f=d[1];if(f){var
g=f[2];if(g){var
h=g[2];if(h){var
i=h[2];if(i&&!i[2]){var
n=h[1],o=g[1],p=f[1],q=C(a,i[1]),r=C(a,n),s=C(a,o),k=[0,C(a,p),s,r,q];l=1;b=1}else
b=1}else
b=1}else
b=1}else
b=1}}if(!l)var
k=awl;var
m=mU(a,awm,c);return[0,[0,k,m,ep(a,I(bs(awo),a,awn,c))]]});bt(Ec,function(a,d){var
z=e(a,awp,d);if(z){var
i=z[1],Y=0;if(typeof
i==="number"||!(5===i[0]))Y=1;else{var
j=i[1];if(j){var
k=j[2];if(k){var
l=k[2];if(l){var
m=l[2];if(m){var
n=m[2];if(n){var
o=n[2];if(o&&!o[2]){var
K=n[1],L=m[1],M=l[1],N=k[1],O=j[1],P=C(a,o[1]),Q=C(a,K),R=C(a,L),S=C(a,M),T=C(a,N),U=[0,C(a,O),T,S,R,Q,P],A=e(a,awr,d),H=0;if(A){var
p=A[1],x=0;if(typeof
p!=="number"&&5===p[0]){var
v=p[1];if(v){var
w=v[2];if(w&&!w[2]){var
W=v[1],X=C(a,w[1]),B=[0,C(a,W),X];H=1;x=1}else
x=1}else
x=1}}if(!H)var
B=aws;var
D=e(a,awt,d);if(D){var
h=D[1],I=0;if(typeof
h!=="number"&&5===h[0]){var
V=h[1],E=g(function(b){return ep(a,b)},V);I=1}if(!I)var
E=[0,ep(a,h),0];var
F=e(a,awu,d),J=0;if(F){var
q=F[1],b=0;if(typeof
q!=="number"&&5===q[0]){var
r=q[1];if(r){var
s=r[1],c=0;if(typeof
s!=="number"&&0===s[0]){var
t=r[2];if(t){var
u=t[1],y=0;if(typeof
u!=="number"&&0===u[0])if(t[2]){b=1;c=1;y=1}else{var
G=[0,s[1],u[1]];J=1;b=1;c=1;y=1}if(!y){b=1;c=1}}else{b=1;c=1}}if(!c)b=1}else
b=1}}if(!J)var
G=awv;return[2,[0,U,B,E,G]]}throw[0,f,aww]}}}}}}}}throw[0,f,awq]});bt(Ed,function(a,d){var
x=e(a,awx,d);if(x){var
i=x[1],S=0;if(typeof
i==="number"||!(5===i[0]))S=1;else{var
j=i[1];if(j){var
k=j[2];if(k){var
l=k[2];if(l){var
m=l[2];if(m&&!m[2]){var
I=l[1],J=k[1],K=j[1],L=C(a,m[1]),M=C(a,I),N=C(a,J),O=[0,C(a,K),N,M,L],y=e(a,awz,d),F=0;if(y){var
n=y[1],v=0;if(typeof
n!=="number"&&5===n[0]){var
t=n[1];if(t){var
u=t[2];if(u&&!u[2]){var
Q=t[1],R=C(a,u[1]),z=[0,C(a,Q),R];F=1;v=1}else
v=1}else
v=1}}if(!F)var
z=awA;var
A=e(a,awB,d);if(A){var
h=A[1],G=0;if(typeof
h!=="number"&&5===h[0]){var
P=h[1],B=g(function(b){return ep(a,b)},P);G=1}if(!G)var
B=[0,ep(a,h),0];var
D=e(a,awC,d),H=0;if(D){var
o=D[1],b=0;if(typeof
o!=="number"&&5===o[0]){var
p=o[1];if(p){var
q=p[1],c=0;if(typeof
q!=="number"&&0===q[0]){var
r=p[2];if(r){var
s=r[1],w=0;if(typeof
s!=="number"&&0===s[0])if(r[2]){b=1;c=1;w=1}else{var
E=[0,q[1],s[1]];H=1;b=1;c=1;w=1}if(!w){b=1;c=1}}else{b=1;c=1}}if(!c)b=1}else
b=1}}if(!H)var
E=awD;return[1,[0,O,z,B,E]]}throw[0,f,awE]}}}}}}throw[0,f,awy]});bt(tQ,function(b,o,m,a){var
p=I(bs(awG),b,awF,a),q=e(b,awH,a),r=e(b,awI,a),h=e(b,awJ,a),k=0;if(h){var
d=h[1],l=0;if(typeof
d!=="number"&&0===d[0])if(d[1]){var
i=1;k=1;l=1}else
l=1}if(!k)var
i=0;var
g=I(bs(awL),b,awK,a);if(typeof
g!=="number"&&1===g[0]){var
j=g[1]-1|0;if(!(6<j>>>0)){switch(j){case
0:var
c=n(Eb,b,a);break;case
1:var
c=n(Ed,b,a);break;case
2:var
c=n(Ec,b,a);break;case
3:var
c=0;break;case
4:var
c=1;break;case
5:var
c=2;break;default:var
c=3}return[0,p,q,r,i,o,m,c]}}throw[0,f,awM]});bt(Ee,function(a,b){var
j=mU(a,awN,b),d=e(a,awO,b),i=0;if(d){var
c=d[1],k=0;if(typeof
c!=="number"&&6===c[0]){var
g=c;i=1;k=1}}if(!i)var
g=awP;var
h=e(a,awQ,b);if(h)return[2,a9(tQ,a,j,g,h[1])];throw[0,f,awR]});bt(tR,function(a,l,k){var
g=e(a,awS,l[3]);if(g){var
h=e(a,k,g[1]);if(h){var
c=h[1],i=e(a,awT,c);if(i){var
d=i[1],m=0;if(typeof
d==="number"||!(1===d[0]))m=1;else{var
j=d[1];if(1===j)return b(Ea,c);if(2===j)return n(Ee,a,c)}}throw[0,f,awU]}throw[0,f,awV]}throw[0,f,awW]});bt(nk,function(i,j,F,d){var
h=F[2],a=F[1],g=[0,a,h],C=0;if(typeof
d==="number")switch(d){case
0:b(D_,0);return g;case
1:b(D$,0);return g;case
2:if(0!==w[1][1])throw[0,f,awX];if(typeof
a!=="number"&&1===a[0]){var
ax=a[4],ay=a[2],az=a[1];return[0,[1,az,ay,0,[0,[0,1,0,l(a[3])],ax]],h]}throw[0,f,awY];case
3:if(0!==w[1][1])throw[0,f,awZ];w[1][1]=3;if(typeof
a!=="number"&&1===a[0]){var
G=a[4],H=a[3],J=a[2],L=a[1];if(0===H){var
aA=D5(0);return[0,[1,L,J,0,0],[0,[0,[0,[0,0,l(G)],aA]],h]]}var
aB=D5(0);return[0,[1,L,J,0,0],[0,[0,[0,[0,0,l([0,[0,1,1,l(H)],G])],aB]],h]]}throw[0,f,aw0];case
4:return a9(bR,i,j,g,aw1);case
7:if(0!==w[1][1])throw[0,f,aw4];w[1][1]=3;if(typeof
a!=="number"&&1===a[0]){var
N=a[4],O=a[3],P=a[2],Q=a[1];if(0===O){var
aH=tP(0);return[0,[1,Q,P,0,0],[0,[0,[0,[0,0,l(N)],aH]],h]]}var
aI=tP(0);return[0,[1,Q,P,0,0],[0,[0,[0,[0,0,l([0,[0,1,1,l(O)],N])],aI]],h]]}throw[0,f,aw5];case
8:if(0!==w[1][1])throw[0,f,aw6];w[1][1]=3;if(typeof
a!=="number"&&1===a[0]){var
R=a[4],S=a[3],T=a[2],U=a[1];if(0===S){var
aJ=nj(0);return[0,[1,U,T,0,0],[0,[0,[0,[0,1,l(R)],aJ]],h]]}var
aK=nj(0);return[0,[1,U,T,0,0],[0,[0,[0,[0,1,l([0,[0,1,1,l(S)],R])],aK]],h]]}throw[0,f,aw7];case
9:if(0!==w[1][1])throw[0,f,aw8];var
V=a9(nk,i,j,[0,a,h],2),W=V[2],k=V[1];w[1][1]=3;if(typeof
k!=="number"&&1===k[0]){var
X=k[4],Y=k[3],Z=k[2],_=k[1];if(0===Y){var
aL=nj(0);return[0,[1,_,Z,0,0],[0,[0,[0,[0,0,l(X)],aL]],W]]}var
aM=nj(0);return[0,[1,_,Z,0,0],[0,[0,[0,[0,0,l([0,[0,1,1,l(Y)],X])],aM]],W]]}throw[0,f,aw9];case
10:return a9(bR,i,j,g,aw_);case
11:return a9(bR,i,j,g,aw$);case
12:w[1][1]=3;return[0,0,h];case
13:if(typeof
a!=="number"&&1===a[0]){var
s=a[4],t=a[3];if(0===t&&0===s)return g;var
aN=0===t?s:[0,[0,1,0,l(t)],s];w[1][2]=[0,[0,1,aN]];return g}return g;case
14:if(typeof
a!=="number"&&1===a[0]){var
u=a[4],v=a[3];if(0===v&&0===u)return g;var
aO=0===v?u:[0,[0,1,0,l(v)],u];w[1][2]=[0,[0,0,aO]];return g}return g;case
17:C=1;break;case
19:case
20:return g;case
5:case
6:if(0!==w[1][1])throw[0,f,aw2];var
M=a9(nk,i,j,[0,a,h],2),o=M[1],aC=M[2];w[1][1]=3;if(typeof
o!=="number"&&1===o[0]){var
aD=o[4],aE=o[2],aF=o[1],aG=tP(0);return[0,[1,aF,aE,0,0],[0,[0,[0,[0,1,l(aD)],aG]],aC]]}throw[0,f,aw3]}else
switch(d[0]){case
0:w[1][5]=d[1];return g;case
1:w[1][9]=d[1];return g;case
2:w[1][8]=d[1];return g;case
3:w[1][7]=d[1];return g;case
4:w[1][12]=[0,d[1],d[2]];return g;case
5:w[1][3]=d[1];return g;case
6:var
x=d[1],$=0<=x?1:0,aR=$?x<=aQ?1:0:$;if(aR)w[1][13]=x;return g;case
7:var
aS=d[1],aT=j[3],aU=I(bs(axc),i,axb,aT),aV=I(bs(axd),i,aS,aU);I(D8,i,j[3],aV);return g;case
8:var
aW=cv(w[1][14],d[1]);w[1][14]=aW;return g;case
9:var
m=d[2],n=d[1];w[1][1]=0;if(typeof
a!=="number"&&1===a[0]){var
aa=a[4],ab=a[3];return 0===ab?[0,[1,[0,n,m],[0,n,m],0,aa],h]:[0,[1,[0,n,m],[0,n,m],0,[0,[0,1,1,l(ab)],aa]],h]}return[0,[1,[0,n,m],[0,n,m],0,0],h];case
10:var
ac=d[2],ad=d[1];if(0!==w[1][1])throw[0,f,axe];if(typeof
a!=="number"&&1===a[0])return[0,[1,a[1],[0,ad,ac],[0,[0,a[2],[0,ad,ac]],a[3]],a[4]],h];throw[0,f,axf];case
11:var
aX=d[6],aY=d[5],aZ=d[4],a0=d[3],a1=d[2],a2=d[1];if(0!==w[1][1])throw[0,f,axg];if(typeof
a!=="number"&&1===a[0]){var
ae=[0,aY,aX];return[0,[1,a[1],ae,[0,[1,a[2],[0,a2,a1],[0,a0,aZ],ae],a[3]],a[4]],h]}throw[0,f,axh];case
12:var
a3=d[4],a4=d[3],a5=d[2],a6=d[1];if(0!==w[1][1])throw[0,f,axi];if(typeof
a!=="number"&&1===a[0]){var
af=a[2],ag=[0,a4,a3];return[0,[1,a[1],ag,[0,[1,af,af,[0,a6,a5],ag],a[3]],a[4]],h]}throw[0,f,axj];case
13:var
a7=d[4],a8=d[3],a_=d[2],a$=d[1];if(0!==w[1][1])throw[0,f,axk];if(typeof
a!=="number"&&1===a[0]){var
y=[0,a8,a7];return[0,[1,a[1],y,[0,[1,a[2],[0,a$,a_],y,y],a[3]],a[4]],h]}throw[0,f,axl];case
14:var
ah=d[4],ai=d[3],p=d[2],r=d[1];return a9(bR,i,j,[0,a,h],[0,[9,r,p],[0,[10,r+ai,p],[0,[10,r+ai,p+ah],[0,[10,r,p+ah],axm]]]]);case
31:var
ba=DH(i,j[3],[4,d[1]]);w[1][11]=ba;return g;case
32:var
bb=DH(i,j[3],[4,d[1]]);w[1][11]=bb;return g;case
37:var
aj=d[1],D=0,bc=d[2],z=w[1][10];if(typeof
z==="number"){if(3===z)D=1}else
if(5===z[0])D=1;if(D)try{var
bd=[2,I(tR,i,j,aj)];w[1][6]=bd;return g}catch(a){return g}w[1][6]=[1,[0,aj,bc]];return g;case
38:var
ak=d[1],E=0,be=d[2],A=w[1][11];if(typeof
A==="number"){if(3===A)E=1}else
if(5===A[0])E=1;if(E)try{var
bf=[2,I(tR,i,j,ak)];w[1][4]=bf;return g}catch(a){return g}w[1][4]=[1,[0,ak,be]];return g;case
39:var
bg=d[1];w[1][10]=0;w[1][6]=[0,[0,bg,0]];return g;case
40:var
bh=d[1];w[1][11]=0;w[1][4]=[0,[0,bh,0]];return g;case
41:var
bi=d[3],bj=d[2],bk=d[1];w[1][10]=1;w[1][6]=[0,[0,bk,[0,bj,[0,bi,0]]]];return g;case
42:var
bl=d[3],bm=d[2],bn=d[1];w[1][11]=1;w[1][4]=[0,[0,bn,[0,bm,[0,bl,0]]]];return g;case
43:var
bo=d[4],bp=d[3],bq=d[2],br=d[1];w[1][10]=2;w[1][6]=[0,[0,br,[0,bp,[0,bq,[0,bo,0]]]]];return g;case
44:var
bt=d[4],bu=d[3],bv=d[2],bw=d[1];w[1][11]=2;w[1][4]=[0,[0,bw,[0,bu,[0,bv,[0,bt,0]]]]];return g;case
45:var
bx=d[1],by=j[3],bz=I(bs(axo),i,axn,by),bA=a9(tQ,i,au,0,I(bs(axp),i,bx,bz));return[0,a,[0,[9,w[1][2],bA,w[1][14]],h]];case
46:var
al=d[1];return[0,0,[0,[7,al[1],al[2],w[1][14]],h]];case
47:var
am=d[1],an=e(i,axq,j[3]);if(an){var
ao=an[1],ap=e(i,am,ao);if(ap){var
aq=ap[1],ar=e(i,axr,aq);if(ar){var
B=ar[1],bE=0;if(typeof
B==="number"||!(4===B[0]))bE=1;else{var
as=B[1];if(!c(as,axt))return[0,a,q(l(I(Eg,i,j,aq)),h)];if(!c(as,axu)){var
at=kK(am,ao);if(at)return[0,a,[0,[6,[0,w[1][14],w[1][19],w[1][28]],at[1]],h]];throw[0,f,axv]}}}throw[0,f,axs]}throw[0,f,axw]}throw[0,f,axx];case
48:var
av=w[1][1]-1|0,bB=d[1];if(!(2<av>>>0))switch(av){case
0:return g;case
1:break;default:return[0,0,[0,[2,bB],h]]}return g;case
49:var
aw=w[1][1]-1|0,bC=d[2],bD=d[1];if(!(2<aw>>>0))switch(aw){case
0:return g;case
1:break;default:return[0,0,[0,[3,bD,bC],h]]}return g;case
52:return g;case
33:case
35:w[1][6]=[0,d[1]];return g;case
34:case
36:w[1][4]=[0,d[1]];return g;case
50:case
51:break;default:C=1}if(C){if(typeof
a!=="number"&&0===a[0]){var
aP=a[1];return[0,[0,[0,[0,avO(0),d],aP]],h]}return g}K(axa);return g});bt(i_,function(b,d,a){if(a){var
c=a[1];if(typeof
c==="number"){if(18===c){var
e=a[2];if(0<=b)return 0===b?[0,l(d),e]:I(i_,b-1|0,[0,18,d],e);throw[0,f,axy]}}else
switch(c[0]){case
50:case
51:return I(i_,b+1|0,[0,c,d],a[2])}return I(i_,b,[0,c,d],a[2])}throw[0,f,axz]});bt(k7,function(c,b,a){if(a){var
d=a[1];if(typeof
d==="number"){if(1===d){var
e=a[2];return 0===c?[0,l(b),[0,1,e]]:I(k7,c-1|0,[0,1,b],e)}if(!d)return I(k7,c+1|0,[0,0,b],a[2])}return I(k7,c,[0,d,b],a[2])}return[0,l(b),0]});bt(bR,function(b,a,j,d){var
c=j[2],e=j[1];if(d){var
g=d[1];if(typeof
g==="number")switch(g){case
12:var
k=d[2],m=w[1][2];if(m){var
z=m[1],n=I(k7,0,0,k),A=n[2];return a9(bR,b,a,[0,0,[0,[8,z,a9(bR,b,a,axA,n[1])[2]],c]],A)}return a9(bR,b,a,[0,e,c],k);case
15:var
B=d[2],o=c0(function(a){return cS(16,a)},B),i=o[2],C=o[1];if(i){var
p=i[1],x=0;if(typeof
p==="number"&&16===p)x=1;if(!x)throw[0,f,axD]}var
D=Xr(i);w[1][1]=1;var
h=a9(bR,b,a,[0,axB,c],C)[1];if(typeof
h!=="number"&&0===h[0]){var
E=[0,w[1][14]];return a9(bR,b,a,[0,h,[0,[1,l(h[1]),E],c]],[0,16,D])}throw[0,f,axC];case
16:var
F=d[2];w[1][1]=3;return a9(bR,b,a,[0,e,c],F)}else
switch(g[0]){case
50:var
q=d[2],G=g[1];try{var
r=I(i_,0,0,q),H=r[2],s=a9(bR,b,a,[0,e,0],r[1]),J=a9(bR,b,a,[0,s[1],[0,[4,G,s[2]],c]],H);return J}catch(d){return a9(bR,b,a,[0,e,c],q)}case
51:var
t=d[2],K=g[2],L=g[1];try{var
u=I(i_,0,0,t),M=u[2],v=a9(bR,b,a,[0,e,0],u[1]),N=a9(bR,b,a,[0,v[1],[0,[5,L,K,v[2]],c]],M);return N}catch(d){return a9(bR,b,a,[0,e,c],t)}}var
y=d[2];return a9(bR,b,a,a9(nk,b,a,[0,e,c],g),y)}return[0,e,l(c)]});bt(Ef,function(d,c){var
b=e(d,axE,c[3]);if(b){var
a=b[1];if(typeof
a!=="number"&&6===a[0])return a[1]}return 0});bt(Eg,function(a,n,g){var
o=[0,aB(a,g),0],b=aB(a,n[3]),l=0;if(typeof
b!=="number"&&6===b[0]){var
h=b[1];l=1}if(!l)var
h=0;var
c=aB(a,g);if(typeof
c!=="number"&&7===c[0]){var
i=e(a,axG,c[1][1][1]),m=0;if(i){var
d=i[1],p=0;if(typeof
d!=="number"&&6===d[0]){var
j=d[1];m=1;p=1}}if(!m)var
j=0;var
k=[6,sz(h,j)];return a9(bR,a,[0,0,0,k,0,axH],axI,bo(a,k,o))[2]}throw[0,f,axF]});bt(Eh,function(b,a){k6[1]=0;w[1]=D4(0);if(e$(b))throw[0,f,axJ];var
c=a9(bR,b,a,axK,bo(b,a[3],a[1]))[2],d=a[3];return[0,c,n(Ef,b,a),d]});var
tS=[Q,axL,aL(0)];function
Ei(a){try{if(0<=a[1]&&!(xw<a[1])){if(1<=a[2]&&!(12<a[2])){if(1<=a[3]&&!(31<a[3])){if(0<=a[4]&&!(23<a[4])){if(0<=a[5]&&!(59<a[5])){if(0<=a[6]&&!(59<a[6])){if(-23<=a[7]&&!(23<a[7])){if(-59<=a[8]&&!(59<a[8])){var
b=0;return b}throw[0,B,axT]}throw[0,B,axS]}throw[0,B,axR]}throw[0,B,axQ]}throw[0,B,axP]}throw[0,B,axO]}throw[0,B,axN]}throw[0,B,axM]}catch(a){throw tS}}function
axU(a){Ei(a);if(0<=a[7])if(0<a[7])var
c=cT(a[8]),d=cT(a[7]),b=n(ae(axV),d,c);else
var
b=axX;else
var
k=cT(a[8]),l=cT(a[7]),b=n(ae(axY),l,k);var
e=a[6],f=a[5],g=a[4],h=a[3],i=a[2],j=a[1];return Gt(ae(axW),j,i,h,g,f,e,b)}function
axZ(C){function
o(a){try{var
b=aE(P(a));return b}catch(a){throw tS}}var
p=[0,0],q=[0,0],g=[0,0];function
r(b){var
f=0;if(b){var
c=b[1];if(46<=c){if(90===c){var
e=b[2],d=0;f=1}}else
if(43<=c)switch(c+vG|0){case
0:var
e=b[2],d=1;f=1;break;case
1:break;default:var
e=b[2],d=-1;f=1}}if(!f)var
e=0,d=0;var
h=a(0,e),i=h[2],j=h[1];if(i){var
k=a(0,bu(i))[1];p[1]=j;q[1]=k;g[1]=d;return 0}return 0}function
a(e,a){if(a){var
f=a[1],b=f+vG|0,d=0;if(2<b>>>0){if(47===b)d=1}else
if(1!==b)d=1;if(d){r(a);return[0,e,0]}var
c=a[2];if(c){var
g=c[2];return[0,o([0,f,[0,c[1],0]]),g]}}return[0,e,0]}var
d=aK(C),B=0;if(d&&68===d[1]){var
e=d[2];if(e&&58===e[1]){var
c=e[2];B=1}}if(!B)var
c=d;if(c){var
s=c[1],b=0;if(49===s){var
f=c[2];if(f)if(57===f[1]){var
h=f[2];if(h)if(49===h[1]){var
i=h[2];if(i)if(48===i[1]){var
j=i[2];if(j&&48===j[1]){var
u=j[2],t=OJ;b=2}else
b=1}else
b=1}else
b=1}else
b=1}else
b=1;var
n=0;switch(b){case
1:var
k=c[2];if(k){var
l=k[2];if(l){var
m=l[2];if(m){var
I=m[2],u=I,t=o([0,s,[0,k[1],[0,l[1],[0,m[1],0]]]]);n=1}}}break;case
0:break;default:n=1}if(n){var
v=a(1,u),D=v[1],w=a(1,v[2]),E=w[1],x=a(0,w[2]),F=x[1],y=a(0,x[2]),G=y[1],z=a(0,y[2]),H=z[1];r(z[2]);var
A=[0,t,D,E,F,G,H,bd(p[1],g[1]),bd(q[1],g[1])];Ei(A);return A}}throw tS}function
Ej(c,j,i){var
a=ai(c,j),b=ai(c,i);cJ(a);cJ(b);if(typeof
a!=="number"&&7===a[0]){var
d=a[1][1],e=d[2],k=d[1];if(0===e[0]){var
n=0;if(typeof
b==="number"||!(7===b[0]))n=1;else{var
g=b[1][1],h=g[2],l=e[1],m=g[1];if(0===h[0])return bY([0,k,l],[0,m,h[1]])}}}throw[0,f,ax0]}function
ax2(a,i,h,f){try{var
c=[0,gd(a)[1]],e=[0,a],k=function(b,a){var
d=z(a),v=iT(e[1],d),f=z(a),w=iT(c[1],f),g=al(function(d){var
f=d[3];if(typeof
f==="number")var
e=0;else
switch(f[0]){case
0:var
e=0;break;case
1:var
e=0;break;default:var
g=f[1],e=0===g[0]?g[1]:0}if(!at(e,w)&&0!==d[3])return 0;var
t=d[4];if(0===d[3])var
h=0;else{var
u=ei(e,v),a=d[3],c=function(a){return 0===a[0]?[0,u]:[1,a[1]]};if(typeof
a==="number")var
b=0;else
switch(a[0]){case
0:var
b=[0,a[1]];break;case
1:var
b=[1,a[1]];break;case
2:var
i=a[4],j=a[3],k=a[2],b=[2,c(a[1]),k,j,i];break;case
3:var
b=[3,c(a[1])];break;case
4:var
l=a[2],b=[4,c(a[1]),l];break;case
5:var
m=a[2],b=[5,c(a[1]),m];break;case
6:var
n=a[5],o=a[4],p=a[3],q=a[2],b=[6,c(a[1]),q,p,o,n];break;case
7:var
b=[7,c(a[1])];break;case
8:var
r=a[2],b=[8,c(a[1]),r];break;default:var
s=a[2],b=[9,c(a[1]),s]}var
h=b}return[0,[0,d[1],d[2],h,t]]},b),h=z(a);c[1]=kq(c[1],h);var
i=z(a);e[1]=kq(e[1],i);return g},l=ff(ah(bI(k,g(dF,i),h)),f);return l}catch(a){a=d(a);var
j=aR(a);b(K(ax3),j);return f}}function
Ek(a,f){var
h=e(a,ax5,f),k=0;if(h){var
b=h[1],n=0;if(typeof
b!=="number"&&5===b[0]){var
j=b[1],m=iU(z(j))?(K(ax7),0):kp(j),c=m;k=1;n=1}}if(!k)var
c=0;var
i=e(a,ax6,f);if(i){var
d=i[1];if(typeof
d!=="number"&&5===d[0]){var
l=d[1];return q(c,ah(g(function(b){return Ek(a,b)},l)))}}return c}function
ax8(b,a){var
c=Ek(b,a);try{var
e=g(function(b){var
a=b[1];if(typeof
a!=="number"&&3===a[0])return[0,a[1],b[2]];throw aH},c);return e}catch(a){a=d(a);if(a===aH){K(ax9);return 0}throw a}}function
El(a){return aM(a)[1]}function
Em(a){return gh(a)[1]}function
En(a){if(0===z(a))throw[0,B,ax_];if(z(a)<=10){var
b=Em(a);return[1,El(a),a,b]}var
c=Em(a),d=g(En,ks(z(a)/10|0,a));return[0,El(a),d,c]}function
Eo(c,b,a){if(0===a[0]){var
d=a[3],e=a[2],f=a[1],h=0,i=g(function(a){return Eo(h,b,a)},e),j=g(function(a){return am(b,a)},i),k=[0,[0,ax$,[5,[0,[3,f],[0,[3,d],0]]]],0];return[6,[0,[0,aya,[5,g(function(a){return[8,a]},j)]],k]]}var
l=a[3],m=a[2],n=a[1],o=c?0:[0,[0,ayc,[5,[0,[3,n],[0,[3,l],0]]]],0],p=0;return[6,q([0,[0,ayb,[5,ah(g(function(a){return[0,[3,a[1]],[0,a[2],0]]},m))]],p],o)]}function
Eq(d,c,a){return ah(al(function(f){var
b=e(d,c,f);if(b){var
a=b[1];if(typeof
a!=="number"&&5===a[0])return[0,a[1]]}return 0},a))}function
hz(aq,ap,G,ao,k){var
w=aV(0,20);cr(function(a,b){return gb(w,a,b)},G,ao);var
o=[0,0],p=[0,0];cb(function(b,a){o[1]=[0,b,o[1]];p[1]=[0,a,p[1]];return 0},w);var
y=p[1],U=o[1],m=[0,1],u=[0,0],P=g(mV,y);x(function(b){var
a=z(b),c=aV(0,a),d=L(m[1],(m[1]+a|0)-1|0);cr(function(a,b){return aO(c,a,b)},b,d);Y(u,c);return dd(m,a)},P);var
V=a7(U,bI(hu,l(u[1]),y)),c=g(function(a){return ei(a,V)},G),ar=bk(cs,0,g(function(a){return a[2]},c)),as=g(aw,c),H=bm(0),at=ah(bI(function(c,b){var
a=[0,0];x(function(c){return Y(a,b2(c,b))},c);return l(a[1])},k,as));function
au(b,a){bB(H,[0,b,a]);return 0}x(function(a){return cy(au,a)},c);var
I=k1(at,H),a=I[1],av=I[2],ax=aq?Dp(c,k):0,v=al(function(b){var
c=e(b,ax4,dD(b));if(c){var
a=c[1];if(typeof
a!=="number"&&6===a[0])return[0,a[1]]}return 0},c),J=0===v?0:[0,am(a,[6,ah(v)])],W=a7(Ep,g(function(d){return al(function(a){var
b=e(a,aye,dD(a));return b?e(a,d,b[1]):0},c)},Ep)),X=b(cZ(function(a){return a[2]?0:1}),W),C=g(function(c){var
e=c[2],f=c[1],b=ah(g(function(b){return ax8(a,b)},e)),d=b?Eo(1,a,En(db(bY,b))):ayd;return[0,f,d]},X),D=[0,0];x(function(b){return Y(D,am(a,b[2]))},C);var
Z=l(D[1]),$=am(a,[6,bI(function(b,a){return[0,b[1],[8,a]]},C,Z)]),aa=ah(g(function(b){var
a=dD(b);if(typeof
a!=="number"&&6===a[0])return a[1];return _(ayf)},c)),ab=0,K=cc(ayw,[8,$],bk(function(b,a){return cc(a[1],a[2],b)},ab,aa)),M=J?cc(ayx,[8,J[1]],K):K,j=al(function(a){return e(a,ayl,dD(a))},c);if(0===j)var
s=0;else
var
ai=Eq(a,aym,j),E=Eq(a,ayn,j),F=al(function(b){return e(a,ayo,b)},j),i=function(b){var
c=al(function(c){return e(a,b,c)},F);if(c){var
d=0;return[0,[0,b,[5,ah(al(function(a){if(typeof
a!=="number"&&5===a[0])return[0,a[1]];return 0},c))]],d]}return 0},ac=i(ayg),ad=i(ayh),ae=i(ayi),af=i(ayj),ag=q(ac,q(ad,q(ae,q(af,ah(g(function(b){var
c=al(function(c){return e(a,b,c)},F);return c?[0,[0,b,c[1]],0]:0},ayk)))))),aj=0===E?0:[0,[0,ayr,[5,E]],0],s=[0,am(a,[6,q([0,[0,ayq,[5,ai]],[0,[0,ayp,[6,ag]],0]],aj)])];var
N=s?cc(ayy,[8,s[1]],M):M,r=al(function(a){return e(a,ays,dD(a))},c);if(0===r)var
t=0;else
var
ak=ah(g(function(d){var
c=e(a,ayt,d);if(c){var
b=c[1];if(typeof
b!=="number"&&5===b[0])return b[1]}return 0},r)),an=ah(g(function(a){if(typeof
a!=="number"&&6===a[0])return a[1];return 0},r)),t=[0,am(a,A(bk(function(b,a){return A(b,a[1],a[2])},ayu,an),ayv,[5,ak]))];var
ay=t?cc(ayz,[8,t[1]],N):N,f=i7(av,ay,a);function
az(c,b){var
a=[0,0];x(function(c){return Y(a,b2(c,b))},c);return l(a[1])}var
aA=ah(bI(az,k,g(bL,c))),O=a7(aA,bL(f)),aB=bJ(O);el(function(a){return e_(f,aB,a)},f);var
d=ax2(O,c,k,[0,1,ar,f[3],f[4],f[5],f[6],f[7]]);nb(d,ax);if(ap){var
n=[0,0];cy(function(b,a){if(typeof
a!=="number"&&7===a[0]){n[1]=[0,b,n[1]];return 0}return 0},d);var
Q=n[1],R=db(function(a,b){return Ej(d,a,b)},Q),S=kr(function(a,b){return Ej(d,a,b)},R),h=[0,d],T=b(b0(function(a){return 1<z(a)?1:0}),S);x(function(a){if(a){var
c=a[2],d=a[1],b=aV(0,aQ);x(function(a){return aO(b,a,d)},c);h[1]=hu(b,h[1]);return 0}throw[0,B,ax1]},T);d[3]=h[1][3];d[4]=h[1][4];d[5]=h[1][5]}sT(d,ayA);return d}var
ayC=[Q,ayB,aL(0)];function
k8(a){throw[0,ayC,a]}var
tT=[Q,ayD,aL(0)],tU=[Q,ayE,aL(0)],tV=[Q,ayF,aL(0)],tW=[Q,ayG,aL(0)];function
Er(b,a){function
c(b,a){return 0===(a>>>b|0)?1:0}if(c(7,a))return s(b,br(a));if(c(11,a)){s(b,br(c3|(a>>>6|0)&31));return s(b,br(N|a&63))}if(c(16,a)){s(b,br(dT|(a>>>12|0)&15));s(b,br(N|(a>>>6|0)&63));return s(b,br(N|a&63))}if(c(21,a)){s(b,br(d$|(a>>>18|0)&7));s(b,br(N|(a>>>12|0)&63));s(b,br(N|(a>>>6|0)&63));return s(b,br(N|a&63))}if(c(26,a)){s(b,br(Q|(a>>>24|0)&3));s(b,br(N|(a>>>18|0)&63));s(b,br(N|(a>>>12|0)&63));s(b,br(N|(a>>>6|0)&63));return s(b,br(N|a&63))}if(c(31,a)){s(b,br(dM|(a>>>30|0)&1));s(b,br(N|(a>>>24|0)&63));s(b,br(N|(a>>>18|0)&63));s(b,br(N|(a>>>12|0)&63));s(b,br(N|(a>>>6|0)&63));return s(b,br(N|a&63))}throw[0,B,ayH]}function
Es(b,c,a,f){var
d=a?a[1]:1,e=b?b[1]:aN(ak);return[0,e,d,0,c]}var
ayJ=[0,function(a){throw[0,B,ayI]}];ayJ[1]=function(a){var
c=zP;for(;;){var
d=bZ(ayK,c,a);if(0===d)return hi(a);b(a[1],a);var
c=d;continue}};function
Et(a){var
b=10<=a?a+87|0:a+48|0;return br(b)}function
hA(e,a,c,b,d){iM(b,e,a[1],c-a[1]|0);bj(b,d);a[1]=c+1|0;return 0}function
ayM(b,a,c){try{var
g=iM(c,b,a[1],m(b)-a[1]|0);return g}catch(c){c=d(c);var
e=m(b)-a[1]|0,f=a[1];I(K(ayN),b,f,e);throw c}}function
gr(a,d){s(a,34);var
c=[0,0],g=m(d)-1|0,i=0;if(!(g<0)){var
b=i;for(;;){var
e=F(d,b);if(92===e)hA(d,c,b,a,ayO);else{var
f=0;if(35<=e)if(dL===e)f=1;else
f=2;else
if(8<=e){var
h=0;switch(e-8|0){case
0:hA(d,c,b,a,ayP);break;case
1:hA(d,c,b,a,ayQ);break;case
2:hA(d,c,b,a,ayR);break;case
4:hA(d,c,b,a,ayS);break;case
5:hA(d,c,b,a,ayT);break;case
26:hA(d,c,b,a,ayU);break;case
24:case
25:f=2;h=1;break;default:f=1;h=1}}else
f=1;switch(f){case
2:break;case
1:iM(a,d,c[1],b-c[1]|0);bj(a,ayL);s(a,Et(e>>>4|0));s(a,Et(e&15));c[1]=b+1|0;break}}var
j=b+1|0;if(g!==b){var
b=j;continue}break}}ayM(d,c,a);return s(a,34)}function
nl(b){var
a=aN(10);gr(a,b);return az(a)}function
Eu(a,b){return bj(a,ayV)}function
Ev(b,a){var
c=a?ayW:ayX;return bj(b,c)}function
tX(b,a){return 0===a?0:(tX(b,a/10|0),s(b,br(cT(a%10|0)+48|0)))}function
Ew(b,a){return 0<a?tX(b,a):0<=a?s(b,48):(s(b,45),tX(b,a))}function
Ex(e){try{var
f=m(e)-1|0,g=0;if(!(f<0)){var
a=g;for(;;){var
b=F(e,a),c=0;if(48<=b){if(!(58<=b))c=1}else
if(45===b)c=1;if(!c)throw aH;var
i=a+1|0;if(f!==a){var
a=i;continue}break}}var
h=1;return h}catch(a){a=d(a);if(a===aH)return 0;throw a}}function
Ey(c,a){var
d=ry(a);if(3===d){var
h=0.<a?ayY:ayZ;return bj(c,h)}if(4<=d)return bj(c,ay0);var
e=b(ae(ay1),a),f=iB(e)==a?e:b(ae(ay3),a);bj(c,f);var
g=Ex(f);return g?bj(c,ay2):g}function
Ez(c,a){var
d=ry(a);if(3===d){var
h=0.<a?ay4:ay5;return k8(h)}if(4<=d)return k8(ay6);var
e=b(ae(ay7),a),f=iB(e)==a?e:b(ae(ay9),a);bj(c,f);var
g=Ex(f);return g?bj(c,ay8):g}function
i$(e,h,d,c){if(c){var
i=c[2];n(e,d,c[1]);var
a=i;for(;;){if(a){var
f=a[2],g=a[1];b(h,d);n(e,d,g);var
a=f;continue}return 0}}return 0}function
ja(a){return s(a,44)}function
k9(a,b){if(typeof
b==="number")return Eu(a,0);var
c=b[1];if(js<=c){if(jt===c){var
f=b[2];s(a,40);i$(k9,ja,a,f);return s(a,41)}if(y<=c){if(b4<=c){var
g=b[2],j=function(a,b){var
c=b[2];gr(a,b[1]);s(a,58);return k9(a,c)};s(a,dt);i$(j,ja,a,g);return s(a,c5)}var
h=b[2];s(a,91);i$(k9,ja,a,h);return s(a,93)}if(eb<=c)return Ev(a,b[2]);var
d=b[2],e=d[2],i=d[1];s(a,60);gr(a,i);if(e){var
k=e[1];s(a,58);k9(a,k)}return s(a,62)}return b6<=c?dQ<=c?Ey(a,b[2]):Ew(a,b[2]):jA<=c?bj(a,b[2]):gr(a,b[2])}function
k_(a,b){if(typeof
b==="number")return Eu(a,0);var
c=b[1];if(js<=c){if(jt===c){var
g=b[2];s(a,91);i$(k_,ja,a,g);return s(a,93)}if(y<=c){if(b4<=c){var
h=b[2],j=function(a,b){var
c=b[2];gr(a,b[1]);s(a,58);return k_(a,c)};s(a,dt);i$(j,ja,a,h);return s(a,c5)}var
i=b[2];s(a,91);i$(k_,ja,a,i);return s(a,93)}if(eb<=c)return Ev(a,b[2]);var
d=b[2],e=d[2],f=d[1];if(e){var
k=e[1];s(a,91);gr(a,f);s(a,44);k_(a,k);return s(a,93)}return gr(a,f)}return b6<=c?dQ<=c?Ez(a,b[2]):Ew(a,b[2]):jA<=c?bj(a,b[2]):gr(a,b[2])}function
EA(f,e,d,c,b){var
i=e?e[1]:ak,j=d?d[1]:ay_;if(f){var
g=f[1];ck(g);var
a=g}else
var
a=aN(i);var
h=c?c[1]:0;if(h)k_(a,b);else
k9(a,b);bj(a,j);var
k=az(a);ck(a);return k}function
nm(g,d,b,f){var
a=f;for(;;){if(a){var
c=a[1];if(a[2]){var
e=a[2];n(d,b,c);n(U(b),ay$,g);var
a=e;continue}return n(d,b,c)}return 0}}function
jb(h,e,c,H){var
d=H;for(;;){if(typeof
d==="number")return cX(c,aza);var
f=d[1];if(js<=f){if(jt===f){var
q=d[2];if(e){var
d=[0,y,q];continue}if(0===q)return cX(c,azb);if(1-h)b(U(c),azc);var
J=0,K=function(a,b){return jb(J,e,a,b)},L=function(a,b){return nm(azd,K,a,b)};I(U(c),aze,L,q);var
t=1-h;return t?b(U(c),azf):t}if(y<=f){if(b4<=f){var
v=d[2];if(v){if(1-h)b(U(c),azg);var
M=function(h,a){var
b=a[2],c=a[1],d=1;function
f(a,b){return jb(d,e,a,b)}var
g=nl(c);return a9(U(h),azu,g,f,b)},N=function(a,b){return nm(azh,M,a,b)};I(U(c),azi,N,v);var
w=1-h;return w?b(U(c),azj):w}return cX(c,azk)}var
m=d[2];if(m){if(1-h)b(U(c),azl);var
l=m;for(;;){if(l){var
g=l[1],F=0,G=l[2];if(typeof
g!=="number"){var
i=g[1],j=0;if(eb<=i){if(y===i){if(!g[2])j=1}else
if(!(b4<=i)||!g[2])j=1}else
if(js===i){if(!g[2][2])j=1}else
if(!(jt<=i)||!g[2])j=1;if(!j){var
p=0;F=1}}if(!F)var
p=1;if(p){var
l=G;continue}var
x=p}else
var
x=1;if(x){var
O=0,P=function(a,b){return jb(O,e,a,b)},Q=function(a,b){return nm(azm,P,a,b)};I(U(c),azn,Q,m)}else{var
R=0,S=function(a,b){return jb(R,e,a,b)},T=function(a,b){return nm(azp,S,a,b)};I(U(c),azq,T,m)}var
z=1-h;return z?b(U(c),azo):z}}return cX(c,azr)}if(eb<=f)return cX(c,rQ(d[2]));var
A=d[2],B=A[2],o=A[1];if(B){var
C=B[1];if(e){var
d=[0,y,[0,[0,u,o],[0,C,0]]];continue}var
V=nl(o),W=1,X=function(a,b){return jb(W,e,a,b)};return a9(U(c),azs,V,X,C)}if(e){var
d=[0,u,o];continue}var
Y=nl(o);return n(U(c),azt,Y)}if(b6<=f){if(dQ<=f){var
D=d[2];if(e){var
s=aN(20);Ez(s,D);var
E=az(s)}else{var
r=aN(20);Ey(r,D);var
E=az(r)}return cX(c,E)}return cX(c,a(k+d[2]))}return jA<=f?cX(c,d[2]):cX(c,nl(d[2]))}}function
EB(a,c,b){var
d=a?a[1]:0,e=1;function
f(a,b){return jb(e,d,a,b)}return I(U(c),azv,f,b)}function
k$(a,c){if(typeof
c==="number")return cX(a,azy);var
d=c[1];if(js<=d){if(jt===d){var
g=c[2];b(U(a),azz);b(U(a),azA);var
h=0;hh(function(d,c){if(d)b(U(a),azB);k$(a,c);return 1},h,g);b(U(a),azC);return b(U(a),azD)}if(y<=d){if(b4<=d){var
i=c[2];b(U(a),azE);b(U(a),azF);var
j=0;hh(function(d,c){var
e=c[2],f=c[1];if(d)b(U(a),azG);b(U(a),azH);n(U(a),azI,f);b(U(a),azJ);k$(a,e);b(U(a),azK);return 1},j,i);b(U(a),azL);return b(U(a),azM)}var
k=c[2];b(U(a),azN);b(U(a),azO);var
l=0;hh(function(d,c){if(d)b(U(a),azP);k$(a,c);return 1},l,k);b(U(a),azQ);return b(U(a),azR)}if(eb<=d){var
m=c[2];b(U(a),azS);n(U(a),azT,m);return b(U(a),azU)}var
e=c[2],f=e[2],o=e[1];b(U(a),azV);b(U(a),azW);n(U(a),azX,o);b(U(a),azY);if(f){var
p=f[1];cX(a,azZ);k$(a,p);cX(a,az0)}else
cX(a,az3);b(U(a),az1);return b(U(a),az2)}if(b6<=d){if(dQ<=d){var
q=c[2];b(U(a),az4);n(U(a),az5,q);return b(U(a),az6)}var
r=c[2];b(U(a),az7);n(U(a),az8,r);return b(U(a),az9)}if(jA<=d){var
s=c[2];b(U(a),az_);n(U(a),az$,s);return b(U(a),aAa)}var
t=c[2];b(U(a),aAb);n(U(a),aAc,t);return b(U(a),aAd)}function
EC(a){return n(BH(aAe),k$,a)}function
ED(c,b){function
a(a,b){return EB(c,a,b)}return n(BH(azw),a,b)}function
gs(a){if(65<=a){if(97<=a){if(!(c8<=a))return(a-97|0)+10|0}else
if(!(71<=a))return(a-65|0)+10|0}else
if(!(9<a+fA>>>0))return a-48|0;throw[0,B,aAf]}function
dI(k,d,c){var
e=c[4]-1|0,f=d[3],a=((e+c[5]|0)-f|0)-1|0,g=(e+c[6]|0)-f|0,h=a8e(a,g)?a:g,i=d[4];if(i)var
l=i[1],j=b(ae(aAg),l);else
var
j=aAk;var
m=a===h?b(ae(aAh),a+1|0):n(ae(aAj),a+1|0,h+1|0),o=d[2];return k8(a9(ae(aAi),j,o,m,k))}var
EE=[0,function(a){throw[0,B,aAl]}];function
di(d,c,a){var
e=hi(a),f=b(EE[1],a);return dI(I(ae(aAm),d,e,f),c,a)}var
jc=[Q,aAn,aL(0)];function
aAo(c){var
d=c[5],a=[0,0],e=c[6]-1|0,f=c[2];if(!(e<d)){var
b=d;for(;;){if(214748365<=a[1])throw jc;var
g=eU(f,b)+fA|0;a[1]=(10*a[1]|0)+g|0;var
h=b+1|0;if(e!==b){var
b=h;continue}break}}if(0<=a[1])return a[1];throw jc}function
aAp(c){var
d=c[5]+1|0,a=[0,0],e=c[6]-1|0,f=c[2];if(!(e<d)){var
b=d;for(;;){if(a[1]<=-214748365)throw jc;var
g=eU(f,b)+fA|0;a[1]=(10*a[1]|0)-g|0;var
h=b+1|0;if(e!==b){var
b=h;continue}break}}if(0<a[1])throw jc;return a[1]}function
nn(a,b){a[2]=a[2]+1|0;a[3]=b[4]+b[6]|0;return 0}function
EI(d,a){var
e=w8;for(;;){var
c=bZ(cf,e,a);if(2<c>>>0){b(a[1],a);var
e=c;continue}switch(c){case
0:return 0;case
1:return di(aAU,d,a);default:return dI(aAV,d,a)}}}function
aAw(d,a){var
e=u3;for(;;){var
c=bZ(cf,e,a);if(3<c>>>0){b(a[1],a);var
e=c;continue}switch(c){case
0:return 0;case
1:throw tU;case
2:return di(aAS,d,a);default:return dI(aAT,d,a)}}}function
aAv(a){var
d=pg;for(;;){var
c=bZ(cf,d,a);if(0===c)throw tU;if(1===c)return 0;b(a[1],a);var
d=c;continue}}function
aAu(d,a){var
e=zQ;for(;;){var
c=bZ(cf,e,a);if(3<c>>>0){b(a[1],a);var
e=c;continue}switch(c){case
0:return 0;case
1:throw tV;case
2:return di(aAQ,d,a);default:return dI(aAR,d,a)}}}function
aAt(a){var
d=uB;for(;;){var
c=bZ(cf,d,a);if(0===c)throw tV;if(1===c)return 0;b(a[1],a);var
d=c;continue}}function
aAs(d,a){var
e=is;for(;;){var
c=bZ(cf,e,a);if(3<c>>>0){b(a[1],a);var
e=c;continue}switch(c){case
0:return 0;case
1:throw tT;case
2:return di(aAO,d,a);default:return dI(aAP,d,a)}}}function
aAr(a){var
d=aq;for(;;){var
c=bZ(cf,d,a);if(0===c)throw tT;if(1===c)return 0;b(a[1],a);var
d=c;continue}}function
EF(c,a){a:for(;;){var
i=58;for(;;){var
e=bZ(cf,i,a);if(3<e>>>0){b(a[1],a);var
i=e;continue}switch(e){case
0:return az(c[1]);case
1:var
j=68;for(;;){var
f=bZ(cf,j,a);if(8<f>>>0){b(a[1],a);var
j=f;continue}switch(f){case
0:var
q=e1(a,a[5]);s(c[1],q);break;case
1:s(c[1],8);break;case
2:s(c[1],12);break;case
3:s(c[1],10);break;case
4:s(c[1],13);break;case
5:s(c[1],9);break;case
6:var
r=e1(a,a[5]+1|0),t=e1(a,a[5]+2|0),u=e1(a,a[5]+3|0),v=gs(e1(a,a[5]+4|0)),w=gs(u)<<4,x=gs(t)<<8,d=gs(r)<<12|x|w|v,l=0;if(jC<=d&&!(vX<d)){var
k=82;for(;;){var
g=bZ(cf,k,a);if(2<g>>>0){b(a[1],a);var
k=g;continue}switch(g){case
0:var
y=e1(a,a[5]+2|0),z=e1(a,a[5]+3|0),A=e1(a,a[5]+4|0),B=gs(e1(a,a[5]+5|0)),C=gs(A)<<4,D=gs(z)<<8,h=gs(y)<<12|D|C|B,m=0;if(u1<=h&&!(lu<h))Er(c[1],jQ+((d-55296|0)<<10|h-56320|0)|0);else
m=1;if(m)di(aAE,c,a);break;case
1:di(aAF,c,a);break;default:dI(aAG,c,a)}break}}else
l=1;if(l)Er(c[1],d);break;case
7:di(aAC,c,a);break;default:dI(aAD,c,a)}continue a}case
2:var
p=c[1],n=a[6]-a[5]|0,o=a[5];iM(p,bi(a[2]),o,n);continue a;default:return dI(aAB,c,a)}}}}function
tY(c,a){var
e=fK;for(;;){var
d=bZ(cf,e,a);if(3<d>>>0){b(a[1],a);var
e=d;continue}switch(d){case
0:ck(c[1]);return EF(c,a);case
1:var
f=a[5];return iH(a[2],f,a[6]-f|0);case
2:return di(aAM,c,a);default:return dI(aAN,c,a)}}}function
EG(d,a){a:for(;;){var
e=c5;for(;;){var
c=bZ(cf,e,a);if(3<c>>>0){b(a[1],a);var
e=c;continue}switch(c){case
0:return 0;case
1:return di(aAL,d,a);case
2:nn(d,a);continue a;default:continue a}}}}function
cg(c,a){a:for(;;){var
e=jR;for(;;){var
d=bZ(cf,e,a);if(4<d>>>0){b(a[1],a);var
e=d;continue}switch(d){case
0:nn(c,a);continue a;case
1:EG(c,a);continue a;case
2:nn(c,a);continue a;case
3:continue a;default:return 0}}}}function
fj(d,b,a){var
c=0;return d<50?Gs(d+1|0,b,a,c):X(Gs,[0,b,a,c])}function
Gs(e,c,a,n){var
j=n;for(;;){var
i=bZ(cf,j,a);if(19<i>>>0){b(a[1],a);var
j=i;continue}switch(i){case
0:return aAx;case
1:return aAy;case
2:return wx;case
3:return[0,dQ,Qx];case
4:return[0,dQ,Qt];case
5:return[0,dQ,Qv];case
6:ck(c[1]);return[0,u,EF(c,a)];case
7:try{var
k=[0,b6,aAo(a)];return k}catch(b){b=d(b);if(b===jc)return[0,jA,hi(a)];throw b}case
8:try{var
m=[0,b6,aAp(a)];return m}catch(b){b=d(b);if(b===jc)return[0,jA,hi(a)];throw b}case
9:return[0,dQ,iB(hi(a))];case
10:var
f=[0,0];try{cg(c,a);aAv(a);var
o=tY(c,a);cg(c,a);EI(c,a);cg(c,a);var
p=f[1];f[1]=[0,[0,o,gt(c,a)],p];for(;;){cg(c,a);aAw(c,a);cg(c,a);var
q=tY(c,a);cg(c,a);EI(c,a);cg(c,a);var
r=f[1];f[1]=[0,[0,q,gt(c,a)],r];continue}}catch(a){a=d(a);if(a===tU)return[0,b4,l(f[1])];throw a}case
11:var
g=[0,0];try{cg(c,a);aAr(a);var
s=g[1];g[1]=[0,gt(c,a),s];for(;;){cg(c,a);aAs(c,a);cg(c,a);var
t=g[1];g[1]=[0,gt(c,a),t];continue}}catch(a){a=d(a);if(a===tT)return[0,y,l(g[1])];throw a}case
12:var
h=[0,0];try{cg(c,a);aAt(a);var
v=h[1];h[1]=[0,gt(c,a),v];for(;;){cg(c,a);aAu(c,a);cg(c,a);var
w=h[1];h[1]=[0,gt(c,a),w];continue}}catch(a){a=d(a);if(a===tV)return[0,jt,l(h[1])];throw a}case
13:cg(c,a);var
x=tY(c,a);cg(c,a);return[0,js,[0,x,aAq(c,a)]];case
14:return e<50?fj(e+1|0,c,a):X(fj,[0,c,a]);case
15:EG(c,a);return e<50?fj(e+1|0,c,a):X(fj,[0,c,a]);case
16:nn(c,a);return e<50?fj(e+1|0,c,a):X(fj,[0,c,a]);case
17:return e<50?fj(e+1|0,c,a):X(fj,[0,c,a]);case
18:return dI(aAz,c,a);default:return di(aAA,c,a)}}}function
aAq(c,a){var
f=bE;for(;;){var
d=bZ(cf,f,a);if(3<d>>>0){b(a[1],a);var
f=d;continue}switch(d){case
0:var
h=gt(c,a);cg(c,a);var
g=dq;for(;;){var
e=bZ(cf,g,a);if(2<e>>>0){b(a[1],a);var
g=e;continue}switch(e){case
0:break;case
1:di(aAJ,c,a);break;default:dI(aAK,c,a)}return[0,h]}case
1:return 0;case
2:return di(aAH,c,a);default:return dI(aAI,c,a)}}}function
gt(a,b){return kb(fj(0,a,b))}function
EH(a){var
d=ju;for(;;){var
c=bZ(cf,d,a);if(0===c)return 1;if(1===c)return 0;b(a[1],a);var
d=c;continue}}EE[1]=function(a){var
c=zP;for(;;){var
d=bZ(cf,c,a);if(0===d)return hi(a);b(a[1],a);var
c=d;continue}};function
EJ(b,c,a){var
d=c?c[1]:0;cg(b,a);if(EH(a))throw tW;var
e=gt(b,a);if(1-d){cg(b,a);if(1-EH(a))di(aAW,b,a)}return e}function
jd(e,c,b,a){try{var
f=Rj(0,a),g=EJ(Es(e,c,b,0),0,f);return g}catch(a){a=d(a);if(a===tW)return k8(aAX);throw a}}function
EK(e,c,b,a){try{var
f=Ri(0,a),g=EJ(Es(e,c,b,0),0,f);return g}catch(a){a=d(a);if(a===tW)return k8(aAY);throw a}}var
aA0=[0,function(a){throw[0,B,aAZ]}];aA0[1]=function(a){var
c=zP;for(;;){var
d=bZ(aA1,c,a);if(0===d)return hi(a);b(a[1],a);var
c=d;continue}};var
cK=[Q,aA2,aL(0)],aA4=aA3.slice();function
la(c){var
a=b(c,0),f=p(aA4,a)[1+a];if(4<f>>>0)throw[0,B,aA5];switch(f){case
0:throw cK;case
1:return a;case
2:var
g=b(c,0);if(2===(g>>>6|0))return(a&31)<<6|g&63;throw cK;case
3:var
d=b(c,0),h=b(c,0);if(2===(h>>>6|0)){if(dT===a){var
k=0;if(!(ip<=d)||ds<d)k=1;if(k)throw cK}else
if(fK===a){var
l=0;if(!(N<=d)||jO<d)l=1;if(l)throw cK}else
if(2!==(d>>>6|0))throw cK;return(a&15)<<12|(d&63)<<6|h&63}throw cK;default:var
e=b(c,0),i=b(c,0),j=b(c,0);if(2===(j>>>6|0)&&2===(i>>>6|0)){if(d$===a){var
m=0;if(!(jn<=e)||ds<e)m=1;if(m)throw cK}else
if(fR===a){var
n=0;if(!(N<=e)||hV<e)n=1;if(n)throw cK}else
if(2!==(e>>>6|0))throw cK;return(a&7)<<18|(e&63)<<12|(i&63)<<6|j&63}throw cK}}function
aA6(a){var
c=b(a,0);return c<<8|b(a,0)}function
aA7(a){var
c=b(a,0);return b(a,0)<<8|c}function
EL(d,c){var
a=b(d,c);if(jC<=a&&!(lu<a)){if(vX<a)throw cK;return((a&lx)<<10|b(d,c)&lx)+jQ|0}return a}function
no(a){return EL(aA6,a)}function
np(a){return EL(aA7,a)}function
aA8(a){return b(a,0)}function
EM(a){return b(a,0)}function
EN(c){var
a=b(c,0);if(dL<a)throw cK;return a}function
E7(e,c){var
a=[0,-1],f=m(c);function
g(b){a[1]++;if(a[1]===f)throw aH;return F(c,a[1])}try{for(;;){b(e,la(g));continue}}catch(a){a=d(a);if(a===aH)return 0;throw a}}function
aB3(a){return a}function
t4(c,b,a){return n(c,b,a)}var
E8=[Q,aB4,aL(0)];function
aB5(c,a){try{var
b=function(a){return s(c,br(a))},e=dL<a?xT<a?o5<a?(b(d$|a>>>18|0),b(N|(a>>>12|0)&63),b(N|(a>>>6|0)&63),b(N|a&63)):(b(dT|a>>>12|0),b(N|(a>>>6|0)&63),b(N|a&63)):(b(c3|a>>>6|0),b(N|a&63)):b(a);return e}catch(a){a=d(a);if(a[1]===$)throw E8;throw a}}var
aB6=[0,E8,aN,aB5,function(a){return ck(a)},az,Rz],nq=function(h){function
c(b,a){return 0===bY(b,a)?1:0}function
q(a){return 0===bY(a,cL)?1:0}function
D(c){var
a=b(h[2],4);n(h[3],a,c);return b(h[5],a)}function
k(b,a){return P2(10,aQ,0,a)&(b[2].length-1-1|0)}function
ao(a,c,e){var
b=k(a,c),f=[0,c,e,p(a[2],b)[1+b]];p(a[2],b)[1+b]=f;a[1]=a[1]+1|0;var
d=a[2].length-1<<1<a[1]?1:0;return d?mB(k,a):d}function
a5(b,g){var
d=k(b,g),e=0,a=p(b[2],d)[1+d];for(;;){if(a){var
f=a[3];if(c(a[1],g)){b[1]=b[1]-1|0;return e?(e[3]=f,0):(p(b[2],d)[1+d]=f,0)}var
e=a,a=f;continue}return 0}}function
a6(g,b){var
h=k(g,b),d=p(g[2],h)[1+h];if(d){var
e=d[3],l=d[2];if(c(b,d[1]))return l;if(e){var
f=e[3],m=e[2];if(c(b,e[1]))return m;if(f){var
n=f[2],o=f[3];if(c(b,f[1]))return n;var
a=o;for(;;){if(a){var
i=a[2],j=a[3];if(c(b,a[1]))return i;var
a=j;continue}throw J}}throw J}throw J}throw J}function
a7(g,b){var
h=k(g,b),d=p(g[2],h)[1+h];if(d){var
e=d[3],l=d[2];if(c(b,d[1]))return[0,l];if(e){var
f=e[3],m=e[2];if(c(b,e[1]))return[0,m];if(f){var
n=f[2],o=f[3];if(c(b,f[1]))return[0,n];var
a=o;for(;;){if(a){var
i=a[2],j=a[3];if(c(b,a[1]))return[0,i];var
a=j;continue}return 0}}return 0}return 0}return 0}function
a8(a,b){function
d(f){var
a=f;for(;;){if(a){var
e=a[3],g=a[2];if(c(a[1],b))return[0,g,d(e)];var
a=e;continue}return 0}}var
e=k(a,b);return d(p(a[2],e)[1+e])}function
ap(a,d,g){var
e=k(a,d),h=p(a[2],e)[1+e],b=h;for(;;){if(b){var
l=b[3];if(!c(b[1],d)){var
b=l;continue}b[1]=d;b[2]=g;var
f=0}else
var
f=1;if(f){p(a[2],e)[1+e]=[0,d,g,h];a[1]=a[1]+1|0;var
i=a[2].length-1<<1<a[1]?1:0;if(i)return mB(k,a);var
j=i}else
var
j=f;return j}}function
a9(d,b){var
f=k(d,b),a=p(d[2],f)[1+f];for(;;){if(a){var
g=a[3],e=c(a[1],b);if(e)return e;var
a=g;continue}return 0}}function
a_(b,a){return AX(function(a){return ao(b,a[1],a[2])},a)}function
at(b,a){return AX(function(a){return ap(b,a[1],a[2])},a)}function
au(a){return aV(Un,a)}var
g=[0,au,sb,Ue,Bo,ao,a5,a6,a7,a8,ap,a9,cb,Ui,Uj,Ug,Uk,sc,Ul,Um,a_,at,function(b){var
a=au(16);at(a,b);return a}],av=10,a$=13,aw=32,ax=34,ba=35,bb=38,ay=39,Y=45,az=47,bc=58,aA=59,A=60,Z=61,w=62,aB=63,O=33,be=91,$=93,bf=bV,bg=n6,bh=57,bi=70,bj=68;function
aa(a){var
b=a[2],c=a[1];return q(c)?b:o(c,o(aA9,b))}var
aC=[Q,aA_,aL(0)];function
bk(a){function
b(c,b,a){return o(c,o(b,a))}if(typeof
a==="number")return hI<=a?ys<=a?aA$:aBa:fZ<=a?aBb:aBc;var
c=a[1];if(GG<=c)return yf<=c?hP<=c?b(aBe,a[2],aBd):b(aBg,a[2],aBf):Ph<=c?b(aBi,a[2],aBh):b(aBk,a[2],aBj);if(va<=c){var
d=a[2],e=d[2],f=d[1],g=hh(function(c,a){return o(c,b(aBm,a,aBl))},cL,f);return o(aBp,o(g,b(aBo,e,aBn)))}return b(aBr,a[2],aBq)}function
e(a,b){throw[0,aC,[0,a[9],a[10]],b]}function
ab(b,a){return e(b,[0,hP,D(a)])}function
y(c,b,a){return e(c,[0,va,[0,b,a]])}function
C(a,b){var
c=D(a[7]);return e(a,[0,va,[0,eY(D,b),c]])}var
aE=[0,gM,cL],ac=NF,aD=PJ;function
bl(k,j,i,f,a){var
q=k?k[1]:0,l=j?j[1]:0,r=i?i[1]:function(a){return 0},s=f?f[1]:function(a){return 0},n=a[1];if(3507231===n)var
d=a[2];else
if(GX<=n)var
u=a[2],d=function(a){return rI(u)};else
var
o=a[2],p=o[2],e=[0,o[1]-1|0],v=m(p),d=function(a){e[1]++;if(e[1]===v)throw ar;return F(p,e[1])};var
c=b(g[1],15);I(g[5],c,cL,cL);I(g[5],c,jf,t0);I(g[5],c,er,je);var
t=b(h[2],b7);return[0,q,l,r,s,d,aA8,ac,0,1,0,3,aE,l,1,0,c,b(h[2],64),t]}function
f(a,d,c){var
b=d<=a?1:0,e=b?a<=c?1:0:b;return e}function
u(c){var
a=c-9|0,b=0;if(4<a>>>0){if(23===a)b=1}else
if(1<a-2>>>0)b=1;return b?1:0}function
ad(a){if(f(a,32,HG))return 1;var
b=0;if(11<=a){if(13===a)b=1}else
if(9<=a)b=1;if(b)return 1;if(!f(a,57344,ON)&&!f(a,jQ,vV))return 0;return 1}function
aF(a){return f(a,48,57)}function
aG(a){var
b=f(a,48,57);if(b)var
c=b;else{var
d=f(a,65,70);if(!d)return f(a,97,bE);var
c=d}return c}function
ae(a){var
c=f(a,c3,fD);if(c)var
b=c;else{var
d=f(a,fn,d5);if(d)var
b=d;else{var
e=f(a,Q,767);if(e)var
b=e;else{var
g=f(a,880,893);if(g)var
b=g;else{var
h=f(a,895,8191);if(h)var
b=h;else{var
i=f(a,8204,8205);if(i)var
b=i;else{var
j=f(a,8304,8591);if(j)var
b=j;else{var
k=f(a,11264,12271);if(k)var
b=k;else{var
l=f(a,12289,HG);if(l)var
b=l;else{var
m=f(a,63744,64975);if(m)var
b=m;else{var
n=f(a,65008,ON);if(!n)return f(a,jQ,983039);var
b=n}}}}}}}}}}return b}function
aI(a){if(!f(a,97,b5)&&!f(a,65,90))return u(a)?0:95===a?1:ae(a)?1:0;return 1}function
aJ(a){if(!f(a,97,b5)&&!f(a,65,90)){if(u(a))return 0;if(f(a,48,57))return 1;var
b=a-45|0,c=0;if(50<b>>>0){if(f6===b)c=1}else
if(47<b-2>>>0)c=1;if(c)return 1;if(!ae(a)&&!f(a,wv,879)&&!f(a,8255,8256))return 0;return 1}return 1}function
a(a){if(a[7]===fH)e(a,hI);if(a[7]===10){a[9]=a[9]+1|0;a[10]=1}else
a[10]=a[10]+1|0;a[7]=b(a[6],a[5]);if(1-ad(a[7]))throw cK;var
c=a[8],d=c?a[7]===10?1:0:c;if(d)a[7]=b(a[6],a[5]);return a[7]===13?(a[8]=1,a[7]=av,0):(a[8]=0,0)}function
E(b){try{var
c=a(b);return c}catch(a){a=d(a);if(a===ar){b[7]=ml;return 0}throw a}}function
j(b){for(;;){if(u(b[7])){a(b);continue}return 0}}function
aK(a){for(;;){if(u(a[7])){E(a);continue}return 0}}function
v(b,c){return b[7]===c?a(b):C(b,[0,c,0])}function
G(a){return b(h[4],a[17])}function
P(a){return b(h[4],a[18])}function
r(b,a){return n(h[3],b[17],a)}function
H(b,a){return n(h[3],b[18],a)}function
R(a,c){if(u(c)){a[14]=1;return 0}var
d=a[14],e=d?0!==b(h[6],a[18])?1:0:d;if(e)H(a,aw);a[14]=0;return H(a,c)}function
af(f,h){var
a=h[2],c=h[1];function
i(a){var
c=b(f[3],a);return c?c[1]:e(f,[0,GG,a])}try{var
j=n(g[7],f[16],c),k=q(j)?q(c)?[0,cL,a]:[0,i(c),a]:[0,j,a];return k}catch(b){b=d(b);if(b===J)return[0,i(c),a];throw b}}function
aM(b){function
c(c,b){b[6]=c;b[10]=0;return a(b)}var
h=b[1];if(h){var
d=h[1];if(143365725<=d)if(423112016<=d)if(684370880<=d){c(la,b);if(b[7]===n6){b[10]=0;a(b)}}else
c(EN,b);else
if(338302576<=d)c(EM,b);else{a(b);var
i=b[7];a(b);var
j=b[7],g=0;if(V===i){if(aq===j){c(no,b);g=1}}else
if(aq===i&&V===j){c(np,b);g=1}if(!g)e(b,fZ)}else
if(-211555818<=d){c(np,b);if(b[7]===n6){b[10]=0;a(b)}}else{c(no,b);if(b[7]===n6){b[10]=0;a(b)}}return 1}a(b);var
f=b[7];if(d$<=f){if(V===f){a(b);if(aq!==b[7])e(b,fZ);c(no,b);return 1}if(aq===f){a(b);if(V!==b[7])e(b,fZ);c(np,b);return 1}}else
if(60!==f&&fo<=f){a(b);if(eA!==b[7])e(b,fZ);a(b);if(ds!==b[7])e(b,fZ);c(la,b);return 1}b[6]=la;return 0}function
z(c){G(c);if(aI(c[7])){r(c,c[7]);a(c);for(;;){if(aJ(c[7])){r(c,c[7]);a(c);continue}return b(h[5],c[17])}}return ab(c,c[7])}function
K(b){var
c=z(b);return b[7]!==58?[0,cL,c]:(a(b),[0,c,z(b)])}function
aN(c){var
f=[0,0];G(c);a(c);if(c[7]===59)e(c,[0,yf,cL]);else
try{if(c[7]===bV){r(c,c[7]);a(c);for(;;){if(c[7]!==59){r(c,c[7]);if(aG(c[7])){var
g=c[7]<=57?c[7]+fA|0:c[7]<=70?c[7]-55|0:c[7]-87|0;f[1]=(f[1]*16|0)+g|0;a(c);continue}throw aH}break}}else
for(;;){if(c[7]!==59){r(c,c[7]);if(aF(c[7])){f[1]=(f[1]*10|0)+(c[7]+fA|0)|0;a(c);continue}throw aH}break}}catch(b){b=d(b);if(b!==aH)throw b;f[1]=-1;for(;;){if(c[7]!==59){r(c,c[7]);a(c);continue}break}}a(c);return ad(f[1])?(G(c),r(c,f[1]),b(h[5],c[17])):e(c,[0,yf,b(h[5],c[17])])}var
ag=b(g[1],5);function
L(b,a){return I(g[5],ag,b,a)}L(aBt,aBs);L(aBv,aBu);L(aBx,aBw);L(aBz,aBy);L(aBB,aBA);function
aO(a){var
f=z(a);v(a,aA);try{var
c=n(g[7],ag,f);return c}catch(c){c=d(c);if(c===J){var
h=b(a[4],f);return h?h[1]:e(a,[0,-739719956,f])}throw c}}function
ah(b){a(b);return b[7]===35?aN(b):aO(b)}function
ai(c){j(c);var
e=0;if(c[7]!==34&&c[7]!==39){var
d=C(c,[0,ax,[0,ay,0]]);e=1}if(!e)var
d=c[7];a(c);j(c);P(c);c[14]=1;for(;;){if(c[7]!==d){if(c[7]===60){ab(c,A);continue}if(c[7]===38){var
f=ah(c);E7(function(a){return R(c,a)},f);continue}R(c,c[7]);a(c);continue}a(c);return b(h[5],c[18])}}function
aP(a){var
d=0,b=0;for(;;){if(u(a[7])){j(a);if(a[7]!==47&&a[7]!==62){var
i=K(a),f=i[2],k=i[1];j(a);v(a,Z);var
e=ai(a),h=[0,i,e];if(q(k)&&c(f,er)){I(g[5],a[16],cL,e);var
d=[0,cL,d],b=[0,h,b];continue}if(c(k,er)){I(g[5],a[16],f,e);var
d=[0,f,d],b=[0,h,b];continue}if(c(k,jf)&&c(f,EO)){if(c(e,ER))a[13]=0;else
if(c(e,ES))a[13]=a[2];var
b=[0,h,b];continue}var
b=[0,h,b];continue}return[0,d,b]}return[0,d,b]}}function
i(d){if(d[7]===fH)var
f=4;else
if(d[7]!==60)var
f=3;else{a(d);if(d[7]===63){a(d);var
f=[2,K(d)]}else
if(d[7]===47){a(d);var
k=K(d);j(d);var
f=[1,k]}else
if(d[7]===33){a(d);if(d[7]===45){a(d);v(d,Y);var
f=0}else
if(d[7]===68)var
f=2;else
if(d[7]===91){a(d);G(d);var
g=1;for(;;){r(d,d[7]);a(d);var
m=g+1|0;if(6!==g){var
g=m;continue}var
i=b(h[5],d[17]),l=c(i,tZ)?1:y(d,[0,tZ,0],i),f=l;break}}else
var
f=e(d,[0,hP,o(aBC,D(d[7]))])}else
var
f=[0,K(d)]}d[11]=f;return 0}function
M(b){a:for(;;)for(;;){if(b[7]!==45){a(b);continue}a(b);if(b[7]!==45)continue a;a(b);if(b[7]!==62)C(b,[0,w,0]);return E(b)}}function
S(b){a:for(;;)for(;;){if(b[7]!==63){a(b);continue}a(b);if(b[7]!==62)continue a;return E(b)}}function
T(a,g){for(;;){var
b=a[11];if(typeof
b==="number")switch(b){case
0:M(a);i(a);continue;case
3:if(u(a[7])){aK(a);i(a);continue}break}else
if(2===b[0]){var
d=b[1],f=d[2];if(q(d[1])&&c(jf,f$(f)))return g?0:e(a,[0,hP,f]);S(a);i(a);continue}return 0}}function
aR(d,c){a:for(;;){if(c[7]!==60){if(c[7]===38){var
f=ah(c);E7(b(d,c),f);continue}if(c[7]===93){n(d,c,c[7]);a(c);if(c[7]===93){n(d,c,c[7]);a(c);for(;;){if(c[7]===93){n(d,c,c[7]);a(c);continue}if(c[7]===62){e(c,[0,hP,aBD]);continue a}continue a}}continue}n(d,c,c[7]);a(c);continue}return 0}}function
aS(c,b){try{for(;;){if(b[7]===93){a(b);for(;;){if(b[7]===93){a(b);if(b[7]===62){a(b);throw aH}n(c,b,$);continue}n(c,b,$);break}}n(c,b,b[7]);a(b);continue}}catch(a){a=d(a);if(a===aH)return 0;throw a}}function
aj(a,p,o){var
h=[0,EP,[0,EQ,0]];function
k(a){j(a);v(a,Z);j(a);return ai(a)}function
d(b,a){var
d=k(b),e=1-A1(function(a){return c(d,a)},a);return e?y(b,a,d):e}var
f=a[11];if(typeof
f!=="number"&&2===f[0]){var
l=f[1],r=l[2];if(q(l[1])&&c(r,jf)){j(a);var
m=z(a);if(1-c(m,t1))y(a,[0,t1,0],m);d(a,[0,ET,[0,EU,0]]);j(a);if(a[7]!==63){var
g=z(a);if(c(g,t2)){var
b=f$(k(a));if(1-p)if(c(b,EV))a[6]=la;else
if(c(b,EX))a[6]=no;else
if(c(b,EY))a[6]=np;else
if(c(b,EZ))a[6]=EM;else
if(c(b,E0)||c(b,E1))a[6]=EN;else
if(c(b,EW)){if(!o)e(a,fZ)}else
e(a,[0,Ph,b]);j(a);if(a[7]!==63){var
n=z(a);if(c(n,lb))d(a,h);else
y(a,[0,lb,[0,aBE,0]],n)}}else
if(c(g,lb))d(a,h);else
y(a,[0,t2,[0,lb,[0,aBF,0]]],g)}j(a);v(a,aB);v(a,w);return i(a)}}return 0}function
ak(c){T(c,0);if(2===c[11]){var
d=function(a){return H(c,a)},e=[0,1];P(c);d(A);d(O);a:for(;;){if(0<e[1]){if(c[7]===60){a(c);if(c[7]!==33){d(A);e[1]++;continue}a(c);if(c[7]!==45){d(A);d(O);e[1]++;continue}a(c);if(c[7]!==45){d(A);d(O);d(Y);e[1]++;continue}a(c);M(c);continue}if(c[7]!==34&&c[7]!==39){if(c[7]===62){d(w);a(c);e[1]+=-1;continue}d(c[7]);a(c);continue}var
f=c[7];d(f);a(c);for(;;){if(c[7]!==f){d(c[7]);a(c);continue}d(f);a(c);continue a}}var
g=b(h[5],c[18]);i(c);T(c,0);return[0,ib,[0,g]]}}return aBG}function
aT(a){P(a);a[14]=1;var
d=a[13]?R:H;for(;;){var
c=a[11];if(typeof
c==="number")switch(c){case
0:M(a);i(a);continue;case
1:aS(d,a);i(a);continue;case
2:e(a,[0,hP,aBH]);break;case
3:aR(d,a);i(a);continue;default:e(a,hI)}else
if(2===c[0]){S(a);i(a);continue}return b(h[5],a[18])}}function
al(a,b){function
e(b){var
e=b[2],d=b[1],f=d[2];return c(d[1],cL)?c(f,er)?[0,[0,je,er],e]:b:[0,af(a,d),e]}var
f=a[13],d=aP(a),g=d[2];a[15]=[0,[0,b,d[1],f],a[15]];var
h=kf(e,g);return[0,qw,[0,af(a,b),h]]}function
aU(d,h){var
e=d[15];if(e){var
j=e[2],f=e[1],k=f[1],l=f[3],m=f[2];if(d[7]!==62)C(d,[0,w,0]);if(1-c(h,k)){var
n=aa(h);y(d,[0,aa(k),0],n)}d[15]=j;d[13]=l;x(b(g[6],d[16]),m);if(0===j)d[7]=aD;else{a(d);i(d)}return At}throw[0,B,aBI]}function
aW(b){if(0===b[15]){var
d=b[11];if(typeof
d!=="number"&&0===d[0])return al(b,d[1]);return e(b,-764030554)}var
g=b[12],l=0;if(typeof
g!=="number"&&qw===g[1]){j(b);if(b[7]===62){v(b,w);i(b)}else
if(b[7]===47){var
h=b[15];if(!h)throw[0,B,aBK];var
k=h[1][1];a(b);b[11]=[1,k]}else
C(b,[0,az,[0,w,0]]);l=1}for(;;){var
c=b[11];if(typeof
c==="number")switch(c){case
0:M(b);i(b);continue;case
2:return e(b,[0,hP,aBJ]);case
4:return e(b,hI);default:var
f=aT(b);if(q(f))continue;return[0,gM,f]}else
switch(c[0]){case
0:return al(b,c[1]);case
1:return aU(b,c[1]);default:S(b);i(b);continue}}}function
aX(a){try{if(a[7]===fH)var
b=1;else
if(a[7]!==NF)var
b=0;else
if(At===a[12]){E(a);i(a);var
b=a[7]===fH?1:(T(a,1),a[7]===fH?1:(aj(a,0,1),a[12]=ak(a),0))}else{var
c=aM(a);i(a);aj(a,c,0);a[12]=ak(a);var
b=0}return b}catch(b){b=d(b);if(b===h[1])return e(a,ys);if(b===cK)return e(a,fZ);if(b===ar)return e(a,hI);throw b}}function
aY(a){return aX(a)?e(a,hI):a[12]}function
U(a){try{if(a[7]===PJ){a[7]=ac;var
b=a[12]}else{var
c=aY(a);a[12]=aW(a);var
b=c}return b}catch(b){b=d(b);if(b===h[1])return e(a,ys);if(b===cK)return e(a,fZ);if(b===ar)return e(a,hI);throw b}}function
aZ(m,h,g){var
d=U(g);if(typeof
d!=="number"){var
i=d[1];if(qw===i){var
c=[0,d[2],0],a=aBN;for(;;){var
e=U(g);if(typeof
e==="number"){if(c){var
f=a[2],o=c[2],p=c[1],j=n(m,p,l(a[1]));if(f){var
c=o,a=[0,[0,j,f[1]],f[2]];continue}return j}throw[0,B,aBL]}var
k=e[1];if(ib===k)throw[0,B,aBM];if(gM<=k){var
q=a[2],r=a[1],a=[0,[0,b(h,e[2]),r],q];continue}var
c=[0,e[2],c],a=[0,0,a];continue}}if(gM===i)return b(h,d[2])}return as(E2)}function
bm(d,c,b){var
a=U(b);if(typeof
a!=="number"&&ib===a[1]){var
e=a[2];return[0,e,aZ(d,c,b)]}return as(E3)}function
bn(a){return[0,a[9],a[10]]}function
a0(a){return o(aBP,o(a,aBO))}function
bo(j,i,h,f,a){var
o=j?j[1]:1,p=i?i[1]:0,q=h?h[1]:0,r=f?f[1]:function(a){return 0},k=a[1];if(KG===k)var
l=a[2],t=function(a){return s(l,a)},e=t,d=function(a,b,c){return iM(l,a,b,c)};else
if(GX<=k)var
m=a[2],u=function(a){return mg(m,a)},e=u,d=function(a,b,c){return AU(m,a,b,c)};else
var
n=a[2],v=function(f,c,e){var
d=(c+e|0)-1|0;if(!(d<c)){var
a=c;for(;;){b(n,F(f,a));var
g=a+1|0;if(d!==a){var
a=g;continue}break}}return 0},e=function(a){return b(n,a)},d=v;var
c=b(g[1],10);I(g[5],c,cL,cL);I(g[5],c,t0,jf);I(g[5],c,je,er);return[0,o,p,q,r,c,d,e,0,0,-1]}function
bp(a){return a[10]}function
t(b,a){return I(b[6],a,0,m(a))}function
a1(a){return t4(function(b,a){return a},aBQ,a)}function
W(b,a){t4(function(a,b){t(a,b);return a},b,a);return 0}function
am(h,f){var
e=f[2],a=f[1];try{var
k=0;if(c(a,je)&&c(e,er)){var
j=[0,cL,er];k=1}if(!k)var
j=[0,n(g[7],h[5],a),e];return j}catch(c){c=d(c);if(c===J){var
i=b(h[4],a);return i?[0,i[1],e]:as(a0(a1(a)))}throw c}}function
a2(h,a){return hh(function(b,a){var
d=a[2],e=a[1],f=e[2];if(c(e[1],je)){var
i=c(f,er)?cL:f;I(g[5],h[5],d,i);return[0,d,b]}return b},0,a)}function
an(g,a){return t4(function(k,f){var
d=[0,0],b=[0,0],i=m(f);function
e(a){I(g[6],f,d[1],b[1]-d[1]|0);t(g,a);b[1]++;d[1]=b[1];return 0}for(;;){if(b[1]<i){var
a=F(f,b[1]),c=0;if(34<=a)if(38===a)e(aBR);else
if(60<=a)if(63<=a)c=1;else{var
j=0;switch(a+L$|0){case
0:e(aBT);break;case
1:c=1;j=1;break;default:e(aBU)}}else
if(35<=a)c=1;else
e(aBV);else{var
h=0;if(11<=a){if(13!==a){c=1;h=1}}else
if(!(9<=a)){c=1;h=1}if(!h)b[1]++}if(c)if(32<=a)b[1]++;else
e(aBS);continue}return I(g[6],f,d[1],b[1]-d[1]|0)}},0,a)}function
X(a,c){var
d=c[1],e=c[2];if(1-q(d)){W(a,d);b(a[7],58)}return W(a,e)}function
a3(a,c){var
d=c[2],e=c[1];b(a[7],32);X(a,am(a,e));t(a,aBW);an(a,d);return b(a[7],34)}function
N(a,c){function
e(a){var
d=a[3];if(d){var
e=bd(a[10],d[1]),f=1;if(!(e<1)){var
c=f;for(;;){b(a[7],32);var
g=c+1|0;if(e!==c){var
c=g;continue}break}}return 0}return 0}function
d(a){return a[3]?b(a[7],10):0}if(-1===a[10]){if(typeof
c==="number")return as(t3);var
h=c[1];if(ib===h){var
i=c[2];if(a[1])t(a,aBX);if(i){W(a,i[1]);b(a[7],10)}a[10]=0;return 0}return gM<=h?as(E6):as(E5)}if(typeof
c==="number"){var
f=a[9];if(f){var
j=f[1],o=f[2],p=j[2],q=j[1];a[10]=a[10]-1|0;if(a[8])t(a,aBY);else{e(a);t(a,aBZ);X(a,q);b(a[7],62)}a[9]=o;x(b(g[6],a[5]),p);a[8]=0;if(0===a[10]){if(a[2])b(a[7],10);a[10]=-1;return 0}return d(a)}return as(t3)}var
k=c[1];if(ib===k)return _(E4);if(gM<=k){var
r=c[2];if(a[8]){t(a,aB0);d(a)}e(a);an(a,r);d(a);a[8]=0;return 0}var
l=c[2],m=l[2],s=l[1];if(a[8]){t(a,aB1);d(a)}e(a);var
u=a2(a,m),n=am(a,s);b(a[7],60);X(a,n);x(function(b){return a3(a,b)},m);a[9]=[0,[0,n,u],a[9]];a[10]=a[10]+1|0;a[8]=1;return 0}function
a4(k,c,j){var
a=[0,[0,j,0],0];for(;;){if(a){var
d=a[1];if(d){var
f=a[2],g=d[2],e=b(k,d[1]);if(gM<=e[1]){N(c,e);var
a=[0,g,f];continue}var
h=e[2],l=h[2];N(c,[0,qw,h[1]]);var
a=[0,l,[0,g,f]];continue}var
i=a[2];if(i){N(c,At);var
a=i;continue}return 0}throw[0,B,aB2]}}return[0,aB3,c,q,o,D,g,av,a$,aw,ax,ba,bb,ay,Y,az,bc,aA,A,Z,w,aB,O,be,$,bf,bg,bh,bi,bj,tZ,t0,je,jf,er,EO,t1,t2,lb,EP,EQ,ER,ES,ET,EU,EV,EW,EX,EY,EZ,E0,E1,aa,aC,bk,E2,E3,e,ab,y,C,ml,ac,aD,aE,bl,f,u,ad,aF,aG,ae,aI,aJ,a,E,j,aK,v,G,P,r,H,R,af,aM,z,K,aN,ag,aO,ah,ai,aP,i,M,S,T,aR,aS,aj,ak,aT,al,aU,aW,aX,aY,U,aZ,bm,bn,a0,E4,E5,t3,E6,bo,bp,t,a1,W,am,a2,an,X,a3,N,a4,function(c,b,a){var
d=a[2];N(b,[0,ib,a[1]]);return a4(c,b,d)}]}(aB6),aB7=nq[65],aB8=nq[aY],aB9=nq[dn],aB_=nq[jy];function
bD(c,a,b){return[0,n(c,a,b),a,au]}function
lc(b,p,s){var
d=e(b,aCf,p[3]);if(d){var
a=d[1];if(typeof
a!=="number"&&6===a[0]){var
g=a[1];return x(function(t){var
l=t[2];if(typeof
l!=="number"&&8===l[0]){var
u=p[3],a=ai(b,l[1]),m=e(b,aB$,a);if(m){var
d=m[1];if(typeof
d!=="number"&&4===d[0]&&!c(d[1],aCa)){cJ(a);if(typeof
a!=="number"&&7===a[0]){var
g=a[1],n=g[1],h=n[1],v=0;if(typeof
h==="number"||!(6===h[0]))v=1;else{var
q=h[1];if(0===n[2][0]){var
i=I(s,b,u,[0,[7,g],0]);if(i){var
j=i[1],w=0;if(typeof
j==="number"||!(7===j[0]))w=1;else{var
o=j[1][1],k=o[1],x=0;if(typeof
k!=="number"&&6===k[0]){if(!i[2]){var
r=o[2];g[1]=[0,bn([6,sz(q,k[1])],aCd),r];return 0}x=1}}}throw[0,B,aCc]}}}throw[0,B,aCb]}return 0}throw[0,f,aCe]}throw[0,f,aCg]},g)}}return 0}function
E9(b,j,a){try{var
f=e(b,aCi,a),i=0;if(f){var
c=f[1],l=0;if(typeof
c!=="number"&&6===c[0]){var
k=c[1],h=A(a,aCl,[6,g(function(c){var
e=c[1],d=aB(b,c[2]),f=mU(b,aCj,d),a=cv(mQ(j),f);return[0,e,[8,am(b,A(d,aCk,[5,[0,[2,a[1]],[0,[2,a[2]],[0,[2,a[3]],[0,[2,a[4]],[0,[2,a[5]],[0,[2,a[6]],0]]]]]]]))]]},k)]);i=1;l=1}}if(!i)var
h=a;return h}catch(b){b=d(b);if(b===sG){K(aCh);return a}throw b}}function
es(a,h,b){var
j=b[5],k=b[4],l=E9(a,h,b[3]),d=[0,b[1],b[2],l,k,j],i=e(a,aCm,d[3]);if(i){var
g=i[1];if(typeof
g!=="number"&&6===g[0]){var
m=g[1];x(function(l){var
b=l[2];if(typeof
b!=="number"&&8===b[0]){var
g=b[1],i=e(a,aCo,b);if(i){var
d=i[1],m=0;if(typeof
d==="number"||!(4===d[0]))m=1;else
if(!c(d[1],aCp)){var
j=ai(a,g),k=e(a,aCq,j);return k?bB(a,[0,g,A(j,aCr,E9(a,h,k[1]))]):0}}return 0}throw[0,f,aCn]},m);return d}}return d}function
E_(i,c,a){var
g=0;if(typeof
c!=="number"&&6===c[0]){var
d=c[1];g=1}if(!g)var
d=0;var
h=0;if(typeof
a!=="number"&&6===a[0]){var
f=a[1];h=1}if(!h)var
f=0;function
j(b){var
j=e(i,b,c),l=0;if(j){var
d=j[1],n=0;if(typeof
d!=="number"&&6===d[0]){var
f=d[1];l=1;n=1}}if(!l)var
f=0;var
k=e(i,b,a),m=0;if(k){var
g=k[1],o=0;if(typeof
g!=="number"&&6===g[0]){var
h=g[1];m=1;o=1}}if(!m)var
h=0;if(0===f&&0===h)return 0;return[0,[0,b,[6,q(f,h)]]]}var
k=b(cZ(function(a){return at(a[1],t5)}),d),l=b(cZ(function(a){return at(a[1],t5)}),f),m=q(k,q(l,al(j,t5)));return bk(function(b,a){return A(b,a[1],a[2])},aCs,m)}function
E$(t,a,s){var
b=av(t,s),c=b[4],d=b[3],e=b[2],f=b[1],g=bO(a,[0,f,e]),h=g[2],i=g[1],j=bO(a,[0,d,c]),k=j[2],l=j[1],m=bO(a,[0,f,c]),n=m[2],o=m[1],p=bO(a,[0,d,e]),q=p[2],r=p[1],u=df(o,r),v=df(df(i,l),u),w=df(n,q),x=df(df(h,k),w),y=gi(o,r),z=gi(gi(i,l),y),A=gi(n,q);return[5,[0,[2,v],[0,[2,x],[0,[2,z],[0,[2,gi(gi(h,k),A)],0]]]]]}function
et(a,c,i){var
h=e(a,aCv,i);if(h){var
d=h[1];if(typeof
d!=="number"&&5===d[0]){var
j=d[1];return x(function(i){if(typeof
i!=="number"&&8===i[0]){var
k=i[1],h=ai(a,k),l=e(a,aCx,h);if(l){var
v=E$(a,c,l[1]),m=e(a,aCy,h);if(m){var
d=m[1],s=0;if(typeof
d!=="number"&&5===d[0]){var
u=ks(8,d[1]),n=[5,ah(g(function(b){if(b){var
d=b[2];if(d){var
e=d[2];if(e){var
f=e[2];if(f){var
h=f[2];if(h){var
i=h[2];if(i){var
j=i[2];if(j){var
k=j[2];if(k&&!k[2]){var
p=j[1],q=i[1],r=h[1],s=f[1],t=e[1],u=d[1],v=b[1],w=C(a,k[1]),x=C(a,p),y=C(a,q),z=C(a,r),A=C(a,s),B=C(a,t),D=C(a,u),l=bO(c,[0,C(a,v),D]),E=l[2],F=l[1],m=bO(c,[0,B,A]),G=m[2],H=m[1],n=bO(c,[0,z,y]),I=n[2],J=n[1],o=bO(c,[0,x,w]),L=[0,F,[0,E,[0,H,[0,G,[0,J,[0,I,[0,o[1],[0,o[2],0]]]]]]]];return g(function(a){return[2,a]},L)}}}}}}}}K(aCt);return b},u))];s=1}if(!s){var
t=bP(d);b(K(aCu),t);var
n=d}var
j=[0,n]}else
var
j=0;var
o=e(a,aCz,h),p=o?[0,E$(a,c,o[1])]:0,q=A(h,aCA,v),r=j?A(q,aCB,j[1]):q,w=p?A(r,aCC,p[1]):r;return bB(a,[0,k,w])}throw[0,f,aCD]}return K(aCw)},j)}}return 0}var
aCF=[Q,aCE,aL(0)];function
af(a){throw[0,aCF,a]}function
H(d){if(typeof
d!=="number"&&b4===d[1]){var
a=d[2];if(a){var
e=a[1];if(!c(e[1],aCH)){var
b=e[2];if(typeof
b!=="number"){var
f=b[1];if(b6===f){if(!a[2])return b[2]}else
if(dQ===f&&!a[2])return b[2]}}}}return af(aCG)}function
nr(d){if(typeof
d!=="number"&&b4===d[1]){var
a=d[2];if(a){var
e=a[1];if(!c(e[1],aCJ)){var
b=e[2];if(typeof
b!=="number"){var
f=b[1];if(b6===f){if(!a[2])return b[2]}else
if(dQ===f&&!a[2])return b[2]|0}}}}return af(aCI)}function
cA(a){if(typeof
a==="number"){if(wx===a)return 0}else{var
d=a[1];if(eb<=d){if(y===d)return[5,g(cA,a[2])];if(b4===d){var
b=a[2];if(b){var
e=b[1],f=e[1];if(c(f,aD0))if(c(f,aD1))if(c(f,aD2)){if(!c(f,aD3)){var
j=e[2];if(typeof
j!=="number"&&y===j[1]){var
k=j[2];if(k){var
h=k[2];if(h){var
i=h[1];if(typeof
i!=="number"){var
q=i[1],r=k[1];if(u===q){if(!h[2]&&!b[2]){var
s=i[2],w=A(cA(r),aD4,[1,m(s)]);return[7,[0,[0,w,[0,bl(s)]]]]}}else
if(y===q&&!h[2]&&!b[2]){var
l=bg(eY(aCK,i[2]));if(typeof
l!=="number"&&7===l[0]){var
t=l[1][1][2];if(0===t[0]){var
v=t[1],x=[1,aa(v)];return[7,[0,[0,A(cA(r),aD6,x),[0,v]]]]}}throw[0,B,aD5]}}}}}}}else{var
n=e[2];if(typeof
n!=="number"&&u===n[1]&&!b[2])return[4,n[2]]}else{var
o=e[2];if(typeof
o!=="number"&&b6===o[1]&&!b[2])return[1,o[2]]}else{var
p=e[2];if(typeof
p!=="number"&&dQ===p[1]&&!b[2])return[2,p[2]]}}return[6,g(function(a){var
b=a[1];return[0,b,cA(a[2])]},b)]}if(!(737456203<=d))return[0,a[2]]}else{if(u===d)return[3,a[2]];if(b6===d)return[8,a[2]]}}return af(aDZ)}function
aCK(B){if(typeof
B!=="number"&&y===B[1]){var
e=B[2];if(e){var
a=e[1],j=0;if(typeof
a==="number")j=1;else{var
aa=a[1];if(u===aa){var
d=a[2],ab=a2(d,aDp);if(0<=ab){if(0<ab){var
ac=a2(d,aDq);if(0<=ac){if(0<ac){if(c(d,aDr)){if(c(d,aDs)){if(c(d,aDt)){if(!c(d,aDu)&&!e[2])return 4}else
if(!e[2])return 0}else
if(!e[2])return 12}else
if(!e[2])return 2}else
if(!e[2])return 7}else
if(c(d,aDJ)){if(c(d,aDK)){if(c(d,aDL)){if(c(d,aDM)){if(!c(d,aDN)&&!e[2])return 5}else
if(!e[2])return 11}else
if(!e[2])return 10}else
if(!e[2])return 14}else
if(!e[2])return 13}else
if(!e[2])return 17}else{var
ae=a2(d,aDO);if(0<=ae){if(0<ae){if(c(d,aDP)){if(c(d,aDQ)){if(c(d,aDR)){if(!c(d,aDS)&&!e[2])return 3}else
if(!e[2])return 1}else
if(!e[2])return 6}else
if(!e[2])return 20}else
if(!e[2])return 16}else
if(c(d,aDT)){if(c(d,aDU)){if(c(d,aDV)){if(c(d,aDW)){if(!c(d,aDX)&&!e[2])return 18}else
if(!e[2])return 19}else
if(!e[2])return 15}else
if(!e[2])return 9}else
if(!e[2])return 8}var
S=e[2];if(S){var
x=S[1],A=S[2];if(A){var
T=A[1];if(typeof
T==="number"||!(u===T[1]))j=1;else{var
U=T[2];if(c(U,aDv))if(c(U,aDw))if(c(U,aDx))j=1;else{if(!A[2])return[19,d,H(x)];j=1}else{if(!A[2])return[49,d,cA(x)];j=1}else{if(!A[2])return[51,d,cA(x)];j=1}}}else
if(typeof
x==="number"||!(u===x[1]))j=1;else{var
n=x[2],ad=a2(n,aDy);if(0<=ad){if(!(0<ad))return[25,d];if(!c(n,aDz))return[52,d];if(!c(n,aDA))return[32,d];if(!c(n,aDB))return[7,d];if(!c(n,aDC))return[5,d];if(!c(n,aDD))return[45,d];j=1}else{if(!c(n,aDE))return[27,d];if(!c(n,aDF))return[50,d];if(!c(n,aDG))return[31,d];if(!c(n,aDH))return[47,d];if(!c(n,aDI))return[48,d];j=1}}}}else
if(y===aa){var
W=e[2];if(W){var
X=W[2];if(X){var
Y=X[1];if(typeof
Y==="number"||!(u===Y[1]))j=1;else{var
a5=W[1],a6=a[2];if(c(Y[2],aDY))j=1;else{if(!X[2]){var
a7=H(a5);return[4,g(H,a6),a7]}j=1}}}else
j=1}}else
j=1}if(j){var
h=e[2];if(h){var
f=h[1],o=h[2],E=0;if(o){var
k=o[1],F=o[2],q=0;if(F){var
m=F[1],r=F[2];if(r){var
s=r[1];if(typeof
s!=="number"&&u===s[1]){var
z=s[2];if(c(z,aCZ)){if(c(z,aC0)){if(c(z,aC1)){if(c(z,aC2)){if(!c(z,aC3)&&!r[2]){var
aE=H(m),aF=H(k),aG=H(f);return[13,H(a),aG,aF,aE]}}else
if(!r[2]){var
aH=H(m),aI=H(k),aJ=H(f);return[12,H(a),aJ,aI,aH]}}else
if(!r[2]){var
aK=H(m),aL=H(k),aM=H(f);return[14,H(a),aM,aL,aK]}}else
if(!r[2]){var
aN=H(m),aO=H(k),aP=H(f);return[44,H(a),aP,aO,aN]}}else
if(!r[2]){var
aQ=H(m),aR=H(k),aS=H(f);return[43,H(a),aS,aR,aQ]}}var
G=r[2];if(G){var
t=G[2];if(t){var
I=t[1];if(typeof
I==="number"||!(u===I[1]))q=1;else{var
C=I[2],D=G[1];if(c(C,aCV))if(c(C,aCW))if(c(C,aCX))if(c(C,aCY))q=1;else{if(!t[2]){var
ak=H(D),al=H(s),am=H(m),an=H(k),ao=H(f);return[30,H(a),ao,an,am,al,ak]}q=1}else{if(!t[2]){var
ap=H(D),aq=H(s),ar=H(m),as=H(k),at=H(f);return[8,[V,H(a),at,as,ar,aq,ap]]}q=1}else{if(!t[2]){var
au=H(D),av=H(s),aw=H(m),ax=H(k),ay=H(f);return[11,H(a),ay,ax,aw,av,au]}q=1}else{if(!t[2]){var
az=H(D),aA=H(s),aB=H(m),aC=H(k),aD=H(f);return[24,[V,H(a),aD,aC,aB,aA,az]]}q=1}}}else
q=1}else
q=1}else
if(typeof
m!=="number"&&u===m[1]){var
$=m[2];if(!c($,aDn)){var
a3=H(k),a4=H(f);return[41,H(a),a4,a3]}if(!c($,aDo)){var
a0=H(k),a1=H(f);return[42,H(a),a1,a0]}}}if(!q)if(typeof
k==="number"||!(u===k[1]))E=1;else{var
w=k[2];if(c(w,aDh)){if(c(w,aDi)){if(c(w,aDj)){if(c(w,aDk)){if(!c(w,aDl)&&!o[2]){var
aV=H(f);return[9,H(a),aV]}}else
if(!o[2]){var
aW=H(f);return[10,H(a),aW]}}else
if(!o[2]){var
aX=H(f);return[29,H(a),aX]}}else
if(!o[2]){var
aY=H(f);return[22,H(a),aY]}}else
if(!o[2]){var
aZ=H(f);return[23,H(a),aZ]}var
_=o[2];if(_){var
R=_[1];if(typeof
R!=="number"&&u===R[1]&&!c(R[2],aDm)){var
aU=H(f);return[28,H(a),aU,w]}}else
E=1}}else
E=1;if(E&&typeof
f!=="number"&&u===f[1]){var
i=f[2],Z=a2(i,aC4);if(0<=Z){if(0<Z){if(c(i,aC5)){if(c(i,aC6)){if(c(i,aC7)){if(c(i,aC8)){if(c(i,aC9)){if(!c(i,aC_)&&!h[2])return[0,H(a)]}else
if(!h[2])return[2,nr(a)]}else
if(!h[2])return[6,nr(a)]}else
if(!h[2])return[40,H(a)]}else
if(!h[2])return[17,H(a)]}else
if(!h[2])return[16,H(a)]}else
if(!h[2])return[21,H(a)]}else
if(c(i,aDa)){if(c(i,aDb)){if(c(i,aDc)){if(c(i,aDd)){if(c(i,aDe)){if(c(i,aDf)){if(!c(i,aDg)&&!h[2])return[20,nr(a)]}else
if(!h[2])return[15,H(a)]}else
if(!h[2])return[18,H(a)]}else
if(!h[2])return[26,cA(a)]}else
if(!h[2])return[3,H(a)]}else
if(!h[2])return[1,nr(a)]}else
if(!h[2])return[39,H(a)];var
P=h[2];if(P){var
Q=P[1];if(typeof
Q!=="number"&&u===Q[1]&&!c(Q[2],aC$)&&!P[2]){var
aT=bl(i);return[46,[0,cA(a),aT]]}}}}}}var
p=l(e);if(p){var
J=p[1];if(typeof
J!=="number"&&u===J[1]){var
v=J[2];if(!c(v,aCP))return[33,g(H,l(p[2]))];if(!c(v,aCQ))return[35,g(H,l(p[2]))];if(c(v,aCR)){if(!c(v,aCS))return[34,g(H,l(p[2]))];if(!c(v,aCT))return[36,g(H,l(p[2]))];if(!c(v,aCU)){var
L=p[2];if(L){var
M=L[1];if(typeof
M!=="number"&&u===M[1]){var
ai=M[2];return[38,ai,g(H,l(L[2]))]}}}}else{var
N=p[2];if(N){var
O=N[1];if(typeof
O!=="number"&&u===O[1]){var
aj=O[2];return[37,aj,g(H,l(N[2]))]}}}}}var
ah=EC([0,y,p]);b(K(aCN),ah);return af(aCO)}var
ag=EC(B);b(K(aCL),ag);return af(aCM)}function
Fa(b){var
t=0;if(typeof
b!=="number"&&y===b[1]){var
j=b[2];t=1}if(!t)var
j=af(aD7);var
a=[0,0],c=[0,0],B=al(function(d){if(typeof
d!=="number"&&y===d[1]){var
e=d[2];if(e){var
f=e[1];if(typeof
f!=="number"&&b6===f[1]){var
g=e[2];if(g&&!g[2]){var
h=g[1],b=f[2];return-1===b?(a[1]=cA(h),0):0===b?(c[1]=cA(h),0):0<=b?[0,[0,b,cA(h)]]:0}}}}return af(aD8)},j),C=a[1],k=e(bm(0),aD9,C),G=0;if(k){var
d=k[1],u=0;if(typeof
d!=="number"&&0===d[0])if(d[1])u=1;else{af(aEf);G=1;u=1}}var
D=a[1],l=e(bm(0),aD_,D),v=0;if(l){var
f=l[1],H=0;if(typeof
f!=="number"&&1===f[0]){var
m=f[1];v=1;H=1}}if(!v)var
m=af(aD$);var
E=a[1],n=e(bm(0),aEa,E),w=0;if(n){var
g=n[1],I=0;if(typeof
g!=="number"&&1===g[0]){var
o=g[1];w=1;I=1}}if(!w)var
o=af(aEb);var
h=c[1],z=0;if(typeof
h!=="number"&&6===h[0]){var
r=a4(aEd,h[1]),A=0;if(r){var
i=r[1],J=0;if(typeof
i!=="number"&&8===i[0]){var
s=i[1];A=1;J=1}}if(!A)var
s=af(aEe);var
p=s;z=1}if(!z)var
p=af(aEc);var
q=mS(0);x(function(a){return aO(q,a[1],[0,[0,[0,a[2]]],0])},B);var
F=[0,0,0,q,aV(0,0)];return[0,m,o,p,F,c[1],0,0]}function
G(a){return[0,b4,[0,[0,aEg,[0,dQ,a]],0]]}function
ld(a){return[0,b4,[0,[0,aEh,[0,b6,a]],0]]}function
dj(K,d,f,n,m,J){var
o=K,a=J;for(;;){var
L=o?o[1]:0;if(typeof
a==="number")return wx;else
switch(a[0]){case
0:return[0,eb,a[1]];case
1:return ld(a[1]);case
2:return G(a[1]);case
3:var
t=a[1],M=L?tN(t):t;return[0,u,M];case
4:return[0,b4,[0,[0,aEi,[0,u,a[1]]],0]];case
5:var
N=a[1],O=0;return[0,y,g(function(a){return dj(O,d,f,n,m,a)},N)];case
6:var
v=a[1];x(function(g){if(!c(g[1],aEj)){var
a=g[2];if(typeof
a!=="number")switch(a[0]){case
5:var
i=a[1];return x(function(a){if(typeof
a!=="number"&&8===a[0])return b(f,a[1]);return 0},i);case
8:var
h=a[1],e=ai(d,h);if(typeof
e!=="number"&&5===e[0]){var
j=e[1];return x(function(a){if(typeof
a!=="number"&&8===a[0])return b(f,a[1]);return 0},j)}return b(f,h)}}return 0},v);return[0,b4,g(function(a){var
b=a[1];return[0,b,dj(0,d,f,n,m,a[2])]},v)];case
7:var
p=a[1],h=p[1][1];if(typeof
h!=="number"&&6===h[0]){cJ(a);var
E=0;if(e(d,aEl,h)&&m){m6(d,a);var
P=bn(h,aEm),w=p[1][2];if(0===w[0])var
j=P,i=aI(w[1]);else
var
z=af(aEo),j=z[2],i=z[1]}else
E=1;if(E)if(n)var
j=h,i=aEp;else{var
A=p[1][2];if(0===A[0])var
j=h,i=aI(A[1]);else
var
B=af(aEq),j=B[2],i=B[1]}var
o=0,a=[6,[0,[0,aEn,[5,[0,j,[0,[3,i],0]]]],0]];continue}return af(aEk);default:var
k=a[1],q=ai(d,k),Q=0;if(typeof
q!=="number"&&7===q[0]){var
l=q[1][1][1],R=0;if(typeof
l!=="number"&&6===l[0]){var
C=e(d,aEr,l),F=0;if(C){var
r=C[1],H=0;if(typeof
r!=="number"&&4===r[0])if(c(r[1],aEu))H=1;else{b(f,k);F=1;H=1}}if(!F){var
D=e(d,aEs,l),S=0;if(D){var
s=D[1],I=0;if(typeof
s!=="number"&&4===s[0])if(c(s[1],aEt))I=1;else{b(f,k);S=1;I=1}}}Q=1;R=1}}return[0,b6,k]}}}function
aEv(e,d,a){if(typeof
a==="number")switch(a){case
0:return aEw;case
1:return aEx;case
2:return aEy;case
3:return aEz;case
4:return aEA;case
5:return aEB;case
6:return aEC;case
7:return aED;case
8:return aEE;case
9:return aEF;case
10:return aEG;case
11:return aEH;case
12:return aEI;case
13:return aEJ;case
14:return aEK;case
15:return aEL;case
16:return aEM;case
17:return aEN;case
18:return aEO;case
19:return aEP;default:return aEQ}else
switch(a[0]){case
0:return[0,y,[0,G(a[1]),aER]];case
1:return[0,y,[0,ld(a[1]),aES]];case
2:return[0,y,[0,ld(a[1]),aET]];case
3:return[0,y,[0,G(a[1]),aEU]];case
4:var
h=a[1],i=[0,G(a[2]),aEV];return[0,y,[0,[0,y,g(function(a){return G(a)},h)],i]];case
5:return[0,y,[0,[0,u,a[1]],aEW]];case
6:return[0,y,[0,ld(a[1]),aEX]];case
7:return[0,y,[0,[0,u,a[1]],aEY]];case
8:var
b=a[1],j=[0,G(b[6]),aEZ],k=[0,G(b[5]),j],l=[0,G(b[4]),k],m=[0,G(b[3]),l],n=[0,G(b[2]),m];return[0,y,[0,G(b[1]),n]];case
9:var
o=a[1],p=[0,G(a[2]),aE0];return[0,y,[0,G(o),p]];case
10:var
r=a[1],s=[0,G(a[2]),aE1];return[0,y,[0,G(r),s]];case
11:var
t=a[5],v=a[4],w=a[3],x=a[2],z=a[1],A=[0,G(a[6]),aE2],B=[0,G(t),A],C=[0,G(v),B],D=[0,G(w),C],E=[0,G(x),D];return[0,y,[0,G(z),E]];case
12:var
F=a[3],H=a[2],I=a[1],J=[0,G(a[4]),aE3],K=[0,G(F),J],L=[0,G(H),K];return[0,y,[0,G(I),L]];case
13:var
M=a[3],N=a[2],O=a[1],P=[0,G(a[4]),aE4],Q=[0,G(M),P],R=[0,G(N),Q];return[0,y,[0,G(O),R]];case
14:var
S=a[3],T=a[2],U=a[1],V=[0,G(a[4]),aE5],W=[0,G(S),V],X=[0,G(T),W];return[0,y,[0,G(U),X]];case
15:return[0,y,[0,G(a[1]),aE6]];case
16:return[0,y,[0,G(a[1]),aE7]];case
17:return[0,y,[0,G(a[1]),aE8]];case
18:return[0,y,[0,G(a[1]),aE9]];case
19:var
Y=a[1];return[0,y,[0,[0,u,Y],[0,G(a[2]),aE_]]];case
20:return[0,y,[0,ld(a[1]),aE$]];case
21:return[0,y,[0,G(a[1]),aFa]];case
22:var
Z=a[1],_=[0,G(a[2]),aFb];return[0,y,[0,G(Z),_]];case
23:var
$=a[1],aa=[0,G(a[2]),aFc];return[0,y,[0,G($),aa]];case
24:var
c=a[1],ab=[0,G(c[6]),aFd],ac=[0,G(c[5]),ab],ad=[0,G(c[4]),ac],ae=[0,G(c[3]),ad],af=[0,G(c[2]),ae];return[0,y,[0,G(c[1]),af]];case
25:return[0,y,[0,[0,u,a[1]],aFe]];case
26:var
ag=a[1],ah=0;return[0,y,[0,dj(0,e,function(a){return 0},d,ah,ag),aFf]];case
27:return[0,y,[0,[0,u,a[1]],aFg]];case
28:var
ai=a[1],aj=[0,[0,u,a[3]],aFh],ak=[0,G(a[2]),aj];return[0,y,[0,G(ai),ak]];case
29:var
al=a[1],am=[0,G(a[2]),aFi];return[0,y,[0,G(al),am]];case
30:var
an=a[5],ao=a[4],ap=a[3],aq=a[2],ar=a[1],as=[0,G(a[6]),aFj],at=[0,G(an),as],au=[0,G(ao),at],av=[0,G(ap),au],aw=[0,G(aq),av];return[0,y,[0,G(ar),aw]];case
31:return[0,y,[0,[0,u,a[1]],aFk]];case
32:return[0,y,[0,[0,u,a[1]],aFl]];case
33:var
ax=a[1];return[0,y,q(g(function(a){return G(a)},ax),aFm)];case
34:var
ay=a[1];return[0,y,q(g(function(a){return G(a)},ay),aFn)];case
35:var
az=a[1];return[0,y,q(g(function(a){return G(a)},az),aFo)];case
36:var
aA=a[1];return[0,y,q(g(function(a){return G(a)},aA),aFp)];case
37:var
aB=a[2],aC=[0,[0,u,a[1]],aFq];return[0,y,q(g(function(a){return G(a)},aB),aC)];case
38:var
aD=a[2],aE=[0,[0,u,a[1]],aFr];return[0,y,q(g(function(a){return G(a)},aD),aE)];case
39:return[0,y,[0,G(a[1]),aFs]];case
40:return[0,y,[0,G(a[1]),aFt]];case
41:var
aF=a[2],aG=a[1],aH=[0,G(a[3]),aFu],aJ=[0,G(aF),aH];return[0,y,[0,G(aG),aJ]];case
42:var
aK=a[2],aL=a[1],aM=[0,G(a[3]),aFv],aN=[0,G(aK),aM];return[0,y,[0,G(aL),aN]];case
43:var
aO=a[3],aP=a[2],aQ=a[1],aR=[0,G(a[4]),aFw],aS=[0,G(aO),aR],aT=[0,G(aP),aS];return[0,y,[0,G(aQ),aT]];case
44:var
aU=a[3],aV=a[2],aW=a[1],aX=[0,G(a[4]),aFx],aY=[0,G(aU),aX],aZ=[0,G(aV),aY];return[0,y,[0,G(aW),aZ]];case
45:return[0,y,[0,[0,u,a[1]],aFy]];case
46:var
f=a[1],a0=f[1],a1=[0,[0,u,aI(f[2])],aFz],a2=0;return[0,y,[0,dj(0,e,function(a){return 0},d,a2,a0),a1]];case
47:return[0,y,[0,[0,u,a[1]],aFA]];case
48:return[0,y,[0,[0,u,a[1]],aFB]];case
49:var
a3=a[2],a4=a[1],a5=0;return[0,y,[0,[0,u,a4],[0,dj(0,e,function(a){return 0},d,a5,a3),aFC]]];case
50:return[0,y,[0,[0,u,a[1]],aFD]];case
51:var
a6=a[2],a7=a[1],a8=0;return[0,y,[0,[0,u,a7],[0,dj(0,e,function(a){return 0},d,a8,a6),aFE]]];default:return[0,y,[0,[0,u,a[1]],aFF]]}}function
ns(b,a){if(typeof
a!=="number")switch(a[0]){case
3:return[3,tN(a[1])];case
5:var
e=a[1];return kI(function(a){return ns(b,a)},e);case
6:var
f=a[1];return gl(function(a){return ns(b,a)},f);case
7:var
d=a[1][1],c=d[1];if(typeof
c!=="number"&&6===c[0]){var
g=d[2],h=c[1];return[7,[0,[0,gl(function(a){return ns(b,a)},h),g]]]}break}return a}function
Fb(m,e,i,D,l,d){var
E=l?l[1]:0;if(E)el(function(a){return ns(d,a)},d);if(e)var
q=aw(d),a=bQ(0,0,1,d,g(function(a){var
b=a[1];if(b&&b[2]){var
c=bo(d,a[3],a[1]),e=a[5],f=a[4],g=a[3],h=a[2];return[0,[0,bg(c),0],h,g,f,e]}return a},q));else
var
a=d;if(D)cy(function(c,b){if(typeof
b!=="number"&&7===b[0])return m6(a,b);return 0},a);em(a);var
r=a[5],s=0,t=[0,0,dj(0,a,function(a){return 0},i,s,r)],v=[6,[0,aFK,[0,[0,aFJ,[0,e]],[0,[0,aFI,[0,1-i]],[0,[0,aFH,[1,a[1]]],[0,[0,aFG,[1,a[2]]],0]]]]]],w=0,x=0,f=[0,0],z=[0,-1,dj(0,a,function(a){return 0},x,w,v)],h=[0,0];function
A(b){f[1]=[0,b,f[1]];return e?m6(a,ai(a,b)):e}cy(function(c,b){var
d=h[1];h[1]=[0,[0,c,dj(0,a,A,i,e,b)],d];return 0},a);var
j=[0,z,[0,t,db(bY,h[1])]],C=e?g(function(m){var
b=m[2],d=m[1];if(at(d,f[1])){if(typeof
b!=="number"&&b4===b[1]){var
e=b[2];if(e){var
n=e[1];if(!c(n[1],aFM)){var
h=n[2];if(typeof
h!=="number"&&y===h[1]){var
i=h[2];if(i){var
j=i[2];if(j){var
o=j[1];if(typeof
o!=="number"&&u===o[1]&&!j[2]&&!e[2]){var
k=i[1],l=ai(a,d),r=0;if(typeof
l!=="number"&&7===l[0]){var
q=l[1][1][2];if(0===q[0]){var
p=q[1];r=1}}if(!r)var
p=af(aFN);if(typeof
k!=="number"&&b4===k[1]){var
v=k[2],w=[0,b4,al(function(b){var
a=b[1];if(c(a,aFP)&&c(a,aFQ))return[0,[0,a,b[2]]];return 0},v)],x=0,z=0,s=tq(a,aFR,[0,p,0]),t=0;return[0,d,[0,b4,[0,[0,aFS,[0,y,[0,w,[0,[0,y,g(function(b){return aEv(a,t,b)},s)],z]]]],x]]]}throw[0,B,aFO]}}}}}}}return af(aFL)}return[0,d,b]},j):j,k=[0,y,g(function(a){return[0,y,[0,[0,b6,a[1]],[0,a[2],0]]]},C)],n=m[6];if(n){var
F=0,o=sk(n[1]),p=function(a,b){return EB(F,a,b)};return I(U(o),azx,p,k)}var
G=ED(0,k);return b(m[5],G)}function
Fc(a){try{var
b=a[7],c=b?Fa(EK(0,0,0,b[1])):Fa(jd(0,0,0,aI(sF(a,0,a[5]))));return c}catch(a){a=d(a);return af(aR(a))}}function
Fd(b){var
a=b[7];if(6<a>>>0)return aFU;switch(a){case
0:return aFV;case
1:return aFW;case
2:return aFX;case
3:return aFY;case
4:return aFZ;case
5:return aF0;default:return aF1}}function
aF2(a){return R(Fd(a),0,3)}function
Fe(b){var
a=b[5];if(11<a>>>0)return aF3;switch(a){case
0:return aF4;case
1:return aF5;case
2:return aF6;case
3:return aF7;case
4:return aF8;case
5:return aF9;case
6:return aF_;case
7:return aF$;case
8:return aGa;case
9:return aGb;case
10:return aGc;default:return aGd}}function
aGe(a){return R(Fe(a),0,3)}function
aGf(c){var
b=a(k+c[4]);return 1===m(b)?o(aGg,b):b}function
aGh(c){var
b=a(k+c[4]);return 1===m(b)?o(aGi,b):b}function
Ff(c){var
b=a(k+c[3]);return 1===m(b)?o(aGj,b):b}function
aGk(c){var
b=a(k+(c[3]%12|0));return 1===m(b)?o(aGl,b):b}function
aGm(d){var
b=a(k+d[8]),c=m(b);return 1===c?o(aGn,b):2===c?o(aGo,b):b}function
aGp(c){var
b=a(k+(c[5]+1|0));return 1===m(b)?o(aGq,b):b}function
Fg(c){var
b=a(k+c[2]);return 1===m(b)?o(aGr,b):b}function
aGs(a){return 12<=a[3]?aGt:aGu}function
Fh(c){var
b=a(k+c[1]);return 1===m(b)?o(aGv,b):b}function
aGw(a){var
b=o(aGx,Fh(a)),c=o(aGy,o(Fg(a),b));return o(Ff(a),c)}function
aGz(c){var
b=c[7];return 0===b?aGA:a(k+(b+1|0))}function
aGB(b){return a(k+b[7])}function
aGC(b){return a(k+(b[6]+Pi|0))}var
aGE=0,aGX=[0,[0,aGW,aF2],[0,[0,aGV,Fd],[0,[0,aGU,aGe],[0,[0,aGT,Fe],[0,[0,aGS,aGf],[0,[0,aGR,aGh],[0,[0,aGQ,Ff],[0,[0,aGP,aGk],[0,[0,aGO,aGm],[0,[0,aGN,aGp],[0,[0,aGM,Fg],[0,[0,aGL,aGs],[0,[0,aGK,Fh],[0,[0,aGJ,aGw],[0,[0,aGI,aGz],[0,[0,aGH,aGB],[0,[0,aGG,aGC],[0,[0,aGF,function(a){return aGD}],aGE]]]]]]]]]]]]]]]]]];function
aGY(b){var
a=a9g(a9h(0));return[0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9]]}function
Fi(e){try{var
a=aGY(0);return a}catch(a){a=d(a);var
c=aR(a);b(K(aGZ),c);return aG0}}function
nt(c,d){var
e=c?c[1]:Fi(0),a=[0,d];x(function(c){var
d=c[1],f=a[1];a[1]=B0(d,b(c[2],e),f);return 0},aGX);return a[1]}k0(e8);function
Fj(a){eV(da,o(a,aG1));cR(da);mn(0);return a8Y(2)}function
t6(a){return a/wF/Ac*eK}function
t7(a){return a/Ac*eK}function
aG2(a){return a*eK}function
jg(b,a){var
c=e(b,aG3,a[5]);return c?aB(b,c[1]):a[2]}function
Fk(c,b){var
a=av(c,b);return a[3]-a[1]}function
Fl(c,b){var
a=av(c,b);return a[4]-a[2]}function
Fm(b,a){return av(b,a)[1]}function
Fn(b,a){return av(b,a)[2]}function
Fo(b,a){return av(b,a)[3]}function
Fp(b,a){return av(b,a)[4]}function
Fq(a,d,b){var
e=a2(b,aG4);if(0<=e){if(!(0<e))return Fl(a,d[2]);if(!c(b,aG5))return Fo(a,d[2]);if(!c(b,aG6))return Fp(a,d[2]);if(!c(b,aG7))return Fm(a,d[2]);if(!c(b,aG8))return Fn(a,d[2]);if(!c(b,aG9))return Fk(a,d[2])}else{if(!c(b,aG$))return Fl(a,jg(a,d));if(!c(b,aHa))return Fo(a,jg(a,d));if(!c(b,aHb))return Fp(a,jg(a,d));if(!c(b,aHc))return Fm(a,jg(a,d));if(!c(b,aHd))return Fn(a,jg(a,d));if(!c(b,aHe))return Fk(a,jg(a,d))}return _(aG_)}function
Fr(u,t,m,l,e,k){if(k){var
g=k[1],j=0,v=k[2];if(typeof
e!=="number")switch(e[0]){case
1:var
d=e[1];j=1;break;case
2:var
d=e[1];j=1;break;case
4:var
a=e[1],p=a2(a,aHl),n=0;if(0<=p){if(0<p&&c(a,aHm)&&c(a,aHn)&&c(a,aHo)&&c(a,aHp)&&c(a,aHq))n=1}else
if(c(a,aHr)&&c(a,aHs)&&c(a,aHt)&&c(a,aHu)&&c(a,aHv)&&c(a,aHw))n=1;if(!n){var
d=Fq(u,t,a);j=1}break}if(!j)var
d=_(aHf);var
o=0;if(typeof
m==="number"||!(4===m[0]))o=1;else{var
f=m[1];if(c(f,aHh))if(c(f,aHi))if(c(f,aHj))if(c(f,aHk))o=1;else
var
b=d;else
var
b=t6(d);else
var
b=d*eK;else
var
b=t7(d)}if(o)var
b=_(aHg);var
r=0;if(typeof
l!=="number"&&4===l[0]){var
h=l[1],s=0;if(c(h,aHy))if(c(h,aHz))if(c(h,aHA))if(c(h,aHB))s=1;else
var
i=g-b;else
var
i=g*b;else
var
i=g/b;else
var
i=g+b;if(!s){var
q=i;r=1}}if(!r)var
q=_(aHx);return[0,q,v]}return 0}function
ac(h,f,e,m,a,d){var
i=hq(a),j=ky(a),k=kz(a),c=cI(0.,i,0),l=b(c,k),g=[0,l,[0,b(c,j),m]];return h<50?uz(h+1|0,f,e,g,d):X(uz,[0,f,e,g,d])}function
uz(e,d,b,az,ay){var
a=az,f=ay;for(;;){if(f){var
i=f[1],aw=0;if(typeof
i==="number")aw=1;else
switch(i[0]){case
1:var
p=i[1],j=f[2];if(j){var
u=j[1],aH=0;if(typeof
u==="number"||!(4===u[0]))aH=1;else{var
v=u[1];if(!c(v,aHD)){var
aC=j[2],a=[0,gg(t7,p),a],f=aC;continue}if(!c(v,aHE)){var
aB=j[2],a=[0,gg(aG2,p),a],f=aB;continue}if(!c(v,aHF)){var
aA=j[2],a=[0,gg(t6,p),a],f=aA;continue}}}var
a=[0,p,a],f=f[2];continue;case
2:var
q=i[1],k=f[2];if(k){var
w=k[1],aI=0;if(typeof
w==="number"||!(4===w[0]))aI=1;else{var
x=w[1];if(!c(x,aHG)){var
aE=k[2],a=[0,t7(q),a],f=aE;continue}if(!c(x,aHH)){var
a=[0,q*eK,a],f=k[2];continue}if(!c(x,aHI)){var
aD=k[2],a=[0,t6(q),a],f=aD;continue}}}var
a=[0,q,a],f=f[2];continue;case
4:var
g=i[1],B=a2(g,aHJ);if(0<=B){if(!(0<B)){var
ae=f[2];return e<50?ac(e+1|0,d,b,a,kD,ae):X(ac,[0,d,b,a,kD,ae])}var
C=a2(g,aHK);if(0<=C){if(!(0<C)){var
M=f[2],N=bK(sK);return e<50?ac(e+1|0,d,b,a,N,M):X(ac,[0,d,b,a,N,M])}var
D=a2(g,aHL),z=0;if(0<=D){if(0<D){if(!c(g,aHM)){var
I=f[2],J=bK(kG);return e<50?ac(e+1|0,d,b,a,J,I):X(ac,[0,d,b,a,J,I])}if(!c(g,aHN)){var
H=f[2];return e<50?ac(e+1|0,d,b,a,kG,H):X(ac,[0,d,b,a,kG,H])}if(!c(g,aHO)){var
F=f[2],G=bK(kF);return e<50?ac(e+1|0,d,b,a,G,F):X(ac,[0,d,b,a,G,F])}if(!c(g,aHP)){var
E=f[2];return e<50?ac(e+1|0,d,b,a,kF,E):X(ac,[0,d,b,a,kF,E])}z=1}}else{if(!c(g,aH7)){var
L=f[2];return e<50?ac(e+1|0,d,b,a,sK,L):X(ac,[0,d,b,a,sK,L])}if(c(g,aH8)&&c(g,aH9)&&c(g,aH_)){if(!c(g,aH$)){var
f=f[2];continue}z=1}}if(!z){var
y=f[2];if(y){var
m=y[1],n=0;if(typeof
m!=="number")switch(m[0]){case
4:var
h=m[1],K=a2(h,aHV),A=0;if(0<=K){if(0<K&&c(h,aHW)&&c(h,aHX)&&c(h,aHY)&&c(h,aHZ)&&c(h,aH0)){n=2;A=1}}else
if(c(h,aH1)&&c(h,aH2)&&c(h,aH3)&&c(h,aH4)&&c(h,aH5)&&c(h,aH6)){n=2;A=1}if(!A)n=1;break;case
1:case
2:n=1;break}switch(n){case
2:break;case
0:break;default:var
r=y[2];if(r){var
s=r[1],aJ=0;if(typeof
s==="number"||!(4===s[0]))aJ=1;else{var
t=s[1],ax=0;if(c(t,aHR)&&c(t,aHS)&&c(t,aHT)&&c(t,aHU))ax=1;if(!ax){var
aF=r[2],a=Fr(d,b,s,i,m,a),f=aF;continue}}}var
a=Fr(d,b,aHQ,i,m,a),f=r;continue}}}}else{var
O=a2(g,aIa);if(0<=O){if(!(0<O)){var
V=f[2];return e<50?ac(e+1|0,d,b,a,sH,V):X(ac,[0,d,b,a,sH,V])}if(!c(g,aIb)){var
T=f[2],U=bK(sI);return e<50?ac(e+1|0,d,b,a,U,T):X(ac,[0,d,b,a,U,T])}if(!c(g,aIc)){var
S=f[2];return e<50?ac(e+1|0,d,b,a,sI,S):X(ac,[0,d,b,a,sI,S])}if(!c(g,aId)){var
Q=f[2],R=bK(sJ);return e<50?ac(e+1|0,d,b,a,R,Q):X(ac,[0,d,b,a,R,Q])}if(!c(g,aIe)){var
P=f[2];return e<50?ac(e+1|0,d,b,a,sJ,P):X(ac,[0,d,b,a,sJ,P])}}else{if(!c(g,aIf)){var
ab=f[2],ad=bK(e8);return e<50?ac(e+1|0,d,b,a,ad,ab):X(ac,[0,d,b,a,ad,ab])}if(!c(g,aIg)){var
aa=f[2];return e<50?ac(e+1|0,d,b,a,e8,aa):X(ac,[0,d,b,a,e8,aa])}if(!c(g,aIh)){var
_=f[2],$=bK(kE);return e<50?ac(e+1|0,d,b,a,$,_):X(ac,[0,d,b,a,$,_])}if(!c(g,aIi)){var
Z=f[2];return e<50?ac(e+1|0,d,b,a,kE,Z):X(ac,[0,d,b,a,kE,Z])}if(!c(g,aIj)){var
W=f[2],Y=bK(sH);return e<50?ac(e+1|0,d,b,a,Y,W):X(ac,[0,d,b,a,Y,W])}}}}else{var
af=a2(g,aIk),o=0;if(0<=af){if(0<af){var
ag=a2(g,aIl);if(0<=ag){if(!(0<ag)){var
an=f[2],ao=bK(kB);return e<50?ac(e+1|0,d,b,a,ao,an):X(ac,[0,d,b,a,ao,an])}if(!c(g,aIm)){var
am=f[2];return e<50?ac(e+1|0,d,b,a,kB,am):X(ac,[0,d,b,a,kB,am])}if(!c(g,aIn)){var
ak=f[2],al=bK(kC);return e<50?ac(e+1|0,d,b,a,al,ak):X(ac,[0,d,b,a,al,ak])}if(!c(g,aIo)){var
aj=f[2];return e<50?ac(e+1|0,d,b,a,kC,aj):X(ac,[0,d,b,a,kC,aj])}if(!c(g,aIp)){var
ah=f[2],ai=bK(kD);return e<50?ac(e+1|0,d,b,a,ai,ah):X(ac,[0,d,b,a,ai,ah])}o=1}else
if(c(g,aIq)){if(!c(g,aIr)){var
at=f[2],au=bK(kA);return e<50?ac(e+1|0,d,b,a,au,at):X(ac,[0,d,b,a,au,at])}if(!c(g,aIs)){var
as=f[2];return e<50?ac(e+1|0,d,b,a,kA,as):X(ac,[0,d,b,a,kA,as])}if(!c(g,aIt)){var
aq=f[2],ar=bK(sL);return e<50?ac(e+1|0,d,b,a,ar,aq):X(ac,[0,d,b,a,ar,aq])}if(!c(g,aIu)){var
ap=f[2];return e<50?ac(e+1|0,d,b,a,sL,ap):X(ac,[0,d,b,a,sL,ap])}o=1}}}else{var
av=a2(g,aIv);if(0<=av){if(0<av&&c(g,aIw)&&c(g,aIx)&&c(g,aIy)&&c(g,aIz))o=1}else
if(c(g,aIA)&&c(g,aIB)&&c(g,aIC)&&c(g,aID)&&c(g,aIE))o=1}if(!o){var
aG=f[2],a=[0,Fq(d,b,g),a],f=aG;continue}}break;default:aw=1}}return l(a)}}function
aHC(a,b,c,d){return kb(uz(0,a,b,c,d))}function
jh(a){if(a){var
f=a[1],g=f-99|0;if(!(13<g>>>0))switch(g){case
0:var
b=a[2];if(b&&dw===b[1])return[0,32,[0,99,[0,dw,[0,32,jh(b[2])]]]];break;case
6:var
c=a[2];if(c&&aY===c[1])return[0,32,[0,cO,[0,aY,[0,32,jh(c[2])]]]];break;case
10:var
d=a[2];if(d&&dw===d[1])return[0,32,[0,dw,[0,dw,[0,32,jh(d[2])]]]];break;case
13:var
e=a[2];if(e&&bX===e[1])return[0,32,[0,ec,[0,bX,[0,32,jh(e[2])]]]];break}return[0,f,jh(a[2])]}return 0}function
aIF(b,a){try{var
c=aw(b),d=eY(function(c){return aHC(b,c,0,gg(fb,P(jh(aK(a)))))},c),e=eY(function(b){if(b){var
c=b[2];if(c&&!c[2])return[0,b[1],c[1]]}return Fj(o(aIH,a))},d);return e}catch(b){return Fj(o(aIG,a))}}function
nu(u,t,s,a,r){if(u)var
h=u[1];else{var
o=f9(r),J=j$(o),K=ay(J);Cj(iX(0,o),K,0,J);dV(o);var
h=K}var
O=[0,[0,aII,[3,dX(aI(h))]],0],P=[0,aIL,[0,[0,aIK,[6,[0,[0,aIJ,[1,aa(h)]],O]]],0]],Q=am(a,[7,[0,[0,[6,[0,[0,aIM,[1,aa(h)]],P]],[0,h]]]]),i=bx(VZ(r)),v=[6,[0,[0,aIS,[6,[0,[0,aIR,[8,Q]],0]]],[0,[0,aIQ,[3,i]],[0,aIP,[0,aIO,[0,[0,aIN,[3,i]],0]]]]]];if(s){var
j=s[1],k=aw(a);if(0<=j&&!(z(k)<j)){var
c=b2(j,k),w=e(a,aIU,c[5]),L=0;if(w){var
m=w[1],ae=0;if(typeof
m!=="number"&&5===m[0]){var
x=m[1];L=1;ae=1}}if(!L)var
x=0;var
y=av(a,c[2])[4],R=[5,[0,[6,[0,[0,aI0,[8,am(a,v)]],[0,aIZ,[0,[0,aIY,[3,i]],[0,[0,aIX,[5,[0,aIW,[0,[2,y-Lf],[0,aIV,[0,[2,y-Ow],0]]]]]],0]]]]],x]],S=A(c[5],aI1,R),g=0,f=j,d=k,T=[0,c[1],c[2],c[3],c[4],S];for(;;){if(d){var
p=d[2],N=d[1];if(1===f){var
g=[0,T,g],f=f-1|0,d=p;continue}var
g=[0,N,g],f=f-1|0,d=p;continue}var
b=bQ(0,0,1,a,l(g)),U=b[7],V=b[6],W=b[5],X=b[4],Y=b[3],Z=t?b[2]:cs(b[2],4);return[0,b[1],Z,Y,X,W,V,U]}}return af(aIT)}var
B=ai(a,a[3]),C=e(a,aI2,B),D=C?C[1]:aI_,E=e(a,aI3,D),F=E?E[1]:aI9,G=e(a,aI4,F),M=0;if(G){var
n=G[1],ag=0;if(typeof
n!=="number"&&5===n[0]){var
H=n[1];M=1;ag=1}}if(!M)var
H=0;var
I=am(a,A(B,aI7,A(D,aI6,A(F,aI5,[5,q(H,[0,[3,i],[0,[8,am(a,v)],0]])])))),_=a[7],$=a[6],ab=A(a[5],aI8,[8,I]),ac=a[4],ad=t?a[2]:cs(a[2],4);return[0,a[1],ad,I,ac,ab,$,_]}function
aI$(a){var
b=e(a,aJa,a[5]);if(b){var
d=e(a,aJb,b[1]);if(d){var
h=e(a,aJc,d[1]);if(h)var
m=sS(a,h[1]),n=al(function(b){var
a=b[1];if(typeof
a!=="number"&&3===a[0])return[0,[0,a[1],b[2]]];return 0},m),i=g(function(d){var
i=d[1],g=e(a,aJd,d[2]);if(g){var
c=g[1];if(typeof
c!=="number"&&6===c[0]){var
h=e(a,aJf,c);if(h){var
b=h[1],j=function(e){try{cJ(b);d1(a,b);if(typeof
b!=="number"&&7===b[0]){var
c=b[1][1][2];if(0===c[0]){var
d=c[1];return d}}throw J}catch(a){throw[0,f,aJg]}};return[0,eq(i),0,j]}throw[0,f,aJh]}}throw[0,f,aJe]},n);else
var
i=0;var
j=i}else
var
j=0;var
k=j}else
var
k=0;var
l=aw(a),o=cd(l);return q(k,ah(bI(function(i,k){var
d=e(a,aJi,i[5]),h=0;if(d){var
b=d[1],j=0;if(typeof
b!=="number"&&5===b[0]){var
g=b[1];h=1;j=1}}if(!h)var
g=0;return al(function(d){var
l=e(a,aJj,d);if(l){var
g=l[1],t=0;if(typeof
g==="number"||!(4===g[0]))t=1;else
if(!c(g[1],aJk)){var
m=e(a,aJl,d);if(m){var
h=m[1];if(typeof
h!=="number"&&3===h[0]){var
n=h[1],o=e(a,aJm,d);if(o){var
i=o[1];if(typeof
i!=="number"&&6===i[0]){var
p=e(a,aJn,i);if(p){var
j=p[1];if(typeof
j!=="number"&&6===j[0]){var
q=e(a,aJp,j);if(q){var
b=q[1],s=function(e){try{cJ(b);d1(a,b);if(typeof
b!=="number"&&7===b[0]){var
c=b[1][1][2];if(0===c[0]){var
d=c[1];return d}}throw J}catch(a){throw[0,f,aJq]}};return[0,[0,eq(n),k,s]]}throw[0,f,aJr]}}var
r=function(a){throw[0,f,aJo]};return[0,[0,eq(n),k,r]]}}return 0}}return 0}}return 0},g)},l,o)))}var
le=[Q,aJC,aL(0)],Fs=[Q,aJD,aL(0)],nv=[Q,aJE,aL(0)];function
aJw(b){function
j(a){var
f=e(b,aJs,a[5]),h=0;if(f){var
d=f[1],k=0;if(typeof
d!=="number"&&5===d[0]){var
g=d[1];h=1;k=1}}if(!h)var
g=0;var
i=[5,al(function(d){var
f=e(b,aJt,d);if(f){var
a=f[1],g=0;if(typeof
a==="number"||!(4===a[0]))g=1;else
if(!c(a[1],aJu))return 0}return[0,d]},g)],j=A(a[5],aJv,i);return[0,a[1],a[2],a[3],a[4],j]}var
a=bQ(0,0,1,b,g(j,aw(b))),d=e(a,aJx,a[5]);if(d){var
f=d[1],h=e(a,aJy,f);if(h){var
i=am(a,A(f,aJA,bn(h[1],aJz))),k=a[7],l=a[6],m=A(a[5],aJB,[8,i]);return[0,a[1],a[2],i,a[4],m,l,k]}return a}return a}function
Ft(d){var
a=c0(function(a){return cS(aJF,a)},d),b=a[1];if(b){var
c=a[2];return c?[0,b,Ft(c[2])]:[0,b,0]}if(a[2])throw nv;return 0}function
Fu(e,b,d){var
a=aw(b),f=a7(cd(a),a),c=gd(al(function(a){var
b=a[1],c=a[2];return at(b,d)?[0,[0,b,c]]:0},f)),g=c[2],h=c[1];return sC(bI(function(d,c){var
a=av(b,c[2]);return n(e,a[3]-a[1],a[4]-a[2])?[0,d]:0},h,g))}function
aJG(b,a){return b<a?1:0}function
t8(a,b){return Fu(aJG,a,b)}function
aJH(b,a){return a<b?1:0}function
t9(a,b){return Fu(aJH,a,b)}function
ji(q,a,b){if(b){var
i=b[1],y=0;if(typeof
i==="number")y=1;else
switch(i[0]){case
1:var
r=b[2],d=i[1];if(!r)return[0,d,0];var
s=r[1],f=0;if(typeof
s!=="number"&&4===s[0])if(c(s[1],aJI))f=1;else{var
j=r[2];if(j){var
k=j[1],o=0;if(typeof
k!=="number")switch(k[0]){case
1:if(!j[2]){var
t=k[1];return t<d?l(L(t,d)):L(d,t)}f=1;o=1;break;case
4:if(c(k[1],aJJ)){f=1;o=1}else{if(!j[2]){if(d<=a)return L(d,a);throw[0,le,d]}f=1;o=1}break}if(!o)f=1}else
f=1}break;case
4:var
e=i[1];if(c(e,aJK))if(c(e,aJL)){if(c(e,aJM)){if(c(e,aJN)){if(c(e,aJO)){if(c(e,aJP)){if(!c(e,aJQ)&&!b[2])return l(L(1,a))}else
if(!b[2])return t8(q,L(1,a))}else
if(!b[2])return B3(L(1,a))}else
if(!b[2])return t9(q,L(1,a))}else
if(!b[2])return B4(L(1,a))}else{var
u=b[2];if(!u)return[0,a,0];var
v=u[1],h=0;if(typeof
v!=="number"&&4===v[0])if(c(v[1],aJR))h=1;else{var
m=u[2];if(m){var
n=m[1],p=0;if(typeof
n!=="number")switch(n[0]){case
1:if(!m[2]){var
w=n[1];if(w<=a)return l(L(w,a));throw[0,le,w]}h=1;p=1;break;case
4:if(c(n[1],aJS)){h=1;p=1}else{if(!m[2])return[0,a,0];h=1;p=1}break}if(!p)h=1}else
h=1}}else
if(!b[2])return L(1,a);break;default:y=1}}var
x=Ft(b);if(aD(x,[0,b,0]))throw nv;return ah(g(function(b){return ji(q,a,b)},x))}function
t_(a){if(a){var
b=a[1];return 1<b-44>>>0?[0,b,t_(a[2])]:[0,32,[0,b,[0,32,t_(a[2])]]]}return 0}function
aJT(a){return P(t_(aK(a)))}function
lf(c,a){if(typeof
a!=="number"&&4===a[0]){var
b=a[1];if(1<m(b)&&co===F(b,0))return[1,(c+1|0)+(-aE(P(bu(aK(b))))|0)|0]}return a}function
aJU(a,b){var
c=L(1,a);return al(function(a){return at(a,b)?0:[0,a]},c)}function
nw(b,a){return ah(g(function(a){return aP(a,b)},a))}function
hB(c,e,aj){var
aB=S(aj,aJV)?aJW:aj,A=aJT(aB);if(1<=c){try{var
o=aK(A),az=0;if(o){var
m=o[1],v=0;if(78===m){var
B=o[2];if(B){if(79===B[1]){var
C=B[2];if(C){if(84===C[1]){var
ak=aJU(c,hB(c,e,P(C[2])));v=1}}else
v=2}}else
v=2}var
h=0;switch(v){case
2:h=1;break;case
0:var
q=o[2];if(q){var
r=q[1],w=0;if(68===r){var
D=q[2];if(D){if(85===D[1]){var
E=D[2];if(E){if(80===E[1]){var
aC=hB(c,e,P(E[2])),al=nw(aE(P([0,m,0])),aC);w=1}}else{h=1;w=2}}}else{h=1;w=2}}var
i=0;switch(w){case
2:i=1;break;case
0:var
s=q[2];if(s){var
F=s[1],y=0;if(68===F){var
G=s[2];if(G){if(85===G[1]){var
H=G[2];if(H){if(80===H[1]){var
aD=hB(c,e,P(H[2])),am=nw(aE(P([0,m,[0,r,0]])),aD);y=1}}else{h=1;i=1;y=2}}}else{h=1;i=1;y=2}}var
j=0;switch(y){case
2:j=1;break;case
0:var
t=s[2];if(t){var
an=t[1],z=0;if(68===an){var
I=t[2];if(I){if(85===I[1]){var
J=I[2];if(J&&80===J[1]){var
aF=hB(c,e,P(J[2])),ao=nw(aE(P([0,m,[0,r,[0,F,0]]])),aF);z=1}else{h=1;i=1;j=1;z=2}}}else{h=1;i=1;j=1;z=2}}var
n=0;switch(z){case
2:n=1;break;case
0:var
ag=t[2];if(ag&&68===ag[1]){var
ah=ag[2];if(ah&&85===ah[1]){var
ai=ah[2];if(ai&&80===ai[1])var
aR=hB(c,e,P(ai[2])),ao=nw(aE(P([0,m,[0,r,[0,F,[0,an,0]]]])),aR);else{h=1;i=1;j=1;n=1}}else{h=1;i=1;j=1;n=1}}else{h=1;i=1;j=1;n=1}break}if(!n)var
am=ao}else{h=1;i=1;j=1}break}if(!j)var
al=am}else{h=1;i=1}break}if(!i)var
ak=al}else
h=1;break}if(!h){var
p=ak;az=1}}if(!az){var
k=l(aK(A)),aA=0;if(k){var
u=k[1],a=0;if(dq<=u)if(bX===u){var
K=k[2];if(K&&cO===K[1]){var
M=K[2];if(M&&97===M[1]){var
N=M[2];if(N&&bF===N[1]){var
O=N[2];if(O&&bX===O[1]){var
Q=O[2];if(Q&&bF===Q[1]){var
R=Q[2];if(R&&dq===R[1]){var
T=R[2];if(T&&ec===T[1]){var
ap=T[2];if(ap)var
aG=fb(P(l(ap))),aq=t8(e,ji(e,c,g(function(a){return lf(c,a)},aG)));else
var
aq=t8(e,L(1,c));var
ar=aq}else
a=1}else
a=1}else
a=1}else
a=1}else
a=1}else
a=1}else
a=1}else
a=1;else
if(aQ<=u){var
d=0;switch(u-100|0){case
0:var
U=k[2];if(U&&aQ===U[1]){var
V=U[2];if(V&&dq===V[1]){var
at=V[2];if(at)var
aI=fb(P(l(at))),aJ=ji(e,c,g(function(a){return lf(c,a)},aI)),au=b(b0(iU),aJ);else
var
aL=L(1,c),au=b(b0(iU),aL);var
W=au}else{a=1;d=1}}else{a=1;d=1}break;case
1:var
X=k[2];if(X&&ec===X[1]){var
Y=X[2];if(Y&&97===Y[1]){var
Z=Y[2];if(Z&&99===Z[1]){var
_=Z[2];if(_&&dO===_[1]){var
$=_[2];if($&&aQ===$[1]){var
aa=$[2];if(aa&&aY===aa[1]){var
ab=aa[2];if(ab&&97===ab[1]){var
ac=ab[2];if(ac&&cP===ac[1]){var
av=ac[2];if(av)var
aM=fb(P(l(av))),aw=t9(e,ji(e,c,g(function(a){return lf(c,a)},aM)));else
var
aw=t9(e,L(1,c));var
W=aw}else{a=1;d=1}}else{a=1;d=1}}else{a=1;d=1}}else{a=1;d=1}}else{a=1;d=1}}else{a=1;d=1}}else{a=1;d=1}}else{a=1;d=1}break;case
10:var
ad=k[2];if(ad&&bW===ad[1]){var
ae=ad[2];if(ae&&fp===ae[1]){var
af=ae[2];if(af&&bW===af[1]){var
ax=af[2];if(ax)var
aN=fb(P(l(ax))),aO=ji(e,c,g(function(a){return lf(c,a)},aN)),ay=b(b0(kt),aO);else
var
aP=L(1,c),ay=b(b0(kt),aP);var
W=ay}else{a=1;d=1}}else{a=1;d=1}}else{a=1;d=1}break;default:a=1;d=1}if(!d)var
ar=W}else
a=1;if(!a){var
as=ar;aA=1}}if(!aA)var
aH=fb(A),as=ji(e,c,g(function(a){return lf(c,a)},aH));var
p=as}}catch(a){throw nv}if(0===p)throw Fs;x(function(a){var
d=a<=0?1:0,b=d||(c<a?1:0);if(b)throw[0,le,a];return b},p);return p}throw[0,f,aJX]}function
aJ4(c,b){var
a=c;for(;;)try{hB(a,bm(0),b);var
e=1;return e}catch(b){b=d(b);if(b[1]===le){if(500000<=a)return 0;var
a=a*2|0;continue}b===nv;return 0}}function
aJ5(a){return aJ4(aQ,a)}function
aJ6(r,p){if(p){var
h=db(hf,p),f=aC(r);if(aD(B4(L(1,f)),h)&&3<f)return aJ8;if(aD(B3(L(1,f)),h)&&2<f)return aJ9;if(aD(L(1,f),h))return aJ_;var
b=0,d=h;for(;;){if(d){var
j=d[2],i=d[1];if(b){var
m=b[1];if(m){var
q=m[1],s=b[2],t=m[2];if(i===(q+1|0)){var
b=[0,[0,i,[0,q,t]],s],d=j;continue}var
b=[0,[0,i,0],b],d=j;continue}throw[0,B,aJ7]}var
b=[0,[0,i,0],0],d=j;continue}var
u=g(mL,l(g(l,b))),e=0,c=g(function(c){var
d=c[2],b=c[1];return b===d?a(k+b):o(a(k+b),o(aJ$,a(k+d)))},u);for(;;){if(c){var
n=c[1];if(c[2]){var
e=[0,aKa,[0,n,e]],c=c[2];continue}var
e=[0,n,e],c=0;continue}return bk(o,aKb,l(e))}}}return aKc}function
t$(h,f,i,r,a){var
e=i[4],g=i[3],b=i[2],c=i[1],d=2===r?mN(270.):0.;if(typeof
a==="number")switch(a){case
0:var
k=Math.atan((e-b)/(g-c)),l=f/2.;return[0,(g+c)/2.-l*Math.cos(k),(e+b)/2.-l*Math.sin(k),k];case
1:var
j=Math.atan((e-b)/(g-c)),m=f/2.;return[0,(g+c)/2.-m*Math.cos(j),e+b-((e+b)/2.-m*Math.sin(j)),j-(6.28318530717958623-(yg-2.*j)*2./2.)+yg];default:return[0,(c+g)/2.-f/2.,(b+e)/2.,d]}else
switch(a[0]){case
0:return[0,c+a[1]-f/2.,b+a[2],d];case
1:return[0,c+a[1],b+a[2],d];case
2:return[0,c+a[1]-f,b+a[2],d];case
3:var
s=a[1],t=h?0.:s;return[0,(c+g)/2.-f/2.,e-t,d];case
4:var
u=a[1],n=h?0.:u;return[0,c+n,e-n,d];case
5:var
v=a[1],o=h?0.:v;return[0,g-o-f,e-o,d];case
6:var
w=a[1],x=h?0.:w;return[0,c+x,(e+b)/2.,d];case
7:var
y=a[1],p=h?0.:y;return[0,c+p,b+p,d];case
8:var
z=a[1],A=h?0.:z;return[0,(c+g)/2.-f/2.,b+A,d];case
9:var
B=a[1],q=h?0.:B;return[0,g-q-f,b+q,d];default:var
C=a[1],D=h?0.:C;return[0,g-D-f,(e+b)/2.,d]}}function
lg(f,b,a){var
g=am(a,[7,[0,[0,[6,[0,[0,aKf,[1,aa(b)]],aKe]],[0,b]]]]),c=e(a,aKg,a[5]),h=c?c[1]:af(aKj),d=am(a,A(h,aKh,[8,g])),i=A(a[5],aKi,[8,d]),j=a[7],k=a[6],l=a[4],m=f?a[2]:cs(4,a[2]);return[0,a[1],m,d,l,i,k,j]}function
aKk(g,f,e){var
c=f9(f),b=ay(j$(c)),d=aa(b)-1|0,h=0;if(!(d<0)){var
a=h;for(;;){e6(b,a,rI(c));var
i=a+1|0;if(d!==a){var
a=i;continue}break}}return lg(g,b,e)}function
aKl(a){var
b=e(a,aKm,a[5]);if(b){var
c=am(a,bn(b[1],aKn)),d=a[7],f=a[6],g=A(a[5],aKo,[8,c]);return[0,a[1],a[2],c,a[4],g,f,d]}return af(aKp)}function
nx(b){var
c=e(b,aKq,b[5]);if(c){var
d=e(b,aKr,c[1]);if(d){var
a=d[1];if(typeof
a!=="number"&&7===a[0]){d1(b,a);if(typeof
a!=="number"&&7===a[0]){var
f=a[1][1][2];if(0===f[0])return[0,f[1]]}throw[0,B,aKs]}}return 0}return af(aKt)}function
eu(b){var
a=e(b,aKu,b[5]),f=a?a[1]:aKA;return function(c){var
d=e(b,c,f);if(d){var
a=d[1];if(typeof
a!=="number")switch(a[0]){case
0:return a[1]?aKy:aKz;case
3:return eq(a[1])}}return S(c,aKv)?aKw:aKx}}function
Fv(a){var
b=ln(aB7,0,0,0,0,[0,u,[0,0,aI(a)]]);function
c(b,a){return[0,b,a]}return I(aB8,c,function(a){return[1,a]},b)}function
Fx(n,l,f){if(0===f[0]){var
p=f[1][1],v=p[1],q=f[2];if(q){var
w=q[1],D=p[2];if(0!==w[0]&&!q[2]){var
H=w[1];if(S(v,n)&&S(D,l))return[0,H]}}var
E=f[2],F=p[2];if(S(v,n)&&S(F,l)){var
u=b(b0(function(a){return 0===a[0]?1:0}),E);if(u){var
k=u[1],r=0;if(0===k[0]){var
t=k[1][1],j=t[2],B=k[2],i=0;if(S(t[1],Fw)){var
y=0;if(!S(j,aKF)&&!S(j,aKH)&&!S(j,aKI))y=1;if(!y){var
C=al(function(a){if(0===a[0]){var
b=a[2];if(b){var
c=b[1],d=a[1][1],e=d[2],f=d[1];if(0!==c[0]&&!b[2]){var
g=c[1];if(S(f,Fw)&&S(e,aKG))return[0,g]}}}return 0},B),d=bk(function(a,b){var
d=c(a,aKC)?aKD:aKE;return o(a,o(d,b))},aKB,C);if(S(d,Q9)){var
h=d;i=1}else{var
z=0;if(!A7(aU(d,0))&&!A7(aU(d,m(d)-1|0))){var
h=d;i=1;z=1}if(!z){var
g=c_(d),s=a1(g),a=[0,0];for(;;){if(a[1]<s&&A5(c$(g,a[1]))){a[1]++;continue}var
e=[0,s-1|0];for(;;){if(a[1]<=e[1]&&A5(c$(g,e[1]))){e[1]+=-1;continue}var
A=a[1]<=e[1]?rY(g,a[1],(e[1]-a[1]|0)+1|0):Q2,h=bi(A);i=1;break}break}}}}}if(!i)r=1}else
r=1;if(r)var
h=aKJ;return[0,h]}return 0}var
G=f[2],x=al(function(a){return Fx(n,l,a)},G);return x?[0,x[1]]:0}return 0}function
aKK(a){return c(a,aKL)?c(a,aKM)?c(a,aKN)?c(a,aKO)?c(a,aKP)?c(a,aKQ)?c(a,aKR)?c(a,aKS)?_(aKT):[0,[0,cm,aKV],[0,[0,jj,aKU],0]]:[0,[0,cm,aKX],[0,[0,jj,aKW],0]]:[0,[0,cm,aKY],0]:[0,[0,cm,aK0],[0,[0,hC,aKZ],0]]:[0,[0,cm,aK1],0]:[0,[0,cm,aK3],[0,[0,hC,aK2],0]]:[0,[0,cm,aK5],[0,[0,hC,aK4],0]]:[0,[0,cm,aK7],[0,[0,jj,aK6],0]]}function
hD(e,d){var
f=aKK(d),a=nx(e);if(a){var
h=a[1];try{var
i=Fv(h)[2],j=g(function(a){var
b=Fx(a[1],a[2],i);return b?b[1]:aK9},f),c=b(cZ(function(a){return aD(aK_,a)}),j),k=c?c[1]:aK$;return k}catch(a){return aK8}}return aLa}function
Fy(e,d,c,a){if(0===a[0]){var
b=a[1],f=b[1],h=f[2],i=f[1],j=b[2];if(S(i,e)&&S(h,d))return[0,[0,[0,i,h],j],[0,[1,c],0]];var
k=a[2];return[0,b,g(function(a){return Fy(e,d,c,a)},k)]}return[1,a[1]]}function
Fz(d,a,b,e){var
c=[0,b];x(function(g){var
m=g[2],n=g[1],f=Fv(c[1]),d=0,i=f[2],j=f[1];if(typeof
a==="number")d=1;else
switch(a[0]){case
0:var
l=a[1]?aLc:aLd,b=l;break;case
3:var
b=eq(a[1]);break;default:d=1}if(d)var
b=_(aLb);var
k=[0,j,Fy(n,m,b,i)],e=aN(b7),h=ln(aB9,0,0,0,0,[0,KG,e]);I(aB_,function(a){return 0===a[0]?[0,15495,[0,a[1],a[2]]]:[0,gM,a[1]]},h,k);c[1]=bl(az(e));return 0},d);return c[1]}function
aLe(a){return[0,0,1,1,0,0,0,0,0,0]}function
ua(a){var
d=0;if(0===a[7]&&0===a[8]&&0===a[9]){var
c=aLf;d=1}if(!d)var
e=a[9],f=o(aLi,b(ae(aLh),e)),g=a[8],h=o(b(ae(aLj),g),f),i=0<=a[7]?aLk:aLl,c=o(i,h);return o(nt([0,[0,a[6],a[5],a[4],a[3],a[2]-1|0,a[1]-1900|0,0,0,0]],aLg),c)}function
lh(c){var
a=aLe(0);try{var
e=aK(c),C=0;if(e&&68===e[1]){var
f=e[2];if(f&&58===f[1]){var
g=f[2];if(g){var
h=g[2];if(h){var
i=h[2];if(i){var
j=i[2];if(j){var
k=j[2];a[1]=aE(P([0,g[1],[0,h[1],[0,i[1],[0,j[1],0]]]]));if(k){var
l=k[2];if(l){var
m=l[2];a[2]=aE(P([0,k[1],[0,l[1],0]]));if(m){var
n=m[2];if(n){var
o=n[2];a[3]=aE(P([0,m[1],[0,n[1],0]]));if(o){var
p=o[2];if(p){var
q=p[2];a[4]=aE(P([0,o[1],[0,p[1],0]]));if(q){var
r=q[2];if(r){var
s=r[2];a[5]=aE(P([0,q[1],[0,r[1],0]]));if(s){var
t=s[2];if(t){var
u=t[2];a[6]=aE(P([0,s[1],[0,t[1],0]]));if(u){var
v=u[2],z=u[1],D=43===z?1:45===z?-1:0;a[7]=D;if(v){var
w=v[2];if(w){var
x=w[2];if(x&&39===x[1]){var
y=x[2];a[8]=aE(P([0,v[1],[0,w[1],0]]));if(y){var
A=y[2];if(A){a[9]=aE(P([0,y[1],[0,A[1],0]]));throw aH}}throw aH}}}throw aH}throw aH}}throw aH}}throw aH}}throw aH}}throw aH}}throw aH}}}}b(K(aLm),c);var
B=ua(a);C=1}}if(!C){b(K(aLn),c);var
B=ua(a)}return B}catch(b){b=d(b);if(b===aH)return ua(a);throw b}}function
bS(j,i,h,a){var
b=h[2],d=h[1],o=h[3],p=j?j[1]:0,q=i?i[1]:0,k=e(a,aLo,a[5]),r=k?k[1]:aLQ,s=am(a,A(r,d,b));if(1-q){a[5]=A(a[5],aLp,[8,s]);a[2]=cs(a[2],o)}if(p){var
l=nx(a);if(l){var
t=l[1],m=function(a){if(typeof
a!=="number"&&3===a[0])return[3,lh(a[1])];return _(aLq)};if(c(d,aLr))if(c(d,aLs))if(c(d,aLt))if(c(d,aLu))if(c(d,aLv))if(c(d,aLw))if(c(d,aLx))if(c(d,aLy))if(c(d,aLz))var
n=_(aLA),g=n[2],f=n[1];else
var
g=b,f=[0,[0,cm,aLB],0];else
var
g=b,f=[0,[0,cm,aLD],[0,[0,jj,aLC],0]];else
var
g=b,f=[0,[0,cm,aLF],[0,[0,jj,aLE],0]];else
var
g=b,f=[0,[0,cm,aLG],0];else
var
g=m(b),f=[0,[0,cm,aLI],[0,[0,hC,aLH],0]];else
var
g=b,f=[0,[0,cm,aLJ],0];else
var
g=b,f=[0,[0,cm,aLM],[0,[0,hC,aLL],[0,[0,jj,aLK],0]]];else
var
g=m(b),f=[0,[0,cm,aLO],[0,[0,hC,aLN],0]];else
var
g=b,f=[0,[0,cm,aLP],0];return lg(1,Fz(f,g,t,a),a)}return a}return a}function
gu(a){if(c(a,aLR))return a;var
b=AZ(aLS);if(b&&!c(b[1],aLT))return nt([0,aFT],aLV);return nt(0,aLU)}function
aLW(a,b){var
d=nx(a);if(d){var
e=d[1],f=[0,[0,hC,aLX],0],g=c(b,aLY)?b:lh(gu(aLZ));return lg(1,Fz(f,[3,g],e,a),a)}return a}function
ub(d,b,a){var
c=e(b,aL0,b[5]);if(c){a[5]=A(a[5],aL1,c[1]);var
f=d?a[2]:cs(a[2],1);a[2]=f;return a}return a}function
aMo(f){var
c=[0,aKd],a=eu(f),g=[0,[0,aL3,lh(gu(aL2))],0],h=[0,[0,aL5,b(a,aL4)],g],i=[0,[0,aL7,b(a,aL6)],h],j=[0,[0,aL9,b(a,aL8)],i],k=[0,[0,aL$,b(a,aL_)],j],l=[0,[0,aMb,b(a,aMa)],k],m=[0,[0,aMd,b(a,aMc)],l],n=[0,[0,aMf,b(a,aMe)],m],d=b(a,aMg),o=S(d,aMh)?gu(aMi):d,p=[0,[0,aMj,lh(o)],n],e=b(a,aMk),q=S(e,aMl)?gu(aMm):e,r=[0,[0,aMn,lh(q)],p];x(function(a){c[1]=B0(a[1],a[2],c[1]);return 0},r);return lg(0,bl(c[1]),f)}function
jk(b,a){var
h=b[3],i=b[2],j=b[1],c=e(a,aMp,a[5]);if(c){var
d=c[1],f=e(a,aMq,d),k=f?f[1]:aMt,g=am(a,A(d,aMr,A(k,j,i))),l=A(a[5],aMs,[8,g]),m=a[7],n=a[6],o=a[4],p=cs(a[2],h);return[0,a[1],p,g,o,l,n,m]}return af(aMu)}function
aMv(a,b){if(c(b,aMw)&&c(b,aMx)&&c(b,aMy)&&c(b,aMz)&&c(b,aMA)&&c(b,aMB))return af(aMC);var
d=e(a,aMD,a[5]);if(d){var
g=d[1],f=am(a,A(g,aMF,[4,o(aME,b)])),h=A(a[5],aMG,[8,f]);return[0,a[1],a[2],f,a[4],h,a[6],a[7]]}return af(aMH)}function
aMI(a,b){if(c(b,aMJ)&&c(b,aMK)&&c(b,aML)&&c(b,aMM)&&c(b,aMN)&&c(b,aMO))return af(aMP);var
d=e(a,aMQ,a[5]);if(d){var
g=d[1],f=am(a,A(g,aMS,[4,o(aMR,b)])),h=A(a[5],aMT,[8,f]);return[0,a[1],a[2],f,a[4],h,a[6],a[7]]}return af(aMU)}function
aMV(a,g,b){if(!(aC(a)<b)&&0<=b){var
c=b2(b,bL(a)),h=g?[5,[0,[8,c],aMX]]:[5,[0,[8,c],aM4]],d=e(a,aM0,a[5]),i=[6,[0,[0,aMZ,h],aMY]];if(d){var
f=am(a,A(d[1],aM1,i)),j=A(a[5],aM2,[8,f]);return[0,a[1],a[2],f,a[4],j,a[6],a[7]]}return af(aM3)}throw af(aMW)}function
FA(l,q,p,d){var
m=bL(l),r=bJ(a7(m,cd(m)));if(d){var
n=0===d[1][1]?1:0,s=d[2];if(n){var
e=q,a=s;for(;;){if(a){var
f=a[1],c=f[1],o=a[2],g=hx([0,r],l,f[3]),h=c<(e+2|0)?1:0;if(h){var
i=0<=c?1:0;if(i){var
j=g<=p?1:0;if(j){var
k=0<=g?1:0;if(k){var
e=c,a=o;continue}var
b=k}else
var
b=j}else
var
b=i}else
var
b=h;return b}return 1}}return n}return 1}function
FB(b,g,a){if(typeof
a==="number")return 0;else
switch(a[0]){case
3:return kW(b,[3,a[1]]);case
5:var
c=a[1];if(c){var
d=c[1];if(typeof
d!=="number"&&1===d[0]){var
h=c[2],e=Dz(b,g);if(e)return kW(b,[5,[0,[8,e[1]],h]]);throw[0,f,aM5]}}break}return[0,a]}function
FC(i,s,r,h,q,f){var
k=0;if(f){var
e=f[1],m=0;if(typeof
e!=="number"&&3===e[0])if(f[2])m=1;else{var
p=e[1],n=function(a){return 0},o=function(a){return aeA},j=FB(i,h,ba(0,i5(1,ct(0,p),1,o,n))[2]);k=1;m=1}}if(!k)var
j=DA(i,h);var
a=0,b=aK(r);for(;;){if(b){var
g=b[1];if(92===g){var
c=b[2];if(c){var
d=c[1];if(34===d){var
a=[0,34,a],b=c[2];continue}if(92===d){var
a=[0,92,a],b=c[2];continue}if(aY===d){var
a=[0,10,a],b=c[2];continue}}}var
a=[0,g,a],b=b[2];continue}return[0,s,bx(P(l(a))),j,q]}}function
aNa(w,a){if(typeof
a!=="number"&&y===a[1]){var
b=a[2];return g(function(k){if(typeof
k!=="number"&&b4===k[1]){var
a=k[2];if(a){var
l=a[1];if(!c(l[1],aM7)){var
b=l[2];if(typeof
b!=="number"&&b6===b[1]){var
d=a[2];if(d){var
m=d[1],r=b[2];if(!c(m[1],aM8)){var
e=m[2];if(typeof
e!=="number"&&u===e[1]){var
f=d[2];if(f){var
n=f[1],s=e[2];if(!c(n[1],aM9)){var
g=n[2];if(typeof
g!=="number"&&b6===g[1]){var
h=f[2];if(h){var
o=h[1],t=g[2];if(!c(o[1],aM_)){var
i=o[2];if(typeof
i!=="number"&&eb===i[1]){var
j=h[2];if(j){var
p=j[1],v=i[2];if(!c(p[1],aM$)&&!j[2]){var
q=FB(w,t,cA(p[2]));return[0,r,bx(s),q,v]}}}}}}}}}}}}}}}return af(aM6)},b)}return af(aNb)}function
aNc(g,c,a){try{var
f=a[7],i=f?EK(0,0,0,f[1]):jd(0,0,0,aI(sF(a,0,a[5]))),e=aNa(c,i),j=g?FA(c,0,aC(c),e)?e:af(aNe):e;return j}catch(a){a=d(a);var
h=aR(a);return af(b(ae(aNd),h))}}function
aNf(h,b,g){var
i=0;try{var
p=[0,0],e=[0,0],m=Ci(g);x(function(t){p[1]++;var
f=fb(t);if(f){var
g=f[1],u=0;if(typeof
g==="number"||!(1===g[0]))u=1;else{var
h=f[2];if(h){var
i=h[1],s=0;if(typeof
i!=="number"&&3===i[0]){var
d=h[2];if(d){var
j=d[1];if(typeof
j!=="number"&&1===j[0]){var
n=j[1],q=i[1],r=g[1],l=d[2];if(l){var
m=l[1],v=0;if(typeof
m==="number"||!(4===m[0]))v=1;else
if(!c(m[1],aNi))return Y(e,FC(b,r,q,n,1,l[2]))}return Y(e,FC(b,r,q,n,0,d[2]))}s=1}else
s=1}}}return af(o(aNh,a(k+p[1])))}return 0},m);var
f=l(e[1]),q=h?FA(b,0,aC(b),f)?f:af(aNj):f;return q}catch(a){a=d(a);var
j=aR(a);return af(n(ae(aNg),i,j))}}function
aNk(d,c,b,a){var
e=d?aNc:aNf;return ff(e(c,a,b),a)}function
aNq(a){var
e=dB(20480),h=e[1],n=e[2],i=L(1,aC(a)),k=dF(a),c=bL(a),l=Cb(i),f=aD(i,L(1,aC(a))),d=bJ(a7(c,cd(c))),m=b(b0(function(b){if(f)var
c=f;else{var
g=0===b[3]?1:0;if(g)var
c=g;else{var
i=0,h=b[3];if(typeof
h!=="number"&&1===h[0]){var
e=1;i=1}if(!i)var
e=0;if(!e)return gc(l,hx([0,d],a,b[3]));var
c=e}}return c}),k),j=ED(0,[0,y,g(function(b){var
f=b[3],c=kX(f),h=0,o=0;if(typeof
c!=="number"&&5===c[0]){var
e=c[1];if(e){var
k=e[2],l=[5,[0,[1,hx([0,d],a,f)],k]],m=0,n=0,g=dj(0,a,function(a){return 0},n,m,l);h=1}}if(!h)var
i=0,j=0,g=dj(0,a,function(a){return 0},j,i,c);var
p=[0,[0,aNm,[0,eb,b[4]]],[0,[0,aNl,g],o]],q=[0,[0,aNn,[0,b6,hx([0,d],a,b[3])]],p],r=[0,[0,aNo,[0,u,eq(tN(b[2]))]],q];return[0,b4,[0,[0,aNp,[0,b6,b[1]]],r]]},m)]);b(h[5],j);return dC(h,n)}function
aNr(b,a){if(typeof
a!=="number")switch(a[0]){case
2:var
c=a[1];if(0===c[0]){var
k=a[4],l=a[3],m=a[2];return[2,[0,an(b,c[1])],m,l,k]}break;case
3:var
d=a[1];if(0===d[0])return[3,[0,an(b,d[1])]];break;case
4:var
e=a[1];if(0===e[0]){var
n=a[2];return[4,[0,an(b,e[1])],n]}break;case
5:var
f=a[1];if(0===f[0]){var
o=a[2];return[5,[0,an(b,f[1])],o]}break;case
6:var
g=a[1];if(0===g[0]){var
p=a[5],q=a[4],r=a[3],s=a[2];return[6,[0,an(b,g[1])],s,r,q,p]}break;case
7:var
h=a[1];if(0===h[0])return[3,[0,an(b,h[1])]];break;case
8:var
i=a[1];if(0===i[0]){var
t=a[2];return[8,[0,an(b,i[1])],t]}break;case
9:var
j=a[1];if(0===j[0]){var
u=a[2];return[9,[0,an(b,j[1])],u]}break}return a}function
FD(b,a){var
e=a[4];try{var
f=aNr(b,a[3]),c=f}catch(b){b=d(b);if(b!==J)throw b;var
c=a[3]}return[0,a[1],a[2],c,e]}function
aW(o,g,m){var
h=aw(g),p=L(1,z(h)),b=Xm,a=bI(function(a,b){return at(a,m)?n(o,a,b):[0,b,a,au]},p,h);for(;;){var
d=b[3],e=b[2],f=b[1];if(a){var
c=a[1],b=[0,[0,c[1],f],[0,c[2],e],[0,c[3],d]],a=a[2];continue}var
i=l(d),j=l(e),k=l(f);return bQ([0,a7(j,i)],0,1,g,k)}}function
FE(d,b,c){var
a=aw(b),e=L(1,z(a));return cr(function(a,e){var
b=at(a,c);return b?n(d,a,e):b},e,a)}function
FF(a,c,f,k,j){function
d(m,d){if(S(f,aNs))var
c=av(a,d[2]);else
var
i=e(a,f,d[5]),l=i?av(a,i[1]):k?av(a,d[2]):af(b(ae(aNu),f)),c=l;var
g=c[2],h=c[1];return dG(a,[0,[14,h,g,c[3]-h,c[4]-g],aNt],[0,j],d)}return aW(function(a,b){return bD(d,a,b)},a,c)}function
FG(e,i,c,d,h){var
j=e?e[1]:0,f=eW(i,d-1|0),a=f[2],b=f[1],k=[8,e7([2,b,a])],g=es(c,dg(-b,-a),h),l=g[5];et(c,dg(b,a),l);var
m=dg(b,a);return[0,dG(c,[0,k,0],[0,j],g),d,m]}function
ny(b,d,a,c){var
e=b?b[1]:0,f=[0,e];return aW(function(b,c){return FG(f,d,a,b,c)},a,c)}function
FH(a){return[5,[0,[2,a[1]],[0,[2,a[2]],[0,[2,a[3]],[0,[2,a[4]],0]]]]]}function
nz(d,c,a){var
f=a7(FI,g(function(b){return e(c,b,a[5])},FI)),h=b(cZ(function(a){return a[2]?0:1}),f),i=g(function(a){var
b=a[2];if(b)return[0,a[1],b[1]];throw[0,B,aNv]},h),j=a[5],k=bk(function(e,a){var
f=a[1];return ht(e,f,FH(b(d,av(c,a[2]))))},j,i),l=a[4],m=a[3],n=FH(b(d,av(c,a[2])));return[0,a[1],n,m,l,k]}function
FJ(b,a,p,d,c){var
t=b?b[1]:0;return aW(function(u,g){var
i=e(d,aNw,g[5]),q=i?i[1]:g[2],j=t$(1,0.,av(d,q),0,a),h=0,r=j[2],s=j[1];if(typeof
a==="number")h=1;else
switch(a[0]){case
3:var
c=-a[1],b=0.;break;case
4:var
l=a[1],c=-l,b=l;break;case
5:var
m=a[1],c=-m,b=-m;break;case
6:var
c=0.,b=a[1];break;case
7:var
n=a[1],c=n,b=n;break;case
8:var
c=a[1],b=0.;break;case
9:var
o=a[1],c=o,b=-o;break;case
10:var
c=0.,b=-a[1];break;default:h=1}if(h)var
c=0.,b=0.;var
f=iY([0,[2,b,c],[0,[0,[0,s,r],p,p],0]]),k=es(d,f,g);et(d,f,k[5]);return[0,dG(d,[0,[8,f],0],[0,t],k),u,f]},d,c)}function
FK(e,b,a){function
c(f,a){var
b=eW(e,f-1|0),c=b[2],d=b[1];return[0,a[1],[5,[0,[2,d],[0,[2,c],[0,[2,d+b[3]],[0,[2,c+b[4]],0]]]]],a[3],a[4],a[5]]}return aW(function(a,b){return bD(c,a,b)},b,a)}function
FL(b,a){function
c(c,a){var
b=bn(a[5],aNy);return[0,a[1],a[2],a[3],a[4],b]}return aW(function(a,b){return bD(c,a,b)},b,a)}function
aNz(b,a){function
c(c,a){var
b=bn(a[5],aNA);return[0,a[1],a[2],a[3],a[4],b]}return aW(function(a,b){return bD(c,a,b)},b,a)}function
aNB(b,a){function
c(c,a){var
b=bn(a[5],aNC);return[0,a[1],a[2],a[3],a[4],b]}return aW(function(a,b){return bD(c,a,b)},b,a)}function
aND(b,a){function
c(c,a){var
b=bn(a[5],aNE);return[0,a[1],a[2],a[3],a[4],b]}return aW(function(a,b){return bD(c,a,b)},b,a)}function
nA(c,b,a){var
k=c?c[1]:0;function
e(c){var
d=0===c[4]?1:0;if(d){var
e=av(a,c[2]),f=e[2],g=e[1],h=g<qj?1:0;if(h){var
i=f<qj?1:0;if(i)var
j=NP<g?1:0,b=j?NP<f?1:0:j;else
var
b=i}else
var
b=h;var
k=b}else
var
k=d;return k}var
d=aw(a);return 1-at(0,g(e,al(function(a){try{var
b=[0,b2(a,d)];return b}catch(a){return 0}},b)))?a:aW(function(s,g){var
o=nc(g[4]),c=av(a,g[2]),p=(c[2]+c[4])/2.,q=(c[1]+c[3])/2.,b=Co([0,q,p],mN(-o)),r=nz(function(a){var
e=a[4],f=a[3],c=bO(b,[0,a[1],a[2]]),g=c[2],h=c[1],d=bO(b,[0,f,e]);return[0,h,g,d[1],d[2]]},a,g),h=es(a,mQ(b),r);et(a,b,h[5]);var
d=dG(a,[0,[8,b],0],[0,k],h),l=[0,d[1],d[2],d[3],0,d[5]],i=av(a,l[2]),e=i[2],f=i[1],j=nz(function(a){return[0,a[1]-f,a[2]-e,a[3]-f,a[4]-e]},a,l),n=0;if(f==0.&&e==0.){var
m=j;n=1}if(!n)var
m=FG([0,k],[0,[0,-f,-e],0],a,1,j)[1];return[0,m,s,b]},a,b)}function
uc(c,b,a){function
d(e,a){var
b=a[5],d=nd(c);return[0,a[1],a[2],a[3],d,b]}return aW(function(a,b){return bD(d,a,b)},b,a)}function
aNF(c,b,a){function
d(e,a){var
b=a[5],d=nd((nc(a[4])+c|0)%Jq|0);return[0,a[1],a[2],a[3],d,b]}return aW(function(a,b){return bD(d,a,b)},b,a)}function
aNG(b,f,a,c){var
h=b?b[1]:0;return aW(function(i,g){var
b=av(a,g[2]),e=[0,(b[1]+b[3])/2.,(b[2]+b[4])/2.],c=e7([1,e,-mN(f)]),d=es(a,e7([1,e,mN(f)]),g);et(a,c,d[5]);return[0,dG(a,[0,[8,c],0],[0,h],d),i,c]},a,c)}function
FM(b,h,a,c){var
i=b?b[1]:0;return aW(function(e,j){var
f=eW(h,e-1|0),c=f[2],d=f[1],k=nz(function(a){return[0,a[1]*d,a[2]*c,a[3]*d,a[4]*c]},a,j),b=e7([0,aNH,d,c]),g=es(a,mQ(b),k);et(a,b,g[5]);return[0,dG(a,[0,[8,b],0],[0,i],g),e,b]},a,c)}function
ud(b,d,v,u,f,a,c){var
w=b?b[1]:0;return aW(function(o,j){var
p=eW(u,o-1|0),f=p[2],g=p[1],q=e(a,aNI,j[5]),x=q?q[1]:j[2],r=av(a,x),h=r[4],i=r[3],t=0;if(!(i<=0.)&&!(h<=0.)){var
b=df(g/i,f/h)*v,m=0;if(typeof
d==="number")m=1;else
switch(d[0]){case
6:var
k=0.;break;case
10:var
k=g-i*b;break;default:m=1}if(m)var
k=(g-i*b)/2.;var
n=0;if(typeof
d==="number")n=1;else
switch(d[0]){case
3:var
l=f-h*b;break;case
8:var
l=0.;break;default:n=1}if(n)var
l=(f-h*b)/2.;var
c=iY([0,[2,k,l],[0,[0,aNK,b,b],0]]);t=1}if(!t)var
c=_(aNJ);var
s=nz(function(a){return[0,0.,0.,g,f]},a,j);et(a,c,s[5]);return[0,dG(a,[0,[8,c],0],[0,w],es(a,mQ(c),s)),o,c]},a,c)}function
FN(k,d,j,c){if(k)var
e=0;else{var
g=bo(d,j,c),m=0,h=z(b(b0(function(a){return aD(m,a)}),g)),n=1,i=z(b(b0(function(a){return aD(n,a)}),g)),a=i<h?h-i|0:0;if(0!==a)b(K(aNN),a);var
e=a}function
f(a){return am(d,bg(a))}var
l=f(aNL);return q([0,[8,l],0],q(c,[0,[8,f(q(aP(1,e),aNM))],0]))}function
aNO(b,a,d){var
c=aw(b);if(!(z(c)<a)&&1<=a)return e(b,d,b2(a,c)[5])?1:0;throw[0,$,aNP]}function
FO(e,h,a,g,d){var
i=e?e[1]:0,b=av(a,d[2]),c=a9(h,b[1],b[2],b[3],b[4]),f=es(a,c,d);et(a,c,f[5]);return[0,dG(a,[0,[8,c],0],[0,i],f),g,c]}function
aNQ(b,a,c){var
d=b?b[1]:0;function
e(d,b,c,a){return e7([0,[0,0.,(b+a)/2.],1.,J5])}var
f=[0,d];return aW(function(b,c){return FO(f,e,a,b,c)},a,c)}function
aNR(b,a,c){var
d=b?b[1]:0;function
e(b,d,a,c){return e7([0,[0,(b+a)/2.,0.],J5,1.])}var
f=[0,d];return aW(function(b,c){return FO(f,e,a,b,c)},a,c)}function
FP(L,s,a,U,T,S,R,b,k,f,aj){var
M=e(b,aNU,k[5]),V=M?M[1]:k[2],t=av(b,V),x=t[4],y=t[3],u=t[2],v=t[1],N=e(b,aNV,f[5]),W=N?N[1]:f[2],w=av(b,W),z=w[4],B=w[3],l=w[2],m=w[1];if(S){var
g=(B-m)/(y-v),j=(z-l)/(x-u),O=0;if(g<L8&&j<L8)var
n=j<g?g:j;else
O=1;if(O){var
P=0;if(u5<=g&&u5<=j)var
n=j<g?j:g;else
P=1;if(P)var
n=u5<=g?j:g}var
X=m+(B-m-(y-v)*n)/2.,Y=l+(z-l-(x-u)*n)/2.,Z=[0,[0,[0,v,u],n,n],0],_=L?[0,[2,m,l],0]:0,C=iY(q([0,[2,X,Y],0],q(_,Z)));et(b,C,k[5]);var
r=es(b,C,dG(b,[0,[8,C],0],[0,s],k))}else{var
h=y-v,i=x-u,o=B-m,p=z-l,d=T?i/2.:U?i:0.;if(typeof
a==="number")var
c=[0,o/2.-h/2.,p/2.-i/2.-d];else
switch(a[0]){case
0:var
c=[0,a[1]-h/2.,a[2]-d];break;case
1:var
c=[0,a[1],a[2]-d];break;case
2:var
c=[0,a[1]-h,a[2]-d];break;case
3:var
c=[0,o/2.-h/2.,p-a[1]-i-d];break;case
4:var
F=a[1],c=[0,F,p-i-F-d];break;case
5:var
G=a[1],c=[0,o-h-G,p-i-G-d];break;case
6:var
c=[0,a[1],p/2.-i/2.-d];break;case
7:var
H=a[1],c=[0,H,H-d];break;case
8:var
c=[0,o/2.-h/2.,a[1]-d];break;case
9:var
I=a[1],c=[0,o-h-I,I-d];break;default:var
c=[0,o-h-a[1],p/2.-i/2.-d]}var
ah=[0,[2,c[1],c[2]],0],ai=L?[0,[2,m,l],0]:0,E=iY(q(ai,ah));et(b,E,k[5]);var
r=es(b,E,dG(b,[0,[8,E],0],[0,s],k))}var
D=f[5],$=r[5];function
J(a){if(typeof
a!=="number"&&6===a[0]){var
c=a4(aNS,a[1]);if(c){var
b=c[1];if(typeof
b!=="number"&&5===b[0])return b[1]}return 0}return 0}var
Q=J(D),K=q(Q,J($)),aa=K?A(D,aNT,[5,K]):D,ab=f[4],ac=E_(b,f[3],r[3]),ad=f[2],ae=FN(s,b,r[3],r[1]),af=FN(s,b,f[3],f[1]),ag=R?q:Xp;return[0,ag(af,ae),ad,ac,ab,aa]}function
aNW(t,s,r,q,p,o,n,m,f,b){tD(f,ng(b));var
u=dF(b),v=bL(b),c=kY(b),d=kY(f),h=L(1,aC(c)),i=aw(d),w=i?bQ(0,aNX,1,d,[0,i[1],0]):af(aN0),a=hz(0,0,aNZ,[0,c,[0,w,0]],[0,h,aNY]),e=ub(1,c,[0,a[1],a[2],a[3],a[4],a[5],a[6],c[7]]),j=aw(e),x=gh(j),y=ho(j),k=bI(function(b,a){var
c=at(b,m)?x:k0(e8);return FP(t,p,s,r,q,o,n,e,c,a,d)},h,y),A=L(1,z(k)),B=1,l=bQ(0,[0,g(function(a){return[0,a,a]},A)],B,e,k),C=bJ(a7(v,bL(l)));return ff(g(function(a){return FD(C,a)},u),l)}function
aN1(x,b,a,w,v,u){tD(a,ng(b));var
y=dF(a),A=dF(b);if(u){var
c=aC(b),e=aC(a);if(c<e)var
o=L(1,c),p=g(function(a){return[0,a,a]},o),h=[0,b,bQ(0,[0,p],1,a,iT(aw(a),c))];else
if(e<c)var
r=L(1,e),s=g(function(a){return[0,a,a]},r),t=aP(k0(e8),c-e|0),h=[0,b,bQ(0,[0,s],1,a,q(aw(a),t))];else
var
h=[0,b,a];var
d=h[2]}else
var
d=a;var
B=aC(d),j=aC(b);if(j!==B)throw[0,f,aN2];var
C=L(1,aC(b)),i=hz(0,0,aN3,[0,b,[0,d,0]],[0,C,[0,L(1,aC(d)),0]]),k=hn(aw(i),j),D=k[2],E=k[1],l=bI(function(b,a){return FP(0,x,aN4,0,0,w,1-v,i,b,a,d)},D,E),m=z(l),n=L(1,m),F=q(n,n),G=bQ(0,[0,a7(L(1,m*2|0),F)],1,i,l);return ff(q(A,y),G)}function
nB(g,f,e,d,c,b,a){function
h(h,a){var
b=A(a[5],g,[5,[0,[2,f],[0,[2,d],[0,[2,e],[0,[2,c],0]]]]]);return[0,a[1],a[2],a[3],a[4],b]}return aW(function(a,b){return bD(h,a,b)},b,a)}function
aN5(a,e,c,b){var
f=a?a[1]:aN6;function
d(g,a){var
b=eW(e,g-1|0),c=b[2],d=b[1],h=A(a[5],f,[5,[0,[2,d],[0,[2,c],[0,[2,d+b[3]],[0,[2,c+b[4]],0]]]]]);return[0,a[1],a[2],a[3],a[4],h]}return aW(function(a,b){return bD(d,a,b)},c,b)}function
ue(c,f,d){if(S(d,aN7)){var
a=f[2];if(typeof
a!=="number"&&5===a[0]){var
g=a[1];if(g){var
h=g[2];if(h){var
i=h[2];if(i){var
j=i[2];if(j&&!j[2])return[0,av(c,a)]}}}}return 0}var
k=e(c,d,f[5]);if(k){var
b=k[1],p=0;if(typeof
b==="number"||!(5===b[0]))p=1;else{var
l=b[1];if(l){var
m=l[2];if(m){var
n=m[2];if(n){var
o=n[2];if(o&&!o[2])return[0,av(c,b)]}}}}}return 0}function
aOi(a,c,b){var
g=a?a[1]:0;function
d(h,j){function
a(b,e,d,l){var
m=b[3],n=b[2],o=b[1],f=ue(c,j,l);if(f){var
a=f[1],g=a[2],h=a[1],k=0,p=[0,[14,h,g,a[3]-h,a[4]-g],aN8],q=0.;if(e==0.&&d==0.){var
i=0;k=1}if(!k)var
i=[0,e,[0,d,0]];return[0,0,[0,[41,o/gN,n/gN,m/gN],[0,aN9,[0,[4,i,q],p]]]]}return 0}var
b=a(aN$,2.,2.,aN_),d=q(a(aOb,3.,3.,aOa),b),e=q(a(aOd,5.,5.,aOc),d),f=q(a(aOf,7.,7.,aOe),e);return k2(c,q(a(aOh,0.,0.,aOg),f),[0,g],j)}return aW(function(a,b){return bD(d,a,b)},c,b)}function
gv(a){return[0,[9,a[1],a[2]],[0,[10,a[3],a[4]],aOj]]}var
li=[0,0],uf=[0,0.];function
aOo(a,g,b){var
w=a?a[1]:0;function
c(x,h){var
i=ue(g,h,aOk),j=ue(g,h,aOl);if(i&&j){var
e=j[1],k=e[4],l=e[3],m=e[2],n=e[1],f=i[1],b=f[4],c=f[3],a=f[2],d=f[1],o=q(gv([0,d,a-9.,d,m]),aOm),p=q(gv([0,d-9.,a,n,a]),o),r=q(gv([0,c,a-9.,c,m]),p),s=q(gv([0,c+9.,a,l,a]),r),t=q(gv([0,c,b+9.,c,k]),s),u=q(gv([0,c+9.,b,l,b]),t),v=q(gv([0,d,b+9.,d,k]),u);return k2(g,q(aOn,q(gv([0,n,b,a-9.,b]),v)),[0,w],h)}return h}return aW(function(a,b){return bD(c,a,b)},g,b)}function
nC(a){switch(a[0]){case
0:return[40,a[1]];case
1:return[42,a[1],a[2],a[3]];default:return[44,a[1],a[2],a[3],a[4]]}}function
ug(a){switch(a[0]){case
0:return[39,a[1]];case
1:return[41,a[1],a[2],a[3]];default:return[43,a[1],a[2],a[3],a[4]]}}function
lj(e,c){var
a=fb(an(e,c));if(a){var
b=a[1],d=0;if(typeof
b==="number")d=1;else
switch(b[0]){case
1:if(!a[2])return[1,b[1]];break;case
2:if(!a[2])return[2,b[1]];break;default:d=1}}throw[0,$,o(aOx,c)]}function
aOy(g,f){function
a(a){if(typeof
a!=="number")switch(a[0]){case
1:return[1,a[1]];case
2:return[2,a[1]]}throw[0,$,aOz]}var
b=fb(an(g,f));if(b){var
c=b[2];if(c){var
d=c[2];if(d){var
e=d[2];if(e&&!e[2]){var
h=d[1],i=c[1],j=b[1],k=[0,a(e[1]),0],l=[0,a(h),k],m=[0,a(i),l];return[0,a(j),m]}}}}throw[0,$,aOA]}function
aOB(b){var
a=aK(b);if(a&&47===a[1])return P(a[2]);throw[0,$,aOC]}function
aOD(a){var
b=g(function(a){return[0,a[2],a[1]]},DM),c=L(0,aq);return g(function(c){try{var
d=A2(aOB(A2(c,b)),a);return d}catch(a){return 0}},c)}function
aOE(d){try{var
e=D3(de(ni(o(aOF,d))))[1];try{var
g=lj(e,aOH),a=g}catch(b){var
a=aOG}var
c=0;if(typeof
a==="number")c=1;else
switch(a[0]){case
1:var
b=a[1];break;case
2:var
b=a[1];break;default:c=1}if(c)var
b=0.;var
f=[0,b];return f}catch(a){return 0}}function
FQ(i,b){var
c=de(ni(o(aOI,b))),d=D3(c),a=d[1],j=aOD(ku(d[4])),k=avJ(c),l=aOy(a,aOJ),m=lj(a,aOK);try{var
u=lj(a,aPc),e=u}catch(a){var
e=aOL}try{var
t=lj(a,aPb),f=t}catch(a){var
f=aOM}try{var
s=lj(a,aPa),h=s}catch(a){var
h=aON}var
n=[0,[0,aOU,[1,k]],[0,[0,aOT,[5,l]],[0,[0,aOS,m],[0,[0,aOR,e],[0,[0,aOQ,f],[0,[0,aOP,h],[0,[0,aOO,[1,avI(c)]],0]]]]]]],p=[6,[0,aOX,[0,[0,aOW,[4,o(aOV,b)]],n]]];if(i){var
q=[0,[0,aOY,p],0],r=[0,aO2,[0,aO1,[0,aO0,[0,[0,aOZ,[5,g(function(a){return[1,a]},j)]],q]]]];return[6,[0,aO6,[0,aO5,[0,[0,aO4,[4,o(aO3,b)]],r]]]]}return[6,[0,aO$,[0,aO_,[0,aO9,[0,[0,aO8,[4,o(aO7,b)]],0]]]]]}function
FR(f,e,d){var
b=e,a=d;for(;;){if(a){var
c=a[1],g=a[2],b=Xj(c[1],c[2],b),a=g;continue}return nt([0,f],b)}}function
FS(u){var
e=[0,0],c=[0,0],b=[0,0],a=aK(u);for(;;){if(a){var
p=a[1];if(37===p){var
f=a[2];if(f&&85===f[1]){var
g=f[2];if(g&&82===g[1]){var
h=g[2];if(h&&76===h[1]){var
i=h[2];if(i&&91===i[1]){var
v=i[2],k=c0(function(a){return cS(eL,a)},v),m=k[2],r=k[1];if(0===m)var
d=af(aPm);else
var
s=bu(m),n=c0(function(a){return cS(93,a)},s),o=n[2],t=n[1],d=0===o?af(aPn):[0,r,t,bu(o)];var
j=d[1],w=d[3],x=d[2],y=b[1];b[1]=q(l(j),y);var
A=e[1],B=z(j),C=c[1]+B|0,D=c[1];e[1]=[0,[0,P(x),D,C],A];dd(c,z(j));var
a=w;continue}}}}}var
E=a[2];b[1]=[0,p,b[1]];dd(c,1);var
a=E;continue}var
F=l(e[1]);return[0,P(l(b[1])),F]}}function
FT(b,a){return tv(a,Dl(hw(b)))}function
aPT(m){var
a=0,b=aK(m);for(;;){if(b){var
g=b[1];if(92===g){var
d=b[2];if(d){var
c=d[1];if(56<=c){if(92===c){var
a=[0,92,a],b=d[2];continue}}else
if(48<=c){var
e=d[2];if(e){var
h=e[1];if(!(7<h+fA>>>0)){var
f=e[2];if(f){var
i=f[1];if(!(7<i+fA>>>0)){var
k=f[2],a=[0,aj(aE(o(aPS,P([0,c,[0,h,[0,i,0]]])))),a],b=k;continue}}}}}var
j=d[2];if(aY!==c){var
a=[0,c,a],b=j;continue}}}var
a=[0,g,a],b=b[2];continue}return P(l(a))}}function
aPV(a,i){function
b(s,d){var
n=d[5],o=d[4],p=d[3],q=d[2],h=0,b=bo(i,d[3],d[1]),r=0;a:for(;;){if(b){var
g=b[1];if(typeof
g!=="number"&&50===g[0]&&!c(g[1],aPX)){var
e=1,a=b[2];for(;;){if(a){var
f=a[1],m=0;if(typeof
f==="number"){if(18===f){var
j=a[2];if(1!==e){var
e=e-1|0,a=j;continue}var
k=j;m=1}}else
if(50===f[0]&&!c(f[1],aPW)){var
e=e+1|0,a=a[2];continue}if(!m){var
a=a[2];continue}}else
var
k=0;var
b=k;continue a}}var
h=[0,g,h],b=b[2];continue}return[0,[0,bg(l(h)),r],q,p,o,n]}}return aW(function(a,c){return bD(b,a,c)},i,a)}function
FU(c,b,a){var
d=bo(c,b,a);return[0,bg(al(function(a){var
c=0;if(typeof
a!=="number")switch(a[0]){case
25:case
26:case
27:case
28:var
b=1;c=1;break}if(!c)var
b=0;return b?0:[0,a]},d)),0]}var
nD=[0,0];function
aP0(m,a){var
c=aw(a),b=[0,a],d=[0,0],e=cd(c);cr(function(a,n){if(at(n,m)){var
c=b[1],g=a[3],h=a[1];lc(c,a,FU);var
i=a[5],j=a[4],k=a[3],l=a[2],f=c,e=[0,FU(c,g,h),l,k,j,i]}else
var
f=b[1],e=a;b[1]=f;return Y(d,e)},c,e);var
f=l(d[1]);return bQ(0,0,1,b[1],f)}function
FV(a,b,d){var
f=[0,0];FE(function(p,o){var
d=e(a,aQb,o[3]);if(d){var
b=d[1];if(typeof
b!=="number"&&6===b[0]){var
g=b[1];return x(function(q){var
d=q[2],r=q[1],s=e(a,aQc,d);if(s){var
g=s[1],O=0;if(typeof
g==="number"||!(4===g[0]))O=1;else{var
t=g[1];if(!c(t,aQd)){var
w=e(a,aQh,d),D=w?w[1]:o[3],x=e(a,aQi,d),z=0;if(x){var
h=x[1],b=0;if(typeof
h!=="number"&&5===h[0]){var
i=h[1];if(i){var
j=i[2];if(j){var
k=j[2];if(k){var
l=k[2];if(l){var
m=l[2];if(m){var
n=m[2];if(n&&!n[2]){var
E=m[1],F=l[1],G=k[1],H=j[1],I=i[1],J=C(a,n[1]),K=C(a,E),L=C(a,F),M=C(a,G),N=C(a,H),y=[V,C(a,I),N,M,L,K,J];z=1;b=1}else
b=1}else
b=1}else
b=1}else
b=1}else
b=1}else
b=1}}if(!z)var
y=au;f[1]=[0,[0,p,r,[1,y,d,D]],f[1]];return 0}if(!c(t,aQe)){var
u=e(a,aQf,d),A=u?C(a,u[1]):1.,v=e(a,aQg,d),B=v?C(a,v[1]):1.;f[1]=[0,[0,p,r,[0,A|0,B|0]],f[1]];return 0}}}return 0},g)}}return 0},a,b);var
h=l(f[1]),i=kr(function(b,a){return hf(b[1],a[1])},h),j=g(function(a){if(a)return[0,a[1][1],a];throw[0,B,aQj]},i),k=aw(a);return x(function(b){var
c=b[1],e=b[2];return aP1(a,b2(c,k),c,d,e)},j)}function
aP1(f,c,i,s,r){try{var
a=[0,[0,[0,au],0]],g=bo(f,c[3],c[1]),h=x(function(d){if(typeof
d==="number")switch(d){case
0:var
g=a[1];if(g){var
j=g[1],k=[0,au],t=g[2];k[1]=j[1];a[1]=[0,k,[0,j,t]];return 0}throw[0,$,aP4];case
1:if(a[1]){a[1]=bu(a[1]);return 0}throw[0,$,aP5]}else
switch(d[0]){case
8:var
u=d[1];if(a[1]){var
v=cv(aM(a[1])[1],u);aM(a[1])[1]=v;return 0}throw[0,$,aP6];case
47:var
l=d[1],h=function(b){var
c=b[2],d=b[1];if(a[1])return bO(aM(a[1])[1],[0,d,c]);throw[0,$,aP7]},m=h(aP8),w=h(aP9),e=r,x=h(aP_);for(;;){if(e){var
i=e[1];if(aD(i[2],l)){var
c=i[3],n=i[1];if(0===c[0]){var
o=c[2],p=c[1],y=B$(m,w),z=b(cI(0.,0,1),y),A=B$(m,x),C=[0,n,l,p,o,p/z,o/b(cI(0.,0,1),A)];nD[1]=[0,C,nD[1]];return 0}var
q=c[3],D=c[2],E=c[1],F=cv(E,aM(a[1])[1]),G=bg([0,[8,F],bo(f,q,[0,D,0])]);return FV(bQ(0,0,0,f,[0,[0,[0,G,0],tw(e8),q,0,aQa],0]),[0,n,0],s)}var
e=e[2];continue}throw[0,B,aP$]}}return 0},g);return h}catch(a){a=d(a);var
e=aR(a);b(eh(aP2),e);return sy(aP3)}}function
aQq(a,f){var
b=aw(a),c=a7(L(1,z(b)),b);return ah(g(function(c){var
m=c[1],h=c[2];if(at(m,f)){var
d=e(a,aQr,h[3]);if(d){var
b=d[1];if(typeof
b!=="number"&&6===b[0]){var
i=b[1];return g(function(n){var
b=n[2],r=n[1],g=e(a,aQk,b),o=0;if(g){var
c=g[1],s=0;if(typeof
c!=="number"&&4===c[0]){var
h=bP([4,c[1]]);o=1;s=1}}if(!o)var
h=aQl;var
i=e(a,aQm,b),p=0;if(i){var
d=i[1],t=0;if(typeof
d!=="number"&&4===d[0]){var
j=bP([4,d[1]]);p=1;t=1}}if(!p)var
j=aQn;var
k=e(a,aQo,b),q=0;if(k){var
f=k[1],u=0;if(typeof
f!=="number"&&4===f[0]){var
l=bP([4,f[1]]);q=1;u=1}}if(!q)var
l=aQp;return[0,m,r,h,j,l]},i)}}return 0}return 0},c))}function
uh(a){return[0,0,0.,[0],0.,0.,0]}function
ui(a,b){var
c=0===a[0]?a[1]:_(aQs);return iJ(ak,function(a){return b*tO(0,3,c,hl(aj(a)))/lV})}function
gw(c,b){var
a=[0,0.];x(function(b){a[1]=a[1]+a7Z(c,b);return 0},b);return a[1]}function
aQt(n,g,m){var
a=[0,m],b=[0,0],c=[0,n];function
h(c){var
d=a[1];return[0,ah(l(b[1])),c,d]}try{for(;;){if(0===a[1]){var
o=h(0);return o}var
p=a[1],i=c0(function(a){return cS(32,a)},p),e=i[2],f=i[1],j=gw(g,f);if(0!==b[1]&&!(j<c[1]))throw aH;var
k=0===e?1:0,r=k?f:q(f,aQv);b[1]=[0,r,b[1]];var
s=k?0.:gw(g,aQu);c[1]=c[1]-j-s;var
t=0===e?0:bu(e);a[1]=t;continue}}catch(a){a=d(a);if(a===aH)return h(1);throw a}}function
FW(p,N,n,L,j,u,K){var
B=ky(j),h=[0,0],C=b(cI(eK,hq(j),0),B),i=uh(0),y=C-p;i[4]=p;function
z(m){var
a=m;for(;;){if(typeof
a==="number"){if(0===a){i[4]=p;h[1]=[0,0,h[1]];return 0}}else
switch(a[0]){case
0:var
c=a[1];if(0===c)return 0;var
b=aQt(y-i[4],i[3],c),d=b[3],e=b[1],n=b[2];h[1]=[0,[0,e],h[1]];var
o=gw(i[3],e);i[4]=i[4]+o;if(n)z(0);var
f=0!==d?1:0;if(f){var
a=[0,d];continue}return f;case
1:i[4]=i[4]+a[1][1];h[1]=[0,a,h[1]];var
g=y<=i[4]?1:0;if(g){var
a=0;continue}return g;case
3:var
j=a[1],k=j[2],l=j[1];i[3]=ui(l,k);h[1]=[0,[3,[0,l,k]],h[1]];return 0}h[1]=[0,a,h[1]];return 0}}x(z,K);var
D=l(h[1]),H=kz(j),e=[0,0],I=b(cI(eK,hq(j),0),H),d=uh(0);d[5]=n;var
A=I-L;x(function(i){var
a=i;for(;;){if(typeof
a==="number")switch(a){case
0:d[5]=d[5]+d[2]*Ka;e[1]=[0,0,e[1]];var
b=A<d[5]?1:0;if(b){var
a=1;continue}return b;case
1:d[5]=n+d[2];e[1]=[0,1,e[1]];return 0;case
3:d[5]=n+d[2];e[1]=[0,3,e[1]];return 0}else
switch(a[0]){case
2:d[5]=d[5]+a[1][1];e[1]=[0,a,e[1]];var
c=A<d[5]?1:0;if(c){var
a=1;continue}return c;case
3:var
f=a[1],g=f[2],h=f[1];d[1]=[0,h];d[2]=g;e[1]=[0,[3,[0,h,g]],e[1]];return 0}e[1]=[0,a,e[1]];return 0}},D);var
J=l(e[1]),M=kz(j),E=b(cI(eK,hq(j),0),M),c=uh(0);c[4]=p;c[5]=n;var
m=[0,0],v=[0,0],s=[0,0],t=[0,0],r=[0,0],w=[0,0];function
F(r){var
b=0!==m[1]?1:0;if(b){var
c=t[1],h=0===c?aQy:[6,[0,[0,aQz,[5,c]],0]],i=0,n=s[1],e=0,f=[6,[0,[0,aQx,[6,g(function(b){return[0,o(aQw,a(k+b)),[8,b]]},n)]],e]],p=tw(j),q=[0,[0,bg(l(m[1])),0],p,f,i,h];w[1]=[0,q,w[1]];var
d=0}else
var
d=b;return d}function
G(_){var
b=_;for(;;)if(typeof
b==="number")switch(b){case
0:c[4]=p;var
b=[2,[V,c[2]*Ka,0.]];continue;case
1:F(0);s[1]=0;t[1]=0;m[1]=0;if(0!==c[1]){var
$=c[2];G([3,[0,de(c[1]),$]])}c[4]=p;c[5]=n+c[2];return 0;case
2:var
H=0!==r[1]?1:0,I=H?0!==c[6]?1:0:H;if(I){var
aa=function(a){var
b=a[4],d=a[3],e=a[2],f=a[1];return[6,[0,aQE,[0,aQD,[0,aQC,[0,[0,aQB,[5,[0,[2,f],[0,[2,e],[0,[2,d],[0,[2,b],0]]]]]],[0,[0,aQA,kX(de(c[6]))],0]]]]]]},ab=t[1];t[1]=q(g(aa,r[1]),ab);c[6]=0;r[1]=0;var
J=0}else
var
J=I;return J;default:c[5]=n+c[2];return 0}else
switch(b[0]){case
0:var
l=b[1],ac=[0,0,m[1]],ad=[0,15,[0,[8,dg(c[4],E-c[5])],ac]];m[1]=[0,1,[0,16,[0,[25,P(l)],ad]]];if(0!==c[6]){var
K=E-c[5],L=c[4],ae=r[1],af=K+c[2];r[1]=[0,[0,L,K,L+gw(c[3],l),af],ae]}var
ag=gw(c[3],l);c[4]=c[4]+ag;return 0;case
1:c[4]=c[4]+b[1][1];return 0;case
2:c[5]=c[5]+b[1][1];return 0;case
3:var
M=b[1],w=M[2],d=M[1],h=v[1];for(;;){if(h){var
z=h[1],T=h[2],U=z[2];if(0!==bY(z[1],d)){var
h=T;continue}var
x=[0,U]}else
var
x=0;if(x)var
N=x[1],Q=N,O=o(aQF,a(k+N));else{var
y=0;switch(d[0]){case
0:var
B=d[2];if(typeof
B==="number"&&3===B){var
i=am(u,[6,[0,auM,[0,auL,[0,auK,[0,[0,auJ,[4,o(auI,nh(d[1]))]],0]]]]]);y=1}break;case
1:var
j=d[1],C=j[1];if(typeof
C!=="number"&&j[4]){var
e=j[5],R=0,Y=C[1][3];if(typeof
e==="number"&&!e){var
D=0;R=1}if(!R){var
S=0,Z=0;if(typeof
e!=="number"&&0===e[0]){var
A=e[1];if(typeof
A==="number"&&!A){var
W=e[2],X=0,D=[0,[0,auR,[8,am(u,[6,[0,auP,[0,[0,auO,[5,ah(g(function(a){return[0,[1,a[2]],[0,[4,a[1]],0]]},W))]],X]]])]],Z];S=1}}if(!S)throw[0,f,auN]}var
i=am(u,[6,q([0,auX,[0,auW,[0,auV,[0,auU,[0,[0,auT,[6,g(function(a){return[0,a[1],0]},Y)]],auS]]]]],D)]);y=1}break}if(!y)throw[0,f,auQ];var
ai=o(aQG,a(k+i));v[1]=[0,[0,d,i],v[1]];var
Q=i,O=ai}c[3]=ui(d,w);c[1]=[0,d];c[2]=w;s[1]=[0,Q,s[1]];m[1]=[0,[19,O,w],m[1]];return 0}default:c[6]=[0,b[1]];return 0}}x(G,J);F(0);return l(w[1])}function
nE(f,n,m,k){var
h=bm(0),o=ky(f),e=b(cI(eK,hq(f),0),o)/15.,a=[0,0],r=aI(k),d=aN(ak),p=[0,[0,n,3],m];kh(function(b){if(10===b){var
e=az(d);if(c(e,aQH)){var
f=a[1];a[1]=[0,[0,aK(e)],f]}a[1]=[0,0,a[1]];return ck(d)}return 13===b?0:s(d,b)},r);var
g=az(d);if(c(g,aQI)){var
j=a[1];a[1]=[0,[0,aK(g)],j]}var
i=k1(FW(e,e,e,e,f,h,q([0,[3,p],aQJ],l(a[1]))),h);return i7(i[2],0,i[1])}function
FX(f,e){var
b=f,a=e;for(;;){if(a){var
d=a[1];if(92===d){var
c=a[2];if(c&&aY===c[1]){var
g=FX(0,c[2]);return[0,l(b),g]}}var
b=[0,d,b],a=a[2];continue}return[0,l(b),0]}}var
aQK=0;function
uj(a){if(a){var
c=a[1];if(92===c){var
b=a[2];if(b&&aY===b[1])return[0,10,uj(b[2])]}return[0,c,uj(a[2])]}return 0}function
FY(b,a){var
c=tM(a);return g(aj,al(DW(0,b),c))}function
FZ(b,a){return FY(b,eq(a))}function
aQL(d,c,b){var
a=b;for(;;){if(0!==a&&c<gw(d,a)){var
a=l(bu(l(a)));continue}return aD(a,b)?b:q(a,aQM)}}function
aQN(s,f,o,O,b){if(0===dF(b)){K(aQO);return b}var
i=[0,s,3],t=aM(aw(b)),l=av(b,t[2]),u=l[4],v=l[3],w=u-l[2],p=v-l[1],c=df(p,w)*0.1,R=mR(0,p,w),x=e(b,aQP,t[5]),Q=[0,[0,s,3],f*2.],h=x?[0,av(b,x[1])]:0;if(h)var
y=h[1],B=y[3]-y[1];else
var
B=p;var
C=hw(b),D=bL(b),T=bJ(a7(D,cd(D))),U=dF(b),W=g(function(e){var
j=e[1]*f*2.,p=FZ(i,e[2]);if(0===e[3])var
g=aQQ;else{var
n=hx([0,T],b,e[3]);try{var
r=tv(n,C),o=r}catch(b){b=d(b);if(b!==J)throw b;var
o=a(k+n)}var
g=FZ(i,o)}var
h=ui(i,f),l=B-c*2.-j-gw(h,g),m=aQL(h,l-f*3.,p),q=[0,[1,[V,j,0.]],[0,[0,m],[0,[1,[V,l-gw(h,m),0.]],[0,[0,g],aQR]]]];return[0,[4,e[3]],q]},U),X=[2,[V,f*2.,0.]];if(S(o,aQS))var
E=0;else
var
ab=[0,X,0],ac=FX(aQK,FY(i,o)),E=q(ah(g(function(a){return[0,[0,a],aQW]},ac)),ab);if(h)var
m=h[1],I=u-m[4]+c,H=m[2]+c,G=v-m[3]+c,F=m[1]+c;else
var
I=c,H=c,G=c,F=c;var
L=FW(F,G,H,I,R,b,q([0,[3,Q],aQT],q(E,q([0,[3,[0,i,f]],0],ah(W)))));if(h)var
n=h[1],Y=[5,[0,[2,n[1]],[0,[2,n[2]],[0,[2,n[3]],[0,[2,n[4]],0]]]]],r=g(function(a){var
b=A(a[5],aQU,Y);return[0,a[1],a[2],a[3],a[4],b]},L);else
var
r=L;var
M=aw(b),N=z(r),Z=cd(M),_=g(function(a){return[0,a,a+N|0]},Z),j=bQ(0,[0,_],1,b,q(r,M));nb(j,[0,aQV,g(function(a){return[0,a[1],a[2],a[3]+N|0,a[4]]},C)]);if(O){var
$=dF(j),aa=[2,[0,aM(bL(j))],0,0,0];return ff([0,[0,0,bx(P(uj(aK(o)))),aa,0],$],j)}return j}function
uk(f,e,d,a,c){if(c){var
g=c[2],b=c[1],j=0;if(f&&at(b,a)){var
h=1;j=1}if(!j)var
h=0;var
i=[0,b,(b+d|0)+h|0];return at(b,a)?[0,i,uk(f,e,d+e|0,a,g)]:[0,i,uk(f,e,d,a,g)]}return 0}function
F0(o,d,a,h){if(o){var
p=o[1],v=db(hf,sA(d)),w=[0,L(1,aC(p)),0],k=hz(0,0,aQX,[0,a,[0,p,0]],[0,L(1,aC(a)),w]),x=aC(a),l=hn(aw(k),x),m=l[2],n=l[1],y=a7(cd(n),n);return bQ(0,0,0,k,ah(g(function(b){var
a=b[2];return at(b[1],v)?h?q(m,[0,a,0]):q([0,a,0],m):[0,a,0]},y)))}var
e=h?1:0,b=aw(a),f=b,c=a7(d,g(function(a){var
c=bn(b2(a+e|0,b)[5],aQY),d=b2(a+e|0,b)[4];return[0,0,b2(a+e|0,b)[2],aQZ,d,c]},d));for(;;){if(c){var
j=c[1],t=c[2],u=j[2],i=hn(f,j[1]),r=i[1],s=q(r,q([0,u,0],i[2])),f=s,c=g(function(a){return[0,a[1]+1|0,a[2]]},t);continue}var
A=L(1,z(b)),B=1;return bQ(0,[0,uk(h,1,0,g(function(a){return a+e|0},d),A)],B,a,f)}}function
F1(c,b,a){var
d=g(function(b){return at(b,L(1,aC(a)))},b),e=1;if(1-bk(function(a,b){var
c=a?b:a;return c},e,d))throw[0,$,aQ0];return F0(c,b,a,0)}function
aQ1(c,b,a){var
d=g(function(b){return at(b,L(1,aC(a)))},b),e=1;if(1-bk(function(a,b){var
c=a?b:a;return c},e,d))throw[0,$,aQ2];var
f=1;return F0(c,g(function(a){return a-1|0},b),a,f)}function
F2(c,e){var
d=0<=c?c:-c|0,a=aw(e),b=z(a),i=c<0?1:0,f=bd(rA(b,d),d)===b?0:d-iD(b,d)|0;if(0<f){var
j=b2(b,a)[4],h=aP([0,0,b2(b,a)[2],aQ4,j,aQ3],f),k=L(1,z(a)),l=g(function(a){return[0,a,a]},k),m=i?q(h,a):q(a,h);return bQ(0,[0,l],1,e,m)}return e}function
aQ5(a){var
i=e(a,aQ6,dD(a));if(i){var
j=i[1],k=e(a,aQ7,j),s=0;if(k){var
c=k[1],z=0;if(typeof
c!=="number"&&5===c[0]){var
y=c[1],r=g(function(a){if(typeof
a!=="number"&&8===a[0])return a[1];return _(aRf)},y),l=a7(r,g(function(j){try{var
b=ai(a,j),h=0;if(typeof
b!=="number"&&6===b[0]){var
f=e(a,aRi,[6,b[1]]),i=0;if(f){var
c=f[1],k=0;if(typeof
c!=="number"&&3===c[0]){var
g=c[1];i=1;k=1}}if(!i)var
g=_(aRj);var
d=g;h=1}if(!h)var
d=_(aRh);return d}catch(a){return _(aRg)}},r));s=1;z=1}}if(!s)var
l=_(aQ8);var
m=function(b,a){return bY(b[2],a[2])},u=kr(m,db(m,l)),n=ah(al(function(a){if(a){var
b=a[2],c=a[1][1];return[0,g(function(a){return[0,a[1],c]},b)]}return 0},u)),f=function(f,j,b){var
g=e(a,aQ9,b);if(g){var
c=g[1];if(typeof
c!=="number"&&6===c[0]){var
h=c[1],i=e(a,f,[6,h]);if(i){var
d=i[1];if(typeof
d!=="number"&&5===d[0]){var
k=d[1];return A(b,aQ$,A([6,h],f,[5,al(function(a){if(typeof
a!=="number"&&8===a[0]){var
b=a[1];return at(b,j)?0:[0,[8,b]]}return 0},k)]))}}return b}}return _(aQ_)},b=g(function(a){return a[1]},n),h=f(aRc,b,f(aRb,b,f(aRa,b,j))),o=e(a,F3,h),t=0;if(o){var
d=o[1],B=0;if(typeof
d!=="number"&&5===d[0]){var
v=d[1],p=A(h,F3,[5,al(function(a){if(typeof
a!=="number"&&8===a[0]){var
c=a[1];return at(c,b)?0:[0,[8,c]]}return 0},v)]);t=1;B=1}}if(!t)var
p=h;var
w=[8,am(a,p)],q=am(a,A(dD(a),aRd,w));a[5]=A(a[5],aRe,[8,q]);a[3]=q;var
x=bJ(n);return el(function(b){return e_(a,x,b)},a)}return 0}function
aRk(a){var
b=[0,0],d=e(a,aRl,dD(a));if(d){var
f=e(a,aRm,d[1]),h=0;if(f){var
c=f[1],i=0;if(typeof
c!=="number"&&5===c[0]){var
g=c[1];x(function(c){if(typeof
c!=="number"&&8===c[0]){var
f=e(a,aRn,ai(a,c[1]));if(f){var
d=f[1];if(typeof
d!=="number"&&3===d[0]){b[1]=[0,d[1],b[1]];return 0}}return 0}return 0},g);h=1;i=1}}}return l(b[1])}function
aRo(k,j,d){return el(function(b){if(typeof
b!=="number"&&6===b[0]){var
a=b[1],h=e(d,aRp,[6,a]);if(h){var
f=h[1],l=0;if(typeof
f==="number"||!(4===f[0]))l=1;else
if(!c(f[1],aRq)){var
i=e(d,aRr,[6,a]);if(i){var
g=i[1],m=0;if(typeof
g==="number"||!(3===g[0]))m=1;else
if(S(g[1],k))return A([6,a],aRs,[3,j])}return[6,a]}}return[6,a]}return b},d)}function
aRt(a){var
f=e(a,aRu,dD(a));if(f){var
b=f[1],g=e(a,aRv,b);if(g){var
c=g[1];if(typeof
c!=="number"&&5===c[0]){var
j=c[1],h=e(a,aRw,b);if(h){var
d=h[1];if(typeof
d!=="number"&&6===d[0]){var
k=[8,am(a,A(b,aRy,A([6,d[1]],aRx,[5,j])))],i=am(a,A(dD(a),aRz,k));a[5]=A(a[5],aRA,[8,i]);a[3]=i;return 0}}return 0}}return 0}return 0}function
F4(a){if(1-e$(a))Ct(function(b){if(typeof
b!=="number"&&7===b[0]){var
i=b[1][1][1],j=e(a,aRC,i),k=e(a,aRD,i);if(k){var
d=k[1],l=0;if(typeof
d==="number"||!(4===d[0]))l=1;else
if(!c(d[1],aRE))return 0}if(j){var
f=j[1],g=0;if(typeof
f!=="number"&&5===f[0])if(f[1])g=2;else
g=1;var
h=0;switch(g){case
0:h=1;break;case
1:break;default:h=1}if(h)return 0}return m7(a,3,0,0,b)}throw[0,B,aRB]},a);return a}function
aRF(a){if(1-e$(a))Ct(function(b){return m6(a,b)},a);return a}function
F5(c,e,d){var
a=ai(c,e),b=ai(c,d),f=0;if(typeof
a!=="number"&&7===a[0]){cJ(a);f=1}var
g=0;if(typeof
b!=="number"&&7===b[0]){cJ(b);g=1}return bY(a,b)}var
nF=[0,0];function
aRG(a){var
f=[0,0];cy(function(a,b){f[1]=[0,a,f[1]];return 0},a);var
h=f[1],i=db(function(b,c){return F5(a,b,c)},h),j=kr(function(b,c){return F5(a,b,c)},i),k=b(b0(function(a){return 1<z(a)?1:0}),j),d=[0,a],l=al(function(b){if(b){var
f=e(a,aRH,ai(a,b[1]));if(f){var
d=f[1],g=0;if(typeof
d==="number"||!(4===d[0]))g=1;else
if(!c(d[1],aRI))return 0}return[0,b]}throw[0,B,aRJ]},k),g=aV(0,aQ);x(function(a){if(a){var
b=a[2],c=a[1];return x(function(a){return aO(g,a,c)},b)}throw[0,B,aRK]},l);d[1]=hu(g,d[1]);d[1]=hu(g,d[1]);em(d[1]);a[3]=d[1][3];a[4]=d[1][4];a[5]=d[1][5];return 0}function
aRS(c,a){return 1-at(0,g(function(a){return z(b(b0(function(b){return aD(a,b)}),c))<2?1:0},a))}function
aRU(a){var
b=bL(a),y=ah(g(function(f){var
c=aB(a,ai(a,f));if(typeof
c!=="number"&&6===c[0]){var
d=a4(aRT,c[1]);if(d){var
b=d[1];if(typeof
b!=="number")switch(b[0]){case
5:var
e=b[1];return al(function(a){if(typeof
a!=="number"&&8===a[0])return[0,a[1]];return 0},e);case
8:return[0,b[1],0]}}return 0}return 0},b));nF[1]=0;return cy(function(l,E){var
b=ai(a,l);if(typeof
b!=="number"&&6===b[0]){var
z=b[1];if(aD(e(a,aRW,b),aRV)){var
m=e(a,aRX,b),n=m?m[1]:aR3;try{var
o=a4(aRY,z);if(o){var
f=o[1],k=0;if(typeof
f!=="number")switch(f[0]){case
5:var
h=f[1];k=1;break;case
8:var
t=f[1],j=aB(a,[8,t]),v=0;if(typeof
j!=="number"&&5===j[0]){var
u=j[1];v=1}if(!v)var
u=[0,[8,t],0];var
h=u;k=1;break}if(k){var
p=aRS(y,g(function(a){if(typeof
a!=="number"&&8===a[0])return a[1];throw[0,B,aRZ]},h));if(p){bB(a,[0,l,A(b,aR0,[8,am(a,bg(bo(a,n,h)))])]);var
q=e(a,aR1,n),w=0;if(q){var
i=q[1],D=0;if(typeof
i!=="number"&&6===i[0]){var
C=i[1],r=x(function(p){var
h=p[2];if(typeof
h!=="number"&&8===h[0]){var
d=h[1];if(!at(d,nF[1]))nF[1]=[0,d,nF[1]];var
b=ai(a,d),i=e(a,aRL,b);if(i){var
f=i[1],q=0;if(typeof
f==="number"||!(4===f[0]))q=1;else
if(!c(f[1],aRM)){var
j=e(a,aRN,b),n=j?j[1]:aRR,g=bg(bo(a,n,[0,[8,d],0]));if(typeof
g!=="number"&&7===g[0]){var
k=g[1][1][2];if(0===k[0]){var
l=k[1];if(typeof
b!=="number"&&7===b[0]){var
m=b[1],o=m[1][1];m[1]=[0,A(o,aRQ,[1,aa(l)]),[0,l]];return 0}return _(aRP)}}return _(aRO)}}return 0}return _(aR2)},C);w=1;D=1}}if(!w)var
r=0;var
s=r}else
var
s=p;return s}}throw J}catch(a){a=d(a);if(a===J)return 0;throw a}}}return 0},a)}function
F6(a){return a?l(aSe):0}function
F7(k,p,n,h){var
C=e(n,aSq,h[3]),M=0;if(C){var
r=C[1],ah=0;if(typeof
r!=="number"&&6===r[0]){var
L=r[1],ag=b(b0(function(d){var
b=e(n,aSo,d[2]);if(b){var
a=b[1],f=0;if(typeof
a==="number"||!(4===a[0]))f=1;else
if(!c(a[1],aSp))return 1}return 0}),L),E=ag,D=b(b0(function(d){var
b=e(n,aSm,d[2]);if(b){var
a=b[1],f=0;if(typeof
a==="number"||!(4===a[0]))f=1;else
if(!c(a[1],aSn))return 1}return 0}),L);M=1;ah=1}}if(!M)var
E=0,D=0;var
F=gd(D),s=[0,n],G=[0,0],U=F[2],V=F[1];x(function(r){var
c=s[1],a=aB(c,r),d=e(c,aSg,a),l=0,m=d?d[1]:aSl,g=F7(k,p,c,[0,[0,a,0],0,m,l,aSf]),h=g[2],n=g[1];if(typeof
a!=="number"&&7===a[0]){var
o=a[1][1][1],b=bg(bo(h,aSi,n[1]));if(typeof
b!=="number"&&7===b[0]){var
i=b[1][1][2];if(0===i[0]){var
j=i[1],q=[7,[0,[0,A(o,aSk,[1,aa(j)]),[0,j]]]];s[1]=h;return Y(G,q)}}throw[0,B,aSj]}throw[0,f,aSh]},U);var
i=s[1],H=[0,0],W=l(G[1]);x(function(a){return Y(H,am(i,a))},W);if(k)var
X=k[1],J=al(function(a){return S(X,a[1])?0:[0,a]},E);else
var
J=0;var
Z=l(H[1]),$=[6,q(J,a7(V,g(function(a){return[8,a]},Z)))],ab=A(h[3],aSr,$),ac=bo(i,h[3],h[1]),t=h[3],a=0,d=ac;for(;;){if(d){var
j=d[1];if(typeof
j!=="number")switch(j[0]){case
46:var
w=d[2];if(0===k){var
a=q(F6(p),a),d=w;continue}var
a=[0,j,a],d=w;continue;case
47:var
y=d[2],z=j[1],N=0;if(typeof
t==="number"||!(6===t[0]))N=1;else{var
v=e(i,aSc,t);if(v){var
Q=v[1],u=e(i,aR$,I(bs(aSd),i,z,Q)),O=0;if(u){var
o=u[1],P=0;if(typeof
o!=="number"&&4===o[0])if(c(o[1],aSa))P=1;else{var
m=1;O=1;P=1}}if(!O)var
m=0}else
var
m=0}if(N)var
m=_(aSb);if(m){var
R=k?S(k[1],z):1;if(R){var
a=q(F6(p),a),d=y;continue}}var
a=[0,j,a],d=y;continue}var
a=[0,j,a],d=d[2];continue}var
T=l(a),ad=h[5],ae=h[4],af=h[2],K=bg(T);m7(i,3,0,0,K);return[0,[0,[0,K,0],af,ab,ae,ad],i]}}function
aSs(i,h,g,b){var
c=aw(b),a=[0,b],d=[0,0],e=cd(c);cr(function(b,j){if(at(j,g))var
c=F7(i,h,a[1],b),f=c[2],e=c[1];else
var
f=a[1],e=b;a[1]=f;return Y(d,e)},c,e);var
f=l(d[1]);return bQ(0,0,1,a[1],f)}function
aSt(k,y,w,v,u,p){var
a=0,d=0,c=p;for(;;){if(c){var
f=c[2],e=c[1];if(a){if(e===(a[1]+1|0)){var
a=[0,e,a],c=f;continue}var
o=[0,l(a),d],a=[0,e,0],d=o,c=f;continue}var
a=[0,e,0],c=f;continue}var
r=a?l([0,l(a),d]):l(d),h=g(mL,r),i=hw(k);if(0<z(h)){var
j=[0,0],m=[0,0];x(function(a){var
b=a[2],c=a[1];j[1]=[0,m[1],j[1]];m[1]=((b-c|0)+1|0)+m[1]|0;return 0},h);var
s=l(j[1]),n=at(1,g(function(a){return 1===a[3]?1:0},i))?[0,i]:[0,[0,aSu,i]];cr(function(p,x){var
a=p[2],z=p[1],A=y?x:0,m=[0,w,v,z,u+A|0],B=n[1],g=0,f=0,c=B,C=aC(k);for(;;){if(c){var
o=c[2],h=c[1];if(h[3]<=a){var
g=[0,h,g],c=o;continue}var
f=[0,h,f],c=o;continue}var
i=l(f),j=l(g),s=b(cZ(function(a){return a[3]===m[3]?1:0}),j);if(a===C)var
d=0;else{var
r=0;if(i&&i[1][3]===(a+1|0))var
d=0;else
r=1;if(r)if(j)var
e=gh(j),d=[0,[0,e[1],e[2],a+1|0,(a+1|0)+(e[4]-e[3]|0)|0],0];else
var
d=0}var
t=b(cZ(function(b){var
c=m[3]<b[3]?1:0,d=c?b[3]<=a?1:0:c;return d}),s);n[1]=q(t,q([0,m,0],q(d,i)));return 0}},h,s);return nb(k,n[1])}throw[0,B,aSv]}}function
aSw(d,c,b){var
e=aP(0,b),f=g(function(a){return k0(mR(0,d,c))},e),a=k1(f,bm(0));return i7(a[2],0,a[1])}function
aSx(c,b){var
d=aP(0,b),e=g(function(a){return k0(c)},d),a=k1(e,bm(0));return i7(a[2],0,a[1])}function
aSC(a){var
b=aw(a),c=cd(b);return bl(EA(0,0,0,0,[0,y,ah(bI(function(h,i){var
c=e(a,aSA,h[5]);if(c){var
b=c[1];if(typeof
b!=="number"&&5===b[0]){var
d=b[1],f=g(function(b){return aB(a,b)},d);return g(function(b){var
c=e(a,aSy,b),d=c?A(b,aSz,c[1]):b,f=0,g=0,h=0;return[0,y,[0,[0,b6,i],[0,dj(aSB,a,function(a){return 0},h,g,d),f]]]},f)}}return 0},b,c))]))}function
aSM(c,x,l){tD(l,ng(c));var
y=dF(c),C=bL(c),d=kY(c),m=kY(l),D=L(1,aC(d)),n=aw(m),E=n?bQ(0,aSN,1,m,[0,n[1],0]):af(aSS),a=hz(0,0,aSP,[0,d,[0,E,0]],[0,D,aSO]),p=ub(1,d,[0,a[1],a[2],a[3],a[4],a[5],a[6],d[7]]),q=aw(p),f=gh(q),r=ho(q),F=L(1,z(r)),G=1,s=bQ(0,[0,g(function(a){return[0,a,a]},F)],G,p,r),H=bJ(a7(C,bL(s))),b=ff(g(function(a){return FD(H,a)},y),s),t=o(aSR,o(ng(b),aSQ)),h=bg(bo(b,f[3],f[1]));if(typeof
h!=="number"&&7===h[0]){var
i=h[1][1][2];if(0===i[0]){var
j=i[1],u=[0,[0,aSH,[1,aa(j)]],0],v=am(b,[7,[0,[0,[6,[0,aSL,[0,aSK,[0,[0,aSJ,f[2]],[0,[0,aSI,f[3]],u]]]]],[0,j]]]]),k=aw(b),w=cd(k);return[0,bQ(0,0,1,b,A0(function(a,h){if(at(h,x)){var
c=e(b,aSD,a[3]),d=c?c[1]:aSF,f=A(d,t,[8,v]),g=A(a[3],aSE,f);return[0,a[1],a[2],g,a[4],a[5]]}return a},k,w)),t]}}throw[0,B,aSG]}function
um(t,s,H,az,$,ag,r,i,G,F,m,V){var
n=aC(V),W=L(1,n);function
ao(h,a){var
b=e(V,aNx,a[5]);if(b){var
c=a[5],d=a[4],f=a[3],g=aB(V,b[1]);return[0,a[1],g,f,d,c]}return a}var
p=nA(0,W,FL(aW(function(a,b){return bD(ao,a,b)},V,W),W));if(F==0.)var
aa=p;else
var
ad=av(p,aM(aw(p))[2]),au=ad[4],ax=ad[3],U=[7,F/2.],_=au-F,ae=ax-F,ay=L(1,aC(p)),ap=function(k,a){var
j=a[3],e=t$(0,ae,av(p,a[2]),0,U),c=e[2],b=0,f=e[1];if(typeof
U==="number")if(2===U)b=2;else
b=1;else
switch(U[0]){case
0:b=2;break;case
3:case
4:case
5:var
d=c-_;break;default:b=1}switch(b){case
1:var
d=c;break;case
2:var
d=c-_/2.;break}var
g=q([0,[0,F],0],q(0,[0,[14,f,d,ae,_],[0,4,aPY]])),h=[0,ug(F8),0],i=q([0,0,[0,aPZ,[0,nC(F8),h]]],g);return k2(p,i,[0,m],[0,a[1],a[2],j,a[4],a[5]])},aa=aW(function(a,b){return bD(ap,a,b)},p,ay);var
R=aC(aa),D=L(1,R),E=FF(aa,D,aS0,0,m);if(G==0.)var
h=E;else{var
S=G/2.,T=av(E,aM(aw(E))[2]),Z=T[3]-T[1],aq=T[4]-T[2];if(H)var
ar=FJ([0,m],aS1,(Z-G)/Z,E,D),h=ny([0,m],aP([0,S,S],R),ar,D);else
var
as=ny([0,m],aP([0,S,S],R),E,D),h=FK(aP([0,0.,0.,Z+G,aq+G],R),as,D)}var
ai=av(h,aM(aw(h))[2]),I=ai[4],M=ai[3],X=t|0,Y=s|0;if(H){var
N=Math.floor(t/M+qj)|0,O=Math.floor(s/I+qj)|0,ak=0;if(1<=N&&1<=O)var
y=(s-O*I)/(O+1.),w=(t-N*M)/(N+1.),v=O,u=N,j=bd(N,O);else
ak=1;if(ak)var
P=af(aS_),y=P[5],w=P[4],v=P[3],u=P[2],j=P[1]}else{var
am=0;if(0===X&&0===Y)var
Q=af(aS$),y=Q[5],w=Q[4],v=Q[3],u=Q[2],j=Q[1];else
am=1;if(am)if(0===X)var
y=0.,w=0.,v=1,u=n,j=n;else
if(0===Y)var
y=0.,w=0.,v=n,u=1,j=n;else
var
y=0.,w=0.,v=Y,u=X,j=bd(X,Y)}if(H)var
ab=[5,[0,aS3,[0,aS2,[0,[2,t],[0,[2,s],0]]]]];else
var
C=i*2.,aG=t==0.?[5,[0,aS5,[0,aS4,[0,[2,M*n+C],[0,[2,I+C],0]]]]]:s==0.?[5,[0,aS7,[0,aS6,[0,[2,M+C],[0,[2,I*n+C],0]]]]]:[5,[0,aS9,[0,aS8,[0,[2,M*t+C],[0,[2,I*s+C],0]]]]],ab=aG;var
aA=ks(j,aw(h)),aD=g(function(j){if(j){var
n=tx(0),p=L(1,z(j)),q=gg(ah,ah(g(function(i){return bI(function(l,m){var
d=e(h,i,m[3]),j=0;if(d){var
c=d[1],p=0;if(typeof
c!=="number"&&6===c[0]){var
f=c[1];j=1;p=1}}if(!j)var
f=0;return g(function(c){var
d=c[1];return[0,i,l,d,o(ams,a(k+b(n,0)))]},f)},p,j)},i6))),l=aV(0,dv);x(function(a){return aO(l,[0,a[1],a[2],a[3]],a[4])},q);var
m=function(c,b,a){return ek(l,[0,c,b,a])},i=function(c,b,a){try{var
e=an(l,[0,c,b,a]);return e}catch(a){a=d(a);if(a===J)throw[0,f,amQ];throw a}},r=function(b,a){var
f=a[3],o=a[5],p=a[4],d=[0,f],l=g(function(c){var
d=e(h,c,f);if(d){var
a=d[1];if(typeof
a!=="number"&&6===a[0]){var
j=a[1];return[6,g(function(a){var
d=a[2];return[0,i(c,b,a[1]),d]},j)]}}return amR},i6);cr(function(b,a){d[1]=A(d[1],b,a);return 0},i6,l);var
n=d[1],q=a[2],j=bo(h,a[3],a[1]),k=0;return[0,[0,bg(g(function(a){if(typeof
a!=="number")switch(a[0]){case
7:return[7,i(amt,b,a[1])];case
19:var
y=a[2];return[19,i(amu,b,a[1]),y];case
31:var
o=a[1],p=m(amv,b,o);return p?[31,p[1]]:[31,o];case
32:var
q=a[1],r=m(amw,b,q);return r?[32,r[1]]:[32,q];case
37:var
z=a[2];return[37,i(amx,b,a[1]),z];case
38:var
B=a[2];return[38,i(amy,b,a[1]),B];case
45:return[45,i(amz,b,a[1])];case
46:var
s=a[1],e=s[1],C=s[2],t=bw(h,amB,amA,e),l=0;if(t){var
f=t[1],n=0;if(typeof
f!=="number"&&4===f[0]){var
d=f[1],x=0;if(c(d,amC)&&c(d,amD)&&c(d,amE)&&c(d,amF)&&c(d,amG)&&c(d,amH)){var
D=[4,i(amI,b,d)],g=A(bn(bn(e,amL),amK),amJ,D);n=1;x=1}if(!x){var
g=e;n=1}}if(!n)l=1}else
l=1;if(l)var
g=e;return[46,[0,g,C]];case
47:return[47,i(amM,b,a[1])];case
49:var
j=a[2];if(typeof
j!=="number"&&4===j[0]){var
E=a[1];return[49,E,[4,i(amN,b,j[1])]]}break;case
51:var
k=a[2];if(typeof
k!=="number"&&4===k[0]){var
u=k[1],v=a[1],w=m(amO,b,u);return w?[51,v,[4,w[1]]]:(K(amP),[51,v,[4,u]])}break}return a},j)),k],q,n,p,o]};return bI(r,cd(j),j)}return 0},aA),aj=g(function(x){if(x){var
aq=x[1],ar=z(x),k=av(h,aq[2]),C=k[4]-k[2],D=k[3]-k[1],E=[0,0],a=[0,ar],n=[0,0.],o=[0,0.],G=function(e,j,d,a,c,b){var
f=ag?-o[1]:o[1],g=$?-n[1]:n[1],h=$?(e-a|0)-1|0:a,i=E[1];E[1]=[0,iY([0,[2,c+g+w*(h+1.),b+f+y*(d+1.)],0]),i];return 0},c=u|0,d=v|0,I=iD(a[1],c),J=iD(a[1],d),K=function(b,a){var
e=$?(c-a|0)-1|0:a,f=ag?(d-b|0)-1|0:b;return[0,f,e]};if(az){var
L=c-1|0,Y=0;if(!(L<0)){var
p=Y;for(;;){var
aa=r?a[1]<d?1:0:r;if(aa&&o[1]==0.)o[1]=-(C*(d-a[1]|0))/2.;var
N=d-1|0;if(!(N<0)){var
f=N;for(;;){var
O=K(f,p),P=O[2],W=0,ad=O[1],ae=d-J|0;if(r&&a[1]<=J){var
Q=f+(((d-1|0)-1|0)-(ae/2|0)|0)|0;W=1}if(!W)var
Q=f;if(0<a[1])G(c,d,Q,P,D*P,C*ad);a[1]=a[1]-1|0;var
ai=f-1|0;if(0!==f){var
f=ai;continue}break}}var
ac=p+1|0;if(L!==p){var
p=ac;continue}break}}}else{var
R=d-1|0;if(!(R<0)){var
s=R;for(;;){var
aj=r?a[1]<c?1:0:r;if(aj&&n[1]==0.)n[1]=D*(c-a[1]|0)/2.;var
S=c-1|0,ak=0;if(!(S<0)){var
j=ak;for(;;){var
T=K(s,j),U=T[1],X=0,an=T[2],ao=c-I|0;if(r&&a[1]<=I){var
V=j+(((c-1|0)-1|0)-(ao/2|0)|0)|0;X=1}if(!X)var
V=j;if(0<a[1])G(c,d,U,V,D*an,C*U);a[1]=a[1]-1|0;var
ap=j+1|0;if(S!==j){var
j=ap;continue}break}}var
am=s-1|0;if(0!==s){var
s=am;continue}break}}}var
Z=l(E[1]),_=H?function(e){if(i==0.)return e;var
c=av(h,ab),a=c[4]-c[2],b=c[3]-c[1];if(!(b/2.<i)&&!(a/2.<i)){var
d=df((b-i-i)/b,(a-i-i)/a),f=e7([0,aSV,d,d]),g=e7([2,(b-b*d)/2.,(a-a*d)/2.]);return cv(g,cv(f,e))}return af(aSU)}:function(a){return a},M=g(_,Z),t=bI(function(b,a){return es(h,a,b)},x,M),as=aM(t),au=g(function(a){return a[3]},t),F=B5(function(a,b){return E_(h,a,b)},au),aw=g(function(a){return a[5]},t),ax=B5(function(a,c){var
g=0;if(typeof
a!=="number"&&6===a[0]){var
d=a[1];g=1}if(!g)var
d=0;var
i=0;if(typeof
c!=="number"&&6===c[0]){var
f=c[1];i=1}if(!i)var
f=0;function
j(b){var
j=e(h,b,a),l=0;if(j){var
d=j[1],n=0;if(typeof
d!=="number"&&5===d[0]){var
f=d[1];l=1;n=1}}if(!l)var
f=0;var
k=e(h,b,c),m=0;if(k){var
g=k[1],o=0;if(typeof
g!=="number"&&5===g[0]){var
i=g[1];m=1;o=1}}if(!m)var
i=0;if(0===f&&0===i)return 0;return[0,[0,b,[5,q(f,i)]]]}var
k=b(cZ(function(a){return at(a[1],ul)}),d),l=b(cZ(function(a){return at(a[1],ul)}),f),m=q(k,q(l,al(j,ul)));return bk(function(b,a){return A(b,a[1],a[2])},aST,m)},aw),ay=ah(bI(function(c,a){et(h,a,c[5]);var
b=c[1];if(m){var
d=q(b,[0,bg(aSW),0]);return q([0,bg([0,0,[0,[8,a],0]]),0],d)}var
e=bo(h,F,b);return[0,bg(q(aSY,q([0,[8,a],0],q(q(DE(h,F,b),e),aSX)))),0]},t,M));return[0,ay,ab,F,as[4],ax]}throw[0,B,aSZ]},aD),aE=1,ac=bQ(0,[0,g(function(a){return[0,a,rA(a+(j-1|0)|0,j)]},W)],aE,h,aj);if(H)return ac;var
aF=L(1,aC(ac));return ny([0,m],aP([0,i,i],z(aj)),ac,aF)}function
aTa(a,d){var
b=um(2.,1.,0,0,0,0,0,0.,0.,0.,a,d),c=L(1,aC(b));return nA([0,a],c,uc(uD,b,c))}function
aTb(e,c){var
d=av(c,aM(aw(c))[2]),a=d[4]-d[2],b=d[3]-d[1],g=a<b?df(a/b,b/2./a):df(b/a,a/2./b),h=aC(c),k=L(1,h),i=um(2.,1.,0,0,0,0,1,0.,0.,0.,e,FM([0,e],aP([0,g,g],h),c,k)),j=aC(i),f=L(1,j),l=nA(0,f,uc(uD,i,f));return ud([0,e],0,1.,aP([0,b,a],j),0,l,f)}function
F9(n,m,k,j){var
d=[0,0],e=[0,0],c=0,a=bo(m,k,j);for(;;){if(a){var
b=a[1];if(typeof
b==="number")switch(b){case
15:var
r=a[2];d[1]++;var
c=[0,nC(n),[0,15,c]],a=r;continue;case
16:var
s=a[2];d[1]+=-1;var
t=q(e[1],[0,16,c]);e[1]=0;var
c=t,a=s;continue}else
switch(b[0]){case
7:case
31:case
32:case
33:case
34:case
35:case
36:case
37:case
38:case
39:case
40:case
41:case
42:case
43:case
44:case
45:var
i=a[2];if(0<d[1]){Y(e,b);var
a=i;continue}var
c=[0,b,c],a=i;continue}var
g=0<d[1]?1:0,o=a[2];if(g){var
f=0;if(typeof
b==="number"){if(17===b)f=1}else
switch(b[0]){case
15:case
16:case
17:case
18:case
19:case
20:case
21:case
22:case
23:case
24:case
25:case
26:case
27:case
28:f=1;break}var
p=f?0:1,h=p}else
var
h=g;if(h)Y(e,b);var
c=[0,b,c],a=o;continue}return[0,bg(l(c)),0]}}function
aTc(c,a,b){function
d(e,a){var
d=F9(c,b,a[3],a[1]);lc(b,a,function(a,b,d){return F9(c,a,b,d)});return[0,d,a[2],a[3],a[4],a[5]]}return aW(function(a,b){return bD(d,a,b)},b,a)}function
F_(e,d,c,b){var
a=function
c(a,b){return c.fun(a,b)},f=bo(d,c,b);bt(a,function(c,b){if(b){var
d=b[1];if(typeof
d!=="number")switch(d[0]){case
31:return n(a,[0,aTd,c],b[2]);case
33:case
35:case
37:case
39:case
41:case
43:var
f=b[2];return n(a,[0,ug(e),c],f)}return n(a,[0,d,c],b[2])}return l(c)});return[0,bg(n(a,0,f)),0]}function
aTe(c,a,b){function
d(e,a){var
d=F_(c,b,a[3],a[1]);lc(b,a,function(a,b,d){return F_(c,a,b,d)});return[0,d,a[2],a[3],a[4],a[5]]}return aW(function(a,b){return bD(d,a,b)},b,a)}function
F$(e,d,c,b){var
a=function
c(a,b){return c.fun(a,b)},f=bo(d,c,b);bt(a,function(c,b){if(b){var
d=b[1];if(typeof
d!=="number")switch(d[0]){case
32:return n(a,[0,aTf,c],b[2]);case
34:case
36:case
38:case
40:case
42:case
44:var
f=b[2];return n(a,[0,nC(e),c],f)}return n(a,[0,d,c],b[2])}return l(c)});return[0,bg(n(a,0,f)),0]}function
aTg(c,a,b){function
d(e,a){var
d=F$(c,b,a[3],a[1]);lc(b,a,function(a,b,d){return F$(c,a,b,d)});return[0,d,a[2],a[3],a[4],a[5]]}return aW(function(a,b){return bD(d,a,b)},b,a)}function
aTh(a,i,g){function
b(k,c){var
h=[0,[0,[0,au],0]],b=bo(g,c[3],c[1]),a=function(A,z){var
b=A,a=z;for(;;){if(a){var
f=a[1];if(typeof
f==="number")switch(f){case
0:var
B=a[2];try{Y(h,[0,aM(h[1])[1]])}catch(a){a=d(a);if(a[1]!==$)throw a;af(aTi);var
K=a}var
b=[0,0,b],a=B;continue;case
1:var
D=a[2];try{h[1]=bu(h[1])}catch(a){a=d(a);if(a[1]!==$)throw a;af(aTj);var
L=a}var
b=[0,1,b],a=D;continue}else
switch(f[0]){case
0:var
j=f[1],E=a[2];try{var
y=X3(aM(h[1])[1])[1],k=y}catch(a){a=d(a);if(a[1]!==$)throw a;var
k=1.,M=a}var
m=i/k,F=m<=j?[0,j]:[0,m],b=[0,F,b],a=E;continue;case
7:var
n=f[1],G=a[2],o=e(g,aTk,c[3]);if(o){var
p=e(g,n,o[1]);if(p){var
r=e(g,aTl,p[1]);if(r){var
H=r[1];try{var
I=[0,[0,C(g,H)],0],s=I}catch(a){var
s=0}var
t=s}else
var
t=0;var
u=t}else
var
u=0;var
v=u}else
var
v=0;var
b=q(v,[0,[7,n],b]),a=G;continue;case
8:var
w=f[1],J=a[2];try{var
x=aM(h[1]);x[1]=cv(x[1],w)}catch(a){a=d(a);if(a[1]!==$)throw a;af(aTm);var
N=a}var
b=[0,[8,w],b],a=J;continue}var
b=[0,f,b],a=a[2];continue}return l(b)}}(0,b),f=1.<i?[0,[0,i],a]:a,j=[0,bg(f),0];return[0,j,c[2],c[3],c[4],c[5]]}return aW(function(a,c){return bD(b,a,c)},g,a)}function
aTn(i,h,g,b,a){function
c(j,b){var
c=[0,bl(i),0],d=tq(a,b[3],c),e=[0,g],f=h?dG:k2;return f(a,d,e,b)}return aW(function(a,b){return bD(c,a,b)},a,b)}function
fg(c,d,a){if(typeof
a!=="number")switch(a[0]){case
5:var
g=a[1];return kI(function(a){return fg(c,d,a)},g);case
6:var
h=a[1];return b(c,gl(function(a){return fg(c,d,a)},h));case
7:var
f=a[1][1],e=f[1];if(typeof
e!=="number"&&6===e[0]){var
i=f[2],j=e[1];return b(c,[7,[0,[0,gl(function(a){return fg(c,d,a)},j),i]]])}break}return a}function
Ga(a,c,d){function
b(b){if(d){var
g=d[1],f=e(a,c,b);if(f&&aD(f[1],g))return bn(b,c);return b}return bn(b,c)}el(function(c){return fg(b,a,c)},a);a[5]=fg(b,a,a[5]);return 0}function
Gb(a,c,f,d){function
b(b){if(d){var
h=d[1],g=e(a,c,b);if(g&&aD(g[1],h))return ht(b,c,f);return b}try{var
i=ht(b,c,f);return i}catch(a){return b}}el(function(c){return fg(b,a,c)},a);a[5]=fg(b,a,a[5]);return 0}function
aTo(a,f){var
b=[0,0];function
c(c){var
d=e(a,f,c);if(d){var
g=d[1],h=b[1],i=0,j=0;b[1]=[0,dj(aTp,a,function(a){return 0},j,i,g),h];return c}return c}el(function(b){return fg(c,a,b)},a);a[5]=fg(c,a,a[5]);return bl(EA(0,0,0,0,[0,y,l(b[1])]))}function
Gc(h,g,f){var
b=0,a=bo(h,g,f),i=0;for(;;){if(a){var
c=a[1];if(typeof
c==="number"&&13===c){var
d=a[2];if(d){var
e=d[1];if(typeof
e==="number"&&12===e){var
b=[0,12,b],a=d[2];continue}}}var
b=[0,c,b],a=a[2];continue}return[0,bg(l(b)),i]}}var
ch=[0,0],un=[0,0],uo=[0,aTt];function
aTq(b,a){function
c(d,a){var
c=Gc(b,a[3],a[1]);lc(b,a,Gc);return[0,c,a[2],a[3],a[4],a[5]]}return aW(function(a,b){return bD(c,a,b)},b,a)}var
aTr=0,aTs=1;function
j(c,b){var
d=aR(b),a=n(ae(aTv),c,d);rT(a);cR(da);un[1]=aTs;uo[1]=a;return 0}var
d2=dY(ay(0)),ab=0,gx=0.,t=0,gy=0;function
aTx(a){try{var
c=b(cI(0.,3,0),a);return c}catch(a){a=d(a);j(aTy,a);return gx}}function
aTz(a){try{var
c=b(cI(0.,1,0),a);return c}catch(a){a=d(a);j(aTA,a);return gx}}function
aTB(a){try{var
c=b(cI(0.,0,2),a);return c}catch(a){a=d(a);j(aTC,a);return gx}}function
aTD(a){try{var
c=b(cI(0.,0,3),a);return c}catch(a){a=d(a);j(aTE,a);return gx}}function
aTF(a){try{var
c=b(cI(0.,0,1),a);return c}catch(a){a=d(a);j(aTG,a);return gx}}function
aTH(a){try{var
c=b(cI(0.,2,0),a);return c}catch(a){a=d(a);j(aTI,a);return gx}}var
nG=ce(0),up=[0,0];function
ev(a){up[1]++;aO(nG,up[1],a);return up[1]}function
Z(a){return an(nG,a)}function
Gd(b){try{var
a=ev(aS(0,0));return a}catch(a){a=d(a);j(aTJ,a);return ab}}function
uq(a){try{var
b=Z(a).length-1;return b}catch(a){a=d(a);j(aTK,a);return ab}}function
Ge(b,a){try{var
c=p(Z(b),a)[1+a];return c}catch(a){a=d(a);j(aTL,a);return ab}}function
Gf(f,e){try{var
c=Z(f),a=c.length-1,b=aS(a+1|0,0);Ba(c,0,b,0,a);p(b,a)[1+a]=e;var
g=ev(b);return g}catch(a){a=d(a);j(aTM,a);return ab}}function
M(a){try{var
b=iP(nG,a);return b}catch(a){a=d(a);j(aTN,a);return t}}function
aTO(b,a){var
c=b<a?L(b,a):l(L(b,a));return bG(c)}function
aTP(a){var
c=O(a);return bG(b(b0(kt),c))}function
aTQ(a){var
c=O(a);return bG(b(b0(iU),c))}function
aTR(b,a){var
c=O(a);return bG(sA(q(O(b),c)))}function
aTS(f,e){var
g=O(e),b=0,a=O(f);for(;;){if(a){var
c=a[2],d=a[1];if(at(d,g)){var
a=c;continue}var
b=[0,d,b],a=c;continue}return bG(l(b))}}function
aTT(e){var
b=0,a=l(O(e));for(;;){if(a){var
c=a[2],d=a[1];if(at(d,c)){var
a=c;continue}var
b=[0,d,b],a=c;continue}return bG(b)}}function
aTU(b,a){try{var
c=ev(aTO(b,a));return c}catch(a){a=d(a);j(aTV,a);return ab}}function
aTW(a){try{var
b=ev(aTP(Z(a)));return b}catch(a){a=d(a);j(aTX,a);return ab}}function
aTY(a){try{var
b=ev(aTQ(Z(a)));return b}catch(a){a=d(a);j(aTZ,a);return ab}}function
aT0(b,a){try{var
c=Z(a),e=ev(aTR(Z(b),c));return e}catch(a){a=d(a);j(aT1,a);return ab}}function
aT2(b,a){try{var
c=Z(a),e=ev(aTS(Z(b),c));return e}catch(a){a=d(a);j(aT3,a);return ab}}function
aT4(a){try{var
b=ev(aTT(Z(a)));return b}catch(a){a=d(a);j(aT5,a);return ab}}function
aT6(b,a){try{var
c=at(a,O(Z(b)));return c}catch(a){a=d(a);j(aT7,a);return gy}}var
dJ=ce(0),ur=[0,0];function
cn(b,a){ur[1]++;var
c=0,d=e$(a)?1:0;aO(dJ,ur[1],[0,0,[0,a,d,b],c]);return ur[1]}function
h(a){try{var
b=an(dJ,a)}catch(a){a=d(a);if(a===J)return _(aT8);throw a}return b[2][1]}function
Gg(a){return an(dJ,a)[2][2]}function
Gh(b,d){var
a=an(dJ,b),c=a[2];return gb(dJ,b,[0,a[1],[0,c[1],d,c[3]],a[3]])}function
Gi(b,c){var
a=an(dJ,b);return gb(dJ,b,[0,a[1],[0,c,a[2][2],0],a[3]])}var
jl=[0,0];function
aT_(b){try{cb(function(a,b){jl[1]=[0,[0,a,aT9],jl[1]];return 0},dJ);var
a=z(jl[1]);return a}catch(a){a=d(a);j(aT$,a);return ab}}function
aUa(a){try{var
b=b2(a+1|0,jl[1])[1];return b}catch(a){a=d(a);j(aUb,a);return ab}}function
aUc(a){try{var
b=b2(a+1|0,jl[1])[2];return b}catch(a){a=d(a);j(aUd,a);return a5}}function
aUe(b){try{try{var
a=an(dJ,b)[2][3];if(a)dV(a[1])}catch(a){}var
c=iP(dJ,b);return c}catch(a){a=d(a);j(aUf,a);return t}}function
aUg(b){if(b){var
a=b[1];if(typeof
a==="number")switch(a){case
0:return 1;case
1:return 2}else
switch(a[0]){case
0:return a[1]?3:4;case
1:return a[1]?5:6;default:return a[1]?7:8}}return 0}function
aUh(i,e){try{var
c=h(i);try{var
b=hB(aC(c),c,e)}catch(b){b=d(b);if(b[1]===le)throw[0,f,o(aJZ,o(a(k+b[2]),aJY))];if(b===Fs)throw[0,f,aJ0];var
g=o(aJ1,a(k+aC(c)));throw[0,f,o(aJ3,o(e,o(aJ2,o(aR(b),g))))]}var
l=ev(bG(b));return l}catch(a){a=d(a);j(aUi,a);return ab}}function
aUj(b,a){try{var
c=O(Z(a)),e=aJ6(h(b),c);return e}catch(a){a=d(a);j(aUk,a);return a5}}function
aUl(a){try{var
b=aJ5(a);return b}catch(a){a=d(a);j(aUm,a);return gy}}function
aUn(b,e){try{var
g=0,h=[0,e],i=0;try{var
a=f9(b),c=afM(i,[0,b],h,g,a);dV(a)}catch(a){a=d(a);if(a[1]===f)throw a;if(a[1]===mk)throw[0,f,a[2]];throw a}var
k=cn(0,c);return k}catch(a){a=d(a);j(aUo,a);return ab}}function
aUp(b,a){try{var
c=cn(0,afQ(0,[0,a],0,b3(0,[0,b])));return c}catch(a){a=d(a);j(aUq,a);return ab}}function
aUr(c,b){try{var
a=f9(c);try{var
e=cn([0,a],afO(0,0,[0,b],0,a));return e}catch(b){dV(a);throw aH}}catch(a){a=d(a);j(aUs,a);return ab}}function
aUt(b,a){try{var
c=cn(0,Db(0,[0,a],0,b3(0,[0,b])));return c}catch(a){a=d(a);j(aUu,a);return ab}}function
aUv(f,e,c,b){try{var
a=h(f);em(a);var
g=tb(0,0,0,0,c,0,b,a,e);return g}catch(a){a=d(a);j(aUw,a);return t}}function
aUx(k,i,g,f,e,c,b){try{var
a=h(k);em(a);var
l=tb([0,e],[0,c],[0,b],0,g,0,f,a,i);return l}catch(a){a=d(a);j(aUy,a);return t}}function
aUz(g,f,e){try{var
a=h(g);em(a);var
b=dB(lt),c=b[1],i=b[2];m8(0,0,0,0,f,0,e,a,c);var
k=dY(dC(c,i));return k}catch(a){a=d(a);j(aUA,a);return d2}}function
aUB(l,k,i,g,f,e){try{var
a=h(l);em(a);var
b=dB(lt),c=b[1],m=b[2];m8([0,g],[0,f],[0,e],0,k,0,i,a,c);var
n=dY(dC(c,m));return n}catch(a){a=d(a);j(aUC,a);return d2}}function
fh(a){try{var
b=aC(h(a));return b}catch(a){a=d(a);j(aUD,a);return ab}}function
Gj(d,c,b,a){return aC(Db(d,b,a,c))}function
aUE(c,b){try{var
a=f9(b);try{var
e=Gj(0,iX(0,a),[0,c],0);dV(a);return e}catch(b){dV(a);throw aH}}catch(a){a=d(a);j(aUF,a);return ab}}function
aUG(b,a){try{var
c=Gj(0,b3(0,[0,a]),[0,b],0);return c}catch(a){a=d(a);j(aUH,a);return ab}}function
aUI(a){return bG(L(1,fh(a)))}function
aUJ(a){try{var
b=ev(aUI(a));return b}catch(a){a=d(a);j(aUK,a);return ab}}function
us(a){try{var
b=e$(h(a));return b}catch(a){a=d(a);j(aUL,a);return gy}}function
aUM(c,b){try{var
e=to(h(c));if(7<b>>>0)throw[0,$,aUO];switch(b){case
0:var
a=0;break;case
1:var
a=1;break;case
2:var
a=2;break;case
3:var
a=3;break;case
4:var
a=4;break;case
5:var
a=5;break;case
6:var
a=6;break;default:var
a=7}var
f=at(a,e);return f}catch(a){a=d(a);j(aUN,a);return gy}}function
aUP(a){try{var
b=aUg(tn(h(a)));return b}catch(a){a=d(a);j(aUQ,a);return ab}}function
aUR(a,b){function
f(c,b){var
a=CH(0,b,c)[1];return a?a[1]:_(aUS)}try{var
g=Gg(a),i=to(h(a)),k=tn(h(a));Gi(a,f(h(a),b));var
c=1-us(a),e=c?1===g?1:0:c,l=e?Gh(a,[0,[0,i,k,[0,b]]]):e;return l}catch(a){a=d(a);j(aUT,a);return t}}function
aUU(a,f){function
g(a,f){if(e(a,_l,a[5])){var
c=CI(0,f,a);if(c)var
d=c[1],b=CH([0,d[1]],d[2],a)[1];else
var
b=0}else
var
b=[0,a];return b?b[1]:_(aUV)}try{var
i=Gg(a),k=to(h(a)),l=tn(h(a));Gi(a,g(h(a),f));var
b=1-us(a),c=b?1===i?1:0:b,m=c?Gh(a,[1,[0,k,l,0]]):c;return m}catch(a){a=d(a);j(aUW,a);return t}}function
Gk(n,m,l,i,h,g,f,e,c,b,a){try{var
k=tb(0,0,0,0,c,[0,[0,h,f,e,O(g)]],b,i,a);return k}catch(a){a=d(a);j(aUX,a);return t}}function
Gl(n,m,l,i,h,g,f,e,c,b,a){try{var
k=m8(0,0,0,0,c,[0,[0,h,f,e,O(g)]],b,i,a);return k}catch(a){a=d(a);j(aUY,a);return t}}function
nH(a){if(7<a>>>0)return _(aUZ);switch(a){case
0:return 0;case
1:return 1;case
2:return aU0;case
3:return aU1;case
4:return aU2;case
5:return aU3;case
6:return aU4;default:return aU5}}function
nI(a){return e0(function(a){if(7<a>>>0)return _(aU6);switch(a){case
0:return 0;case
1:return 1;case
2:return 2;case
3:return 3;case
4:return 4;case
5:return 5;case
6:return 6;default:return 7}},a)}function
aU7(a,k,i,g,f,e,c,b){try{em(h(a));var
l=nI(i),m=nH(k),n=Gk(0,0,0,h(a),m,l,g,f,e,c,b);return n}catch(a){a=d(a);j(aU8,a);return t}}function
aU9(a,l,k,i,g,f,e){try{em(h(a));var
b=dB(lt),c=b[1],m=b[2],n=nI(k),o=nH(l);Gl(0,0,0,h(a),o,n,i,g,f,e,c);var
p=dY(dC(c,m));return p}catch(a){a=d(a);j(aU_,a);return d2}}function
aU$(a,n,m,l,k,i,g,f,e,c,b){try{em(h(a));var
o=nI(m),p=nH(n),q=Gk([0,f],[0,e],[0,c],h(a),p,o,l,k,i,g,b);return q}catch(a){a=d(a);j(aVa,a);return t}}function
aVb(a,o,n,m,l,k,i,g,f,e){try{em(h(a));var
b=dB(lt),c=b[1],p=b[2],q=nI(n),r=nH(o);Gl([0,g],[0,f],[0,e],h(a),r,q,m,l,k,i,c);var
s=dY(dC(c,p));return s}catch(a){a=d(a);j(aVc,a);return d2}}function
Gm(a){return L(1,fh(a))}function
aVd(a,c){if(a.length-1){var
b=O(a),d=g(Gm,O(c));return hz(1,0,g(rR,L(1,z(b))),b,d)}throw[0,$,aVe]}function
aVf(a){try{var
b=cn(0,aVd(e0(h,a),a));return b}catch(a){a=d(a);j(aVg,a);return ab}}function
aVh(a,e,d,c){if(a.length-1){var
b=O(a),f=g(Gm,c);return hz(e,d,g(rR,L(1,z(b))),b,f)}throw[0,$,aVi]}function
aVj(a,c,b){try{var
e=O(a),f=cn(0,aVh(e0(h,a),c,b,e));return f}catch(a){a=d(a);j(aVk,a);return ab}}function
aVl(a,g,f,c,b){var
d=a.length-1!==c.length-1?1:0;if(d)var
e=d;else
var
i=a.length-1!==z(b)?1:0,e=i||(0===a.length-1?1:0);if(e)throw[0,$,aVm];var
h=O(a);return hz(g,f,O(c),h,b)}function
aVn(a,e,c,b){try{var
f=O(b),i=g(function(a){return O(Z(a))},f),k=e0(rR,a),l=cn(0,aVl(e0(h,a),e,c,k,i));return l}catch(a){a=d(a);j(aVo,a);return ab}}function
aVp(K,J){try{var
q=O(Z(J)),a=h(K),B=aVr[1],C=0===z(hw(a))?0:B?Dp([0,a,0],[0,q,0]):0,r=bL(a),D=bJ(a7(r,cd(r))),E=Cb(q),F=dF(a),G=al(function(b){return gc(E,hx([0,D],a,b[3]))?[0,b]:0},F),i=bm(0);cy(function(b,a){bB(i,[0,b,a]);return 0},a);var
H=bL(a),b=[0,a[1],a[2],i[3],i[4],a[5],i[6],a[7]];try{var
p=ai(a,a[3]),y=0;if(typeof
p!=="number"&&6===p[0]){var
w=p[1];y=1}if(!y)var
w=0;var
s=w}catch(a){var
s=0}var
k=g(function(a){return b2(a,H)},q),t=e(a,an1,b[5]);if(t){var
l=t[1];if(typeof
l!=="number"&&6===l[0]){var
u=a4(an3,l[1]);if(u){var
m=u[1];if(typeof
m!=="number"&&8===m[0]){var
n=m[1];x(function(a){function
c(h,c){var
i=ai(b,h),d=i;for(;;){if(e(b,c,d))var
a=0;else{var
j=e(b,an5,d),g=0;if(j){var
f=j[1],m=0;if(typeof
f!=="number"&&6===f[0]){var
k=f[1],l=a4(c,k);if(!l){var
d=[6,k];continue}var
a=[0,l[1]];m=1}if(!m)g=1}else
g=1;if(g)var
a=0}return a?bB(b,[0,h,A(i,c,a[1])]):0}}c(a,an6);c(a,an7);c(a,an8);return c(a,an9)},k);var
I=tz(1,n,tx(b[4][1]),k,0);cy(function(d,a){if(typeof
a!=="number"&&6===a[0]){var
f=a4(an_,a[1]);if(f){var
e=f[1],i=0;if(typeof
e==="number"||!(4===e[0]))i=1;else{var
g=e[1];if(!c(g,an$)){var
h=1-at(d,k);return h?kJ(b,d):h}if(!c(g,aoa))return kJ(b,d)}}return 0}return 0},b);bB(b,[0,n,anK(I,k,b)]);var
v=i7(n,s,b);nb(v,C);var
o=ff(G,v);anU(o);anY(o);var
L=cn(0,o);return L}}throw[0,f,an4]}}throw[0,f,an2]}catch(a){a=d(a);j(aVq,a);return ab}}function
ut(b,d,c){if(12<c>>>0)return _(o(aVs,a(k+c)));switch(c){case
0:return[0,b,d];case
1:return[1,b,d];case
2:return[2,b,d];case
3:return[3,b];case
4:return[4,b];case
5:return[5,b];case
6:return[6,b];case
7:return[7,b];case
8:return[8,b];case
9:return[9,b];case
10:return[10,b];case
11:return 0;default:return 1}}var
Gn=7,Go=0.,Gp=0.;function
D(b,a){a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];return 0}function
aVt(a,e,c,b){try{var
f=aP([0,c,b],fh(a)),g=h(a),i=O(Z(e)),k=h(a),l=D(FM([0,ch[1]],f,k,i),g);return l}catch(a){a=d(a);j(aVu,a);return t}}function
aVv(a,f,e,c,b){try{var
g=aP([0,e,c],fh(a)),i=h(a),k=O(Z(f)),l=h(a),m=D(ud([0,ch[1]],aVx,b,g,0,l,k),i);return m}catch(a){a=d(a);j(aVw,a);return t}}function
aVy(a){var
d=hq(a),e=ky(a),f=kz(a),c=cI(0.,d,0),g=b(c,f);return[0,b(c,e),g]}function
nJ(a){if(15<a>>>0)throw[0,$,aVz];switch(a){case
0:return kA;case
1:return kB;case
2:return kC;case
3:return kD;case
4:return e8;case
5:return kE;case
6:return bK(kA);case
7:return bK(kB);case
8:return bK(kC);case
9:return bK(kD);case
10:return bK(e8);case
11:return bK(kE);case
12:return kF;case
13:return bK(kF);case
14:return kG;default:return bK(kG)}}function
aVA(a,f,e,c){try{var
b=aVy(nJ(e)),g=b[2],i=b[1],k=aP([0,i,g],fh(a)),l=h(a),m=O(Z(f)),n=D(ud(0,aVC,c,k,0,h(a),m),l);return n}catch(a){a=d(a);j(aVB,a);return t}}function
aVD(a,e,c,b){try{var
f=aP([0,c,b],fh(a)),g=h(a),i=O(Z(e)),k=h(a),l=D(ny([0,ch[1]],f,k,i),g);return l}catch(a){a=d(a);j(aVE,a);return t}}function
aVF(a,g,f,e,c,b){try{var
i=h(a),k=O(Z(g)),l=h(a),m=ut(e,c,f),n=D(FJ([0,ch[1]],m,b,l,k),i);return n}catch(a){a=d(a);j(aVG,a);return t}}function
aVH(a,c,b){try{var
e=h(a),f=O(Z(c)),g=D(uc(b,h(a),f),e);return g}catch(a){a=d(a);j(aVI,a);return t}}function
aVJ(a,c,b){try{var
e=h(a),f=O(Z(c)),g=D(aNF(b,h(a),f),e);return g}catch(a){a=d(a);j(aVK,a);return t}}function
aVL(a,c,b){try{var
e=h(a),f=O(Z(c)),g=h(a),i=D(aNG([0,ch[1]],b,g,f),e);return i}catch(a){a=d(a);j(aVM,a);return t}}function
aVN(a,b){try{var
c=h(a),e=h(a),f=O(Z(b)),g=D(nA([0,ch[1]],f,e),c);return g}catch(a){a=d(a);j(aVO,a);return t}}function
aVP(a,b){try{var
c=h(a),e=O(Z(b)),f=h(a),g=D(aNR([0,ch[1]],f,e),c);return g}catch(a){a=d(a);j(aVQ,a);return t}}function
aVR(a,b){try{var
c=h(a),e=O(Z(b)),f=h(a),g=D(aNQ([0,ch[1]],f,e),c);return g}catch(a){a=d(a);j(aVS,a);return t}}function
aVT(a,g,f,e,c,b){try{var
i=aP([0,f,e,c,b],fh(a)),k=h(a),l=O(Z(g)),m=D(aN5(0,i,h(a),l),k);return m}catch(a){a=d(a);j(aVU,a);return t}}function
aVV(a,b){try{var
c=h(a),e=O(Z(b)),f=D(FL(h(a),e),c);return f}catch(a){a=d(a);j(aVW,a);return t}}function
aVX(a,b){try{var
c=h(a),e=O(Z(b)),f=D(aNz(h(a),e),c);return f}catch(a){a=d(a);j(aVY,a);return t}}function
aVZ(a,b){try{var
c=h(a),e=O(Z(b)),f=D(aNB(h(a),e),c);return f}catch(a){a=d(a);j(aV0,a);return t}}function
aV1(a,b){try{var
c=h(a),e=O(Z(b)),f=D(aND(h(a),e),c);return f}catch(a){a=d(a);j(aV2,a);return t}}function
aV3(a,g,c,f,b,e){try{var
i=aP([0,c,b,f-c,e-b],fh(a)),k=h(a),l=O(Z(g)),m=D(FK(i,h(a),l),k);return m}catch(a){a=d(a);j(aV4,a);return t}}function
aV5(a,b){try{var
c=h(a),e=O(Z(b)),f=D(aOo(0,h(a),e),c);return f}catch(a){a=d(a);j(aV6,a);return t}}function
aV7(a,b){try{var
c=h(a),e=O(Z(b)),f=D(aOi(0,h(a),e),c);return f}catch(a){a=d(a);j(aV8,a);return t}}function
aV9(a,c,b){try{var
e=h(a),f=ch[1],g=O(Z(c)),i=D(FF(h(a),g,b,0,f),e);return i}catch(a){a=d(a);j(aV_,a);return t}}function
aV$(a){try{var
b=h(a),c=D(F4(h(a)),b);return c}catch(a){a=d(a);j(aWa,a);return t}}var
hE=[0,[0]];function
aWb(a){try{var
b=h(a),c=D(aRF(h(a)),b);return c}catch(a){a=d(a);j(aWc,a);return t}}function
aWd(a){try{hE[1]=bG(dF(h(a)));var
b=0;return b}catch(a){a=d(a);j(aWe,a);return t}}function
aWf(b,a){try{var
c=p(hE[1],a)[1+a][3],e=hx(0,h(b),c);return e}catch(a){a=d(a);j(aWg,a);return ab}}function
aWh(a){try{var
b=p(hE[1],a)[1+a][1];return b}catch(a){a=d(a);j(aWi,a);return ab}}function
aWj(a){try{var
b=eq(p(hE[1],a)[1+a][2]);return b}catch(a){a=d(a);j(aWk,a);return a5}}var
hF=[0,[0]];function
aWl(a){try{var
b=p(hE[1],a)[1+a][4];return b}catch(a){a=d(a);j(aWm,a);return gy}}function
aWo(c,a,b){try{var
e=DA(h(c),b);p(hF[1],a)[1+a][3]=e;var
f=0;return f}catch(a){a=d(a);j(aWp,a);return t}}function
aWq(a,b){try{p(hF[1],a)[1+a][1]=b;var
c=0;return c}catch(a){a=d(a);j(aWr,a);return t}}function
aWs(a,b){try{p(hF[1],a)[1+a][4]=b;var
c=0;return c}catch(a){a=d(a);j(aWt,a);return t}}function
aWu(g,f){var
a=g,b=f;for(;;){if(b){var
e=b[1];if(92===e){var
c=b[2];if(c){var
d=c[1];if(34===d){var
a=[0,34,a],b=c[2];continue}if(92===d){var
a=[0,92,a],b=c[2];continue}if(aY===d){var
a=[0,10,a],b=c[2];continue}}}var
a=[0,e,a],b=b[2];continue}return l(a)}}function
aWv(a,b){try{var
c=bx(P(aWu(0,aK(b))));p(hF[1],a)[1+a][2]=c;var
e=0;return e}catch(a){a=d(a);j(aWw,a);return t}}function
aWx(a){function
b(a){return[0,a[1],a[2],a[3],a[4]]}try{var
c=h(a),e=h(a);D(ff(g(b,O(hF[1])),e),c);hF[1]=[0];var
f=0;return f}catch(a){a=d(a);j(aWy,a);return t}}function
aWz(a){try{var
b=dY(aNq(h(a)));return b}catch(a){a=d(a);j(aWA,a);return d2}}function
aWB(a,b){try{var
c=b3(0,[0,b]),e=h(a),f=D(aNk(1,0,c,h(a)),e);return f}catch(a){a=d(a);j(aWC,a);return t}}function
aWD(a,f,e,c,b){try{var
g=h(a),i=D(aQN(f,e,c,b,h(a)),g);return i}catch(a){a=d(a);j(aWE,a);return t}}function
uu(l,a,k,i,g,f,e,c,b){try{var
m=h(a),n=h(a),o=h(l),p=O(Z(k)),q=ch[1],r=D(aNW(b,ut(f,e,c),0,0,q,g,i,p,o,n),m);return r}catch(a){a=d(a);j(aWF,a);return t}}function
aWG(b,a){try{var
c=h(b),e=h(a),f=cn(0,aN1(ch[1],e,c,0,0,1));return f}catch(a){a=d(a);j(aWH,a);return ab}}function
aWI(a,b){try{var
c=h(a),e=h(a),f=D(aPV(O(Z(b)),e),c);return f}catch(a){a=d(a);j(aWJ,a);return t}}function
aWK(E,s,Z,Y,h,u,ac,r,j,D,aJ,aI,aH,C,aG,X,W,ab,aF,B){var
ad=nh(r),F=O(Z),ae=[1,D[1],D[2],D[3]],ah=ch[1],aL=0,ag=0;if(0===F)af(aPU);else
li[1]=0;var
U=FQ(B,nh(r)),c=aPR,n=aK(Y);for(;;){if(n){var
H=n[1];if(92===H){var
t=n[2];if(t){var
I=t[1];if(92===I){var
v=t[2];if(v&&aY===v[1]){var
Q=v[2],R=bu(c),c=[0,[0,aY,[0,92,[0,92,aM(c)]]],R],n=Q;continue}}else
if(aY===I){var
c=[0,0,c],n=t[2];continue}}}var
S=n[2],T=bu(c),c=[0,[0,H,aM(c)],T],n=S;continue}var
V=g(aPT,l(g(P,g(l,c)))),p=g(function(c){var
d=DW(aOp,DT(s,U)),a=tM(c);return P(g(aj,al(function(a){var
c=b(d,a);return c?[0,c[1]]:(b(K(aOq),a),0)},a)))},V),w=[0,s],G=0;if(typeof
h==="number")if(2===h)G=1;else
var
i=[0,0.-u*j*(z(p)-1.)/2.];else
switch(h[0]){case
6:case
10:var
i=[0,0.-u*(j*(z(p)-1.)/2.)];break;case
7:case
8:case
9:var
i=[0,0.-u*j*(z(p)-1.)];break;default:G=1}if(G)var
i=[0,0.];if(X){var
L=j*D0(r)/lV;uf[1]=L;i[1]=i[1]+L}else
if(W){var
M=j*D0(r)*2./lV;uf[1]=M;i[1]=i[1]+M}else
uf[1]=0.;x(function(aD){var
v=i[1],c=w[1],D=Fi(0),l=aC(c),aE=0.;function
G(h,p,j,i,c,n){var
q=0,r=[0,[0,aPo,function(e){var
b=a(k+((j+c|0)-1|0));if(i){var
d=i[1];return d<=m(b)?b:o(P(aP(48,d-m(b)|0)),b)}return b}],q],s=[0,[0,aPp,function(i){var
c=[0,0],k=[0,0],a=bo(h,n[3],n[1]);return bk(o,aPl,g(function(g){if(typeof
g!=="number")switch(g[0]){case
19:var
u=g[1];k[1]=0;var
q=e(h,aPe,n[3]);if(q){var
r=e(h,u,q[1]);if(r){var
a=DT(h,r[1]);switch(a[0]){case
0:var
i=a[2];break;case
1:var
i=a[1][5];break;default:var
i=0}var
s=DU(i),m=DS(a);if(m)var
p=1,j=m[1];else
var
p=0,j=ce(0);var
t=p?function(a){try{var
c=tJ(an(j,a));try{var
f=o(au6,an(j,a)),b=f}catch(a){a=d(a);if(a!==J)throw a;var
b=au5}var
e=[0,b,c];return e}catch(b){return[0,au4,[0,a,0]]}}:function(a){try{var
c=an(s,a);try{var
e=[0,c,an(b(DN,0),c)],d=e}catch(b){var
d=[0,o(au8,c),[0,a,0]]}return d}catch(b){return[0,au7,[0,a,0]]}};c[1]=[0,[0,t,a]];return aPf}throw[0,f,aPg]}throw[0,f,aPh];case
25:var
v=g[1];if(0!==c[1])return k[1]?tL(DV(de(c[1]),v)):aPi;break;case
26:var
l=g[1],x=0;if(typeof
l==="number"||!(5===l[0]))x=1;else{var
w=l[1];if(0!==c[1])return k[1]?bk(o,aPj,al(function(a){if(typeof
a!=="number"&&3===a[0]){var
b=a[1];return[0,tL(DV(de(c[1]),b))]}return 0},w)):aPk}break}return aPd},a))}],r],t=[0,[0,aPq,function(a){return FT(h,l)}],s],u=[0,[0,aPr,function(b){return a(k+l)}],t],v=[0,[0,aPs,function(a){return FT(h,c)}],u],w=[0,[0,aPt,function(a){return p}],v],x=[0,[0,aPu,function(a){return Cd(c)}],w],y=[0,[0,aPv,function(a){return mO(c)}],x],z=[0,[0,aPw,function(b){return a(k+c)}],y];return[0,[0,aPx,function(b){return a(k+((c+1|0)/2|0))}],z]}var
ar=aIF(c,aWL);function
n(m,b){var
F=eW(ar,m-1|0),as=F[2],at=F[1];if(C<1.)var
H=e(c,aPy,b[3]),I=H?H[1]:aPQ,J=Cz(aPz,I),au=A(I,J,[6,[0,[0,aPB,[2,C]],[0,[0,aPA,[2,C]],0]]]),n=[0,J],K=A(b[3],aPC,au);else
var
n=0,K=b[3];var
L=e(c,aPD,b[3]),M=L?L[1]:aPP;function
o(a){var
b=B?3:1;return tO(0,b,r,a)*j/lV}var
N=Cz(aPE,M),O=FS(FR(D,aD,G(c,ab,ac,ag,m,b))),i=O[1],aw=O[2],ax=g(function(a){return FR(D,a,G(c,ab,ac,ag,m,b))},p),ay=g(function(a){return FS(a)[1]},ax),d=o(i),f=gh(db(a8b,g(o,ay)));switch(aG){case
0:var
w=0;if(typeof
h==="number")switch(h){case
0:var
a=0.;break;case
1:var
a=0.;break;default:w=1}else
switch(h[0]){case
0:case
3:case
8:w=1;break;case
1:case
4:case
6:case
7:var
a=0.;break;default:var
a=f-d}if(w)var
a=(f-d)/2.;break;case
1:var
x=0;if(typeof
h==="number")switch(h){case
0:var
a=0.;break;case
1:var
a=0.;break;default:x=1}else
switch(h[0]){case
0:case
3:case
8:x=1;break;case
1:case
4:case
6:case
7:var
a=-((f-d)/2.);break;default:var
a=(f-d)/2.}if(x)var
a=0.;break;default:var
y=0;if(typeof
h==="number")switch(h){case
0:var
a=0.;break;case
1:var
a=0.;break;default:y=1}else
switch(h[0]){case
0:case
3:case
8:y=1;break;case
2:case
5:case
9:case
10:var
a=0.;break;default:var
a=-(f-d)}if(y)var
a=-((f-d)/2.)}if(aI)var
Q=e(c,aPF,b[5]),az=Q?av(c,aB(c,Q[1])):av(c,b[2]),R=az;else
var
R=av(c,b[2]);var
s=t$(0,d,R,aL,h),k=s[3],S=s[2],T=s[1],af=0;if(0!==h&&1!==h){var
l=v,t=aE;af=1}if(!af)var
l=Math.sin(z5-k)*v,t=-(Math.cos(z5-k)*v);var
U=t+a,V=S+as,W=T+at;if(E)li[1]=[0,[0,i,W-U,V-l,k],li[1]];var
aj=[0,[19,N,j],[0,[25,i],aOr]],ak=n?[0,[7,n[1]],0]:0,al=q(ak,aj),an=[0,ug(ae),0],ao=q([0,nC(ae),an],al),ap=aH?[0,[0,aF],aOs]:aOw,aq=q(ap,ao),z=q([0,0,[0,aOv,[0,[8,iY([0,[2,W-U,V-l],[0,[1,aOu,k],0]])],aOt]]],aq),aA=A(K,aPG,A(M,N,FQ(B,ad)));function
X(b,a){return o(P(iT(aK(b),a)))}var
Y=g(function(b){var
g=b[3],h=b[1],k=X(i,b[2]),d=S-l,e=T-t-a,m=X(i,g),f=aOE(ad),n=f?f[1]*j/lV:j;return[8,am(c,[6,[0,aPM,[0,[0,aPL,[5,[0,[2,e+k],[0,[2,d],[0,[2,e+m],[0,[2,d+n],0]]]]]],[0,aPK,[0,[0,aPJ,[6,[0,[0,aPI,[3,h]],aPH]]],0]]]]])]},aw);if(0===Y)var
Z=b[5];else{var
$=e(c,aPN,b[5]),ai=0;if($){var
u=$[1],aM=0;if(typeof
u!=="number"&&5===u[0]){var
aa=u[1];ai=1;aM=1}}if(!ai)var
aa=0;var
aC=[5,q(Y,aa)],Z=A(b[5],aPO,aC)}var
_=[0,b[1],b[2],aA,b[4],Z];return aJ?dG(c,z,[0,ah],_):k2(c,z,[0,ah],_)}var
s=E?(FE(function(b,a){n(b,a);return 0},c,F),c):aW(function(a,b){return bD(n,a,b)},c,F);w[1]=s;i[1]=i[1]+u*j;return 0},p);li[1]=l(li[1]);var
y=w[1],N=1-E,_=N?(s[3]=y[3],s[4]=y[4],s[5]=y[5],0):N;return _}}function
Gq(B,A,z,y,x,w,v,u,s,r,q,p,o,n,m,l,k,i,g,f,e,c,b,a){try{var
C=ut(w,v,x),D=Z(z),E=aWK(B,h(A),D,y,C,u,s,r,q,[V,p,o,n],m,l,k,i,g,f,e,c,b,a);return E}catch(a){a=d(a);j(aWM,a);return t}}function
aWN(b,a){try{var
c=tO(0,1,b,a);return c}catch(a){a=d(a);j(aWO,a);return ab}}function
aWP(e,c,a,b){try{var
f=h(a),g=h(a),i=O(Z(b)),k=D(aTn(e,c,ch[1],i,g),f);return k}catch(a){a=d(a);j(aWQ,a);return t}}function
aWR(a,e,c){try{var
f=h(c),g=O(Z(e)),b=aSM(h(a),g,f),i=b[2],k=b[1];D(k,h(a));return i}catch(a){a=d(a);j(aWS,a);return a5}}function
aWT(a,n,m,l,k,i,g,f,e,c,b){try{var
o=h(a),p=h(a),q=D(um(n,m,l,k,i,g,f,e,c,b,ch[1],p),o);return q}catch(a){a=d(a);j(aWU,a);return t}}function
aWV(a){try{var
b=h(a),c=h(a),e=D(aTb(ch[1],c),b);return e}catch(a){a=d(a);j(aWW,a);return t}}function
aWX(a){try{var
b=h(a),c=h(a),e=D(aTa(ch[1],c),b);return e}catch(a){a=d(a);j(aWY,a);return t}}function
aWZ(a,b){try{var
c=h(a),e=h(a),f=D(aQ1(0,O(Z(b)),e),c);return f}catch(a){a=d(a);j(aW0,a);return t}}function
aW1(a,b){try{var
c=h(a),e=h(a),f=D(F1(0,O(Z(b)),e),c);return f}catch(a){a=d(a);j(aW2,a);return t}}function
aW3(g,f){try{var
a=h(g),i=L(1,aC(a)),c=b(b0(function(a){return 0===iD(a,f)?1:0}),i);if(c)var
k=aC(a),e=gh(c)===k?ho(c):c;else
var
e=0;var
l=D(F1(0,e,a),a);return l}catch(a){a=d(a);j(aW4,a);return t}}function
aW5(a,b){try{var
c=h(a),e=D(F2(b,h(a)),c);return e}catch(a){a=d(a);j(aW6,a);return t}}function
aW7(a,b){try{var
c=h(a),e=D(F2(-b|0,h(a)),c);return e}catch(a){a=d(a);j(aW8,a);return t}}function
aW9(a){try{var
b=dY(aSC(h(a)));return b}catch(a){a=d(a);j(aW_,a);return d2}}function
aW$(b){try{var
a=f9(b);try{var
c=m$(iX(0,a));return c}catch(b){dV(a);throw aH}}catch(a){a=d(a);j(aXa,a);return gy}}var
hG=[0,[0]];function
aXb(a){try{var
b=m$(b3(0,[0,a]));return b}catch(a){a=d(a);j(aXc,a);return gy}}function
aXd(a){try{var
b=L(1,aC(h(a)));hG[1]=bG(aQq(h(a),b));var
c=0;return c}catch(a){a=d(a);j(aXe,a);return t}}function
aXf(a){try{var
b=p(hG[1],a)[1+a][1];return b}catch(a){a=d(a);j(aXg,a);return ab}}function
aXh(a){try{var
b=p(hG[1],a)[1+a][4];return b}catch(a){a=d(a);j(aXi,a);return a5}}function
aXj(a){try{var
b=p(hG[1],a)[1+a][3];return b}catch(a){a=d(a);j(aXk,a);return a5}}function
aXl(a){try{var
b=p(hG[1],a)[1+a][5];return b}catch(a){a=d(a);j(aXm,a);return a5}}function
aXn(a){try{var
b=h(a)[2];return b}catch(a){a=d(a);j(aXo,a);return ab}}function
aXp(a){try{var
b=h(a)[1];return b}catch(a){a=d(a);j(aXq,a);return ab}}function
aXr(a){try{var
c=b(eu(h(a)),aXt);return c}catch(a){a=d(a);j(aXs,a);return a5}}function
aXu(a){try{var
c=b(eu(h(a)),aXw);return c}catch(a){a=d(a);j(aXv,a);return a5}}function
aXx(a){try{var
c=b(eu(h(a)),aXz);return c}catch(a){a=d(a);j(aXy,a);return a5}}function
aXA(a){try{var
c=b(eu(h(a)),aXC);return c}catch(a){a=d(a);j(aXB,a);return a5}}function
aXD(a){try{var
c=b(eu(h(a)),aXF);return c}catch(a){a=d(a);j(aXE,a);return a5}}function
aXG(a){try{var
c=b(eu(h(a)),aXI);return c}catch(a){a=d(a);j(aXH,a);return a5}}function
aXJ(a){try{var
c=b(eu(h(a)),aXL);return c}catch(a){a=d(a);j(aXK,a);return a5}}function
aXM(a){try{var
c=b(eu(h(a)),aXO);return c}catch(a){a=d(a);j(aXN,a);return a5}}function
aXP(a){try{var
c=b(eu(h(a)),aXR);return c}catch(a){a=d(a);j(aXQ,a);return a5}}function
aXS(a){try{var
b=hD(h(a),aXU);return b}catch(a){a=d(a);j(aXT,a);return a5}}function
aXV(a){try{var
b=hD(h(a),aXX);return b}catch(a){a=d(a);j(aXW,a);return a5}}function
aXY(a){try{var
b=hD(h(a),aX0);return b}catch(a){a=d(a);j(aXZ,a);return a5}}function
aX1(a){try{var
b=hD(h(a),aX3);return b}catch(a){a=d(a);j(aX2,a);return a5}}function
aX4(a){try{var
b=hD(h(a),aX6);return b}catch(a){a=d(a);j(aX5,a);return a5}}function
aX7(a){try{var
b=hD(h(a),aX9);return b}catch(a){a=d(a);j(aX8,a);return a5}}function
aX_(a){try{var
b=hD(h(a),aYa);return b}catch(a){a=d(a);j(aX$,a);return a5}}function
aYb(a){try{var
b=axZ(a);return b}catch(a){a=d(a);j(aYc,a);return aTw}}function
aYd(i,h,g,f,e,c,b,a){try{var
k=axU([0,i,h,g,f,e,c,b,a]);return k}catch(a){a=d(a);j(aYe,a);return a5}}function
aYf(b,a){try{h(b)[2]=a;var
c=0;return c}catch(a){a=d(a);j(aYg,a);return t}}function
aYh(a,c,b){try{h(a)[1]=c;h(a)[2]=b;var
e=0;return e}catch(a){a=d(a);j(aYi,a);return t}}function
aYj(a,b){try{var
c=bx(b),e=h(a),f=D(bS(0,0,[0,aYl,[3,c],1],h(a)),e);return f}catch(a){a=d(a);j(aYk,a);return t}}function
aYm(a,b){try{var
c=bx(b),e=h(a),f=D(bS(0,0,[0,aYo,[3,c],0],h(a)),e);return f}catch(a){a=d(a);j(aYn,a);return t}}function
aYp(a,b){try{var
c=bx(b),e=h(a),f=D(bS(0,0,[0,aYr,[3,c],1],h(a)),e);return f}catch(a){a=d(a);j(aYq,a);return t}}function
aYs(a,b){try{var
c=bx(b),e=h(a),f=D(bS(0,0,[0,aYu,[3,c],1],h(a)),e);return f}catch(a){a=d(a);j(aYt,a);return t}}function
aYv(a,b){try{var
c=bx(b),e=h(a),f=D(bS(0,0,[0,aYx,[3,c],0],h(a)),e);return f}catch(a){a=d(a);j(aYw,a);return t}}function
aYy(a,b){try{var
c=bx(b),e=h(a),f=D(bS(0,0,[0,aYA,[3,c],0],h(a)),e);return f}catch(a){a=d(a);j(aYz,a);return t}}function
aYB(a,b){try{var
c=bx(b),e=h(a),f=h(a),g=D(bS(0,0,[0,aYD,[3,gu(c)],0],f),e);return g}catch(a){a=d(a);j(aYC,a);return t}}function
aYE(a,b){try{var
c=bx(b),e=h(a),f=h(a),g=D(bS(0,0,[0,aYG,[3,gu(c)],0],f),e);return g}catch(a){a=d(a);j(aYF,a);return t}}function
aYH(a){try{var
b=h(a),c=D(bS(0,0,aYJ,h(a)),b);return c}catch(a){a=d(a);j(aYI,a);return t}}function
aYK(a){try{var
b=h(a),c=D(bS(0,0,aYM,h(a)),b);return c}catch(a){a=d(a);j(aYL,a);return t}}function
aYN(a,b){try{var
c=bx(b),e=h(a),f=D(bS(0,aYQ,[0,aYP,[3,c],1],h(a)),e);return f}catch(a){a=d(a);j(aYO,a);return t}}function
aYR(a,b){try{var
c=bx(b),e=h(a),f=D(bS(0,aYU,[0,aYT,[3,c],0],h(a)),e);return f}catch(a){a=d(a);j(aYS,a);return t}}function
aYV(a,b){try{var
c=bx(b),e=h(a),f=D(bS(0,aYY,[0,aYX,[3,c],1],h(a)),e);return f}catch(a){a=d(a);j(aYW,a);return t}}function
aYZ(a,b){try{var
c=bx(b),e=h(a),f=D(bS(0,aY2,[0,aY1,[3,c],1],h(a)),e);return f}catch(a){a=d(a);j(aY0,a);return t}}function
aY3(a,b){try{var
c=bx(b),e=h(a),f=D(bS(0,aY6,[0,aY5,[3,c],0],h(a)),e);return f}catch(a){a=d(a);j(aY4,a);return t}}function
aY7(a,b){try{var
c=bx(b),e=h(a),f=D(bS(0,aY_,[0,aY9,[3,c],0],h(a)),e);return f}catch(a){a=d(a);j(aY8,a);return t}}function
aY$(a,b){try{var
c=bx(b),e=h(a),f=h(a),g=D(bS(0,aZc,[0,aZb,[3,gu(c)],0],f),e);return g}catch(a){a=d(a);j(aZa,a);return t}}function
aZd(a,b){try{var
c=bx(b),e=h(a),f=h(a),g=D(bS(0,aZg,[0,aZf,[3,gu(c)],0],f),e);return g}catch(a){a=d(a);j(aZe,a);return t}}function
aZh(a){try{var
b=h(a),c=D(bS(0,aZk,aZj,h(a)),b);return c}catch(a){a=d(a);j(aZi,a);return t}}function
aZl(a){try{var
b=h(a),c=D(bS(0,aZo,aZn,h(a)),b);return c}catch(a){a=d(a);j(aZm,a);return t}}function
aZp(a){switch(a){case
0:return aZq;case
1:return aZr;case
2:return aZs;case
3:return aZt;case
4:return aZu;default:return aZv}}function
aZw(c,b){try{if(5<b>>>0)var
a=_(aZy);else
switch(b){case
0:var
a=0;break;case
1:var
a=1;break;case
2:var
a=2;break;case
3:var
a=3;break;case
4:var
a=4;break;default:var
a=5}var
e=h(c),f=aZp(a),g=D(aMv(h(c),f),e);return g}catch(a){a=d(a);j(aZx,a);return t}}function
aZz(a){switch(a){case
0:return aZA;case
1:return aZB;case
2:return aZC;case
3:return aZD;case
4:return aZE;default:return aZF}}function
aZG(c,b){try{if(5<b>>>0)var
a=_(aZI);else
switch(b){case
0:var
a=0;break;case
1:var
a=1;break;case
2:var
a=2;break;case
3:var
a=3;break;case
4:var
a=4;break;default:var
a=5}var
e=h(c),f=aZz(a),g=D(aMI(h(c),f),e);return g}catch(a){a=d(a);j(aZH,a);return t}}function
aZJ(a,b){try{var
c=h(a),e=D(jk([0,aZL,[0,b],0],h(a)),c);return e}catch(a){a=d(a);j(aZK,a);return t}}function
aZM(a,b){try{var
c=h(a),e=D(jk([0,aZO,[0,b],0],h(a)),c);return e}catch(a){a=d(a);j(aZN,a);return t}}function
aZP(a,b){try{var
c=h(a),e=D(jk([0,aZR,[0,b],0],h(a)),c);return e}catch(a){a=d(a);j(aZQ,a);return t}}function
aZS(a,b){try{var
c=h(a),e=D(jk([0,aZU,[0,b],0],h(a)),c);return e}catch(a){a=d(a);j(aZT,a);return t}}function
aZV(a,b){try{var
c=h(a),e=D(jk([0,aZX,[0,b],0],h(a)),c);return e}catch(a){a=d(a);j(aZW,a);return t}}function
aZY(a,b){try{var
c=h(a),e=D(jk([0,aZ0,[0,b],0],h(a)),c);return e}catch(a){a=d(a);j(aZZ,a);return t}}function
aZ1(a,c,b){try{var
e=h(a),f=D(aMV(h(a),c,b),e);return f}catch(a){a=d(a);j(aZ2,a);return t}}function
aZ3(a,b){try{var
c=h(a),e=D(aKk(0,b,h(a)),c);return e}catch(a){a=d(a);j(aZ4,a);return t}}function
aZ5(a,b){try{var
c=h(a),e=h(a),f=D(lg(0,XM([0,b]),e),c);return f}catch(a){a=d(a);j(aZ6,a);return t}}function
aZ7(b){try{var
a=nx(h(b)),c=a?dY(a[1]):d2;return c}catch(a){a=d(a);j(aZ8,a);return d2}}function
aZ9(a){try{var
b=h(a),c=D(aKl(h(a)),b);return c}catch(a){a=d(a);j(aZ_,a);return t}}function
aZ$(a){try{var
b=h(a),c=D(aMo(h(a)),b);return c}catch(a){a=d(a);j(a0a,a);return t}}function
a0b(a,b){try{var
c=h(a),e=D(aLW(h(a),b),c);return e}catch(a){a=d(a);j(a0c,a);return t}}function
a0d(c,b,a){try{var
e=aNO(h(c),b,a);return e}catch(a){a=d(a);j(a0e,a);return gy}}function
a0f(b,a){try{var
c=nc(eW(aw(h(b)),a-1|0)[4]);return c}catch(a){a=d(a);j(a0g,a);return ab}}function
ll(a){var
b=aw(a);return bG(g(function(g){var
h=g[2],B=0;if(typeof
h!=="number"&&5===h[0]){var
w=h[1];if(w){var
x=w[2];if(x){var
y=x[2];if(y){var
z=y[2];if(z&&!z[2]){var
S=y[1],T=x[1],U=w[1],W=C(a,z[1]),X=C(a,S),Y=C(a,T),l=W,k=X,j=Y,i=C(a,U);B=1}}}}}if(!B)var
l=0.,k=0.,j=0.,i=0.;var
A=e(a,a0h,g[5]),D=0;if(A){var
m=A[1],b=0;if(typeof
m!=="number"&&5===m[0]){var
s=m[1];if(s){var
t=s[2];if(t){var
u=t[2];if(u){var
v=u[2];if(v&&!v[2]){var
M=u[1],N=t[1],O=s[1],P=C(a,v[1]),Q=C(a,M),R=C(a,N),q=P,p=Q,o=R,n=C(a,O);D=1;b=1}else
b=1}else
b=1}else
b=1}else
b=1}}if(!D)var
q=l,p=k,o=j,n=i;function
r(j){var
i=e(a,j,g[5]);if(i){var
b=i[1],u=0;if(typeof
b==="number"||!(5===b[0]))u=1;else{var
c=b[1];if(c){var
d=c[2];if(d){var
f=d[2];if(f){var
h=f[2];if(h&&!h[2]){var
k=f[1],l=d[1],m=c[1],r=C(a,h[1]),s=C(a,k),t=C(a,l);return[0,C(a,m),t,s,r]}}}}}}return[0,n,o,p,q]}var
c=r(a0i),E=c[4],F=c[3],G=c[2],H=c[1],d=r(a0j),I=d[4],J=d[3],K=d[2],L=d[1],f=r(a0k);return[0,[V,i,k,j,l],[V,n,p,o,q],[V,f[1],f[3],f[2],f[4]],[V,L,J,K,I],[V,H,F,G,E]]},b))}function
a0l(e,c){try{var
b=c-1|0,a=p(ll(h(e)),b)[1+b][1],f=[0,a[1],a[2],a[3],a[4]];return f}catch(a){a=d(a);j(a0m,a);return lk}}function
a0n(e,c){try{var
b=c-1|0,a=p(ll(h(e)),b)[1+b][2],f=[0,a[1],a[2],a[3],a[4]];return f}catch(a){a=d(a);j(a0o,a);return lk}}function
a0p(e,c){try{var
b=c-1|0,a=p(ll(h(e)),b)[1+b][5],f=[0,a[1],a[2],a[3],a[4]];return f}catch(a){a=d(a);j(a0q,a);return lk}}function
a0r(e,c){try{var
b=c-1|0,a=p(ll(h(e)),b)[1+b][4],f=[0,a[1],a[2],a[3],a[4]];return f}catch(a){a=d(a);j(a0s,a);return lk}}function
a0t(e,c){try{var
b=c-1|0,a=p(ll(h(e)),b)[1+b][3],f=[0,a[1],a[2],a[3],a[4]];return f}catch(a){a=d(a);j(a0u,a);return lk}}function
a0v(a,g,f,e,c,b){try{var
i=h(a),k=O(Z(g)),l=D(nB(a0x,f,e,c,b,h(a),k),i);return l}catch(a){a=d(a);j(a0w,a);return t}}function
a0y(a,g,f,e,c,b){try{var
i=h(a),k=O(Z(g)),l=D(nB(a0A,f,e,c,b,h(a),k),i);return l}catch(a){a=d(a);j(a0z,a);return t}}function
a0B(a,g,f,e,c,b){try{var
i=h(a),k=O(Z(g)),l=D(nB(a0D,f,e,c,b,h(a),k),i);return l}catch(a){a=d(a);j(a0C,a);return t}}function
a0E(a,g,f,e,c,b){try{var
i=h(a),k=O(Z(g)),l=D(nB(a0G,f,e,c,b,h(a),k),i);return l}catch(a){a=d(a);j(a0F,a);return t}}function
a0H(b,a){try{var
c=h(a),e=D(nu(0,0,0,h(a),b),c);return e}catch(a){a=d(a);j(a0I,a);return t}}function
a0J(c,b,a){try{var
e=h(a),f=D(nu([0,[0,c]],0,0,h(a),b),e);return f}catch(a){a=d(a);j(a0K,a);return t}}function
a0L(c,a,b){try{var
e=h(a),f=D(nu(0,0,[0,b],h(a),c),e);return f}catch(a){a=d(a);j(a0M,a);return t}}function
a0N(e,c,a,b){try{var
f=h(a),g=D(nu([0,[0,e]],0,[0,b],h(a),c),f);return g}catch(a){a=d(a);j(a0O,a);return t}}var
jm=[0,0];function
a0P(a){try{var
b=h(a),c=D(aJw(h(a)),b);return c}catch(a){a=d(a);j(a0Q,a);return t}}function
a0R(a){try{jm[1]=aI$(h(a));var
b=0;return b}catch(a){a=d(a);j(a0S,a);return t}}function
a0T(b){try{var
a=z(jm[1]);return a}catch(a){a=d(a);j(a0U,a);return ab}}function
a0V(a){try{var
b=b2(a+1|0,jm[1])[1];return b}catch(a){a=d(a);j(a0W,a);return a5}}function
a0X(a){try{var
b=b2(a+1|0,jm[1])[2];return b}catch(a){a=d(a);j(a0Y,a);return ab}}var
fi=[0,[0]];function
a0Z(a){try{var
c=dY(b(b2(a+1|0,jm[1])[3],0));return c}catch(a){a=d(a);j(a00,a);return d2}}function
a01(a){try{var
b=p(fi[1],a)[1+a][1];return b}catch(a){a=d(a);j(a02,a);return ab}}function
a03(a){try{var
b=p(fi[1],a)[1+a][2];return b}catch(a){a=d(a);j(a04,a);return a5}}function
a05(a){try{var
b=p(fi[1],a)[1+a][3];return b}catch(a){a=d(a);j(a06,a);return ab}}function
a07(a){try{var
b=p(fi[1],a)[1+a][4];return b}catch(a){a=d(a);j(a08,a);return ab}}function
a09(a){try{var
b=p(fi[1],a)[1+a][5];return b}catch(a){a=d(a);j(a0_,a);return gx}}function
a0$(a){try{var
b=p(fi[1],a)[1+a][6];return b}catch(a){a=d(a);j(a1a,a);return gx}}function
a1b(i,c,b,g,f,e){try{if(4<c>>>0)var
a=_(a1d);else
switch(c){case
0:var
a=0;break;case
1:var
a=1;break;case
2:var
a=2;break;case
3:var
a=3;break;default:var
a=4}var
k=S(b,a1e)?0:[0,bx(b)],l=O(Z(f)),m=aSt(h(i),e,a,k,g,l);return m}catch(a){a=d(a);j(a1c,a);return t}}var
hH=[0,[0]];function
a1f(a){try{var
b=Dq(h(a));return b}catch(a){a=d(a);j(a1g,a);return t}}function
a1h(a){try{hH[1]=bG(hw(h(a)));var
b=hH[1].length-1;return b}catch(a){a=d(a);j(a1i,a);return ab}}function
a1j(a){switch(a){case
0:return 0;case
1:return 1;case
2:return 2;case
3:return 3;case
4:return 4;default:return 5}}function
a1k(a){try{var
b=a1j(p(hH[1],a)[1+a][1]);return b}catch(a){a=d(a);j(a1l,a);return ab}}function
a1m(a){try{var
b=p(hH[1],a)[1+a][2],c=b?eq(b[1]):a1o;return c}catch(a){a=d(a);j(a1n,a);return a5}}function
a1p(a){try{var
b=p(hH[1],a)[1+a][3];return b}catch(a){a=d(a);j(a1q,a);return ab}}function
a1r(a){try{var
b=p(hH[1],a)[1+a][4];return b}catch(a){a=d(a);j(a1s,a);return ab}}function
a1t(c,a){var
e=hw(h(c));try{try{var
f=tv(a,e),b=f}catch(a){a=d(a);if(a!==J)throw a;var
b=a1v}return b}catch(a){a=d(a);j(a1u,a);return a5}}function
a1w(g){try{var
a=h(g),e=function(d){var
b=a1y[1];if(c(b,aR4)){var
a=AS(aR5,OR,b);P$(a,j$(a));eV(a,d);return mm(a)}return 0};try{var
i=[0,i1(a)],l=i1(a);e(b(ae(aR7),l));for(;;){aRG(a);var
m=i1(a);if(m<i[1]){i[1]=i1(a);var
n=i1(a);e(b(ae(aR8),n));continue}e(ae(aR9));aRU(a);e(ae(aR_));$U[1]=9;F4(a);break}}catch(a){a=d(a);var
k=aR(a);throw[0,f,b(ae(aR6),k)]}var
o=h(g),p=D(h(g),o);return p}catch(a){a=d(a);j(a1x,a);return t}}function
a1z(g,f,e,c,b){try{var
a=AT(g),i=h(b);Fb(Cf(a),f,e,c,0,i);var
k=mm(a);return k}catch(a){a=d(a);j(a1A,a);return t}}function
a1B(g,f,e,c){try{var
a=dB(lt),b=a[1],i=a[2];Fb(b,g,f,e,0,h(c));var
k=dY(dC(b,i));return k}catch(a){a=d(a);j(a1C,a);return d2}}function
a1D(b){try{var
a=f9(b);try{var
c=Fc(iX(0,a));dV(a);var
e=cn(0,c);return e}catch(b){dV(a);throw aH}}catch(a){a=d(a);j(a1E,a);return ab}}var
nK=[0,[0]];function
a1F(a){try{var
b=cn(0,Fc(b3(0,[0,a])));return b}catch(a){a=d(a);j(a1G,a);return ab}}function
a1H(a){try{nK[1]=bG(aRk(h(a)));var
b=nK[1].length-1;return b}catch(a){a=d(a);j(a1I,a);return ab}}function
a1J(a){try{var
b=p(nK[1],a)[1+a];return b}catch(a){a=d(a);j(a1K,a);return a5}}function
a1L(a){try{var
b=aQ5(h(a));return b}catch(a){a=d(a);j(a1M,a);return t}}function
a1N(c,b,a){try{var
e=aRo(b,a,h(c));return e}catch(a){a=d(a);j(a1O,a);return t}}function
a1P(a){try{var
b=aRt(h(a));return b}catch(a){a=d(a);j(a1Q,a);return t}}function
a1R(c,b,a){try{var
e=cn(0,aSw(c,b,a));return e}catch(a){a=d(a);j(a1S,a);return ab}}function
a1T(b,a){try{var
c=cn(0,aSx(nJ(b),a));return c}catch(a){a=d(a);j(a1U,a);return ab}}function
Gr(b){var
a=f9(b);try{var
c=QK(a,j$(a));dV(a);var
d=bl(c);return d}catch(b){dV(a);throw aH}}function
a1V(f,e,c,b,a){try{var
g=Gr(a),h=cn(0,nE(mR(0,f,e),c,b,g));return h}catch(a){a=d(a);j(a1W,a);return ab}}function
a1X(e,c,b,a){try{var
f=Gr(a),g=cn(0,nE(nJ(e),c,b,f));return g}catch(a){a=d(a);j(a1Y,a);return ab}}function
a1Z(f,e,c,b,a){try{var
g=cn(0,nE(mR(0,f,e),c,b,[0,a]));return g}catch(a){a=d(a);j(a10,a);return ab}}function
a11(e,c,b,a){try{var
f=cn(0,nE(nJ(e),c,b,[0,a]));return f}catch(a){a=d(a);j(a12,a);return ab}}function
a13(a,c,b){try{var
e=h(a),f=h(a),g=D(aSs(0,b,O(Z(c)),f),e);return g}catch(a){a=d(a);j(a14,a);return t}}function
a15(a,b){try{var
c=h(a),e=h(a),f=D(aTc(a17,O(Z(b)),e),c);return f}catch(a){a=d(a);j(a16,a);return t}}function
a18(a,b){try{var
c=h(a),e=h(a),f=D(aTe(a1_,O(Z(b)),e),c);return f}catch(a){a=d(a);j(a19,a);return t}}function
a1$(a,b){try{var
c=h(a),e=h(a),f=D(aTg(a2b,O(Z(b)),e),c);return f}catch(a){a=d(a);j(a2a,a);return t}}function
a2c(a,c,b){try{var
e=h(a),f=h(a),g=D(aTh(O(Z(c)),b,f),e);return g}catch(a){a=d(a);j(a2d,a);return t}}function
a2e(b,a){try{var
c=h(a),e=h(a),f=D(ub(0,h(b),e),c);return f}catch(a){a=d(a);j(a2f,a);return t}}function
a2g(a,b){try{var
c=h(a),e=h(a),f=D(aP0(O(Z(b)),e),c);return f}catch(a){a=d(a);j(a2h,a);return t}}function
a2i(a){try{var
b=bn(h(a)[5],a2k);h(a)[5]=b;var
c=0;return c}catch(a){a=d(a);j(a2j,a);return t}}function
a2l(b,a){try{var
c=Ga(h(b),a,0);return c}catch(a){a=d(a);j(a2m,a);return t}}function
a2n(c,b,a){try{var
e=[0,cA(jd(0,0,0,a))],f=Ga(h(c),b,e);return f}catch(a){a=d(a);j(a2o,a);return t}}function
a2p(c,b,a){try{var
e=cA(jd(0,0,0,a)),f=Gb(h(c),b,e,0);return f}catch(a){a=d(a);j(a2q,a);return t}}function
a2r(e,c,b,a){try{var
f=h(e),g=cA(jd(0,0,0,b)),i=Gb(f,c,g,[0,cA(jd(0,0,0,a))]);return i}catch(a){a=d(a);j(a2s,a);return t}}function
a2t(b,a){try{var
c=dY(aTo(h(b),a));return c}catch(a){a=d(a);j(a2u,a);return d2}}function
a2v(a,b){try{var
c=h(a),e=O(Z(b)),f=D(aTq(h(a),e),c);return f}catch(a){a=d(a);j(a2w,a);return t}}var
a2D=[Q,a2C,aL(0)];function
v(b){if(0===un[1])return b;var
a=uo[1];un[1]=aTr;uo[1]=aTu;throw[0,a2D,a]}function
r(a){v(a);return Xd}function
gz(a){v(a);return!!a}function
ew(b){var
c=aS(uq(b),0),d=uq(b)-1|0,e=0;if(!(d<0)){var
a=e;for(;;){var
f=Ge(b,a);p(c,a)[1+a]=f;var
g=a+1|0;if(d!==a){var
a=g;continue}break}}return hg(c)}function
T(e){var
c=f8(e),b=[0,Gd(0)],d=c.length-1-1|0,f=0;if(!(d<0)){var
a=f;for(;;){var
g=p(c,a)[1+a],h=Gf(b[1],g);M(b[1]);b[1]=h;var
i=a+1|0;if(d!==a){var
a=i;continue}break}}return b[1]}function
d3(b){var
a=a75(b);return 1===a77(a)?a:as(V0)}var
uw=[0,0,0,0];function
a2E(hg,hf,he,hd,hc,ha,g9,g5,g4,g2,g1,gY,gO,gN,gM,gK,gH,gz,gy,gx,gw,gv,gu,gt,gs,gr,gq,gp,go,gn,gm,gl,gk,gj,gi,gh,gg,gf,ge,gd,gc,gb,ga,f$,f_,f9,f8,f2,fZ,fY,fS,fQ,fN,fH,fA,fy,fu,fs,fr,fm,fj,fi,fh,fg,ff,fe,fd,fc,fb,fa,e$,e_,e9,e8,e7,e6,e5,e4,e3,e2,e1,eZ,eY,eX,eW,eV,eU,eT,eS,eR,eQ,eO,eM,eK,eI,eH,eG,eF,eC,eB,ez,ey,ew,ev,eu,et,es,er,eq,ep,eo,en,em,el,ek,ej,ei,eh,eg,ef,ee,ed,eb,ea,d_,d9,d8,d6,d4,d3,d2,d1,d0,dZ,dY,dX,dW,dV,dU,dS,dR,dQ,dP,dN,dK,dJ,dI,dH,dG,dF,dE,dD,dC,dB,dA,dz,dy,dx,dv,du,dr,dl,dk,dj,di,dh,dg,df,de,dd,dc,db,da,c$,c_,c9,c7,c6,c4,c2,c1,c0,cZ,cY,cX,cW,cV,cU,cT,cS,cR,cQ,cN,cL,cK,cJ,cI,cH,cG,cF,cE,cD,cC,cB,cA,cz,cy,cx,cw,cv,cu,ct,cs,cr,cq,cp,cn,cm,cl,ck,cj,ci,ch,cg,cf,ce,cd,cc,cb,ca,b$,b_,b9,b8,b7,b6,b4,b3,b2,b1,b0,bZ,bY,bU,bT,bS,bR,bQ,bP,bO,bN,bM,bL,bK,bJ,bI,bH,bG,bD,bC,bB,bA,bz,by,bx,bw,bv,bu,bt,bs,br,bq,bp,bo,bn,bm,bl,bk,bj,bi,bh,bg,bf,be,bd,bc,bb,ba,a$,a_,a9,a8,a7,a6,a5,a4,a3,a2,a1,a0,aZ,aX,aW,aV,aU,aT,aS,aR,aP,aO,aN,aM,aL,aK,aJ,aI,aH,aG,aF,aE,aD,aC,aB,aA,az,ay){if(!uw[1]){if(0===uv)var
f=BK([0]);else{var
g=BK(e0(UZ,uv));Bb(function(c,b){var
a=(c*2|0)+2|0;g[3]=I(mF[4],b,a,g[3]);g[4]=I(mG[4],a,1,g[4]);return 0},uv);var
f=g}var
a=U4(f,a2F),c=e0(function(a){return U2(f,a)},a2B),hh=c[1],hi=c[2],hj=c[3],hk=c[4],hl=c[5],hm=c[6],hn=c[7],ho=c[8],hp=c[9],hq=c[10],hr=c[11],hs=c[12],ht=c[13],hu=c[14],hv=c[15],hw=c[16],hx=c[17],hy=c[18],hz=c[19],hA=c[20],hB=c[21],hC=c[22],hD=c[23],hE=c[24],hF=c[25],hG=c[26],hH=c[27],hI=c[28],hK=c[29],hP=c[30],hR=c[31],hS=c[32],hU=c[33],h0=c[34],h3=c[35],h4=c[36],h7=c[37],h9=c[38],h_=c[39],ib=c[40],id=c[41],ie=c[42],ih=c[43],ii=c[44],il=c[45],im=c[46],iu=c[47],iv=c[48],iw=c[49],ix=c[50],iz=c[51],iA=c[52],iB=c[53],iC=c[54],iD=c[55],iE=c[56],iF=c[57],iG=c[58],iH=c[59],iI=c[60],iJ=c[61],iK=c[62],iL=c[63],iM=c[64],iN=c[65],iO=c[66],iP=c[67],iQ=c[68],iR=c[69],iS=c[70],iT=c[71],iU=c[72],iV=c[73],iW=c[74],iX=c[75],iY=c[76],iZ=c[77],i0=c[78],i1=c[79],i2=c[80],i3=c[81],i4=c[82],i5=c[83],i6=c[84],i7=c[85],i8=c[86],i9=c[87],i_=c[88],i$=c[89],ja=c[90],jb=c[91],jc=c[92],jd=c[93],je=c[94],jf=c[95],jg=c[96],jh=c[97],ji=c[98],jj=c[99],jk=c[aQ],jl=c[bW],jm=c[bE],jo=c[c8],jp=c[dp],jq=c[cO],jr=c[fT],js=c[fW],jt=c[cP],jv=c[dw],jw=c[aY],jx=c[dq],jz=c[ec],jA=c[gP],jB=c[bF],jC=c[dO],jD=c[bX],jF=c[dn],jG=c[fp],jH=c[g8],jI=c[bV],jK=c[gU],jM=c[b5],jP=c[dt],jQ=c[eL],jS=c[c5],jT=c[co],jU=c[dL],jV=c[N],jW=c[jy],jY=c[j3],jZ=c[ju],j0=c[lF],j4=c[jR],j6=c[lW],j7=c[jL],j8=c[hZ],j9=c[hY],j_=c[f6],j$=c[hW],ka=c[ig],kb=c[lD],kc=c[jN],kd=c[hV],ke=c[jn],kf=c[j2],kg=c[iy],kh=c[ir],ki=c[lX],kj=c[jE],kk=c[j1],kl=c[h8],km=c[lQ],kn=c[j5],ko=c[h1],kp=c[ia],kq=c[hM],kr=c[lK],ks=c[jX],kt=c[jO],ku=c[ip],kv=c[fV],kw=c[fX],kx=c[eP],ky=c[fE],kz=c[fO],kA=c[f1],kB=c[fB],kC=c[gW],kD=c[eJ],kE=c[fF],kF=c[gZ],kG=c[fx],kH=c[lB],kI=c[f7],kJ=c[fG],kK=c[ik],kL=c[fz],kM=c[gV],kN=c[f0],kO=c[d7],kP=c[gS],kQ=c[fq],kR=c[hX],kS=c[it],kT=c[gF],kU=c[hO],kV=c[eA],kW=c[fM],kX=c[g_],kY=c[gI],kZ=c[ds],k0=c[c3],k1=c[fL],k2=c[fk],k3=c[hT],k4=c[fP],k5=c[h$],k6=c[h2],k7=c[ft],k8=c[dm],k9=c[gX],k_=c[h6],k$=c[eE],la=c[hL],lb=c[gA],lc=c[gC],ld=c[f3],le=c[eN],lf=c[iq],lg=c[g6],lh=c[ij],li=c[hJ],lj=c[ic],lk=c[fD],ll=c[io],lm=c[fn],ln=c[ex],lo=c[gB],lp=c[gQ],lq=c[gG],lr=c[gL],ls=c[g0],lt=c[fv],lu=c[dT],lv=c[fl],lw=c[g3],lx=c[g$],ly=c[gT],lz=c[gR],lA=c[gE],lC=c[hN],lE=c[gJ],lG=c[fC],lH=c[fI],lI=c[fw],lJ=c[hQ],lL=c[fK],lM=c[h5],lN=c[fo],lO=c[d$],lP=c[eD],lR=c[g7],lS=c[hb],lT=c[fR],lU=c[fJ],lV=c[d5],lY=c[f5],lZ=c[Q],l0=c[gD],l1=c[cM],l2=c[f4],l3=c[dM],l4=c[fU],l5=c[V],l6=c[aq],l7=c[ak],l8=c[is],l9=c[oc],l_=c[Na],l$=c[vq],ma=c[Jz],mb=c[Pj],mc=c[KY],md=c[J3],me=c[ID],mf=c[uB],mg=c[GO],mh=c[Jr],mi=c[Nm],mj=c[pK],mk=c[zQ],ml=c[K4],mm=c[H1],mn=c[N2],mo=c[Kp],mp=c[Hr],mq=c[GR],mr=c[Nl],ms=c[Oe],mt=c[KQ],mu=c[jJ],mv=c[J2],mw=c[I3],mx=c[M5],my=c[Is],mz=c[H6],mA=c[J9],mB=c[Iw],mC=c[Lk],mD=c[pg],mE=c[Oo],mI=c[u3],mJ=c[NL],mK=c[qU],mL=c[PF],mM=c[uR],mN=c[w8],mO=c[GZ],mP=c[Ny],mQ=c[Pf],mR=c[MU],mS=c[HP],mT=c[KP],mU=c[Kv],mV=c[Lg],mW=c[IN],mX=c[G4],mY=c[K_],mZ=c[LW],m0=c[Ly],m1=c[Ku],m2=c[I$],m3=c[Ld],m4=c[Pk],m5=c[Iv],m6=c[G7],m7=c[NM],m8=c[Nk],m9=c[NA],m_=c[pB],m$=c[JM],na=c[O2],nb=c[IC],nc=c[KL],nd=c[HQ],ne=function(d){var
c=d[1+a];return b(c[2],c[1])},nf=function(d){var
c=d[1+a];return b(c[3],c[1])},ng=function(d){var
c=d[1+a];return b(c[4],c[1])},nh=function(d){var
c=d[1+a];return b(c[5],c[1])},ni=function(d){var
c=d[1+a];return b(c[6],c[1])},nj=function(d){var
c=d[1+a];return b(c[7],c[1])},nk=function(d){var
c=d[1+a];return b(c[8],c[1])},nl=function(d){var
c=d[1+a];return b(c[9],c[1])},nm=function(d){var
c=d[1+a];return b(c[10],c[1])},nn=function(d){var
c=d[1+a];return b(c[11],c[1])},no=function(d){var
c=d[1+a];return b(c[12],c[1])},np=function(d){var
c=d[1+a];return b(c[13],c[1])},nq=function(d){var
c=d[1+a];return b(c[14],c[1])},nr=function(d){var
c=d[1+a];return b(c[15],c[1])},ns=function(d){var
c=d[1+a];return b(c[16],c[1])},nt=function(d){var
c=d[1+a];return b(c[17],c[1])},nu=function(d){var
c=d[1+a];return b(c[18],c[1])},nv=function(d){var
c=d[1+a];return b(c[19],c[1])},nw=function(d){var
c=d[1+a];return b(c[20],c[1])},nx=function(d){var
c=d[1+a];return b(c[21],c[1])},ny=function(d){var
c=d[1+a];return b(c[22],c[1])},nz=function(d){var
c=d[1+a];return b(c[23],c[1])},nA=function(d){var
c=d[1+a];return b(c[24],c[1])},nB=function(d){var
c=d[1+a];return b(c[25],c[1])},nC=function(d){var
c=d[1+a];return b(c[26],c[1])},nD=function(d){var
c=d[1+a];return b(c[27],c[1])},nE=function(d){var
c=d[1+a];return b(c[28],c[1])},nF=function(d){var
c=d[1+a];return b(c[29],c[1])},nG=function(d){var
c=d[1+a];return b(c[30],c[1])},nH=function(d){var
c=d[1+a];return b(c[31],c[1])},nI=function(d){var
c=d[1+a];return b(c[32],c[1])},nJ=function(d){var
c=d[1+a];return b(c[33],c[1])},nK=function(d){var
c=d[1+a];return b(c[34],c[1])},nL=function(d){var
c=d[1+a];return b(c[35],c[1])},nM=function(d){var
c=d[1+a];return b(c[36],c[1])},nN=function(d){var
c=d[1+a];return b(c[37],c[1])},nO=function(d){var
c=d[1+a];return b(c[38],c[1])},nP=function(d){var
c=d[1+a];return b(c[39],c[1])},nQ=function(d){var
c=d[1+a];return b(c[40],c[1])},nR=function(d){var
c=d[1+a];return b(c[41],c[1])},nS=function(d){var
c=d[1+a];return b(c[42],c[1])},nT=function(d){var
c=d[1+a];return b(c[43],c[1])},nU=function(d){var
c=d[1+a];return b(c[44],c[1])},nV=function(d){var
c=d[1+a];return b(c[45],c[1])},nW=function(d){var
c=d[1+a];return b(c[46],c[1])},nX=function(d){var
c=d[1+a];return b(c[47],c[1])},nY=function(d){var
c=d[1+a];return b(c[48],c[1])},nZ=function(d){var
c=d[1+a];return b(c[49],c[1])},n0=function(d){var
c=d[1+a];return b(c[50],c[1])},n1=function(d){var
c=d[1+a];return b(c[51],c[1])},n2=function(d){var
c=d[1+a];return b(c[52],c[1])},n3=function(d){var
c=d[1+a];return b(c[53],c[1])},n4=function(d){var
c=d[1+a];return b(c[54],c[1])},n5=function(d){var
c=d[1+a];return b(c[55],c[1])},n6=function(d){var
c=d[1+a];return b(c[56],c[1])},n7=function(d){var
c=d[1+a];return b(c[57],c[1])},n8=function(d){var
c=d[1+a];return b(c[58],c[1])},n9=function(d){var
c=d[1+a];return b(c[59],c[1])},n_=function(d){var
c=d[1+a];return b(c[60],c[1])},n$=function(d){var
c=d[1+a];return b(c[61],c[1])},oa=function(d){var
c=d[1+a];return b(c[62],c[1])},ob=function(d){var
c=d[1+a];return b(c[63],c[1])},od=function(d){var
c=d[1+a];return b(c[64],c[1])},oe=function(d){var
c=d[1+a];return b(c[65],c[1])},of=function(d){var
c=d[1+a];return b(c[66],c[1])},og=function(d){var
c=d[1+a];return b(c[67],c[1])},oh=function(d){var
c=d[1+a];return b(c[68],c[1])},oi=function(d){var
c=d[1+a];return b(c[69],c[1])},oj=function(d){var
c=d[1+a];return b(c[70],c[1])},ok=function(d){var
c=d[1+a];return b(c[71],c[1])},ol=function(d){var
c=d[1+a];return b(c[72],c[1])},om=function(d){var
c=d[1+a];return b(c[73],c[1])},on=function(d){var
c=d[1+a];return b(c[74],c[1])},oo=function(d){var
c=d[1+a];return b(c[75],c[1])},op=function(d){var
c=d[1+a];return b(c[76],c[1])},oq=function(d){var
c=d[1+a];return b(c[77],c[1])},or=function(d){var
c=d[1+a];return b(c[78],c[1])},os=function(d){var
c=d[1+a];return b(c[79],c[1])},ot=function(d){var
c=d[1+a];return b(c[80],c[1])},ou=function(d){var
c=d[1+a];return b(c[81],c[1])},ov=function(d){var
c=d[1+a];return b(c[82],c[1])},ow=function(d){var
c=d[1+a];return b(c[83],c[1])},ox=function(d){var
c=d[1+a];return b(c[84],c[1])},oy=function(d){var
c=d[1+a];return b(c[85],c[1])},oz=function(d){var
c=d[1+a];return b(c[86],c[1])},oA=function(d){var
c=d[1+a];return b(c[87],c[1])},oB=function(d){var
c=d[1+a];return b(c[88],c[1])},oC=function(d){var
c=d[1+a];return b(c[89],c[1])},oD=function(d){var
c=d[1+a];return b(c[90],c[1])},oE=function(d){var
c=d[1+a];return b(c[91],c[1])},oF=function(d){var
c=d[1+a];return b(c[92],c[1])},oG=function(d){var
c=d[1+a];return b(c[93],c[1])},oH=function(d){var
c=d[1+a];return b(c[94],c[1])},oI=function(d){var
c=d[1+a];return b(c[95],c[1])},oJ=function(d){var
c=d[1+a];return b(c[96],c[1])},oK=function(d){var
c=d[1+a];return b(c[97],c[1])},oL=function(d){var
c=d[1+a];return b(c[98],c[1])},oM=function(d){var
c=d[1+a];return b(c[99],c[1])},oN=function(d){var
c=d[1+a];return b(c[aQ],c[1])},oO=function(d){var
c=d[1+a];return b(c[bW],c[1])},oP=function(d){var
c=d[1+a];return b(c[bE],c[1])},oQ=function(d){var
c=d[1+a];return b(c[c8],c[1])},oR=function(d){var
c=d[1+a];return b(c[dp],c[1])},oS=function(d){var
c=d[1+a];return b(c[cO],c[1])},oT=function(d){var
c=d[1+a];return b(c[fT],c[1])},oU=function(d){var
c=d[1+a];return b(c[fW],c[1])},oV=function(d){var
c=d[1+a];return b(c[cP],c[1])},oW=function(d){var
c=d[1+a];return b(c[dw],c[1])},oX=function(d){var
c=d[1+a];return b(c[aY],c[1])},oY=function(d){var
c=d[1+a];return b(c[dq],c[1])},oZ=function(d){var
c=d[1+a];return b(c[ec],c[1])},o0=function(d){var
c=d[1+a];return b(c[gP],c[1])},o1=function(d){var
c=d[1+a];return b(c[bF],c[1])},o2=function(d){var
c=d[1+a];return b(c[dO],c[1])},o3=function(d){var
c=d[1+a];return b(c[bX],c[1])},o4=function(d){var
c=d[1+a];return b(c[dn],c[1])},o5=function(d){var
c=d[1+a];return b(c[fp],c[1])},o6=function(d){var
c=d[1+a];return b(c[g8],c[1])},o7=function(d){var
c=d[1+a];return b(c[bV],c[1])},o8=function(d){var
c=d[1+a];return b(c[gU],c[1])},o9=function(d){var
c=d[1+a];return b(c[b5],c[1])},o_=function(d){var
c=d[1+a];return b(c[dt],c[1])},o$=function(d){var
c=d[1+a];return b(c[eL],c[1])},pa=function(d){var
c=d[1+a];return b(c[c5],c[1])},pb=function(d){var
c=d[1+a];return b(c[co],c[1])},pc=function(d){var
c=d[1+a];return b(c[dL],c[1])},pd=function(d){var
c=d[1+a];return b(c[N],c[1])},pe=function(d){var
c=d[1+a];return b(c[jy],c[1])},pf=function(d){var
c=d[1+a];return b(c[j3],c[1])},ph=function(d){var
c=d[1+a];return b(c[ju],c[1])},pi=function(d){var
c=d[1+a];return b(c[lF],c[1])},pj=function(d){var
c=d[1+a];return b(c[jR],c[1])},pk=function(d){var
c=d[1+a];return b(c[lW],c[1])},pl=function(d){var
c=d[1+a];return b(c[jL],c[1])},pm=function(d){var
c=d[1+a];return b(c[hZ],c[1])},pn=function(d){var
c=d[1+a];return b(c[hY],c[1])},po=function(d){var
c=d[1+a];return b(c[f6],c[1])},pp=function(d){var
c=d[1+a];return b(c[hW],c[1])},pq=function(d){var
c=d[1+a];return b(c[ig],c[1])},pr=function(d){var
c=d[1+a];return b(c[lD],c[1])},ps=function(d){var
c=d[1+a];return b(c[jN],c[1])},pt=function(d){var
c=d[1+a];return b(c[hV],c[1])},pu=function(d){var
c=d[1+a];return b(c[jn],c[1])},pv=function(d){var
c=d[1+a];return b(c[j2],c[1])},pw=function(d){var
c=d[1+a];return b(c[iy],c[1])},px=function(d){var
c=d[1+a];return b(c[ir],c[1])},py=function(d){var
c=d[1+a];return b(c[lX],c[1])},pz=function(d){var
c=d[1+a];return b(c[jE],c[1])},pA=function(d){var
c=d[1+a];return b(c[j1],c[1])},pC=function(d){var
c=d[1+a];return b(c[h8],c[1])},pD=function(d){var
c=d[1+a];return b(c[lQ],c[1])},pE=function(d){var
c=d[1+a];return b(c[j5],c[1])},pF=function(d){var
c=d[1+a];return b(c[h1],c[1])},pG=function(d){var
c=d[1+a];return b(c[ia],c[1])},pH=function(d){var
c=d[1+a];return b(c[hM],c[1])},pI=function(d){var
c=d[1+a];return b(c[lK],c[1])},pJ=function(d){var
c=d[1+a];return b(c[jX],c[1])},pL=function(d){var
c=d[1+a];return b(c[jO],c[1])},pM=function(d){var
c=d[1+a];return b(c[ip],c[1])},pN=function(d){var
c=d[1+a];return b(c[fV],c[1])},pO=function(d){var
c=d[1+a];return b(c[fX],c[1])},pP=function(d){var
c=d[1+a];return b(c[eP],c[1])},pQ=function(d){var
c=d[1+a];return b(c[fE],c[1])},pR=function(d){var
c=d[1+a];return b(c[fO],c[1])},pS=function(d){var
c=d[1+a];return b(c[f1],c[1])},pT=function(d){var
c=d[1+a];return b(c[fB],c[1])},pU=function(d){var
c=d[1+a];return b(c[gW],c[1])},pV=function(d){var
c=d[1+a];return b(c[eJ],c[1])},pW=function(d){var
c=d[1+a];return b(c[fF],c[1])},pX=function(d){var
c=d[1+a];return b(c[gZ],c[1])},pY=function(d){var
c=d[1+a];return b(c[fx],c[1])},pZ=function(d){var
c=d[1+a];return b(c[lB],c[1])},p0=function(d){var
c=d[1+a];return b(c[f7],c[1])},p1=function(d){var
c=d[1+a];return b(c[fG],c[1])},p2=function(d){var
c=d[1+a];return b(c[ik],c[1])},p3=function(d){var
c=d[1+a];return b(c[fz],c[1])},p4=function(d){var
c=d[1+a];return b(c[gV],c[1])},p5=function(d){var
c=d[1+a];return b(c[f0],c[1])},p6=function(d){var
c=d[1+a];return b(c[d7],c[1])},p7=function(d){var
c=d[1+a];return b(c[gS],c[1])},p8=function(d){var
c=d[1+a];return b(c[fq],c[1])},p9=function(d){var
c=d[1+a];return b(c[hX],c[1])},p_=function(d){var
c=d[1+a];return b(c[it],c[1])},p$=function(d){var
c=d[1+a];return b(c[gF],c[1])},qa=function(d){var
c=d[1+a];return b(c[hO],c[1])},qb=function(d){var
c=d[1+a];return b(c[eA],c[1])},qc=function(d){var
c=d[1+a];return b(c[fM],c[1])},qd=function(d){var
c=d[1+a];return b(c[g_],c[1])},qe=function(d){var
c=d[1+a];return b(c[gI],c[1])},qf=function(d){var
c=d[1+a];return b(c[ds],c[1])},qg=function(d){var
c=d[1+a];return b(c[c3],c[1])},qh=function(d){var
c=d[1+a];return b(c[fL],c[1])},qi=function(d){var
c=d[1+a];return b(c[fk],c[1])},qj=function(d){var
c=d[1+a];return b(c[hT],c[1])},qk=function(d){var
c=d[1+a];return b(c[fP],c[1])},ql=function(d){var
c=d[1+a];return b(c[h$],c[1])},qm=function(d){var
c=d[1+a];return b(c[h2],c[1])},qn=function(d){var
c=d[1+a];return b(c[ft],c[1])},qo=function(d){var
c=d[1+a];return b(c[dm],c[1])},qp=function(d){var
c=d[1+a];return b(c[gX],c[1])},qq=function(d){var
c=d[1+a];return b(c[h6],c[1])},qr=function(d){var
c=d[1+a];return b(c[eE],c[1])},qs=function(d){var
c=d[1+a];return b(c[hL],c[1])},qt=function(d){var
c=d[1+a];return b(c[gA],c[1])},qu=function(d){var
c=d[1+a];return b(c[gC],c[1])},qv=function(d){var
c=d[1+a];return b(c[f3],c[1])},qw=function(d){var
c=d[1+a];return b(c[eN],c[1])},qx=function(d){var
c=d[1+a];return b(c[iq],c[1])},qy=function(d){var
c=d[1+a];return b(c[g6],c[1])},qz=function(d){var
c=d[1+a];return b(c[ij],c[1])},qA=function(d){var
c=d[1+a];return b(c[hJ],c[1])},qB=function(d){var
c=d[1+a];return b(c[ic],c[1])},qC=function(d){var
c=d[1+a];return b(c[fD],c[1])},qD=function(d){var
c=d[1+a];return b(c[io],c[1])},qE=function(d){var
c=d[1+a];return b(c[fn],c[1])},qF=function(d){var
c=d[1+a];return b(c[ex],c[1])},qG=function(d){var
c=d[1+a];return b(c[gB],c[1])},qH=function(d){var
c=d[1+a];return b(c[gQ],c[1])},qI=function(d){var
c=d[1+a];return b(c[gG],c[1])},qJ=function(d){var
c=d[1+a];return b(c[gL],c[1])},qK=function(d){var
c=d[1+a];return b(c[g0],c[1])},qL=function(d){var
c=d[1+a];return b(c[fv],c[1])},qM=function(d){var
c=d[1+a];return b(c[dT],c[1])},qN=function(d){var
c=d[1+a];return b(c[fl],c[1])},qO=function(d){var
c=d[1+a];return b(c[g3],c[1])},qP=function(d){var
c=d[1+a];return b(c[g$],c[1])},qQ=function(d){var
c=d[1+a];return b(c[gT],c[1])},qR=function(d){var
c=d[1+a];return b(c[gR],c[1])},qS=function(d){var
c=d[1+a];return b(c[gE],c[1])},qT=function(d){var
c=d[1+a];return b(c[hN],c[1])},qV=function(d){var
c=d[1+a];return b(c[gJ],c[1])},qW=function(d){var
c=d[1+a];return b(c[fC],c[1])},qX=function(d){var
c=d[1+a];return b(c[fI],c[1])},qY=function(d){var
c=d[1+a];return b(c[fw],c[1])},qZ=function(d){var
c=d[1+a];return b(c[hQ],c[1])},q0=function(d){var
c=d[1+a];return b(c[fK],c[1])},q1=function(d){var
c=d[1+a];return b(c[h5],c[1])},q2=function(d){var
c=d[1+a];return b(c[fo],c[1])},q3=function(d){var
c=d[1+a];return b(c[d$],c[1])},q4=function(d){var
c=d[1+a];return b(c[eD],c[1])},q5=function(d){var
c=d[1+a];return b(c[g7],c[1])},q6=function(d){var
c=d[1+a];return b(c[hb],c[1])},q7=function(d){var
c=d[1+a];return b(c[fR],c[1])},q8=function(d){var
c=d[1+a];return b(c[fJ],c[1])},q9=function(d){var
c=d[1+a];return b(c[d5],c[1])},q_=function(d){var
c=d[1+a];return b(c[f5],c[1])},q$=function(d){var
c=d[1+a];return b(c[Q],c[1])},ra=function(d){var
c=d[1+a];return b(c[gD],c[1])},rb=function(d){var
c=d[1+a];return b(c[cM],c[1])},rc=function(b){return b[1+a][f4]},rd=function(b){return b[1+a][dM]},re=function(b){return b[1+a][fU]},rf=function(b){return b[1+a][V]},rg=function(b){return b[1+a][aq]},rh=function(b){return b[1+a][ak]},ri=function(b){return b[1+a][is]},rj=function(b){return b[1+a][oc]},rk=function(b){return b[1+a][Na]},rl=function(b){return b[1+a][vq]},rm=function(b){return b[1+a][Jz]},rn=function(b){return b[1+a][Pj]},ro=function(b){return b[1+a][KY]},rp=function(b){return b[1+a][J3]},rq=function(b){return b[1+a][ID]},rr=function(b){return b[1+a][uB]},rs=function(b){return b[1+a][GO]},rt=function(b){return b[1+a][Jr]},ru=function(b){return b[1+a][Nm]},rv=function(b){return b[1+a][pK]},rw=function(b){return b[1+a][zQ]},rx=function(b){return b[1+a][K4]},ry=function(b){return b[1+a][H1]},rz=function(b){return b[1+a][N2]},rA=function(b){return b[1+a][Kp]},rB=function(b){return b[1+a][Hr]},rD=function(b){return b[1+a][GR]},rE=function(b){return b[1+a][Nl]},rF=function(b){return b[1+a][Oe]},rG=function(b){return b[1+a][KQ]},rH=function(b){return b[1+a][jJ]},rI=function(b){return b[1+a][J2]},rJ=function(b){return b[1+a][I3]},rK=function(b){return b[1+a][M5]},rL=function(b){return b[1+a][Is]},rM=function(b){return b[1+a][H6]},rN=function(b){return b[1+a][J9]},rO=function(b){return b[1+a][Iw]},rP=function(b){return b[1+a][Lk]},rQ=function(b){return b[1+a][pg]},rR=function(b){return b[1+a][Oo]},rS=function(b){return b[1+a][u3]},rT=function(b){return b[1+a][NL]},rU=function(b){return b[1+a][qU]},rV=function(b){return b[1+a][PF]},rW=function(b){return b[1+a][uR]},rX=function(b){return b[1+a][w8]},rY=function(b){return b[1+a][GZ]},rZ=function(b){return b[1+a][Ny]},r0=function(b){return b[1+a][Pf]},r1=function(b){return b[1+a][MU]},r2=function(b){return b[1+a][HP]},r3=function(b){return b[1+a][KP]},r4=function(b){return b[1+a][Kv]},r5=function(b){return b[1+a][Lg]},r6=function(b){return b[1+a][IN]},r7=function(b){return b[1+a][G4]},r8=function(b){return b[1+a][K_]},r9=function(b){return b[1+a][LW]},r_=function(b){return b[1+a][Ly]},r$=function(b){return b[1+a][Ku]},sa=function(b){return b[1+a][I$]},sb=function(b){return b[1+a][Ld]},sc=function(b){return b[1+a][Pk]},sd=function(b){return b[1+a][Iv]},se=function(b){return b[1+a][G7]},sf=function(b){return b[1+a][NM]},sg=function(b){return b[1+a][Nk]},sh=function(b){return b[1+a][NA]},si=function(b){return b[1+a][pB]},sj=function(b){return b[1+a][JM]},sk=function(b){return b[1+a][O2]},sl=function(b){return b[1+a][IC]},sm=function(b){return b[1+a][KL]},sn=function(b){return b[1+a][HQ]},k=[0,ky,function(b){return b[1+a][JA]},ku,sn,kz,sm,kB,sl,kw,sk,kx,sj,kA,si,kv,sh,j8,sg,j9,sf,mZ,se,mY,sd,mX,sc,mU,sb,mW,sa,mV,r$,nc,r_,na,r9,m_,r8,m8,r7,m6,r6,m4,r5,nd,r4,nb,r3,m$,r2,m9,r1,m7,r0,m5,rZ,hk,rY,hl,rX,hm,rW,hn,rV,j7,rU,j6,rT,j4,rS,hF,rR,hE,rQ,hD,rP,kN,rO,mD,rN,mE,rM,mC,rL,jr,rK,mi,rJ,js,rI,h0,rH,h7,rG,h3,rF,h4,rE,k0,rD,kZ,rB,kX,rA,kY,rz,mu,ry,mt,rx,mr,rw,ms,rv,kM,ru,mA,rt,jq,rs,iH,rr,kl,rq,hB,rp,hA,ro,hz,rn,hy,rm,hr,rl,hp,rk,ho,rj,hq,ri,hs,rh,mn,rg,hu,rf,kK,re,hv,rd,kL,rc,i4,rb,iQ,ra,hh,q$,kk,q_,iB,q9,l6,q8,l7,q7,md,q6,mj,q5,j_,q4,il,q3,hi,q2,j0,q1,jY,q0,jZ,qZ,mz,qY,kC,qX,kS,qW,jW,qV,mI,qT,jV,qS,l5,qR,km,qQ,jS,qP,jT,qO,jU,qN,mh,qM,jD,qL,kQ,qK,l3,qJ,l2,qI,lZ,qH,lY,qG,hU,qF,hP,qE,hS,qD,hR,qC,hK,qB,hG,qA,hI,qz,hH,qy,kb,qx,ka,qw,j$,qv,mT,qu,kR,qt,ml,qs,mk,qr,k1,qq,me,qp,kD,qo,kF,qn,kE,qm,jh,ql,jk,qk,jj,qj,ji,qi,jl,qh,iJ,qg,jp,qf,jo,qe,jm,qd,ht,qc,k4,qb,hj,qa,mp,p$,i0,p_,i5,p9,iL,p8,jg,p7,jd,p6,lk,p5,lA,p4,lV,p3,lO,p2,k6,p1,jH,p0,jP,pZ,jw,pY,jK,pX,k3,pW,hC,pV,iI,pU,mx,pT,mm,pS,iG,pR,iz,pQ,mb,pP,kt,pO,lL,pN,lN,pM,lJ,pL,lM,pJ,im,pI,l8,pH,ja,pG,jc,pF,i$,pE,jb,pD,lI,pC,i_,pA,ii,pz,iD,py,iC,px,iE,pw,my,pv,m1,pu,m0,pt,jx,ps,m3,pr,iF,pq,h_,pp,hx,po,hw,pn,kT,pm,kf,pl,kg,pk,ke,pj,kd,pi,kc,ph,mS,pf,k5,pe,ll,pd,kP,pc,kO,pb,k8,pa,lR,o$,k_,o_,ln,o9,lE,o8,la,o7,lH,o6,li,o5,k7,o4,lP,o3,k9,o2,lm,o1,lC,o0,k$,oZ,lG,oY,lh,oX,lz,oW,mo,oV,iN,oU,jf,oT,iP,oS,i2,oR,i7,oQ,iS,oP,i9,oO,iW,oN,iM,oM,je,oL,iO,oK,i1,oJ,i6,oI,iR,oH,i8,oG,iV,oF,kJ,oE,kH,oD,kI,oC,kG,oB,k2,oA,lb,oz,iU,oy,iT,ox,kV,ow,kW,ov,kU,ou,l4,ot,mB,os,mg,or,kj,oq,iX,op,iY,oo,lj,on,jA,om,mq,ol,iZ,ok,m2,oj,jz,oi,iu,oh,lc,og,lf,of,lg,oe,le,od,l9,ob,ld,oa,mR,n$,mP,n_,mQ,n9,mO,n8,jM,n7,iA,n6,mc,n5,kr,n4,lT,n3,lS,n2,lU,n1,iw,n0,ls,nZ,lt,nY,lr,nX,lp,nW,lq,nV,lo,nU,l$,nT,ks,nS,lv,nR,lw,nQ,lu,nP,lx,nO,ix,nN,ma,nM,mw,nL,jC,nK,ki,nJ,kh,nI,l1,nH,l0,nG,iv,nF,kp,nE,l_,nD,kq,nC,kn,nB,ko,nA,mK,nz,mJ,ny,ih,nx,id,nw,ie,nv,ib,nu,mf,nt,jQ,ns,mL,nr,mM,nq,mN,np,h9,no,mv,nn,jB,nm,iK,nl,i3,nk,jG,nj,jF,ni,jv,nh,jt,ng,ly,nf,jI,ne],h=[0,0],ax=k.length-1;for(;;){if(h[1]<ax){var
m=h[1],i=p(k,m)[1+m],d=function(b){h[1]++;var
a=h[1];return p(k,a)[1+a]},j=d(0);if(typeof
j==="number")switch(j){case
0:var
o=d(0),e=function(a){return function(b){return a}}(o);break;case
1:var
q=d(0),e=function(b){return function(a){return a[1+b]}}(q);break;case
2:var
r=d(0),s=d(0),e=function(b,c){return function(a){return a[1+b][1+c]}}(r,s);break;case
3:var
t=d(0),e=function(c){return function(a){return b(a[1][1+c],a)}}(t);break;case
4:var
u=d(0),e=function(c){return function(b,a){b[1+c]=a;return 0}}(u);break;case
5:var
v=d(0),w=d(0),e=function(a,c){return function(d){return b(a,c)}}(v,w);break;case
6:var
x=d(0),y=d(0),e=function(c,d){return function(a){return b(c,a[1+d])}}(x,y);break;case
7:var
z=d(0),A=d(0),B=d(0),e=function(c,d,e){return function(a){return b(c,a[1+d][1+e])}}(z,A,B);break;case
8:var
C=d(0),D=d(0),e=function(c,d){return function(a){return b(c,b(a[1][1+d],a))}}(C,D);break;case
9:var
E=d(0),F=d(0),G=d(0),e=function(a,b,c){return function(d){return n(a,b,c)}}(E,F,G);break;case
10:var
H=d(0),J=d(0),K=d(0),e=function(b,c,d){return function(a){return n(b,c,a[1+d])}}(H,J,K);break;case
11:var
L=d(0),M=d(0),O=d(0),P=d(0),e=function(b,c,d,e){return function(a){return n(b,c,a[1+d][1+e])}}(L,M,O,P);break;case
12:var
R=d(0),S=d(0),T=d(0),e=function(c,d,e){return function(a){return n(c,d,b(a[1][1+e],a))}}(R,S,T);break;case
13:var
U=d(0),W=d(0),X=d(0),e=function(b,c,d){return function(a){return n(b,a[1+c],d)}}(U,W,X);break;case
14:var
Y=d(0),Z=d(0),_=d(0),$=d(0),e=function(b,c,d,e){return function(a){return n(b,a[1+c][1+d],e)}}(Y,Z,_,$);break;case
15:var
aa=d(0),ab=d(0),ac=d(0),e=function(c,d,e){return function(a){return n(c,b(a[1][1+d],a),e)}}(aa,ab,ac);break;case
16:var
ad=d(0),ae=d(0),e=function(b,c){return function(a){return n(a[1][1+b],a,c)}}(ad,ae);break;case
17:var
af=d(0),ag=d(0),e=function(b,c){return function(a){return n(a[1][1+b],a,a[1+c])}}(af,ag);break;case
18:var
ah=d(0),ai=d(0),aj=d(0),e=function(b,c,d){return function(a){return n(a[1][1+b],a,a[1+c][1+d])}}(ah,ai,aj);break;case
19:var
al=d(0),am=d(0),e=function(d,e){return function(a){var
c=b(a[1][1+e],a);return n(a[1][1+d],a,c)}}(al,am);break;case
20:var
an=d(0),ao=d(0);mH(f);var
e=function(c,a){return function(d){return b(rC(a,c,0),a)}}(an,ao);break;case
21:var
ap=d(0),ar=d(0);mH(f);var
e=function(d,e){return function(c){var
a=c[1+e];return b(rC(a,d,0),a)}}(ap,ar);break;case
22:var
as=d(0),at=d(0),au=d(0);mH(f);var
e=function(d,e,f){return function(c){var
a=c[1+e][1+f];return b(rC(a,d,0),a)}}(as,at,au);break;default:var
av=d(0),aw=d(0);mH(f);var
e=function(d,e){return function(a){var
c=b(a[1][1+e],a);return b(rC(c,d,0),c)}}(av,aw)}else
var
e=j;U1[1]++;if(n(mG[28],i,f[4])){so(f,i+1|0);p(f[2],i)[1+i]=e}else
f[6]=[0,[0,i,e],f[6]];h[1]++;continue}var
sp=function(d){var
b=Qc(Q,f[1]);b[1]=f[2];var
c=a8S(b);c[1+a]=d;return c};BL[1]=(BL[1]+f[1]|0)-1|0;f[8]=l(f[8]);so(f,3+((p(f[2],1)[2]*16|0)/32|0)|0);uw[1]=sp;break}}return b(uw[1],[0,hg,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aR,aS,aT,aU,aV,aW,aX,aZ,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT,bU,bY,bZ,b0,b1,b2,b3,b4,b6,b7,b8,b9,b_,b$,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,cA,cB,cC,cD,cE,cF,cG,cH,cI,cJ,cK,cL,cN,cQ,cR,cS,cT,cU,cV,cW,cX,cY,cZ,c0,c1,c2,c4,c6,c7,c9,c_,c$,da,db,dc,dd,de,df,dg,dh,di,dj,dk,dl,dr,du,dv,dx,dy,dz,dA,dB,dC,dD,dE,dF,dG,dH,dI,dJ,dK,dN,dP,dQ,dR,dS,dU,dV,dW,dX,dY,dZ,d0,d1,d2,d3,d4,d6,d8,d9,d_,ea,eb,ed,ee,ef,eg,eh,ei,ej,ek,el,em,en,eo,ep,eq,er,es,et,eu,ev,ew,ey,ez,eB,eC,eF,eG,eH,eI,eK,eM,eO,eQ,eR,eS,eT,eU,eV,eW,eX,eY,eZ,e1,e2,e3,e4,e5,e6,e7,e8,e9,e_,e$,fa,fb,fc,fd,fe,ff,fg,fh,fi,fj,fm,fr,fs,fu,fy,fA,fH,fN,fQ,fS,fY,fZ,f2,f8,f9,f_,f$,ga,gb,gc,gd,ge,gf,gg,gh,gi,gj,gk,gl,gm,gn,go,gp,gq,gr,gs,gt,gu,gv,gw,gx,gy,gz,gH,gK,gM,gN,gO,gY,g1,g2,g4,g5,g9,ha,hc,hd,he,hf])}function
a2G(e,c,b){var
a=T(b),d=a2v(c,a);M(a);return r(d)}function
a2H(c,b,a){return v(eT(a2t(b,E(a))))}function
a2I(g,d,c,b,a){var
e=E(a),f=E(b);return r(a2r(d,E(c),f,e))}function
a2J(e,c,b,a){var
d=E(a);return r(a2p(c,E(b),d))}function
a2K(e,c,b,a){var
d=E(a);return r(a2n(c,E(b),d))}function
a2L(c,b,a){return r(a2l(b,E(a)))}function
a2M(d,c,b,a){return r(aYh(c,b,a))}function
a2N(c,b,a){return r(aYf(b,a))}function
a2O(b,a){return r(a2i(a))}function
a2P(c,b,a){return r(a2e(b,a))}function
a2Q(f,d,c,b){var
a=T(c),e=a2c(d,a,b);M(a);return r(e)}function
a2R(e,c,b){var
a=T(b),d=a1$(c,a);M(a);return r(d)}function
a2S(e,c,b){var
a=T(b),d=a18(c,a);M(a);return r(d)}function
a2T(e,c,b){var
a=T(b),d=a15(c,a);M(a);return r(d)}function
a2U(e,c,b){var
a=T(b),d=a2g(c,a);M(a);return r(d)}function
a2V(f,d,c,b){var
a=T(c),e=a13(d,a,b);M(a);return r(e)}function
a2W(e,d,c,b,a){return v(a11(d,c,b,d3(a)))}function
a2X(f,e,d,c,b,a){return v(a1Z(e,d,c,b,d3(a)))}function
a2Y(e,d,c,b,a){return v(a1X(d,c,b,E(a)))}function
a2Z(f,e,d,c,b,a){return v(a1V(e,d,c,b,E(a)))}function
a20(c,b,a){return v(a1T(b,a))}function
a21(d,c,b,a){return v(a1R(c,b,a))}function
a22(b,a){return r(a1P(a))}function
a23(e,c,b,a){var
d=E(a);return r(a1N(c,E(b),d))}function
a24(b,a){return r(a1L(a))}function
a25(a){nK[1]=[0];return r(0)}function
a26(b,a){return v(a0(a1J(a)))}function
a27(b,a){return v(a1H(a))}function
a28(b,a){return v(a1F(d3(a)))}function
a29(b,a){return v(a1D(E(a)))}function
a2_(e,d,c,b,a){return v(eT(a1B(d,c,b,a)))}function
a2$(f,e,d,c,b,a){return r(a1z(E(e),d,c,b,a))}function
a3a(b,a){return r(0)}function
a3b(h,g,f,b,e,a){var
c=T(b);E(a);var
d=v(0);M(c);return r(d)}function
a3c(a){hG[1]=[0];return r(0)}function
a3d(b,a){return r(aXd(a))}function
a3e(b,a){return v(a0(aXl(a)))}function
a3f(b,a){return v(a0(aXj(a)))}function
a3g(b,a){return v(a0(aXh(a)))}function
a3h(b,a){return v(aXf(a))}function
a3i(a){return v(hG[1].length-1)}function
a3j(a){fi[1]=[0];return r(0)}function
a3k(b,a){return v(a0$(a))}function
a3l(b,a){return v(a09(a))}function
a3m(b,a){return v(a07(a))}function
a3n(b,a){return v(a05(a))}function
a3o(b,a){return v(a0(a03(a)))}function
a3p(b,a){return v(a01(a))}function
a3q(e,a,d){var
b=L(1,aC(h(a))),c=h(a);nD[1]=0;FV(c,b,d);fi[1]=bG(l(nD[1]));return v(fi[1].length-1)}function
a3r(b,a){return v(eT(a0Z(a)))}function
a3s(b,a){return v(a0X(a))}function
a3t(b,a){return v(a0V(a))}function
a3u(a){return v(a0T(0))}function
a3v(a){jm[1]=0;return r(0)}function
a3w(b,a){return r(a0R(a))}function
a3x(b,a){return r(a0P(a))}function
a3y(f,d,c,b,a){var
e=E(c);return r(a0N(d3(d),e,b,a))}function
a3z(e,c,b,a){var
d=E(b);return r(a0J(d3(c),d,a))}function
a3A(d,c,b,a){return r(a0L(E(c),b,a))}function
a3B(c,b,a){return r(a0H(E(b),a))}function
a3C(c,b,a){return v(a0(a1t(b,a)))}function
a3D(a){hH[1]=[0];return r(0)}function
a3E(b,a){return v(a1r(a))}function
a3F(b,a){return v(a1p(a))}function
a3G(b,a){return v(a0(a1m(a)))}function
a3H(b,a){return v(a1k(a))}function
a3I(b,a){return v(a1h(a))}function
a3J(b,a){return r(a1f(a))}function
a3K(i,g,f,e,d,c,b){var
a=T(c),h=a1b(g,f,E(e),d,a,b);M(a);return r(h)}function
a3L(c,b,a){return r(a0b(b,E(a)))}function
a3M(b,a){return r(aZ$(a))}function
a3N(b,a){return r(aZ9(a))}function
a3O(b,a){return v(eT(aZ7(a)))}function
a3P(c,b,a){return r(aZ5(b,d3(a)))}function
a3Q(c,b,a){return r(aZ3(b,E(a)))}function
a3R(d,c,b,a){return r(aZ1(c,b,a))}function
a3S(c,b,a){return r(aZY(b,a))}function
a3T(c,b,a){return r(aZV(b,a))}function
a3U(c,b,a){return r(aZS(b,a))}function
a3V(c,b,a){return r(aZP(b,a))}function
a3W(c,b,a){return r(aZM(b,a))}function
a3X(c,b,a){return r(aZJ(b,a))}function
a3Y(c,b,a){return r(aZG(b,a))}function
a3Z(c,b,a){return r(aZw(b,a))}function
a30(c,b,a){return v(a0f(b,a))}function
a31(d,c,b,a){return gz(a0d(c,b,E(a)))}function
a32(b,a){return r(aZl(a))}function
a33(b,a){return r(aZh(a))}function
a34(b,a){return r(aYK(a))}function
a35(b,a){return r(aYH(a))}function
a36(c,b,a){return r(aZd(b,E(a)))}function
a37(c,b,a){return r(aY$(b,E(a)))}function
a38(c,b,a){return r(aY7(b,E(a)))}function
a39(c,b,a){return r(aY3(b,E(a)))}function
a3_(c,b,a){return r(aYZ(b,E(a)))}function
a3$(c,b,a){return r(aYV(b,E(a)))}function
a4a(c,b,a){return r(aYR(b,E(a)))}function
a4b(c,b,a){return r(aYN(b,E(a)))}function
a4c(c,b,a){return r(aYE(b,E(a)))}function
a4d(c,b,a){return r(aYB(b,E(a)))}function
a4e(c,b,a){return r(aYy(b,E(a)))}function
a4f(c,b,a){return r(aYv(b,E(a)))}function
a4g(c,b,a){return r(aYs(b,E(a)))}function
a4h(c,b,a){return r(aYp(b,E(a)))}function
a4i(c,b,a){return r(aYm(b,E(a)))}function
a4j(c,b,a){return r(aYj(b,E(a)))}function
a4k(i,h,g,f,e,d,c,b,a){return v(a0(aYd(h,g,f,e,d,c,b,a)))}function
a4l(c,b){var
a=aYb(E(b));return v(hg([0,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]]))}function
a4m(b,a){return v(a0(aX_(a)))}function
a4n(b,a){return v(a0(aX7(a)))}function
a4o(b,a){return v(a0(aX4(a)))}function
a4p(b,a){return v(a0(aX1(a)))}function
a4q(b,a){return v(a0(aXY(a)))}function
a4r(b,a){return v(a0(aXV(a)))}function
a4s(b,a){return v(a0(aXS(a)))}function
a4t(b,a){return v(a0(aXP(a)))}function
a4u(b,a){return v(a0(aXM(a)))}function
a4v(b,a){return v(a0(aXJ(a)))}function
a4w(b,a){return v(a0(aXG(a)))}function
a4x(b,a){return v(a0(aXD(a)))}function
a4y(b,a){return v(a0(aXA(a)))}function
a4z(b,a){return v(a0(aXx(a)))}function
a4A(b,a){return v(a0(aXu(a)))}function
a4B(b,a){return v(a0(aXr(a)))}function
a4C(b,a){return gz(aXb(d3(a)))}function
a4D(b,a){return gz(aW$(E(a)))}function
a4E(b,a){return v(aXp(a))}function
a4F(b,a){return v(aXn(a))}function
a4G(b,a){return v(eT(aW9(a)))}function
a4H(c,b,a){return r(aW7(b,a))}function
a4I(c,b,a){return r(aW5(b,a))}function
a4J(c,b,a){return r(aW3(b,a))}function
a4K(e,c,b){var
a=T(b),d=aW1(c,a);M(a);return r(d)}function
a4L(e,c,b){var
a=T(b),d=aWZ(c,a);M(a);return r(d)}function
a4M(l,k,j,i,h,g,f,e,d,c,b,a){return r(aWT(k,j,i,h,g,f,e,d,c,b,a))}function
a4N(b,a){return r(aWX(a))}function
a4O(b,a){return r(aWV(a))}function
a4P(c,b,a){return v(aWN(b,E(a)))}function
a4Q(f,d,c,b){var
a=T(c),e=a0(aWR(d,a,b));M(a);return v(e)}function
a4R(g,e,d,c,b){var
a=T(b),f=aWP(E(e),d,c,a);M(a);return r(f)}function
a4S(e,c,b){var
a=T(b),d=aWI(c,a);M(a);return r(d)}function
a4T(k,i,h,g,f,e,d,c,b){var
a=T(h),j=Gq(0,i,a,E(g),f,e,d,1.,0,c,b,0.,0.,0.,0,0,0,1.,0,0,0,a4U,0.,0);M(a);return r(j)}function
a4V(C,z,y,x,w,v,u,t,s,q,p,o,n,m,l,k,j,i,h,g,f,e,d,c,b){var
a=T(x),A=E(d),B=Gq(z,y,a,E(w),v,u,t,s,q,p,o,n,m,l,k,j,i,h,g,f,e,A,c,b);M(a);return r(B)}function
a4W(c,b,a){return v(aWG(b,a))}function
a4X(l,j,i,h,g,f,e,d,c,b){var
a=T(h),k=uu(j,i,a,g,f,d,c,e,b);M(a);return r(k)}function
a4Y(f,e,d,c){var
a=T(c),b=uu(e,d,a,0,0,Gp,Go,Gn,0);M(a);return r(b)}function
a4Z(f,e,d,c){var
a=T(c),b=uu(e,d,a,1,0,Gp,Go,Gn,0);M(a);return r(b)}function
a40(f,e,d,c,b,a){return r(aWD(e,d,c,E(b),a))}function
a41(c,b,a){return r(aWB(b,d3(a)))}function
a42(b,a){return v(eT(aWz(a)))}function
a43(c,b,a){return r(aWs(b,a))}function
a44(c,b,a){return r(aWv(b,E(a)))}function
a45(c,b,a){return r(aWq(b,a))}function
a46(d,c,b,a){return r(aWo(c,b,a))}function
a47(b,a){return r(aWx(a))}function
a48(b,a){hF[1]=iJ(a,function(a){return[0,0,aWn,0,0]});return r(0)}function
a49(b,a){return gz(aWl(a))}function
a4_(b,a){return v(a0(aWj(a)))}function
a4$(b,a){return v(aWh(a))}function
a5a(c,b,a){return v(aWf(b,a))}function
a5b(a){return v(hE[1].length-1)}function
a5c(a){hE[1]=[0];return r(0)}function
a5d(b,a){return r(aWd(a))}function
a5e(b,a){return r(a1w(a))}function
a5f(b,a){return r(aWb(a))}function
a5g(b,a){return r(aV$(a))}function
a5h(e,c,b){var
a=T(b),d=aV7(c,a);M(a);return r(d)}function
a5i(e,c,b){var
a=T(b),d=aV5(c,a);M(a);return r(d)}function
a5j(f,d,c,b){var
a=T(c),e=aV9(d,a,E(b));M(a);return r(e)}function
a5k(e,c,b){var
a=T(b),d=aV1(c,a);M(a);return r(d)}function
a5l(e,c,b){var
a=T(b),d=aVX(c,a);M(a);return r(d)}function
a5m(e,c,b){var
a=T(b),d=aVZ(c,a);M(a);return r(d)}function
a5n(e,c,b){var
a=T(b),d=aVV(c,a);M(a);return r(d)}function
a5o(d,c,b){var
a=a0p(c,b);return v(hg([V,a[1],a[2],a[3],a[4]]))}function
a5p(d,c,b){var
a=a0t(c,b);return v(hg([V,a[1],a[2],a[3],a[4]]))}function
a5q(d,c,b){var
a=a0r(c,b);return v(hg([V,a[1],a[2],a[3],a[4]]))}function
a5r(d,c,b){var
a=a0n(c,b);return v(hg([V,a[1],a[2],a[3],a[4]]))}function
a5s(d,c,b){var
a=a0l(c,b);return v(hg([V,a[1],a[2],a[3],a[4]]))}function
a5t(i,g,f,e,d,c,b){var
a=T(f),h=a0y(g,a,e,d,c,b);M(a);return r(h)}function
a5u(i,g,f,e,d,c,b){var
a=T(f),h=a0v(g,a,e,d,c,b);M(a);return r(h)}function
a5v(i,g,f,e,d,c,b){var
a=T(f),h=a0B(g,a,e,d,c,b);M(a);return r(h)}function
a5w(i,g,f,e,d,c,b){var
a=T(f),h=a0E(g,a,e,d,c,b);M(a);return r(h)}function
a5x(i,g,f,e,d,c,b){var
a=T(f),h=aV3(g,a,e,d,c,b);M(a);return r(h)}function
a5y(i,g,f,e,d,c,b){var
a=T(f),h=aVT(g,a,e,d,c,b);M(a);return r(h)}function
a5z(e,c,b){var
a=T(b),d=aVR(c,a);M(a);return r(d)}function
a5A(e,c,b){var
a=T(b),d=aVP(c,a);M(a);return r(d)}function
a5B(e,c,b){var
a=T(b),d=aVN(c,a);M(a);return r(d)}function
a5C(f,d,c,b){var
a=T(c),e=aVL(d,a,b);M(a);return r(e)}function
a5D(f,d,c,b){var
a=T(c),e=aVJ(d,a,b);M(a);return r(e)}function
a5E(f,d,c,b){var
a=T(c),e=aVH(d,a,b);M(a);return r(e)}function
a5F(g,e,d,c,b){var
a=T(d),f=aVD(e,a,c,b);M(a);return r(f)}function
a5G(i,g,f,e,d,c,b){var
a=T(f),h=aVF(g,a,e,d,c,b);M(a);return r(h)}function
a5H(g,e,d,c,b){var
a=T(d),f=aVA(e,a,c,b);M(a);return r(f)}function
a5I(h,f,e,d,c,b){var
a=T(e),g=aVv(f,a,d,c,b);M(a);return r(g)}function
a5J(g,e,d,c,b){var
a=T(d),f=aVt(e,a,c,b);M(a);return r(f)}function
a5K(e,c,b){var
a=T(b),d=aVp(c,a);M(a);return v(d)}function
a5L(g,e,d,c,b){var
a=e0(T,f8(b)),f=aVn(f8(e),d,c,a);ki(M,a);return v(f)}function
a5M(d,c,b,a){return v(aVj(f8(c),b,a))}function
a5N(b,a){return v(aVf(f8(a)))}function
a5O(b,a){return v(aUP(a))}function
a5P(c,b,a){return gz(aUM(b,a))}function
a5Q(c,b,a){return r(aUU(b,E(a)))}function
a5R(c,b,a){return r(aUR(b,E(a)))}function
a5S(b,a){return gz(us(a))}function
a5T(d,b){var
a=aUJ(b),c=ew(a);M(a);return v(c)}function
a5U(d,b,a){var
c=d3(a);return v(aUG(E(b),c))}function
a5V(d,b,a){var
c=E(a);return v(aUE(E(b),c))}function
a5W(b,a){return v(fh(a))}function
a5X(m,j,i,h,g,f,e,d,c,b,a){var
k=E(f),l=E(g);return v(eT(aVb(j,i,f8(h),l,k,e,d,c,b,a)))}function
a5Y(j,g,f,e,d,c,b,a){var
h=E(c),i=E(d);return v(eT(aU9(g,f,f8(e),i,h,b,a)))}function
a5Z(g,f,e,d,c,b,a){return v(eT(aUB(f,e,d,c,b,a)))}function
a50(d,c,b,a){return v(eT(aUz(c,b,a)))}function
a51(o,k,j,i,h,g,f,e,d,c,b,a){var
l=E(a),m=E(g),n=E(h);return r(aU$(k,j,f8(i),n,m,f,e,d,c,b,l))}function
a52(l,h,g,f,e,d,c,b,a){var
i=E(a),j=E(d),k=E(e);return r(aU7(h,g,f8(f),k,j,c,b,i))}function
a53(h,g,f,e,d,c,b,a){return r(aUx(g,E(f),e,d,c,b,a))}function
a54(e,d,c,b,a){return r(aUv(d,E(c),b,a))}function
a55(d,b,a){var
c=E(a);return v(aUt(d3(b),c))}function
a56(d,b,a){var
c=E(a);return v(aUp(d3(b),c))}function
a57(d,b,a){var
c=E(a);return v(aUr(E(b),c))}function
a58(d,b,a){var
c=E(a);return v(aUn(E(b),c))}function
a59(e,c,b){var
a=T(c),d=aT6(a,b);M(a);return gz(d)}function
a5_(e,c){var
a=T(c),b=aT4(a),d=ew(b);M(a);M(b);return v(d)}function
a5$(g,e,d){var
a=T(e),b=T(d),c=aT2(a,b),f=ew(c);M(a);M(b);M(c);return v(f)}function
a6a(e,c,b){var
a=T(c),d=Ge(a,b);M(a);return v(d)}function
a6b(d,b){var
a=T(b),c=uq(a);M(a);return v(c)}function
a6c(g,e,d){var
a=T(e),b=T(d),c=aT0(a,b),f=ew(c);M(a);M(b);M(c);return f}function
a6d(e,c){var
a=T(c),b=aTY(a),d=ew(b);M(a);M(b);return v(d)}function
a6e(e,c){var
a=T(c),b=aTW(a),d=ew(b);M(a);M(b);return v(d)}function
a6f(f,d,c){var
a=T(d),b=Gf(a,c),e=ew(b);M(a);M(b);return v(e)}function
a6g(c){var
a=Gd(0),b=ew(a);M(a);return v(b)}function
a6h(e,c,b){var
a=aTU(c,b),d=ew(a);M(a);return v(d)}function
a6i(b,a){return v(aTF(a))}function
a6j(b,a){return v(aTD(a))}function
a6k(b,a){return v(aTB(a))}function
a6l(b,a){return v(aTz(a))}function
a6m(b,a){return v(aTx(a))}function
a6n(b,a){return v(aTH(a))}function
a6o(b,a){return gz(aUl(E(a)))}function
a6p(e,c,b){var
a=T(b),d=a0(aUj(c,a));M(a);return v(d)}function
a6q(e,c,b){var
a=aUh(c,E(b)),d=ew(a);M(a);return v(d)}function
a6r(b,a){return r(aUe(a))}function
a6s(a){jl[1]=0;return r(0)}function
a6t(b,a){return v(a0(aUc(a)))}function
a6u(b,a){return v(aUa(a))}function
a6v(a){return v(aT_(0))}function
a6w(d){var
a=nG[1];b(eh(a2x),a);var
c=dJ[1];b(eh(a2y),c);cb(function(a,c){return b(eh(a2z),a)},dJ);AW(a2A);return r(cR(ke))}function
a6x(a){return v("2.5.5")}function
a6y(a){ch[1]=0;return r(0)}function
a6z(a){ch[1]=1;return r(0)}var
a6A=4,a6B=3,a6C=2,a6D=1,a6E=0,a6F=4,a6G=3,a6H=2,a6I=1,a6J=0,a6K=5,a6L=4,a6M=3,a6N=2,a6O=1,a6P=0,a6Q=2,a6R=1,a6S=0,a6T=11,a6U=10,a6V=9,a6W=8,a6X=7,a6Y=6,a6Z=5,a60=4,a61=3,a62=2,a63=1,a64=0,a65=12,a66=11,a67=10,a68=9,a69=8,a6_=7,a6$=6,a7a=5,a7b=4,a7c=3,a7d=2,a7e=1,a7f=0,a7g=15,a7h=14,a7i=13,a7j=12,a7k=11,a7l=10,a7m=9,a7n=8,a7o=7,a7p=6,a7q=5,a7r=4,a7s=3,a7t=2,a7u=1,a7v=0,a7w=7,a7x=6,a7y=5,a7z=4,a7A=3,a7B=2,a7C=1,a7D=0,a7E=7,a7F=6,a7G=5,a7H=4,a7I=3,a7J=2,a7K=1,a7L=0;Xg(function(eq,ep,eo,en,em,el,ek,ej,ei,eh,eg,ef,ee,ed,ec,eb,ea,d$,d_,d9,d8,d7,d6,d5,d4,d3,d2,d1,d0,dZ,dY,dX,dW,dV,dU,dT,dS,dR,dQ,dP,dO,dN,dM,dL,dK,dJ,dI,dH,dG,dF,dE,dD,dC,dB,dA,dz,dy,dx,dw,dv,du,dt,ds,dr,dq,dp,dn,dm,dl,dk,dj,di,dh,dg,df,de,dd,dc,db,da,c$,c_,c9,c8,c7,c6,c5,c4,c3,c2,c1,c0,cZ,cY,cX,cW,cV,cU,cT,cS,cR,cQ,cP,cO,cN,cM,cL,cK,cJ,cI,cH,cG,cF,cE,cD,cC,cB,cA,cz,cy,cx,cw,cv,cu,ct,cs,cr,cq,cp,co,cn,cm,cl,ck,cj,ci,ch,cg,cf,ce,cd,cc,cb,ca,b$,b_,b9,b8,b7,b6,b5,b4,b3,b2,b1,b0,bZ,bY,bX,bW,bV,bU,bT,bS,bR,bQ,bP,bO,bN,bM,bL,bK,bJ,bI,bH,bG,bF,bE,bD,bC,bB,bA,bz,by,bx,bw,bv,bu,bt,bs,br,bq,bp,bo,bn,bm,bl,bk,bj,bi,bh,bg,bf,be,bd,bc,bb,ba,a$,a_,a9,a8,a7,a6,a5,a4,a3,a2,a1,a0,aZ,aY,aX,aW,aV,aU,aT,aS,aR,aQ,aP,aO,aN,aM,aL,aK,aJ,aI,aH,aG,aF,aE,aD,aC,aB,aA,az,ay,ax,aw,av,au,at,as,ar,aq,ap,ao,an,am,al,ak,aj,ai,ah,ag,af,ae,ad,ac,ab,aa,$,_,Z,Y,X,W,V,U,T,S,R,Q,P,O,N,M,L,K,J,I,H,G,F,E,D,C,B,A,z,y,x,w,v,u,t,s,r,q,p,o,n,m,l,k,j,h,g,f,e,d,c,b,a,er){return{"noEdit":eq,"noPrint":ep,"noCopy":eo,"noAnnot":en,"noForms":em,"noExtract":el,"noAssemble":ek,"noHqPrint":ej,"pdf40bit":ei,"pdf128bit":eh,"aes128bitfalse":eg,"aes128bittrue":ef,"aes256bitfalse":ee,"aes256bittrue":ed,"aes256bitisofalse":ec,"aes256bitisotrue":eb,"a0portrait":ea,"a1portrait":d$,"a2portrait":d_,"a3portrait":d9,"a4portrait":d8,"a5portrait":d7,"a0landscape":d6,"a1landscape":d5,"a2landscape":d4,"a3landscape":d3,"a4landscape":d2,"a5landscape":d1,"usletterportrait":d0,"usletterlandscape":dZ,"uslegalportrait":dY,"uslegallandscape":dX,"posCentre":dW,"posLeft":dV,"posRight":dU,"top":dT,"topLeft":dS,"topRight":dR,"left":dQ,"bottomLeft":dP,"bottom":dO,"bottomRight":dN,"right":dM,"diagonal":dL,"reversediagonal":dK,"timesRoman":dJ,"timesBold":dI,"timesItalic":dH,"timesBoldItalic":dG,"helvetica":dF,"helveticaBold":dE,"helveticaOblique":dD,"helveticaBoldOblique":dC,"courier":dB,"courierBold":dA,"courierOblique":dz,"courierBoldOblique":dy,"leftJustify":dx,"centreJustify":dw,"rightJustify":dv,"singlePage":du,"oneColumn":dt,"twoColumnLeft":ds,"twoColumnRight":dr,"twoPageLeft":dq,"twoPageRight":dp,"useNone":dn,"useOutlines":dm,"useThumbs":dl,"useOC":dk,"useAttachments":dj,"decimalArabic":di,"uppercaseRoman":dh,"lowercaseRoman":dg,"uppercaseLetters":df,"lowercaseLetters":de,"setFast":i(dd),"setSlow":i(dc),"version":i(db),"onexit":i(da),"startEnumeratePDFs":i(c$),"enumeratePDFsKey":i(c_),"enumeratePDFsInfo":i(c9),"endEnumeratePDFs":i(c8),"deletePdf":i(c7),"parsePagespec":i(c6),"stringOfPagespec":i(c5),"validatePagespec":i(c4),"ptOfCm":i(c3),"ptOfMm":i(c2),"ptOfIn":i(c1),"cmOfPt":i(c0),"mmOfPt":i(cZ),"inOfPt":i(cY),"range":i(cX),"blankRange":i(cW),"rangeAdd":i(cV),"even":i(cU),"odd":i(cT),"rangeUnion":i(cS),"rangeLength":i(cR),"rangeGet":i(cQ),"difference":i(cP),"removeDuplicates":i(cO),"isInRange":i(cN),"fromFile":i(cM),"fromFileLazy":i(cL),"fromMemory":i(cK),"fromMemoryLazy":i(cJ),"toFile":i(cI),"toFileExt":i(cH),"toFileEncrypted":i(cG),"toFileEncryptedExt":i(cF),"toMemory":i(cE),"toMemoryExt":i(cD),"toMemoryEncrypted":i(cC),"toMemoryEncryptedExt":i(cB),"pages":i(cA),"pagesFast":i(cz),"pagesFastMemory":i(cy),"all":i(cx),"isEncrypted":i(cw),"decryptPdf":i(cv),"decryptPdfOwner":i(cu),"hasPermission":i(ct),"encryptionKind":i(cs),"mergeSimple":i(cr),"merge":i(cq),"mergeSame":i(cp),"selectPages":i(co),"scalePages":i(cn),"scaleToFit":i(cm),"scaleToFitPaper":i(cl),"scaleContents":i(ck),"shiftContents":i(cj),"rotate":i(ci),"rotateBy":i(ch),"rotateContents":i(cg),"upright":i(cf),"hFlip":i(ce),"vFlip":i(cd),"crop":i(cc),"setMediabox":i(cb),"setCropBox":i(ca),"setTrimBox":i(b$),"setArtBox":i(b_),"setBleedBox":i(b9),"getMediaBox":i(b8),"getCropBox":i(b7),"getArtBox":i(b6),"getBleedBox":i(b5),"getTrimBox":i(b4),"removeCrop":i(b3),"removeArt":i(b2),"removeTrim":i(b1),"removeBleed":i(b0),"hardBox":i(bZ),"trimMarks":i(bY),"showBoxes":i(bX),"compress":i(bW),"decompress":i(bV),"squeezeInMemory":i(bU),"startGetBookmarkInfo":i(bT),"endGetBookmarkInfo":i(bS),"numberBookmarks":i(bR),"getBookmarkPage":i(bQ),"getBookmarkLevel":i(bP),"getBookmarkText":i(bO),"getBookmarkOpenStatus":i(bN),"startSetBookmarkInfo":i(bM),"endSetBookmarkInfo":i(bL),"setBookmarkPage":i(bK),"setBookmarkLevel":i(bJ),"setBookmarkText":i(bI),"setBookmarkOpenStatus":i(bH),"getBookmarksJSON":i(bG),"setBookmarksJSON":i(bF),"tableOfContents":i(bE),"stampOn":i(bD),"stampUnder":i(bC),"stampExtended":i(bB),"combinePages":i(bA),"addText":i(bz),"addTextSimple":i(by),"removeText":i(bx),"addContent":i(bw),"stampAsXObject":i(bv),"textWidth":i(bu),"twoUp":i(bt),"twoUpStack":i(bs),"impose":i(br),"padBefore":i(bq),"padAfter":i(bp),"padEvery":i(bo),"padMultiple":i(bn),"padMultipleBefore":i(bm),"annotationsJSON":i(bl),"getVersion":i(bk),"getMajorVersion":i(bj),"isLinearized":i(bi),"isLinearizedMemory":i(bh),"getTitle":i(bg),"getAuthor":i(bf),"getSubject":i(be),"getKeywords":i(bd),"getCreator":i(bc),"getProducer":i(bb),"getCreationDate":i(ba),"getModificationDate":i(a$),"getTitleXMP":i(a_),"getAuthorXMP":i(a9),"getSubjectXMP":i(a8),"getKeywordsXMP":i(a7),"getCreatorXMP":i(a6),"getProducerXMP":i(a5),"getCreationDateXMP":i(a4),"getModificationDateXMP":i(a3),"getDateComponents":i(a2),"dateStringOfComponents":i(a1),"setTitle":i(a0),"setAuthor":i(aZ),"setSubject":i(aY),"setKeywords":i(aX),"setCreator":i(aW),"setProducer":i(aV),"setCreationDate":i(aU),"setModificationDate":i(aT),"setTitleXMP":i(aS),"setAuthorXMP":i(aR),"setSubjectXMP":i(aQ),"setKeywordsXMP":i(aP),"setCreatorXMP":i(aO),"setProducerXMP":i(aN),"setCreationDateXMP":i(aM),"setModificationDateXMP":i(aL),"markTrapped":i(aK),"markUntrapped":i(aJ),"markTrappedXMP":i(aI),"markUntrappedXMP":i(aH),"hasBox":i(aG),"getPageRotation":i(aF),"setPageLayout":i(aE),"setPageMode":i(aD),"hideToolbar":i(aC),"hideMenubar":i(aB),"hideWindowUi":i(aA),"fitWindow":i(az),"centerWindow":i(ay),"displayDocTitle":i(ax),"openAtPage":i(aw),"setMetadataFromFile":i(av),"setMetadataFromByteArray":i(au),"getMetadata":i(at),"removeMetadata":i(as),"createMetadata":i(ar),"setMetadataDate":i(aq),"addPageLabels":i(ap),"removePageLabels":i(ao),"startGetPageLabels":i(an),"getPageLabelStyle":i(am),"getPageLabelPrefix":i(al),"getPageLabelOffset":i(ak),"getPageLabelRange":i(aj),"endGetPageLabels":i(ai),"getPageLabelStringForPage":i(ah),"attachFile":i(ag),"attachFileToPage":i(af),"attachFileFromMemory":i(ae),"attachFileToPageFromMemory":i(ad),"removeAttachedFiles":i(ac),"startGetAttachments":i(ab),"endGetAttachments":i(aa),"numberGetAttachments":i($),"getAttachmentName":i(_),"getAttachmentPage":i(Z),"getAttachmentData":i(Y),"startGetImageResolution":i(X),"getImageResolutionPageNumber":i(W),"getImageResolutionImageName":i(V),"getImageResolutionXPixels":i(U),"getImageResolutionYPixels":i(T),"getImageResolutionXRes":i(S),"getImageResolutionYRes":i(R),"endGetImageResolution":i(Q),"numberFonts":i(P),"getFontPage":i(O),"getFontName":i(N),"getFontType":i(M),"getFontEncoding":i(L),"startGetFontInfo":i(K),"endGetFontInfo":i(J),"copyFont":i(I),"removeFonts":i(H),"outputJSON":i(G),"outputJSONMemory":i(F),"fromJSON":i(E),"fromJSONMemory":i(D),"startGetOCGList":i(C),"ocgListEntry":i(B),"endGetOCGList":i(A),"ocgCoalesce":i(z),"ocgRename":i(y),"ocgOrderAll":i(x),"blankDocument":i(w),"blankDocumentPaper":i(v),"textToPDF":i(u),"textToPDFPaper":i(t),"textToPDFMemory":i(s),"textToPDFPaperMemory":i(r),"draft":i(q),"removeAllText":i(p),"blackText":i(o),"blackLines":i(n),"blackFills":i(m),"thinLines":i(l),"copyId":i(k),"removeId":i(j),"setVersion":i(h),"setFullVersion":i(g),"removeDictEntry":i(f),"removeDictEntrySearch":i(e),"replaceDictEntry":i(d),"replaceDictEntrySearch":i(c),"getDictEntries":i(b),"removeClipping":i(a)}}(a7L,a7K,a7J,a7I,a7H,a7G,a7F,a7E,a7D,a7C,a7B,a7A,a7z,a7y,a7x,a7w,a7v,a7u,a7t,a7s,a7r,a7q,a7p,a7o,a7n,a7m,a7l,a7k,a7j,a7i,a7h,a7g,a7f,a7e,a7d,a7c,a7b,a7a,a6$,a6_,a69,a68,a67,a66,a65,a64,a63,a62,a61,a60,a6Z,a6Y,a6X,a6W,a6V,a6U,a6T,a6S,a6R,a6Q,a6P,a6O,a6N,a6M,a6L,a6K,a6J,a6I,a6H,a6G,a6F,a6E,a6D,a6C,a6B,a6A,a6z,a6y,a6x,a6w,a6v,a6u,a6t,a6s,a6r,a6q,a6p,a6o,a6n,a6m,a6l,a6k,a6j,a6i,a6h,a6g,a6f,a6e,a6d,a6c,a6b,a6a,a5$,a5_,a59,a58,a57,a56,a55,a54,a53,a52,a51,a50,a5Z,a5Y,a5X,a5W,a5V,a5U,a5T,a5S,a5R,a5Q,a5P,a5O,a5N,a5M,a5L,a5K,a5J,a5I,a5H,a5G,a5F,a5E,a5D,a5C,a5B,a5A,a5z,a5y,a5x,a5w,a5v,a5u,a5t,a5s,a5r,a5q,a5p,a5o,a5n,a5m,a5l,a5k,a5j,a5i,a5h,a5g,a5f,a5e,a5d,a5c,a5b,a5a,a4$,a4_,a49,a48,a47,a46,a45,a44,a43,a42,a41,a40,a4Z,a4Y,a4X,a4W,a4V,a4T,a4S,a4R,a4Q,a4P,a4O,a4N,a4M,a4L,a4K,a4J,a4I,a4H,a4G,a4F,a4E,a4D,a4C,a4B,a4A,a4z,a4y,a4x,a4w,a4v,a4u,a4t,a4s,a4r,a4q,a4p,a4o,a4n,a4m,a4l,a4k,a4j,a4i,a4h,a4g,a4f,a4e,a4d,a4c,a4b,a4a,a3$,a3_,a39,a38,a37,a36,a35,a34,a33,a32,a31,a30,a3Z,a3Y,a3X,a3W,a3V,a3U,a3T,a3S,a3R,a3Q,a3P,a3O,a3N,a3M,a3L,a3K,a3J,a3I,a3H,a3G,a3F,a3E,a3D,a3C,a3B,a3A,a3z,a3y,a3x,a3w,a3v,a3u,a3t,a3s,a3r,a3q,a3p,a3o,a3n,a3m,a3l,a3k,a3j,a3i,a3h,a3g,a3f,a3e,a3d,a3c,a3b,a3a,a2$,a2_,a29,a28,a27,a26,a25,a24,a23,a22,a21,a20,a2Z,a2Y,a2X,a2W,a2V,a2U,a2T,a2S,a2R,a2Q,a2P,a2O,a2N,a2M,a2L,a2K,a2J,a2I,a2H,a2G,a2E));mn(0);return}(globalThis));

}).call(this)}).call(this,require("buffer").Buffer)
},{"./sjcl.js":2,"buffer":73,"constants":77,"crypto":84,"fs":3,"zlib":71}],2:[function(require,module,exports){
"use strict";var sjcl={cipher:{},hash:{},keyexchange:{},mode:{},misc:{},codec:{},exception:{corrupt:function(a){this.toString=function(){return"CORRUPT: "+this.message};this.message=a},invalid:function(a){this.toString=function(){return"INVALID: "+this.message};this.message=a},bug:function(a){this.toString=function(){return"BUG: "+this.message};this.message=a},notReady:function(a){this.toString=function(){return"NOT READY: "+this.message};this.message=a}}};
sjcl.cipher.aes=function(a){this.i[0][0][0]||this.j();var b,c,d,e,f=this.i[0][4],h=this.i[1];b=a.length;var g=1;if(4!==b&&6!==b&&8!==b)throw new sjcl.exception.invalid("invalid aes key size");this.c=[d=a.slice(0),e=[]];for(a=b;a<4*b+28;a++){c=d[a-1];if(0===a%b||8===b&&4===a%b)c=f[c>>>24]<<24^f[c>>16&255]<<16^f[c>>8&255]<<8^f[c&255],0===a%b&&(c=c<<8^c>>>24^g<<24,g=g<<1^283*(g>>7));d[a]=d[a-b]^c}for(b=0;a;b++,a--)c=d[b&3?a:a-4],e[b]=4>=a||4>b?c:h[0][f[c>>>24]]^h[1][f[c>>16&255]]^h[2][f[c>>8&255]]^h[3][f[c&
255]]};
sjcl.cipher.aes.prototype={encrypt:function(a){return V(this,a,0)},decrypt:function(a){return V(this,a,1)},i:[[[],[],[],[],[]],[[],[],[],[],[]]],j:function(){var a=this.i[0],b=this.i[1],c=a[4],d=b[4],e,f,h,g=[],p=[],t,l,k,m;for(e=0;0x100>e;e++)p[(g[e]=e<<1^283*(e>>7))^e]=e;for(f=h=0;!c[f];f^=t||1,h=p[h]||1)for(k=h^h<<1^h<<2^h<<3^h<<4,k=k>>8^k&255^99,c[f]=k,d[k]=f,l=g[e=g[t=g[f]]],m=0x1010101*l^0x10001*e^0x101*t^0x1010100*f,l=0x101*g[k]^0x1010100*k,e=0;4>e;e++)a[e][f]=l=l<<24^l>>>8,b[e][k]=m=m<<24^m>>>8;for(e=
0;5>e;e++)a[e]=a[e].slice(0),b[e]=b[e].slice(0)}};
function V(a,b,c){if(4!==b.length)throw new sjcl.exception.invalid("invalid aes block size");var d=a.c[c],e=b[0]^d[0],f=b[c?3:1]^d[1],h=b[2]^d[2];b=b[c?1:3]^d[3];var g,p,t,l=d.length/4-2,k,m=4,z=[0,0,0,0];g=a.i[c];a=g[0];var A=g[1],C=g[2],B=g[3],D=g[4];for(k=0;k<l;k++)g=a[e>>>24]^A[f>>16&255]^C[h>>8&255]^B[b&255]^d[m],p=a[f>>>24]^A[h>>16&255]^C[b>>8&255]^B[e&255]^d[m+1],t=a[h>>>24]^A[b>>16&255]^C[e>>8&255]^B[f&255]^d[m+2],b=a[b>>>24]^A[e>>16&255]^C[f>>8&255]^B[h&255]^d[m+3],m+=4,e=g,f=p,h=t;for(k=
0;4>k;k++)z[c?3&-k:k]=D[e>>>24]<<24^D[f>>16&255]<<16^D[h>>8&255]<<8^D[b&255]^d[m++],g=e,e=f,f=h,h=b,b=g;return z}
sjcl.bitArray={bitSlice:function(a,b,c){a=sjcl.bitArray.l(a.slice(b/32),32-(b&31)).slice(1);return void 0===c?a:sjcl.bitArray.clamp(a,c-b)},extract:function(a,b,c){var d=Math.floor(-b-c&31);return((b+c-1^b)&-32?a[b/32|0]<<32-d^a[b/32+1|0]>>>d:a[b/32|0]>>>d)&(1<<c)-1},concat:function(a,b){if(0===a.length||0===b.length)return a.concat(b);var c=a[a.length-1],d=sjcl.bitArray.getPartial(c);return 32===d?a.concat(b):sjcl.bitArray.l(b,d,c|0,a.slice(0,a.length-1))},bitLength:function(a){var b=a.length;return 0===
b?0:32*(b-1)+sjcl.bitArray.getPartial(a[b-1])},clamp:function(a,b){if(32*a.length<b)return a;a=a.slice(0,Math.ceil(b/32));var c=a.length;b=b&31;0<c&&b&&(a[c-1]=sjcl.bitArray.partial(b,a[c-1]&2147483648>>b-1,1));return a},partial:function(a,b,c){return 32===a?b:(c?b|0:b<<32-a)+0x10000000000*a},getPartial:function(a){return Math.round(a/0x10000000000)||32},equal:function(a,b){if(sjcl.bitArray.bitLength(a)!==sjcl.bitArray.bitLength(b))return!1;var c=0,d;for(d=0;d<a.length;d++)c|=a[d]^b[d];return 0===
c},l:function(a,b,c,d){var e;e=0;for(void 0===d&&(d=[]);32<=b;b-=32)d.push(c),c=0;if(0===b)return d.concat(a);for(e=0;e<a.length;e++)d.push(c|a[e]>>>b),c=a[e]<<32-b;e=a.length?a[a.length-1]:0;a=sjcl.bitArray.getPartial(e);d.push(sjcl.bitArray.partial(b+a&31,32<b+a?c:d.pop(),1));return d},s:function(a,b){return[a[0]^b[0],a[1]^b[1],a[2]^b[2],a[3]^b[3]]},byteswapM:function(a){var b,c;for(b=0;b<a.length;++b)c=a[b],a[b]=c>>>24|c>>>8&0xff00|(c&0xff00)<<8|c<<24;return a}};
sjcl.codec.utf8String={fromBits:function(a){var b="",c=sjcl.bitArray.bitLength(a),d,e;for(d=0;d<c/8;d++)0===(d&3)&&(e=a[d/4]),b+=String.fromCharCode(e>>>8>>>8>>>8),e<<=8;return decodeURIComponent(escape(b))},toBits:function(a){a=unescape(encodeURIComponent(a));var b=[],c,d=0;for(c=0;c<a.length;c++)d=d<<8|a.charCodeAt(c),3===(c&3)&&(b.push(d),d=0);c&3&&b.push(sjcl.bitArray.partial(8*(c&3),d));return b}};
sjcl.codec.bytes={fromBits:function(a){var b=[],c=sjcl.bitArray.bitLength(a),d,e;for(d=0;d<c/8;d++)0===(d&3)&&(e=a[d/4]),b.push(e>>>24),e<<=8;return b},toBits:function(a){var b=[],c,d=0;for(c=0;c<a.length;c++)d=d<<8|a[c],3===(c&3)&&(b.push(d),d=0);c&3&&b.push(sjcl.bitArray.partial(8*(c&3),d));return b}};sjcl.hash.sha256=function(a){this.c[0]||this.j();a?(this.f=a.f.slice(0),this.b=a.b.slice(0),this.a=a.a):this.reset()};sjcl.hash.sha256.hash=function(a){return(new sjcl.hash.sha256).update(a).finalize()};
sjcl.hash.sha256.prototype={blockSize:512,reset:function(){this.f=this.h.slice(0);this.b=[];this.a=0;return this},update:function(a){"string"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));var b,c=this.b=sjcl.bitArray.concat(this.b,a);b=this.a;a=this.a=b+sjcl.bitArray.bitLength(a);if(0x1fffffffffffff<a)throw new sjcl.exception.invalid("Cannot hash more than 2^53 - 1 bits");if("undefined"!==typeof Uint32Array){var d=new Uint32Array(c),e=0;for(b=512+b-(512+b&0x1ff);b<=a;b+=512)this.g(d.subarray(16*e,
16*(e+1))),e+=1;c.splice(0,16*e)}else for(b=512+b-(512+b&0x1ff);b<=a;b+=512)this.g(c.splice(0,16));return this},finalize:function(){var a,b=this.b,c=this.f,b=sjcl.bitArray.concat(b,[sjcl.bitArray.partial(1,1)]);for(a=b.length+2;a&15;a++)b.push(0);b.push(Math.floor(this.a/0x100000000));for(b.push(this.a|0);b.length;)this.g(b.splice(0,16));this.reset();return c},h:[],c:[],j:function(){function a(a){return 0x100000000*(a-Math.floor(a))|0}for(var b=0,c=2,d,e;64>b;c++){e=!0;for(d=2;d*d<=c;d++)if(0===c%d){e=
!1;break}e&&(8>b&&(this.h[b]=a(Math.pow(c,.5))),this.c[b]=a(Math.pow(c,1/3)),b++)}},g:function(a){var b,c,d,e=this.f,f=this.c,h=e[0],g=e[1],p=e[2],t=e[3],l=e[4],k=e[5],m=e[6],z=e[7];for(b=0;64>b;b++)16>b?c=a[b]:(c=a[b+1&15],d=a[b+14&15],c=a[b&15]=(c>>>7^c>>>18^c>>>3^c<<25^c<<14)+(d>>>17^d>>>19^d>>>10^d<<15^d<<13)+a[b&15]+a[b+9&15]|0),c=c+z+(l>>>6^l>>>11^l>>>25^l<<26^l<<21^l<<7)+(m^l&(k^m))+f[b],z=m,m=k,k=l,l=t+c|0,t=p,p=g,g=h,h=c+(g&p^t&(g^p))+(g>>>2^g>>>13^g>>>22^g<<30^g<<19^g<<10)|0;e[0]=e[0]+h|
0;e[1]=e[1]+g|0;e[2]=e[2]+p|0;e[3]=e[3]+t|0;e[4]=e[4]+l|0;e[5]=e[5]+k|0;e[6]=e[6]+m|0;e[7]=e[7]+z|0}};sjcl.hash.sha512=function(a){this.c[0]||this.j();a?(this.f=a.f.slice(0),this.b=a.b.slice(0),this.a=a.a):this.reset()};sjcl.hash.sha512.hash=function(a){return(new sjcl.hash.sha512).update(a).finalize()};
sjcl.hash.sha512.prototype={blockSize:1024,reset:function(){this.f=this.h.slice(0);this.b=[];this.a=0;return this},update:function(a){"string"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));var b,c=this.b=sjcl.bitArray.concat(this.b,a);b=this.a;a=this.a=b+sjcl.bitArray.bitLength(a);if(0x1fffffffffffff<a)throw new sjcl.exception.invalid("Cannot hash more than 2^53 - 1 bits");if("undefined"!==typeof Uint32Array){var d=new Uint32Array(c),e=0;for(b=1024+b-(1024+b&1023);b<=a;b+=1024)this.g(d.subarray(32*
e,32*(e+1))),e+=1;c.splice(0,32*e)}else for(b=1024+b-(1024+b&1023);b<=a;b+=1024)this.g(c.splice(0,32));return this},finalize:function(){var a,b=this.b,c=this.f,b=sjcl.bitArray.concat(b,[sjcl.bitArray.partial(1,1)]);for(a=b.length+4;a&31;a++)b.push(0);b.push(0);b.push(0);b.push(Math.floor(this.a/0x100000000));for(b.push(this.a|0);b.length;)this.g(b.splice(0,32));this.reset();return c},h:[],m:[12372232,13281083,9762859,1914609,15106769,4090911,4308331,8266105],c:[],o:[2666018,15689165,5061423,9034684,
4764984,380953,1658779,7176472,197186,7368638,14987916,16757986,8096111,1480369,13046325,6891156,15813330,5187043,9229749,11312229,2818677,10937475,4324308,1135541,6741931,11809296,16458047,15666916,11046850,698149,229999,945776,13774844,2541862,12856045,9810911,11494366,7844520,15576806,8533307,15795044,4337665,16291729,5553712,15684120,6662416,7413802,12308920,13816008,4303699,9366425,10176680,13195875,4295371,6546291,11712675,15708924,1519456,15772530,6568428,6495784,8568297,13007125,7492395,2515356,
12632583,14740254,7262584,1535930,13146278,16321966,1853211,294276,13051027,13221564,1051980,4080310,6651434,14088940,4675607],j:function(){function a(a){return 0x100000000*(a-Math.floor(a))|0}function b(a){return 0x10000000000*(a-Math.floor(a))&255}for(var c=0,d=2,e,f;80>c;d++){f=!0;for(e=2;e*e<=d;e++)if(0===d%e){f=!1;break}f&&(8>c&&(this.h[2*c]=a(Math.pow(d,.5)),this.h[2*c+1]=b(Math.pow(d,.5))<<24|this.m[c]),this.c[2*c]=a(Math.pow(d,1/3)),this.c[2*c+1]=b(Math.pow(d,1/3))<<24|this.o[c],c++)}},g:function(a){var b,
c,d=this.f,e=this.c,f=d[0],h=d[1],g=d[2],p=d[3],t=d[4],l=d[5],k=d[6],m=d[7],z=d[8],A=d[9],C=d[10],B=d[11],D=d[12],N=d[13],W=d[14],O=d[15],r;if("undefined"!==typeof Uint32Array){r=Array(160);for(var q=0;32>q;q++)r[q]=a[q]}else r=a;var q=f,u=h,G=g,E=p,H=t,F=l,R=k,I=m,w=z,v=A,P=C,J=B,Q=D,K=N,S=W,L=O;for(a=0;80>a;a++){if(16>a)b=r[2*a],c=r[2*a+1];else{c=r[2*(a-15)];var n=r[2*(a-15)+1];b=(n<<31|c>>>1)^(n<<24|c>>>8)^c>>>7;var x=(c<<31|n>>>1)^(c<<24|n>>>8)^(c<<25|n>>>7);c=r[2*(a-2)];var y=r[2*(a-2)+1],n=
(y<<13|c>>>19)^(c<<3|y>>>29)^c>>>6,y=(c<<13|y>>>19)^(y<<3|c>>>29)^(c<<26|y>>>6),T=r[2*(a-7)],U=r[2*(a-16)],M=r[2*(a-16)+1];c=x+r[2*(a-7)+1];b=b+T+(c>>>0<x>>>0?1:0);c+=y;b+=n+(c>>>0<y>>>0?1:0);c+=M;b+=U+(c>>>0<M>>>0?1:0)}r[2*a]=b|=0;r[2*a+1]=c|=0;var T=w&P^~w&Q,X=v&J^~v&K,y=q&G^q&H^G&H,Z=u&E^u&F^E&F,U=(u<<4|q>>>28)^(q<<30|u>>>2)^(q<<25|u>>>7),M=(q<<4|u>>>28)^(u<<30|q>>>2)^(u<<25|q>>>7),aa=e[2*a],Y=e[2*a+1],n=L+((w<<18|v>>>14)^(w<<14|v>>>18)^(v<<23|w>>>9)),x=S+((v<<18|w>>>14)^(v<<14|w>>>18)^(w<<23|
v>>>9))+(n>>>0<L>>>0?1:0),n=n+X,x=x+(T+(n>>>0<X>>>0?1:0)),n=n+Y,x=x+(aa+(n>>>0<Y>>>0?1:0)),n=n+c|0,x=x+(b+(n>>>0<c>>>0?1:0));c=M+Z;b=U+y+(c>>>0<M>>>0?1:0);S=Q;L=K;Q=P;K=J;P=w;J=v;v=I+n|0;w=R+x+(v>>>0<I>>>0?1:0)|0;R=H;I=F;H=G;F=E;G=q;E=u;u=n+c|0;q=x+b+(u>>>0<n>>>0?1:0)|0}h=d[1]=h+u|0;d[0]=f+q+(h>>>0<u>>>0?1:0)|0;p=d[3]=p+E|0;d[2]=g+G+(p>>>0<E>>>0?1:0)|0;l=d[5]=l+F|0;d[4]=t+H+(l>>>0<F>>>0?1:0)|0;m=d[7]=m+I|0;d[6]=k+R+(m>>>0<I>>>0?1:0)|0;A=d[9]=A+v|0;d[8]=z+w+(A>>>0<v>>>0?1:0)|0;B=d[11]=B+J|0;d[10]=
C+P+(B>>>0<J>>>0?1:0)|0;N=d[13]=N+K|0;d[12]=D+Q+(N>>>0<K>>>0?1:0)|0;O=d[15]=O+L|0;d[14]=W+S+(O>>>0<L>>>0?1:0)|0}};"undefined"!==typeof module&&module.exports&&(module.exports=sjcl);"function"===typeof define&&define([],function(){return sjcl});
//joo_global_object.cpdf_sjcl = sjcl;

},{}],3:[function(require,module,exports){

},{}],4:[function(require,module,exports){
'use strict';

const asn1 = exports;

asn1.bignum = require('bn.js');

asn1.define = require('./asn1/api').define;
asn1.base = require('./asn1/base');
asn1.constants = require('./asn1/constants');
asn1.decoders = require('./asn1/decoders');
asn1.encoders = require('./asn1/encoders');

},{"./asn1/api":5,"./asn1/base":7,"./asn1/constants":11,"./asn1/decoders":13,"./asn1/encoders":16,"bn.js":18}],5:[function(require,module,exports){
'use strict';

const encoders = require('./encoders');
const decoders = require('./decoders');
const inherits = require('inherits');

const api = exports;

api.define = function define(name, body) {
  return new Entity(name, body);
};

function Entity(name, body) {
  this.name = name;
  this.body = body;

  this.decoders = {};
  this.encoders = {};
}

Entity.prototype._createNamed = function createNamed(Base) {
  const name = this.name;

  function Generated(entity) {
    this._initNamed(entity, name);
  }
  inherits(Generated, Base);
  Generated.prototype._initNamed = function _initNamed(entity, name) {
    Base.call(this, entity, name);
  };

  return new Generated(this);
};

Entity.prototype._getDecoder = function _getDecoder(enc) {
  enc = enc || 'der';
  // Lazily create decoder
  if (!this.decoders.hasOwnProperty(enc))
    this.decoders[enc] = this._createNamed(decoders[enc]);
  return this.decoders[enc];
};

Entity.prototype.decode = function decode(data, enc, options) {
  return this._getDecoder(enc).decode(data, options);
};

Entity.prototype._getEncoder = function _getEncoder(enc) {
  enc = enc || 'der';
  // Lazily create encoder
  if (!this.encoders.hasOwnProperty(enc))
    this.encoders[enc] = this._createNamed(encoders[enc]);
  return this.encoders[enc];
};

Entity.prototype.encode = function encode(data, enc, /* internal */ reporter) {
  return this._getEncoder(enc).encode(data, reporter);
};

},{"./decoders":13,"./encoders":16,"inherits":154}],6:[function(require,module,exports){
'use strict';

const inherits = require('inherits');
const Reporter = require('../base/reporter').Reporter;
const Buffer = require('safer-buffer').Buffer;

function DecoderBuffer(base, options) {
  Reporter.call(this, options);
  if (!Buffer.isBuffer(base)) {
    this.error('Input not Buffer');
    return;
  }

  this.base = base;
  this.offset = 0;
  this.length = base.length;
}
inherits(DecoderBuffer, Reporter);
exports.DecoderBuffer = DecoderBuffer;

DecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {
  if (data instanceof DecoderBuffer) {
    return true;
  }

  // Or accept compatible API
  const isCompatible = typeof data === 'object' &&
    Buffer.isBuffer(data.base) &&
    data.constructor.name === 'DecoderBuffer' &&
    typeof data.offset === 'number' &&
    typeof data.length === 'number' &&
    typeof data.save === 'function' &&
    typeof data.restore === 'function' &&
    typeof data.isEmpty === 'function' &&
    typeof data.readUInt8 === 'function' &&
    typeof data.skip === 'function' &&
    typeof data.raw === 'function';

  return isCompatible;
};

DecoderBuffer.prototype.save = function save() {
  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
};

DecoderBuffer.prototype.restore = function restore(save) {
  // Return skipped data
  const res = new DecoderBuffer(this.base);
  res.offset = save.offset;
  res.length = this.offset;

  this.offset = save.offset;
  Reporter.prototype.restore.call(this, save.reporter);

  return res;
};

DecoderBuffer.prototype.isEmpty = function isEmpty() {
  return this.offset === this.length;
};

DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
  if (this.offset + 1 <= this.length)
    return this.base.readUInt8(this.offset++, true);
  else
    return this.error(fail || 'DecoderBuffer overrun');
};

DecoderBuffer.prototype.skip = function skip(bytes, fail) {
  if (!(this.offset + bytes <= this.length))
    return this.error(fail || 'DecoderBuffer overrun');

  const res = new DecoderBuffer(this.base);

  // Share reporter state
  res._reporterState = this._reporterState;

  res.offset = this.offset;
  res.length = this.offset + bytes;
  this.offset += bytes;
  return res;
};

DecoderBuffer.prototype.raw = function raw(save) {
  return this.base.slice(save ? save.offset : this.offset, this.length);
};

function EncoderBuffer(value, reporter) {
  if (Array.isArray(value)) {
    this.length = 0;
    this.value = value.map(function(item) {
      if (!EncoderBuffer.isEncoderBuffer(item))
        item = new EncoderBuffer(item, reporter);
      this.length += item.length;
      return item;
    }, this);
  } else if (typeof value === 'number') {
    if (!(0 <= value && value <= 0xff))
      return reporter.error('non-byte EncoderBuffer value');
    this.value = value;
    this.length = 1;
  } else if (typeof value === 'string') {
    this.value = value;
    this.length = Buffer.byteLength(value);
  } else if (Buffer.isBuffer(value)) {
    this.value = value;
    this.length = value.length;
  } else {
    return reporter.error('Unsupported type: ' + typeof value);
  }
}
exports.EncoderBuffer = EncoderBuffer;

EncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {
  if (data instanceof EncoderBuffer) {
    return true;
  }

  // Or accept compatible API
  const isCompatible = typeof data === 'object' &&
    data.constructor.name === 'EncoderBuffer' &&
    typeof data.length === 'number' &&
    typeof data.join === 'function';

  return isCompatible;
};

EncoderBuffer.prototype.join = function join(out, offset) {
  if (!out)
    out = Buffer.alloc(this.length);
  if (!offset)
    offset = 0;

  if (this.length === 0)
    return out;

  if (Array.isArray(this.value)) {
    this.value.forEach(function(item) {
      item.join(out, offset);
      offset += item.length;
    });
  } else {
    if (typeof this.value === 'number')
      out[offset] = this.value;
    else if (typeof this.value === 'string')
      out.write(this.value, offset);
    else if (Buffer.isBuffer(this.value))
      this.value.copy(out, offset);
    offset += this.length;
  }

  return out;
};

},{"../base/reporter":9,"inherits":154,"safer-buffer":198}],7:[function(require,module,exports){
'use strict';

const base = exports;

base.Reporter = require('./reporter').Reporter;
base.DecoderBuffer = require('./buffer').DecoderBuffer;
base.EncoderBuffer = require('./buffer').EncoderBuffer;
base.Node = require('./node');

},{"./buffer":6,"./node":8,"./reporter":9}],8:[function(require,module,exports){
'use strict';

const Reporter = require('../base/reporter').Reporter;
const EncoderBuffer = require('../base/buffer').EncoderBuffer;
const DecoderBuffer = require('../base/buffer').DecoderBuffer;
const assert = require('minimalistic-assert');

// Supported tags
const tags = [
  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',
  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',
  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',
  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'
];

// Public methods list
const methods = [
  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',
  'any', 'contains'
].concat(tags);

// Overrided methods list
const overrided = [
  '_peekTag', '_decodeTag', '_use',
  '_decodeStr', '_decodeObjid', '_decodeTime',
  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',

  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',
  '_encodeNull', '_encodeInt', '_encodeBool'
];

function Node(enc, parent, name) {
  const state = {};
  this._baseState = state;

  state.name = name;
  state.enc = enc;

  state.parent = parent || null;
  state.children = null;

  // State
  state.tag = null;
  state.args = null;
  state.reverseArgs = null;
  state.choice = null;
  state.optional = false;
  state.any = false;
  state.obj = false;
  state.use = null;
  state.useDecoder = null;
  state.key = null;
  state['default'] = null;
  state.explicit = null;
  state.implicit = null;
  state.contains = null;

  // Should create new instance on each method
  if (!state.parent) {
    state.children = [];
    this._wrap();
  }
}
module.exports = Node;

const stateProps = [
  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',
  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',
  'implicit', 'contains'
];

Node.prototype.clone = function clone() {
  const state = this._baseState;
  const cstate = {};
  stateProps.forEach(function(prop) {
    cstate[prop] = state[prop];
  });
  const res = new this.constructor(cstate.parent);
  res._baseState = cstate;
  return res;
};

Node.prototype._wrap = function wrap() {
  const state = this._baseState;
  methods.forEach(function(method) {
    this[method] = function _wrappedMethod() {
      const clone = new this.constructor(this);
      state.children.push(clone);
      return clone[method].apply(clone, arguments);
    };
  }, this);
};

Node.prototype._init = function init(body) {
  const state = this._baseState;

  assert(state.parent === null);
  body.call(this);

  // Filter children
  state.children = state.children.filter(function(child) {
    return child._baseState.parent === this;
  }, this);
  assert.equal(state.children.length, 1, 'Root node can have only one child');
};

Node.prototype._useArgs = function useArgs(args) {
  const state = this._baseState;

  // Filter children and args
  const children = args.filter(function(arg) {
    return arg instanceof this.constructor;
  }, this);
  args = args.filter(function(arg) {
    return !(arg instanceof this.constructor);
  }, this);

  if (children.length !== 0) {
    assert(state.children === null);
    state.children = children;

    // Replace parent to maintain backward link
    children.forEach(function(child) {
      child._baseState.parent = this;
    }, this);
  }
  if (args.length !== 0) {
    assert(state.args === null);
    state.args = args;
    state.reverseArgs = args.map(function(arg) {
      if (typeof arg !== 'object' || arg.constructor !== Object)
        return arg;

      const res = {};
      Object.keys(arg).forEach(function(key) {
        if (key == (key | 0))
          key |= 0;
        const value = arg[key];
        res[value] = key;
      });
      return res;
    });
  }
};

//
// Overrided methods
//

overrided.forEach(function(method) {
  Node.prototype[method] = function _overrided() {
    const state = this._baseState;
    throw new Error(method + ' not implemented for encoding: ' + state.enc);
  };
});

//
// Public methods
//

tags.forEach(function(tag) {
  Node.prototype[tag] = function _tagMethod() {
    const state = this._baseState;
    const args = Array.prototype.slice.call(arguments);

    assert(state.tag === null);
    state.tag = tag;

    this._useArgs(args);

    return this;
  };
});

Node.prototype.use = function use(item) {
  assert(item);
  const state = this._baseState;

  assert(state.use === null);
  state.use = item;

  return this;
};

Node.prototype.optional = function optional() {
  const state = this._baseState;

  state.optional = true;

  return this;
};

Node.prototype.def = function def(val) {
  const state = this._baseState;

  assert(state['default'] === null);
  state['default'] = val;
  state.optional = true;

  return this;
};

Node.prototype.explicit = function explicit(num) {
  const state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.explicit = num;

  return this;
};

Node.prototype.implicit = function implicit(num) {
  const state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.implicit = num;

  return this;
};

Node.prototype.obj = function obj() {
  const state = this._baseState;
  const args = Array.prototype.slice.call(arguments);

  state.obj = true;

  if (args.length !== 0)
    this._useArgs(args);

  return this;
};

Node.prototype.key = function key(newKey) {
  const state = this._baseState;

  assert(state.key === null);
  state.key = newKey;

  return this;
};

Node.prototype.any = function any() {
  const state = this._baseState;

  state.any = true;

  return this;
};

Node.prototype.choice = function choice(obj) {
  const state = this._baseState;

  assert(state.choice === null);
  state.choice = obj;
  this._useArgs(Object.keys(obj).map(function(key) {
    return obj[key];
  }));

  return this;
};

Node.prototype.contains = function contains(item) {
  const state = this._baseState;

  assert(state.use === null);
  state.contains = item;

  return this;
};

//
// Decoding
//

Node.prototype._decode = function decode(input, options) {
  const state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return input.wrapResult(state.children[0]._decode(input, options));

  let result = state['default'];
  let present = true;

  let prevKey = null;
  if (state.key !== null)
    prevKey = input.enterKey(state.key);

  // Check if tag is there
  if (state.optional) {
    let tag = null;
    if (state.explicit !== null)
      tag = state.explicit;
    else if (state.implicit !== null)
      tag = state.implicit;
    else if (state.tag !== null)
      tag = state.tag;

    if (tag === null && !state.any) {
      // Trial and Error
      const save = input.save();
      try {
        if (state.choice === null)
          this._decodeGeneric(state.tag, input, options);
        else
          this._decodeChoice(input, options);
        present = true;
      } catch (e) {
        present = false;
      }
      input.restore(save);
    } else {
      present = this._peekTag(input, tag, state.any);

      if (input.isError(present))
        return present;
    }
  }

  // Push object on stack
  let prevObj;
  if (state.obj && present)
    prevObj = input.enterObject();

  if (present) {
    // Unwrap explicit values
    if (state.explicit !== null) {
      const explicit = this._decodeTag(input, state.explicit);
      if (input.isError(explicit))
        return explicit;
      input = explicit;
    }

    const start = input.offset;

    // Unwrap implicit and normal values
    if (state.use === null && state.choice === null) {
      let save;
      if (state.any)
        save = input.save();
      const body = this._decodeTag(
        input,
        state.implicit !== null ? state.implicit : state.tag,
        state.any
      );
      if (input.isError(body))
        return body;

      if (state.any)
        result = input.raw(save);
      else
        input = body;
    }

    if (options && options.track && state.tag !== null)
      options.track(input.path(), start, input.length, 'tagged');

    if (options && options.track && state.tag !== null)
      options.track(input.path(), input.offset, input.length, 'content');

    // Select proper method for tag
    if (state.any) {
      // no-op
    } else if (state.choice === null) {
      result = this._decodeGeneric(state.tag, input, options);
    } else {
      result = this._decodeChoice(input, options);
    }

    if (input.isError(result))
      return result;

    // Decode children
    if (!state.any && state.choice === null && state.children !== null) {
      state.children.forEach(function decodeChildren(child) {
        // NOTE: We are ignoring errors here, to let parser continue with other
        // parts of encoded data
        child._decode(input, options);
      });
    }

    // Decode contained/encoded by schema, only in bit or octet strings
    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {
      const data = new DecoderBuffer(result);
      result = this._getUse(state.contains, input._reporterState.obj)
        ._decode(data, options);
    }
  }

  // Pop object
  if (state.obj && present)
    result = input.leaveObject(prevObj);

  // Set key
  if (state.key !== null && (result !== null || present === true))
    input.leaveKey(prevKey, state.key, result);
  else if (prevKey !== null)
    input.exitKey(prevKey);

  return result;
};

Node.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
  const state = this._baseState;

  if (tag === 'seq' || tag === 'set')
    return null;
  if (tag === 'seqof' || tag === 'setof')
    return this._decodeList(input, tag, state.args[0], options);
  else if (/str$/.test(tag))
    return this._decodeStr(input, tag, options);
  else if (tag === 'objid' && state.args)
    return this._decodeObjid(input, state.args[0], state.args[1], options);
  else if (tag === 'objid')
    return this._decodeObjid(input, null, null, options);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._decodeTime(input, tag, options);
  else if (tag === 'null_')
    return this._decodeNull(input, options);
  else if (tag === 'bool')
    return this._decodeBool(input, options);
  else if (tag === 'objDesc')
    return this._decodeStr(input, tag, options);
  else if (tag === 'int' || tag === 'enum')
    return this._decodeInt(input, state.args && state.args[0], options);

  if (state.use !== null) {
    return this._getUse(state.use, input._reporterState.obj)
      ._decode(input, options);
  } else {
    return input.error('unknown tag: ' + tag);
  }
};

Node.prototype._getUse = function _getUse(entity, obj) {

  const state = this._baseState;
  // Create altered use decoder if implicit is set
  state.useDecoder = this._use(entity, obj);
  assert(state.useDecoder._baseState.parent === null);
  state.useDecoder = state.useDecoder._baseState.children[0];
  if (state.implicit !== state.useDecoder._baseState.implicit) {
    state.useDecoder = state.useDecoder.clone();
    state.useDecoder._baseState.implicit = state.implicit;
  }
  return state.useDecoder;
};

Node.prototype._decodeChoice = function decodeChoice(input, options) {
  const state = this._baseState;
  let result = null;
  let match = false;

  Object.keys(state.choice).some(function(key) {
    const save = input.save();
    const node = state.choice[key];
    try {
      const value = node._decode(input, options);
      if (input.isError(value))
        return false;

      result = { type: key, value: value };
      match = true;
    } catch (e) {
      input.restore(save);
      return false;
    }
    return true;
  }, this);

  if (!match)
    return input.error('Choice not matched');

  return result;
};

//
// Encoding
//

Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
  return new EncoderBuffer(data, this.reporter);
};

Node.prototype._encode = function encode(data, reporter, parent) {
  const state = this._baseState;
  if (state['default'] !== null && state['default'] === data)
    return;

  const result = this._encodeValue(data, reporter, parent);
  if (result === undefined)
    return;

  if (this._skipDefault(result, reporter, parent))
    return;

  return result;
};

Node.prototype._encodeValue = function encode(data, reporter, parent) {
  const state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return state.children[0]._encode(data, reporter || new Reporter());

  let result = null;

  // Set reporter to share it with a child class
  this.reporter = reporter;

  // Check if data is there
  if (state.optional && data === undefined) {
    if (state['default'] !== null)
      data = state['default'];
    else
      return;
  }

  // Encode children first
  let content = null;
  let primitive = false;
  if (state.any) {
    // Anything that was given is translated to buffer
    result = this._createEncoderBuffer(data);
  } else if (state.choice) {
    result = this._encodeChoice(data, reporter);
  } else if (state.contains) {
    content = this._getUse(state.contains, parent)._encode(data, reporter);
    primitive = true;
  } else if (state.children) {
    content = state.children.map(function(child) {
      if (child._baseState.tag === 'null_')
        return child._encode(null, reporter, data);

      if (child._baseState.key === null)
        return reporter.error('Child should have a key');
      const prevKey = reporter.enterKey(child._baseState.key);

      if (typeof data !== 'object')
        return reporter.error('Child expected, but input is not object');

      const res = child._encode(data[child._baseState.key], reporter, data);
      reporter.leaveKey(prevKey);

      return res;
    }, this).filter(function(child) {
      return child;
    });
    content = this._createEncoderBuffer(content);
  } else {
    if (state.tag === 'seqof' || state.tag === 'setof') {
      // TODO(indutny): this should be thrown on DSL level
      if (!(state.args && state.args.length === 1))
        return reporter.error('Too many args for : ' + state.tag);

      if (!Array.isArray(data))
        return reporter.error('seqof/setof, but data is not Array');

      const child = this.clone();
      child._baseState.implicit = null;
      content = this._createEncoderBuffer(data.map(function(item) {
        const state = this._baseState;

        return this._getUse(state.args[0], data)._encode(item, reporter);
      }, child));
    } else if (state.use !== null) {
      result = this._getUse(state.use, parent)._encode(data, reporter);
    } else {
      content = this._encodePrimitive(state.tag, data);
      primitive = true;
    }
  }

  // Encode data itself
  if (!state.any && state.choice === null) {
    const tag = state.implicit !== null ? state.implicit : state.tag;
    const cls = state.implicit === null ? 'universal' : 'context';

    if (tag === null) {
      if (state.use === null)
        reporter.error('Tag could be omitted only for .use()');
    } else {
      if (state.use === null)
        result = this._encodeComposite(tag, primitive, cls, content);
    }
  }

  // Wrap in explicit
  if (state.explicit !== null)
    result = this._encodeComposite(state.explicit, false, 'context', result);

  return result;
};

Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
  const state = this._baseState;

  const node = state.choice[data.type];
  if (!node) {
    assert(
      false,
      data.type + ' not found in ' +
            JSON.stringify(Object.keys(state.choice)));
  }
  return node._encode(data.value, reporter);
};

Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
  const state = this._baseState;

  if (/str$/.test(tag))
    return this._encodeStr(data, tag);
  else if (tag === 'objid' && state.args)
    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
  else if (tag === 'objid')
    return this._encodeObjid(data, null, null);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._encodeTime(data, tag);
  else if (tag === 'null_')
    return this._encodeNull();
  else if (tag === 'int' || tag === 'enum')
    return this._encodeInt(data, state.args && state.reverseArgs[0]);
  else if (tag === 'bool')
    return this._encodeBool(data);
  else if (tag === 'objDesc')
    return this._encodeStr(data, tag);
  else
    throw new Error('Unsupported tag: ' + tag);
};

Node.prototype._isNumstr = function isNumstr(str) {
  return /^[0-9 ]*$/.test(str);
};

Node.prototype._isPrintstr = function isPrintstr(str) {
  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);
};

},{"../base/buffer":6,"../base/reporter":9,"minimalistic-assert":161}],9:[function(require,module,exports){
'use strict';

const inherits = require('inherits');

function Reporter(options) {
  this._reporterState = {
    obj: null,
    path: [],
    options: options || {},
    errors: []
  };
}
exports.Reporter = Reporter;

Reporter.prototype.isError = function isError(obj) {
  return obj instanceof ReporterError;
};

Reporter.prototype.save = function save() {
  const state = this._reporterState;

  return { obj: state.obj, pathLen: state.path.length };
};

Reporter.prototype.restore = function restore(data) {
  const state = this._reporterState;

  state.obj = data.obj;
  state.path = state.path.slice(0, data.pathLen);
};

Reporter.prototype.enterKey = function enterKey(key) {
  return this._reporterState.path.push(key);
};

Reporter.prototype.exitKey = function exitKey(index) {
  const state = this._reporterState;

  state.path = state.path.slice(0, index - 1);
};

Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
  const state = this._reporterState;

  this.exitKey(index);
  if (state.obj !== null)
    state.obj[key] = value;
};

Reporter.prototype.path = function path() {
  return this._reporterState.path.join('/');
};

Reporter.prototype.enterObject = function enterObject() {
  const state = this._reporterState;

  const prev = state.obj;
  state.obj = {};
  return prev;
};

Reporter.prototype.leaveObject = function leaveObject(prev) {
  const state = this._reporterState;

  const now = state.obj;
  state.obj = prev;
  return now;
};

Reporter.prototype.error = function error(msg) {
  let err;
  const state = this._reporterState;

  const inherited = msg instanceof ReporterError;
  if (inherited) {
    err = msg;
  } else {
    err = new ReporterError(state.path.map(function(elem) {
      return '[' + JSON.stringify(elem) + ']';
    }).join(''), msg.message || msg, msg.stack);
  }

  if (!state.options.partial)
    throw err;

  if (!inherited)
    state.errors.push(err);

  return err;
};

Reporter.prototype.wrapResult = function wrapResult(result) {
  const state = this._reporterState;
  if (!state.options.partial)
    return result;

  return {
    result: this.isError(result) ? null : result,
    errors: state.errors
  };
};

function ReporterError(path, msg) {
  this.path = path;
  this.rethrow(msg);
}
inherits(ReporterError, Error);

ReporterError.prototype.rethrow = function rethrow(msg) {
  this.message = msg + ' at: ' + (this.path || '(shallow)');
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, ReporterError);

  if (!this.stack) {
    try {
      // IE only adds stack when thrown
      throw new Error(this.message);
    } catch (e) {
      this.stack = e.stack;
    }
  }
  return this;
};

},{"inherits":154}],10:[function(require,module,exports){
'use strict';

// Helper
function reverse(map) {
  const res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    const value = map[key];
    res[value] = key;
  });

  return res;
}

exports.tagClass = {
  0: 'universal',
  1: 'application',
  2: 'context',
  3: 'private'
};
exports.tagClassByName = reverse(exports.tagClass);

exports.tag = {
  0x00: 'end',
  0x01: 'bool',
  0x02: 'int',
  0x03: 'bitstr',
  0x04: 'octstr',
  0x05: 'null_',
  0x06: 'objid',
  0x07: 'objDesc',
  0x08: 'external',
  0x09: 'real',
  0x0a: 'enum',
  0x0b: 'embed',
  0x0c: 'utf8str',
  0x0d: 'relativeOid',
  0x10: 'seq',
  0x11: 'set',
  0x12: 'numstr',
  0x13: 'printstr',
  0x14: 't61str',
  0x15: 'videostr',
  0x16: 'ia5str',
  0x17: 'utctime',
  0x18: 'gentime',
  0x19: 'graphstr',
  0x1a: 'iso646str',
  0x1b: 'genstr',
  0x1c: 'unistr',
  0x1d: 'charstr',
  0x1e: 'bmpstr'
};
exports.tagByName = reverse(exports.tag);

},{}],11:[function(require,module,exports){
'use strict';

const constants = exports;

// Helper
constants._reverse = function reverse(map) {
  const res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    const value = map[key];
    res[value] = key;
  });

  return res;
};

constants.der = require('./der');

},{"./der":10}],12:[function(require,module,exports){
'use strict';

const inherits = require('inherits');

const bignum = require('bn.js');
const DecoderBuffer = require('../base/buffer').DecoderBuffer;
const Node = require('../base/node');

// Import DER constants
const der = require('../constants/der');

function DERDecoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
}
module.exports = DERDecoder;

DERDecoder.prototype.decode = function decode(data, options) {
  if (!DecoderBuffer.isDecoderBuffer(data)) {
    data = new DecoderBuffer(data, options);
  }

  return this.tree._decode(data, options);
};

// Tree methods

function DERNode(parent) {
  Node.call(this, 'der', parent);
}
inherits(DERNode, Node);

DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
  if (buffer.isEmpty())
    return false;

  const state = buffer.save();
  const decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  buffer.restore(state);

  return decodedTag.tag === tag || decodedTag.tagStr === tag ||
    (decodedTag.tagStr + 'of') === tag || any;
};

DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
  const decodedTag = derDecodeTag(buffer,
    'Failed to decode tag of "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  let len = derDecodeLen(buffer,
    decodedTag.primitive,
    'Failed to get length of "' + tag + '"');

  // Failure
  if (buffer.isError(len))
    return len;

  if (!any &&
      decodedTag.tag !== tag &&
      decodedTag.tagStr !== tag &&
      decodedTag.tagStr + 'of' !== tag) {
    return buffer.error('Failed to match tag: "' + tag + '"');
  }

  if (decodedTag.primitive || len !== null)
    return buffer.skip(len, 'Failed to match body of: "' + tag + '"');

  // Indefinite length... find END tag
  const state = buffer.save();
  const res = this._skipUntilEnd(
    buffer,
    'Failed to skip indefinite length body: "' + this.tag + '"');
  if (buffer.isError(res))
    return res;

  len = buffer.offset - state.offset;
  buffer.restore(state);
  return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
};

DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
  for (;;) {
    const tag = derDecodeTag(buffer, fail);
    if (buffer.isError(tag))
      return tag;
    const len = derDecodeLen(buffer, tag.primitive, fail);
    if (buffer.isError(len))
      return len;

    let res;
    if (tag.primitive || len !== null)
      res = buffer.skip(len);
    else
      res = this._skipUntilEnd(buffer, fail);

    // Failure
    if (buffer.isError(res))
      return res;

    if (tag.tagStr === 'end')
      break;
  }
};

DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,
  options) {
  const result = [];
  while (!buffer.isEmpty()) {
    const possibleEnd = this._peekTag(buffer, 'end');
    if (buffer.isError(possibleEnd))
      return possibleEnd;

    const res = decoder.decode(buffer, 'der', options);
    if (buffer.isError(res) && possibleEnd)
      break;
    result.push(res);
  }
  return result;
};

DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
  if (tag === 'bitstr') {
    const unused = buffer.readUInt8();
    if (buffer.isError(unused))
      return unused;
    return { unused: unused, data: buffer.raw() };
  } else if (tag === 'bmpstr') {
    const raw = buffer.raw();
    if (raw.length % 2 === 1)
      return buffer.error('Decoding of string type: bmpstr length mismatch');

    let str = '';
    for (let i = 0; i < raw.length / 2; i++) {
      str += String.fromCharCode(raw.readUInt16BE(i * 2));
    }
    return str;
  } else if (tag === 'numstr') {
    const numstr = buffer.raw().toString('ascii');
    if (!this._isNumstr(numstr)) {
      return buffer.error('Decoding of string type: ' +
                          'numstr unsupported characters');
    }
    return numstr;
  } else if (tag === 'octstr') {
    return buffer.raw();
  } else if (tag === 'objDesc') {
    return buffer.raw();
  } else if (tag === 'printstr') {
    const printstr = buffer.raw().toString('ascii');
    if (!this._isPrintstr(printstr)) {
      return buffer.error('Decoding of string type: ' +
                          'printstr unsupported characters');
    }
    return printstr;
  } else if (/str$/.test(tag)) {
    return buffer.raw().toString();
  } else {
    return buffer.error('Decoding of string type: ' + tag + ' unsupported');
  }
};

DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
  let result;
  const identifiers = [];
  let ident = 0;
  let subident = 0;
  while (!buffer.isEmpty()) {
    subident = buffer.readUInt8();
    ident <<= 7;
    ident |= subident & 0x7f;
    if ((subident & 0x80) === 0) {
      identifiers.push(ident);
      ident = 0;
    }
  }
  if (subident & 0x80)
    identifiers.push(ident);

  const first = (identifiers[0] / 40) | 0;
  const second = identifiers[0] % 40;

  if (relative)
    result = identifiers;
  else
    result = [first, second].concat(identifiers.slice(1));

  if (values) {
    let tmp = values[result.join(' ')];
    if (tmp === undefined)
      tmp = values[result.join('.')];
    if (tmp !== undefined)
      result = tmp;
  }

  return result;
};

DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
  const str = buffer.raw().toString();

  let year;
  let mon;
  let day;
  let hour;
  let min;
  let sec;
  if (tag === 'gentime') {
    year = str.slice(0, 4) | 0;
    mon = str.slice(4, 6) | 0;
    day = str.slice(6, 8) | 0;
    hour = str.slice(8, 10) | 0;
    min = str.slice(10, 12) | 0;
    sec = str.slice(12, 14) | 0;
  } else if (tag === 'utctime') {
    year = str.slice(0, 2) | 0;
    mon = str.slice(2, 4) | 0;
    day = str.slice(4, 6) | 0;
    hour = str.slice(6, 8) | 0;
    min = str.slice(8, 10) | 0;
    sec = str.slice(10, 12) | 0;
    if (year < 70)
      year = 2000 + year;
    else
      year = 1900 + year;
  } else {
    return buffer.error('Decoding ' + tag + ' time is not supported yet');
  }

  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
};

DERNode.prototype._decodeNull = function decodeNull() {
  return null;
};

DERNode.prototype._decodeBool = function decodeBool(buffer) {
  const res = buffer.readUInt8();
  if (buffer.isError(res))
    return res;
  else
    return res !== 0;
};

DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
  // Bigint, return as it is (assume big endian)
  const raw = buffer.raw();
  let res = new bignum(raw);

  if (values)
    res = values[res.toString(10)] || res;

  return res;
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getDecoder('der').tree;
};

// Utility methods

function derDecodeTag(buf, fail) {
  let tag = buf.readUInt8(fail);
  if (buf.isError(tag))
    return tag;

  const cls = der.tagClass[tag >> 6];
  const primitive = (tag & 0x20) === 0;

  // Multi-octet tag - load
  if ((tag & 0x1f) === 0x1f) {
    let oct = tag;
    tag = 0;
    while ((oct & 0x80) === 0x80) {
      oct = buf.readUInt8(fail);
      if (buf.isError(oct))
        return oct;

      tag <<= 7;
      tag |= oct & 0x7f;
    }
  } else {
    tag &= 0x1f;
  }
  const tagStr = der.tag[tag];

  return {
    cls: cls,
    primitive: primitive,
    tag: tag,
    tagStr: tagStr
  };
}

function derDecodeLen(buf, primitive, fail) {
  let len = buf.readUInt8(fail);
  if (buf.isError(len))
    return len;

  // Indefinite form
  if (!primitive && len === 0x80)
    return null;

  // Definite form
  if ((len & 0x80) === 0) {
    // Short form
    return len;
  }

  // Long form
  const num = len & 0x7f;
  if (num > 4)
    return buf.error('length octect is too long');

  len = 0;
  for (let i = 0; i < num; i++) {
    len <<= 8;
    const j = buf.readUInt8(fail);
    if (buf.isError(j))
      return j;
    len |= j;
  }

  return len;
}

},{"../base/buffer":6,"../base/node":8,"../constants/der":10,"bn.js":18,"inherits":154}],13:[function(require,module,exports){
'use strict';

const decoders = exports;

decoders.der = require('./der');
decoders.pem = require('./pem');

},{"./der":12,"./pem":14}],14:[function(require,module,exports){
'use strict';

const inherits = require('inherits');
const Buffer = require('safer-buffer').Buffer;

const DERDecoder = require('./der');

function PEMDecoder(entity) {
  DERDecoder.call(this, entity);
  this.enc = 'pem';
}
inherits(PEMDecoder, DERDecoder);
module.exports = PEMDecoder;

PEMDecoder.prototype.decode = function decode(data, options) {
  const lines = data.toString().split(/[\r\n]+/g);

  const label = options.label.toUpperCase();

  const re = /^-----(BEGIN|END) ([^-]+)-----$/;
  let start = -1;
  let end = -1;
  for (let i = 0; i < lines.length; i++) {
    const match = lines[i].match(re);
    if (match === null)
      continue;

    if (match[2] !== label)
      continue;

    if (start === -1) {
      if (match[1] !== 'BEGIN')
        break;
      start = i;
    } else {
      if (match[1] !== 'END')
        break;
      end = i;
      break;
    }
  }
  if (start === -1 || end === -1)
    throw new Error('PEM section not found for: ' + label);

  const base64 = lines.slice(start + 1, end).join('');
  // Remove excessive symbols
  base64.replace(/[^a-z0-9+/=]+/gi, '');

  const input = Buffer.from(base64, 'base64');
  return DERDecoder.prototype.decode.call(this, input, options);
};

},{"./der":12,"inherits":154,"safer-buffer":198}],15:[function(require,module,exports){
'use strict';

const inherits = require('inherits');
const Buffer = require('safer-buffer').Buffer;
const Node = require('../base/node');

// Import DER constants
const der = require('../constants/der');

function DEREncoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
}
module.exports = DEREncoder;

DEREncoder.prototype.encode = function encode(data, reporter) {
  return this.tree._encode(data, reporter).join();
};

// Tree methods

function DERNode(parent) {
  Node.call(this, 'der', parent);
}
inherits(DERNode, Node);

DERNode.prototype._encodeComposite = function encodeComposite(tag,
  primitive,
  cls,
  content) {
  const encodedTag = encodeTag(tag, primitive, cls, this.reporter);

  // Short form
  if (content.length < 0x80) {
    const header = Buffer.alloc(2);
    header[0] = encodedTag;
    header[1] = content.length;
    return this._createEncoderBuffer([ header, content ]);
  }

  // Long form
  // Count octets required to store length
  let lenOctets = 1;
  for (let i = content.length; i >= 0x100; i >>= 8)
    lenOctets++;

  const header = Buffer.alloc(1 + 1 + lenOctets);
  header[0] = encodedTag;
  header[1] = 0x80 | lenOctets;

  for (let i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
    header[i] = j & 0xff;

  return this._createEncoderBuffer([ header, content ]);
};

DERNode.prototype._encodeStr = function encodeStr(str, tag) {
  if (tag === 'bitstr') {
    return this._createEncoderBuffer([ str.unused | 0, str.data ]);
  } else if (tag === 'bmpstr') {
    const buf = Buffer.alloc(str.length * 2);
    for (let i = 0; i < str.length; i++) {
      buf.writeUInt16BE(str.charCodeAt(i), i * 2);
    }
    return this._createEncoderBuffer(buf);
  } else if (tag === 'numstr') {
    if (!this._isNumstr(str)) {
      return this.reporter.error('Encoding of string type: numstr supports ' +
                                 'only digits and space');
    }
    return this._createEncoderBuffer(str);
  } else if (tag === 'printstr') {
    if (!this._isPrintstr(str)) {
      return this.reporter.error('Encoding of string type: printstr supports ' +
                                 'only latin upper and lower case letters, ' +
                                 'digits, space, apostrophe, left and rigth ' +
                                 'parenthesis, plus sign, comma, hyphen, ' +
                                 'dot, slash, colon, equal sign, ' +
                                 'question mark');
    }
    return this._createEncoderBuffer(str);
  } else if (/str$/.test(tag)) {
    return this._createEncoderBuffer(str);
  } else if (tag === 'objDesc') {
    return this._createEncoderBuffer(str);
  } else {
    return this.reporter.error('Encoding of string type: ' + tag +
                               ' unsupported');
  }
};

DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
  if (typeof id === 'string') {
    if (!values)
      return this.reporter.error('string objid given, but no values map found');
    if (!values.hasOwnProperty(id))
      return this.reporter.error('objid not found in values map');
    id = values[id].split(/[\s.]+/g);
    for (let i = 0; i < id.length; i++)
      id[i] |= 0;
  } else if (Array.isArray(id)) {
    id = id.slice();
    for (let i = 0; i < id.length; i++)
      id[i] |= 0;
  }

  if (!Array.isArray(id)) {
    return this.reporter.error('objid() should be either array or string, ' +
                               'got: ' + JSON.stringify(id));
  }

  if (!relative) {
    if (id[1] >= 40)
      return this.reporter.error('Second objid identifier OOB');
    id.splice(0, 2, id[0] * 40 + id[1]);
  }

  // Count number of octets
  let size = 0;
  for (let i = 0; i < id.length; i++) {
    let ident = id[i];
    for (size++; ident >= 0x80; ident >>= 7)
      size++;
  }

  const objid = Buffer.alloc(size);
  let offset = objid.length - 1;
  for (let i = id.length - 1; i >= 0; i--) {
    let ident = id[i];
    objid[offset--] = ident & 0x7f;
    while ((ident >>= 7) > 0)
      objid[offset--] = 0x80 | (ident & 0x7f);
  }

  return this._createEncoderBuffer(objid);
};

function two(num) {
  if (num < 10)
    return '0' + num;
  else
    return num;
}

DERNode.prototype._encodeTime = function encodeTime(time, tag) {
  let str;
  const date = new Date(time);

  if (tag === 'gentime') {
    str = [
      two(date.getUTCFullYear()),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else if (tag === 'utctime') {
    str = [
      two(date.getUTCFullYear() % 100),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else {
    this.reporter.error('Encoding ' + tag + ' time is not supported yet');
  }

  return this._encodeStr(str, 'octstr');
};

DERNode.prototype._encodeNull = function encodeNull() {
  return this._createEncoderBuffer('');
};

DERNode.prototype._encodeInt = function encodeInt(num, values) {
  if (typeof num === 'string') {
    if (!values)
      return this.reporter.error('String int or enum given, but no values map');
    if (!values.hasOwnProperty(num)) {
      return this.reporter.error('Values map doesn\'t contain: ' +
                                 JSON.stringify(num));
    }
    num = values[num];
  }

  // Bignum, assume big endian
  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
    const numArray = num.toArray();
    if (!num.sign && numArray[0] & 0x80) {
      numArray.unshift(0);
    }
    num = Buffer.from(numArray);
  }

  if (Buffer.isBuffer(num)) {
    let size = num.length;
    if (num.length === 0)
      size++;

    const out = Buffer.alloc(size);
    num.copy(out);
    if (num.length === 0)
      out[0] = 0;
    return this._createEncoderBuffer(out);
  }

  if (num < 0x80)
    return this._createEncoderBuffer(num);

  if (num < 0x100)
    return this._createEncoderBuffer([0, num]);

  let size = 1;
  for (let i = num; i >= 0x100; i >>= 8)
    size++;

  const out = new Array(size);
  for (let i = out.length - 1; i >= 0; i--) {
    out[i] = num & 0xff;
    num >>= 8;
  }
  if(out[0] & 0x80) {
    out.unshift(0);
  }

  return this._createEncoderBuffer(Buffer.from(out));
};

DERNode.prototype._encodeBool = function encodeBool(value) {
  return this._createEncoderBuffer(value ? 0xff : 0);
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getEncoder('der').tree;
};

DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
  const state = this._baseState;
  let i;
  if (state['default'] === null)
    return false;

  const data = dataBuffer.join();
  if (state.defaultBuffer === undefined)
    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();

  if (data.length !== state.defaultBuffer.length)
    return false;

  for (i=0; i < data.length; i++)
    if (data[i] !== state.defaultBuffer[i])
      return false;

  return true;
};

// Utility methods

function encodeTag(tag, primitive, cls, reporter) {
  let res;

  if (tag === 'seqof')
    tag = 'seq';
  else if (tag === 'setof')
    tag = 'set';

  if (der.tagByName.hasOwnProperty(tag))
    res = der.tagByName[tag];
  else if (typeof tag === 'number' && (tag | 0) === tag)
    res = tag;
  else
    return reporter.error('Unknown tag: ' + tag);

  if (res >= 0x1f)
    return reporter.error('Multi-octet tag encoding unsupported');

  if (!primitive)
    res |= 0x20;

  res |= (der.tagClassByName[cls || 'universal'] << 6);

  return res;
}

},{"../base/node":8,"../constants/der":10,"inherits":154,"safer-buffer":198}],16:[function(require,module,exports){
'use strict';

const encoders = exports;

encoders.der = require('./der');
encoders.pem = require('./pem');

},{"./der":15,"./pem":17}],17:[function(require,module,exports){
'use strict';

const inherits = require('inherits');

const DEREncoder = require('./der');

function PEMEncoder(entity) {
  DEREncoder.call(this, entity);
  this.enc = 'pem';
}
inherits(PEMEncoder, DEREncoder);
module.exports = PEMEncoder;

PEMEncoder.prototype.encode = function encode(data, options) {
  const buf = DEREncoder.prototype.encode.call(this, data);

  const p = buf.toString('base64');
  const out = [ '-----BEGIN ' + options.label + '-----' ];
  for (let i = 0; i < p.length; i += 64)
    out.push(p.slice(i, i + 64));
  out.push('-----END ' + options.label + '-----');
  return out.join('\n');
};

},{"./der":15,"inherits":154}],18:[function(require,module,exports){
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = require('buffer').Buffer;
    }
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);
        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex4Bits (string, index) {
    var c = string.charCodeAt(index);
    // 'A' - 'F'
    if (c >= 65 && c <= 70) {
      return c - 55;
    // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87;
    // '0' - '9'
    } else {
      return (c - 48) & 0xf;
    }
  }

  function parseHexByte (string, lowerBound, index) {
    var r = parseHex4Bits(string, index);
    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    // 24-bits chunks
    var off = 0;
    var j = 0;

    var w;
    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;
      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this.strip();
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is BN v4 instance
        r.strip();
      } else {
        // r is BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(typeof module === 'undefined' || module, this);

},{"buffer":27}],19:[function(require,module,exports){
(function (global){(function (){
'use strict';

var objectAssign = require('object-assign');

// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js
// original notice:

/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
function compare(a, b) {
  if (a === b) {
    return 0;
  }

  var x = a.length;
  var y = b.length;

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i];
      y = b[i];
      break;
    }
  }

  if (x < y) {
    return -1;
  }
  if (y < x) {
    return 1;
  }
  return 0;
}
function isBuffer(b) {
  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {
    return global.Buffer.isBuffer(b);
  }
  return !!(b != null && b._isBuffer);
}

// based on node assert, original notice:
// NB: The URL to the CommonJS spec is kept just for tradition.
//     node-assert has evolved a lot since then, both in API and behavior.

// http://wiki.commonjs.org/wiki/Unit_Testing/1.0
//
// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
//
// Originally from narwhal.js (http://narwhaljs.org)
// Copyright (c) 2009 Thomas Robinson <280north.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the 'Software'), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

var util = require('util/');
var hasOwn = Object.prototype.hasOwnProperty;
var pSlice = Array.prototype.slice;
var functionsHaveNames = (function () {
  return function foo() {}.name === 'foo';
}());
function pToString (obj) {
  return Object.prototype.toString.call(obj);
}
function isView(arrbuf) {
  if (isBuffer(arrbuf)) {
    return false;
  }
  if (typeof global.ArrayBuffer !== 'function') {
    return false;
  }
  if (typeof ArrayBuffer.isView === 'function') {
    return ArrayBuffer.isView(arrbuf);
  }
  if (!arrbuf) {
    return false;
  }
  if (arrbuf instanceof DataView) {
    return true;
  }
  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {
    return true;
  }
  return false;
}
// 1. The assert module provides functions that throw
// AssertionError's when particular conditions are not met. The
// assert module must conform to the following interface.

var assert = module.exports = ok;

// 2. The AssertionError is defined in assert.
// new assert.AssertionError({ message: message,
//                             actual: actual,
//                             expected: expected })

var regex = /\s*function\s+([^\(\s]*)\s*/;
// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js
function getName(func) {
  if (!util.isFunction(func)) {
    return;
  }
  if (functionsHaveNames) {
    return func.name;
  }
  var str = func.toString();
  var match = str.match(regex);
  return match && match[1];
}
assert.AssertionError = function AssertionError(options) {
  this.name = 'AssertionError';
  this.actual = options.actual;
  this.expected = options.expected;
  this.operator = options.operator;
  if (options.message) {
    this.message = options.message;
    this.generatedMessage = false;
  } else {
    this.message = getMessage(this);
    this.generatedMessage = true;
  }
  var stackStartFunction = options.stackStartFunction || fail;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, stackStartFunction);
  } else {
    // non v8 browsers so we can have a stacktrace
    var err = new Error();
    if (err.stack) {
      var out = err.stack;

      // try to strip useless frames
      var fn_name = getName(stackStartFunction);
      var idx = out.indexOf('\n' + fn_name);
      if (idx >= 0) {
        // once we have located the function frame
        // we need to strip out everything before it (and its line)
        var next_line = out.indexOf('\n', idx + 1);
        out = out.substring(next_line + 1);
      }

      this.stack = out;
    }
  }
};

// assert.AssertionError instanceof Error
util.inherits(assert.AssertionError, Error);

function truncate(s, n) {
  if (typeof s === 'string') {
    return s.length < n ? s : s.slice(0, n);
  } else {
    return s;
  }
}
function inspect(something) {
  if (functionsHaveNames || !util.isFunction(something)) {
    return util.inspect(something);
  }
  var rawname = getName(something);
  var name = rawname ? ': ' + rawname : '';
  return '[Function' +  name + ']';
}
function getMessage(self) {
  return truncate(inspect(self.actual), 128) + ' ' +
         self.operator + ' ' +
         truncate(inspect(self.expected), 128);
}

// At present only the three keys mentioned above are used and
// understood by the spec. Implementations or sub modules can pass
// other keys to the AssertionError's constructor - they will be
// ignored.

// 3. All of the following functions must throw an AssertionError
// when a corresponding condition is not met, with a message that
// may be undefined if not provided.  All assertion methods provide
// both the actual and expected values to the assertion error for
// display purposes.

function fail(actual, expected, message, operator, stackStartFunction) {
  throw new assert.AssertionError({
    message: message,
    actual: actual,
    expected: expected,
    operator: operator,
    stackStartFunction: stackStartFunction
  });
}

// EXTENSION! allows for well behaved errors defined elsewhere.
assert.fail = fail;

// 4. Pure assertion tests whether a value is truthy, as determined
// by !!guard.
// assert.ok(guard, message_opt);
// This statement is equivalent to assert.equal(true, !!guard,
// message_opt);. To test strictly for the value true, use
// assert.strictEqual(true, guard, message_opt);.

function ok(value, message) {
  if (!value) fail(value, true, message, '==', assert.ok);
}
assert.ok = ok;

// 5. The equality assertion tests shallow, coercive equality with
// ==.
// assert.equal(actual, expected, message_opt);

assert.equal = function equal(actual, expected, message) {
  if (actual != expected) fail(actual, expected, message, '==', assert.equal);
};

// 6. The non-equality assertion tests for whether two objects are not equal
// with != assert.notEqual(actual, expected, message_opt);

assert.notEqual = function notEqual(actual, expected, message) {
  if (actual == expected) {
    fail(actual, expected, message, '!=', assert.notEqual);
  }
};

// 7. The equivalence assertion tests a deep equality relation.
// assert.deepEqual(actual, expected, message_opt);

assert.deepEqual = function deepEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'deepEqual', assert.deepEqual);
  }
};

assert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);
  }
};

function _deepEqual(actual, expected, strict, memos) {
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;
  } else if (isBuffer(actual) && isBuffer(expected)) {
    return compare(actual, expected) === 0;

  // 7.2. If the expected value is a Date object, the actual value is
  // equivalent if it is also a Date object that refers to the same time.
  } else if (util.isDate(actual) && util.isDate(expected)) {
    return actual.getTime() === expected.getTime();

  // 7.3 If the expected value is a RegExp object, the actual value is
  // equivalent if it is also a RegExp object with the same source and
  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {
    return actual.source === expected.source &&
           actual.global === expected.global &&
           actual.multiline === expected.multiline &&
           actual.lastIndex === expected.lastIndex &&
           actual.ignoreCase === expected.ignoreCase;

  // 7.4. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if ((actual === null || typeof actual !== 'object') &&
             (expected === null || typeof expected !== 'object')) {
    return strict ? actual === expected : actual == expected;

  // If both values are instances of typed arrays, wrap their underlying
  // ArrayBuffers in a Buffer each to increase performance
  // This optimization requires the arrays to have the same type as checked by
  // Object.prototype.toString (aka pToString). Never perform binary
  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their
  // bit patterns are not identical.
  } else if (isView(actual) && isView(expected) &&
             pToString(actual) === pToString(expected) &&
             !(actual instanceof Float32Array ||
               actual instanceof Float64Array)) {
    return compare(new Uint8Array(actual.buffer),
                   new Uint8Array(expected.buffer)) === 0;

  // 7.5 For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else if (isBuffer(actual) !== isBuffer(expected)) {
    return false;
  } else {
    memos = memos || {actual: [], expected: []};

    var actualIndex = memos.actual.indexOf(actual);
    if (actualIndex !== -1) {
      if (actualIndex === memos.expected.indexOf(expected)) {
        return true;
      }
    }

    memos.actual.push(actual);
    memos.expected.push(expected);

    return objEquiv(actual, expected, strict, memos);
  }
}

function isArguments(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
}

function objEquiv(a, b, strict, actualVisitedObjects) {
  if (a === null || a === undefined || b === null || b === undefined)
    return false;
  // if one is a primitive, the other must be same
  if (util.isPrimitive(a) || util.isPrimitive(b))
    return a === b;
  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))
    return false;
  var aIsArgs = isArguments(a);
  var bIsArgs = isArguments(b);
  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))
    return false;
  if (aIsArgs) {
    a = pSlice.call(a);
    b = pSlice.call(b);
    return _deepEqual(a, b, strict);
  }
  var ka = objectKeys(a);
  var kb = objectKeys(b);
  var key, i;
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length !== kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] !== kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))
      return false;
  }
  return true;
}

// 8. The non-equivalence assertion tests for any deep inequality.
// assert.notDeepEqual(actual, expected, message_opt);

assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, false)) {
    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);
  }
};

assert.notDeepStrictEqual = notDeepStrictEqual;
function notDeepStrictEqual(actual, expected, message) {
  if (_deepEqual(actual, expected, true)) {
    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);
  }
}


// 9. The strict equality assertion tests strict equality, as determined by ===.
// assert.strictEqual(actual, expected, message_opt);

assert.strictEqual = function strictEqual(actual, expected, message) {
  if (actual !== expected) {
    fail(actual, expected, message, '===', assert.strictEqual);
  }
};

// 10. The strict non-equality assertion tests for strict inequality, as
// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);

assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
  if (actual === expected) {
    fail(actual, expected, message, '!==', assert.notStrictEqual);
  }
};

function expectedException(actual, expected) {
  if (!actual || !expected) {
    return false;
  }

  if (Object.prototype.toString.call(expected) == '[object RegExp]') {
    return expected.test(actual);
  }

  try {
    if (actual instanceof expected) {
      return true;
    }
  } catch (e) {
    // Ignore.  The instanceof check doesn't work for arrow functions.
  }

  if (Error.isPrototypeOf(expected)) {
    return false;
  }

  return expected.call({}, actual) === true;
}

function _tryBlock(block) {
  var error;
  try {
    block();
  } catch (e) {
    error = e;
  }
  return error;
}

function _throws(shouldThrow, block, expected, message) {
  var actual;

  if (typeof block !== 'function') {
    throw new TypeError('"block" argument must be a function');
  }

  if (typeof expected === 'string') {
    message = expected;
    expected = null;
  }

  actual = _tryBlock(block);

  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +
            (message ? ' ' + message : '.');

  if (shouldThrow && !actual) {
    fail(actual, expected, 'Missing expected exception' + message);
  }

  var userProvidedMessage = typeof message === 'string';
  var isUnwantedException = !shouldThrow && util.isError(actual);
  var isUnexpectedException = !shouldThrow && actual && !expected;

  if ((isUnwantedException &&
      userProvidedMessage &&
      expectedException(actual, expected)) ||
      isUnexpectedException) {
    fail(actual, expected, 'Got unwanted exception' + message);
  }

  if ((shouldThrow && actual && expected &&
      !expectedException(actual, expected)) || (!shouldThrow && actual)) {
    throw actual;
  }
}

// 11. Expected to throw an error:
// assert.throws(block, Error_opt, message_opt);

assert.throws = function(block, /*optional*/error, /*optional*/message) {
  _throws(true, block, error, message);
};

// EXTENSION! This is annoying to write outside this module.
assert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {
  _throws(false, block, error, message);
};

assert.ifError = function(err) { if (err) throw err; };

// Expose a strict only variant of assert
function strict(value, message) {
  if (!value) fail(value, true, message, '==', strict);
}
assert.strict = objectAssign(strict, assert, {
  equal: assert.strictEqual,
  deepEqual: assert.deepStrictEqual,
  notEqual: assert.notStrictEqual,
  notDeepEqual: assert.notDeepStrictEqual
});
assert.strict.strict = assert.strict;

var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    if (hasOwn.call(obj, key)) keys.push(key);
  }
  return keys;
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"object-assign":163,"util/":22}],20:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],21:[function(require,module,exports){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],22:[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./support/isBuffer":21,"_process":186,"inherits":20}],23:[function(require,module,exports){
(function (global){(function (){
'use strict';

var possibleNames = [
	'BigInt64Array',
	'BigUint64Array',
	'Float32Array',
	'Float64Array',
	'Int16Array',
	'Int32Array',
	'Int8Array',
	'Uint16Array',
	'Uint32Array',
	'Uint8Array',
	'Uint8ClampedArray'
];

var g = typeof globalThis === 'undefined' ? global : globalThis;

module.exports = function availableTypedArrays() {
	var out = [];
	for (var i = 0; i < possibleNames.length; i++) {
		if (typeof g[possibleNames[i]] === 'function') {
			out[out.length] = possibleNames[i];
		}
	}
	return out;
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],24:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],25:[function(require,module,exports){
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = require('buffer').Buffer;
    }
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);
        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [number & 0x3ffffff];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [0];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this._strip();
  };

  function parseHex4Bits (string, index) {
    var c = string.charCodeAt(index);
    // '0' - '9'
    if (c >= 48 && c <= 57) {
      return c - 48;
    // 'A' - 'F'
    } else if (c >= 65 && c <= 70) {
      return c - 55;
    // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87;
    } else {
      assert(false, 'Invalid character in ' + string);
    }
  }

  function parseHexByte (string, lowerBound, index) {
    var r = parseHex4Bits(string, index);
    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    // 24-bits chunks
    var off = 0;
    var j = 0;

    var w;
    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;
      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this._strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var b = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        b = c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        b = c - 17 + 0xa;

      // '0' - '9'
      } else {
        b = c;
      }
      assert(c >= 0 && b < mul, 'Invalid character');
      r += b;
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [0];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this._strip();
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  function move (dest, src) {
    dest.words = src.words;
    dest.length = src.length;
    dest.negative = src.negative;
    dest.red = src.red;
  }

  BN.prototype._move = function _move (dest) {
    move(dest, this);
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype._strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  // Check Symbol.for because not everywhere where Symbol defined
  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {
    try {
      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;
    } catch (e) {
      BN.prototype.inspect = inspect;
    }
  } else {
    BN.prototype.inspect = inspect;
  }

  function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  }

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modrn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16, 2);
  };

  if (Buffer) {
    BN.prototype.toBuffer = function toBuffer (endian, length) {
      return this.toArrayLike(Buffer, endian, length);
    };
  }

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  var allocate = function allocate (ArrayType, size) {
    if (ArrayType.allocUnsafe) {
      return ArrayType.allocUnsafe(size);
    }
    return new ArrayType(size);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    this._strip();

    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    var res = allocate(ArrayType, reqLength);
    var postfix = endian === 'le' ? 'LE' : 'BE';
    this['_toArrayLike' + postfix](res, byteLength);
    return res;
  };

  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {
    var position = 0;
    var carry = 0;

    for (var i = 0, shift = 0; i < this.length; i++) {
      var word = (this.words[i] << shift) | carry;

      res[position++] = word & 0xff;
      if (position < res.length) {
        res[position++] = (word >> 8) & 0xff;
      }
      if (position < res.length) {
        res[position++] = (word >> 16) & 0xff;
      }

      if (shift === 6) {
        if (position < res.length) {
          res[position++] = (word >> 24) & 0xff;
        }
        carry = 0;
        shift = 0;
      } else {
        carry = word >>> 24;
        shift += 2;
      }
    }

    if (position < res.length) {
      res[position++] = carry;

      while (position < res.length) {
        res[position++] = 0;
      }
    }
  };

  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {
    var position = res.length - 1;
    var carry = 0;

    for (var i = 0, shift = 0; i < this.length; i++) {
      var word = (this.words[i] << shift) | carry;

      res[position--] = word & 0xff;
      if (position >= 0) {
        res[position--] = (word >> 8) & 0xff;
      }
      if (position >= 0) {
        res[position--] = (word >> 16) & 0xff;
      }

      if (shift === 6) {
        if (position >= 0) {
          res[position--] = (word >> 24) & 0xff;
        }
        carry = 0;
        shift = 0;
      } else {
        carry = word >>> 24;
        shift += 2;
      }
    }

    if (position >= 0) {
      res[position--] = carry;

      while (position >= 0) {
        res[position--] = 0;
      }
    }
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] >>> wbit) & 0x01;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this._strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this._strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this._strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this._strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this._strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this._strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out._strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out._strip();
  }

  function jumboMulTo (self, num, out) {
    // Temporary disable, see https://github.com/indutny/bn.js/issues/211
    // var fftm = new FFTM();
    // return fftm.mulp(self, num, out);
    return bigMulTo(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out._strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return isNegNum ? this.ineg() : this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this._strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this._strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this._strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) <= num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this._strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this._strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this._strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q._strip();
    }
    a._strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modrn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modrn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modrn = function modrn (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return isNegNum ? -acc : acc;
  };

  // WARNING: DEPRECATED
  BN.prototype.modn = function modn (num) {
    return this.modrn(num);
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    var isNegNum = num < 0;
    if (isNegNum) num = -num;

    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    this._strip();
    return isNegNum ? this.ineg() : this;
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this._strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is a BN v4 instance
        r.strip();
      } else {
        // r is a BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);

    move(a, a.umod(this.m)._forceRed(this));
    return a;
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(typeof module === 'undefined' || module, this);

},{"buffer":27}],26:[function(require,module,exports){
var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
  if (this.rand.getBytes)
    return this.rand.getBytes(n);

  var res = new Uint8Array(n);
  for (var i = 0; i < res.length; i++)
    res[i] = this.rand.getByte();
  return res;
};

if (typeof self === 'object') {
  if (self.crypto && self.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (self.msCrypto && self.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.msCrypto.getRandomValues(arr);
      return arr;
    };

  // Safari's WebWorkers do not have `crypto`
  } else if (typeof window === 'object') {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker with no crypto support
  try {
    var crypto = require('crypto');
    if (typeof crypto.randomBytes !== 'function')
      throw new Error('Not supported');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
  }
}

},{"crypto":27}],27:[function(require,module,exports){
arguments[4][3][0].apply(exports,arguments)
},{"dup":3}],28:[function(require,module,exports){
// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec
// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/

var Buffer = require('safe-buffer').Buffer

function asUInt32Array (buf) {
  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)

  var len = (buf.length / 4) | 0
  var out = new Array(len)

  for (var i = 0; i < len; i++) {
    out[i] = buf.readUInt32BE(i * 4)
  }

  return out
}

function scrubVec (v) {
  for (var i = 0; i < v.length; v++) {
    v[i] = 0
  }
}

function cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {
  var SUB_MIX0 = SUB_MIX[0]
  var SUB_MIX1 = SUB_MIX[1]
  var SUB_MIX2 = SUB_MIX[2]
  var SUB_MIX3 = SUB_MIX[3]

  var s0 = M[0] ^ keySchedule[0]
  var s1 = M[1] ^ keySchedule[1]
  var s2 = M[2] ^ keySchedule[2]
  var s3 = M[3] ^ keySchedule[3]
  var t0, t1, t2, t3
  var ksRow = 4

  for (var round = 1; round < nRounds; round++) {
    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]
    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]
    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]
    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]
    s0 = t0
    s1 = t1
    s2 = t2
    s3 = t3
  }

  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]
  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]
  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]
  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]
  t0 = t0 >>> 0
  t1 = t1 >>> 0
  t2 = t2 >>> 0
  t3 = t3 >>> 0

  return [t0, t1, t2, t3]
}

// AES constants
var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]
var G = (function () {
  // Compute double table
  var d = new Array(256)
  for (var j = 0; j < 256; j++) {
    if (j < 128) {
      d[j] = j << 1
    } else {
      d[j] = (j << 1) ^ 0x11b
    }
  }

  var SBOX = []
  var INV_SBOX = []
  var SUB_MIX = [[], [], [], []]
  var INV_SUB_MIX = [[], [], [], []]

  // Walk GF(2^8)
  var x = 0
  var xi = 0
  for (var i = 0; i < 256; ++i) {
    // Compute sbox
    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)
    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63
    SBOX[x] = sx
    INV_SBOX[sx] = x

    // Compute multiplication
    var x2 = d[x]
    var x4 = d[x2]
    var x8 = d[x4]

    // Compute sub bytes, mix columns tables
    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)
    SUB_MIX[0][x] = (t << 24) | (t >>> 8)
    SUB_MIX[1][x] = (t << 16) | (t >>> 16)
    SUB_MIX[2][x] = (t << 8) | (t >>> 24)
    SUB_MIX[3][x] = t

    // Compute inv sub bytes, inv mix columns tables
    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)
    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)
    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)
    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)
    INV_SUB_MIX[3][sx] = t

    if (x === 0) {
      x = xi = 1
    } else {
      x = x2 ^ d[d[d[x8 ^ x2]]]
      xi ^= d[d[xi]]
    }
  }

  return {
    SBOX: SBOX,
    INV_SBOX: INV_SBOX,
    SUB_MIX: SUB_MIX,
    INV_SUB_MIX: INV_SUB_MIX
  }
})()

function AES (key) {
  this._key = asUInt32Array(key)
  this._reset()
}

AES.blockSize = 4 * 4
AES.keySize = 256 / 8
AES.prototype.blockSize = AES.blockSize
AES.prototype.keySize = AES.keySize
AES.prototype._reset = function () {
  var keyWords = this._key
  var keySize = keyWords.length
  var nRounds = keySize + 6
  var ksRows = (nRounds + 1) * 4

  var keySchedule = []
  for (var k = 0; k < keySize; k++) {
    keySchedule[k] = keyWords[k]
  }

  for (k = keySize; k < ksRows; k++) {
    var t = keySchedule[k - 1]

    if (k % keySize === 0) {
      t = (t << 8) | (t >>> 24)
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])

      t ^= RCON[(k / keySize) | 0] << 24
    } else if (keySize > 6 && k % keySize === 4) {
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])
    }

    keySchedule[k] = keySchedule[k - keySize] ^ t
  }

  var invKeySchedule = []
  for (var ik = 0; ik < ksRows; ik++) {
    var ksR = ksRows - ik
    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]

    if (ik < 4 || ksR <= 4) {
      invKeySchedule[ik] = tt
    } else {
      invKeySchedule[ik] =
        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^
        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^
        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^
        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]
    }
  }

  this._nRounds = nRounds
  this._keySchedule = keySchedule
  this._invKeySchedule = invKeySchedule
}

AES.prototype.encryptBlockRaw = function (M) {
  M = asUInt32Array(M)
  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)
}

AES.prototype.encryptBlock = function (M) {
  var out = this.encryptBlockRaw(M)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}

AES.prototype.decryptBlock = function (M) {
  M = asUInt32Array(M)

  // swap
  var m1 = M[1]
  M[1] = M[3]
  M[3] = m1

  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[3], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[1], 12)
  return buf
}

AES.prototype.scrub = function () {
  scrubVec(this._keySchedule)
  scrubVec(this._invKeySchedule)
  scrubVec(this._key)
}

module.exports.AES = AES

},{"safe-buffer":197}],29:[function(require,module,exports){
var aes = require('./aes')
var Buffer = require('safe-buffer').Buffer
var Transform = require('cipher-base')
var inherits = require('inherits')
var GHASH = require('./ghash')
var xor = require('buffer-xor')
var incr32 = require('./incr32')

function xorTest (a, b) {
  var out = 0
  if (a.length !== b.length) out++

  var len = Math.min(a.length, b.length)
  for (var i = 0; i < len; ++i) {
    out += (a[i] ^ b[i])
  }

  return out
}

function calcIv (self, iv, ck) {
  if (iv.length === 12) {
    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])
    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])
  }
  var ghash = new GHASH(ck)
  var len = iv.length
  var toPad = len % 16
  ghash.update(iv)
  if (toPad) {
    toPad = 16 - toPad
    ghash.update(Buffer.alloc(toPad, 0))
  }
  ghash.update(Buffer.alloc(8, 0))
  var ivBits = len * 8
  var tail = Buffer.alloc(8)
  tail.writeUIntBE(ivBits, 0, 8)
  ghash.update(tail)
  self._finID = ghash.state
  var out = Buffer.from(self._finID)
  incr32(out)
  return out
}
function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  var h = Buffer.alloc(4, 0)

  this._cipher = new aes.AES(key)
  var ck = this._cipher.encryptBlock(h)
  this._ghash = new GHASH(ck)
  iv = calcIv(this, iv, ck)

  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._alen = 0
  this._len = 0
  this._mode = mode

  this._authTag = null
  this._called = false
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  if (!this._called && this._alen) {
    var rump = 16 - (this._alen % 16)
    if (rump < 16) {
      rump = Buffer.alloc(rump, 0)
      this._ghash.update(rump)
    }
  }

  this._called = true
  var out = this._mode.encrypt(this, chunk)
  if (this._decrypt) {
    this._ghash.update(chunk)
  } else {
    this._ghash.update(out)
  }
  this._len += chunk.length
  return out
}

StreamCipher.prototype._final = function () {
  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')

  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))
  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')

  this._authTag = tag
  this._cipher.scrub()
}

StreamCipher.prototype.getAuthTag = function getAuthTag () {
  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')

  return this._authTag
}

StreamCipher.prototype.setAuthTag = function setAuthTag (tag) {
  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')

  this._authTag = tag
}

StreamCipher.prototype.setAAD = function setAAD (buf) {
  if (this._called) throw new Error('Attempting to set AAD in unsupported state')

  this._ghash.update(buf)
  this._alen += buf.length
}

module.exports = StreamCipher

},{"./aes":28,"./ghash":33,"./incr32":34,"buffer-xor":72,"cipher-base":76,"inherits":154,"safe-buffer":197}],30:[function(require,module,exports){
var ciphers = require('./encrypter')
var deciphers = require('./decrypter')
var modes = require('./modes/list.json')

function getCiphers () {
  return Object.keys(modes)
}

exports.createCipher = exports.Cipher = ciphers.createCipher
exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv
exports.createDecipher = exports.Decipher = deciphers.createDecipher
exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers

},{"./decrypter":31,"./encrypter":32,"./modes/list.json":42}],31:[function(require,module,exports){
var AuthCipher = require('./authCipher')
var Buffer = require('safe-buffer').Buffer
var MODES = require('./modes')
var StreamCipher = require('./streamCipher')
var Transform = require('cipher-base')
var aes = require('./aes')
var ebtk = require('evp_bytestokey')
var inherits = require('inherits')

function Decipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._last = void 0
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Decipher, Transform)

Decipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get(this._autopadding))) {
    thing = this._mode.decrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}

Decipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    return unpad(this._mode.decrypt(this, chunk))
  } else if (chunk) {
    throw new Error('data not multiple of block length')
  }
}

Decipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function (autoPadding) {
  var out
  if (autoPadding) {
    if (this.cache.length > 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  } else {
    if (this.cache.length >= 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  }

  return null
}

Splitter.prototype.flush = function () {
  if (this.cache.length) return this.cache
}

function unpad (last) {
  var padded = last[15]
  if (padded < 1 || padded > 16) {
    throw new Error('unable to decrypt data')
  }
  var i = -1
  while (++i < padded) {
    if (last[(i + (16 - padded))] !== padded) {
      throw new Error('unable to decrypt data')
    }
  }
  if (padded === 16) return

  return last.slice(0, 16 - padded)
}

function createDecipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv, true)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv, true)
  }

  return new Decipher(config.module, password, iv)
}

function createDecipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createDecipheriv(suite, keys.key, keys.iv)
}

exports.createDecipher = createDecipher
exports.createDecipheriv = createDecipheriv

},{"./aes":28,"./authCipher":29,"./modes":41,"./streamCipher":44,"cipher-base":76,"evp_bytestokey":115,"inherits":154,"safe-buffer":197}],32:[function(require,module,exports){
var MODES = require('./modes')
var AuthCipher = require('./authCipher')
var Buffer = require('safe-buffer').Buffer
var StreamCipher = require('./streamCipher')
var Transform = require('cipher-base')
var aes = require('./aes')
var ebtk = require('evp_bytestokey')
var inherits = require('inherits')

function Cipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Cipher, Transform)

Cipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []

  while ((chunk = this._cache.get())) {
    thing = this._mode.encrypt(this, chunk)
    out.push(thing)
  }

  return Buffer.concat(out)
}

var PADDING = Buffer.alloc(16, 0x10)

Cipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    chunk = this._mode.encrypt(this, chunk)
    this._cipher.scrub()
    return chunk
  }

  if (!chunk.equals(PADDING)) {
    this._cipher.scrub()
    throw new Error('data not multiple of block length')
  }
}

Cipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function () {
  if (this.cache.length > 15) {
    var out = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    return out
  }
  return null
}

Splitter.prototype.flush = function () {
  var len = 16 - this.cache.length
  var padBuff = Buffer.allocUnsafe(len)

  var i = -1
  while (++i < len) {
    padBuff.writeUInt8(len, i)
  }

  return Buffer.concat([this.cache, padBuff])
}

function createCipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv)
  }

  return new Cipher(config.module, password, iv)
}

function createCipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createCipheriv(suite, keys.key, keys.iv)
}

exports.createCipheriv = createCipheriv
exports.createCipher = createCipher

},{"./aes":28,"./authCipher":29,"./modes":41,"./streamCipher":44,"cipher-base":76,"evp_bytestokey":115,"inherits":154,"safe-buffer":197}],33:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var ZEROES = Buffer.alloc(16, 0)

function toArray (buf) {
  return [
    buf.readUInt32BE(0),
    buf.readUInt32BE(4),
    buf.readUInt32BE(8),
    buf.readUInt32BE(12)
  ]
}

function fromArray (out) {
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0] >>> 0, 0)
  buf.writeUInt32BE(out[1] >>> 0, 4)
  buf.writeUInt32BE(out[2] >>> 0, 8)
  buf.writeUInt32BE(out[3] >>> 0, 12)
  return buf
}

function GHASH (key) {
  this.h = key
  this.state = Buffer.alloc(16, 0)
  this.cache = Buffer.allocUnsafe(0)
}

// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash = function (block) {
  var i = -1
  while (++i < block.length) {
    this.state[i] ^= block[i]
  }
  this._multiply()
}

GHASH.prototype._multiply = function () {
  var Vi = toArray(this.h)
  var Zi = [0, 0, 0, 0]
  var j, xi, lsbVi
  var i = -1
  while (++i < 128) {
    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0
    if (xi) {
      // Z_i+1 = Z_i ^ V_i
      Zi[0] ^= Vi[0]
      Zi[1] ^= Vi[1]
      Zi[2] ^= Vi[2]
      Zi[3] ^= Vi[3]
    }

    // Store the value of LSB(V_i)
    lsbVi = (Vi[3] & 1) !== 0

    // V_i+1 = V_i >> 1
    for (j = 3; j > 0; j--) {
      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)
    }
    Vi[0] = Vi[0] >>> 1

    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
    if (lsbVi) {
      Vi[0] = Vi[0] ^ (0xe1 << 24)
    }
  }
  this.state = fromArray(Zi)
}

GHASH.prototype.update = function (buf) {
  this.cache = Buffer.concat([this.cache, buf])
  var chunk
  while (this.cache.length >= 16) {
    chunk = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    this.ghash(chunk)
  }
}

GHASH.prototype.final = function (abl, bl) {
  if (this.cache.length) {
    this.ghash(Buffer.concat([this.cache, ZEROES], 16))
  }

  this.ghash(fromArray([0, abl, 0, bl]))
  return this.state
}

module.exports = GHASH

},{"safe-buffer":197}],34:[function(require,module,exports){
function incr32 (iv) {
  var len = iv.length
  var item
  while (len--) {
    item = iv.readUInt8(len)
    if (item === 255) {
      iv.writeUInt8(0, len)
    } else {
      item++
      iv.writeUInt8(item, len)
      break
    }
  }
}
module.exports = incr32

},{}],35:[function(require,module,exports){
var xor = require('buffer-xor')

exports.encrypt = function (self, block) {
  var data = xor(block, self._prev)

  self._prev = self._cipher.encryptBlock(data)
  return self._prev
}

exports.decrypt = function (self, block) {
  var pad = self._prev

  self._prev = block
  var out = self._cipher.decryptBlock(block)

  return xor(out, pad)
}

},{"buffer-xor":72}],36:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var xor = require('buffer-xor')

function encryptStart (self, data, decrypt) {
  var len = data.length
  var out = xor(data, self._cache)
  self._cache = self._cache.slice(len)
  self._prev = Buffer.concat([self._prev, decrypt ? data : out])
  return out
}

exports.encrypt = function (self, data, decrypt) {
  var out = Buffer.allocUnsafe(0)
  var len

  while (data.length) {
    if (self._cache.length === 0) {
      self._cache = self._cipher.encryptBlock(self._prev)
      self._prev = Buffer.allocUnsafe(0)
    }

    if (self._cache.length <= data.length) {
      len = self._cache.length
      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])
      data = data.slice(len)
    } else {
      out = Buffer.concat([out, encryptStart(self, data, decrypt)])
      break
    }
  }

  return out
}

},{"buffer-xor":72,"safe-buffer":197}],37:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad
  var i = -1
  var len = 8
  var out = 0
  var bit, value
  while (++i < len) {
    pad = self._cipher.encryptBlock(self._prev)
    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0
    value = pad[0] ^ bit
    out += ((value & 0x80) >> (i % 8))
    self._prev = shiftIn(self._prev, decrypt ? bit : value)
  }
  return out
}

function shiftIn (buffer, value) {
  var len = buffer.length
  var i = -1
  var out = Buffer.allocUnsafe(buffer.length)
  buffer = Buffer.concat([buffer, Buffer.from([value])])

  while (++i < len) {
    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)
  }

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}

},{"safe-buffer":197}],38:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad = self._cipher.encryptBlock(self._prev)
  var out = pad[0] ^ byteParam

  self._prev = Buffer.concat([
    self._prev.slice(1),
    Buffer.from([decrypt ? byteParam : out])
  ])

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}

},{"safe-buffer":197}],39:[function(require,module,exports){
var xor = require('buffer-xor')
var Buffer = require('safe-buffer').Buffer
var incr32 = require('../incr32')

function getBlock (self) {
  var out = self._cipher.encryptBlockRaw(self._prev)
  incr32(self._prev)
  return out
}

var blockSize = 16
exports.encrypt = function (self, chunk) {
  var chunkNum = Math.ceil(chunk.length / blockSize)
  var start = self._cache.length
  self._cache = Buffer.concat([
    self._cache,
    Buffer.allocUnsafe(chunkNum * blockSize)
  ])
  for (var i = 0; i < chunkNum; i++) {
    var out = getBlock(self)
    var offset = start + i * blockSize
    self._cache.writeUInt32BE(out[0], offset + 0)
    self._cache.writeUInt32BE(out[1], offset + 4)
    self._cache.writeUInt32BE(out[2], offset + 8)
    self._cache.writeUInt32BE(out[3], offset + 12)
  }
  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

},{"../incr32":34,"buffer-xor":72,"safe-buffer":197}],40:[function(require,module,exports){
exports.encrypt = function (self, block) {
  return self._cipher.encryptBlock(block)
}

exports.decrypt = function (self, block) {
  return self._cipher.decryptBlock(block)
}

},{}],41:[function(require,module,exports){
var modeModules = {
  ECB: require('./ecb'),
  CBC: require('./cbc'),
  CFB: require('./cfb'),
  CFB8: require('./cfb8'),
  CFB1: require('./cfb1'),
  OFB: require('./ofb'),
  CTR: require('./ctr'),
  GCM: require('./ctr')
}

var modes = require('./list.json')

for (var key in modes) {
  modes[key].module = modeModules[modes[key].mode]
}

module.exports = modes

},{"./cbc":35,"./cfb":36,"./cfb1":37,"./cfb8":38,"./ctr":39,"./ecb":40,"./list.json":42,"./ofb":43}],42:[function(require,module,exports){
module.exports={
  "aes-128-ecb": {
    "cipher": "AES",
    "key": 128,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-192-ecb": {
    "cipher": "AES",
    "key": 192,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-256-ecb": {
    "cipher": "AES",
    "key": 256,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-128-cbc": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-192-cbc": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-256-cbc": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes128": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes192": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes256": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-128-cfb": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-192-cfb": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-256-cfb": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-128-cfb8": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-192-cfb8": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-256-cfb8": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-128-cfb1": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-192-cfb1": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-256-cfb1": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-128-ofb": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-192-ofb": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-256-ofb": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-128-ctr": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-192-ctr": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-256-ctr": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-128-gcm": {
    "cipher": "AES",
    "key": 128,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  },
  "aes-192-gcm": {
    "cipher": "AES",
    "key": 192,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  },
  "aes-256-gcm": {
    "cipher": "AES",
    "key": 256,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  }
}

},{}],43:[function(require,module,exports){
(function (Buffer){(function (){
var xor = require('buffer-xor')

function getBlock (self) {
  self._prev = self._cipher.encryptBlock(self._prev)
  return self._prev
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }

  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":73,"buffer-xor":72}],44:[function(require,module,exports){
var aes = require('./aes')
var Buffer = require('safe-buffer').Buffer
var Transform = require('cipher-base')
var inherits = require('inherits')

function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._mode = mode
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  return this._mode.encrypt(this, chunk, this._decrypt)
}

StreamCipher.prototype._final = function () {
  this._cipher.scrub()
}

module.exports = StreamCipher

},{"./aes":28,"cipher-base":76,"inherits":154,"safe-buffer":197}],45:[function(require,module,exports){
var DES = require('browserify-des')
var aes = require('browserify-aes/browser')
var aesModes = require('browserify-aes/modes')
var desModes = require('browserify-des/modes')
var ebtk = require('evp_bytestokey')

function createCipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createCipheriv(suite, keys.key, keys.iv)
}

function createDecipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createDecipheriv(suite, keys.key, keys.iv)
}

function createCipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })

  throw new TypeError('invalid suite type')
}

function createDecipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })

  throw new TypeError('invalid suite type')
}

function getCiphers () {
  return Object.keys(desModes).concat(aes.getCiphers())
}

exports.createCipher = exports.Cipher = createCipher
exports.createCipheriv = exports.Cipheriv = createCipheriv
exports.createDecipher = exports.Decipher = createDecipher
exports.createDecipheriv = exports.Decipheriv = createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers

},{"browserify-aes/browser":30,"browserify-aes/modes":41,"browserify-des":46,"browserify-des/modes":47,"evp_bytestokey":115}],46:[function(require,module,exports){
var CipherBase = require('cipher-base')
var des = require('des.js')
var inherits = require('inherits')
var Buffer = require('safe-buffer').Buffer

var modes = {
  'des-ede3-cbc': des.CBC.instantiate(des.EDE),
  'des-ede3': des.EDE,
  'des-ede-cbc': des.CBC.instantiate(des.EDE),
  'des-ede': des.EDE,
  'des-cbc': des.CBC.instantiate(des.DES),
  'des-ecb': des.DES
}
modes.des = modes['des-cbc']
modes.des3 = modes['des-ede3-cbc']
module.exports = DES
inherits(DES, CipherBase)
function DES (opts) {
  CipherBase.call(this)
  var modeName = opts.mode.toLowerCase()
  var mode = modes[modeName]
  var type
  if (opts.decrypt) {
    type = 'decrypt'
  } else {
    type = 'encrypt'
  }
  var key = opts.key
  if (!Buffer.isBuffer(key)) {
    key = Buffer.from(key)
  }
  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {
    key = Buffer.concat([key, key.slice(0, 8)])
  }
  var iv = opts.iv
  if (!Buffer.isBuffer(iv)) {
    iv = Buffer.from(iv)
  }
  this._des = mode.create({
    key: key,
    iv: iv,
    type: type
  })
}
DES.prototype._update = function (data) {
  return Buffer.from(this._des.update(data))
}
DES.prototype._final = function () {
  return Buffer.from(this._des.final())
}

},{"cipher-base":76,"des.js":85,"inherits":154,"safe-buffer":197}],47:[function(require,module,exports){
exports['des-ecb'] = {
  key: 8,
  iv: 0
}
exports['des-cbc'] = exports.des = {
  key: 8,
  iv: 8
}
exports['des-ede3-cbc'] = exports.des3 = {
  key: 24,
  iv: 8
}
exports['des-ede3'] = {
  key: 24,
  iv: 0
}
exports['des-ede-cbc'] = {
  key: 16,
  iv: 8
}
exports['des-ede'] = {
  key: 16,
  iv: 0
}

},{}],48:[function(require,module,exports){
(function (Buffer){(function (){
var BN = require('bn.js')
var randomBytes = require('randombytes')

function blind (priv) {
  var r = getr(priv)
  var blinder = r.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed()
  return { blinder: blinder, unblinder: r.invm(priv.modulus) }
}

function getr (priv) {
  var len = priv.modulus.byteLength()
  var r
  do {
    r = new BN(randomBytes(len))
  } while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2))
  return r
}

function crt (msg, priv) {
  var blinds = blind(priv)
  var len = priv.modulus.byteLength()
  var blinded = new BN(msg).mul(blinds.blinder).umod(priv.modulus)
  var c1 = blinded.toRed(BN.mont(priv.prime1))
  var c2 = blinded.toRed(BN.mont(priv.prime2))
  var qinv = priv.coefficient
  var p = priv.prime1
  var q = priv.prime2
  var m1 = c1.redPow(priv.exponent1).fromRed()
  var m2 = c2.redPow(priv.exponent2).fromRed()
  var h = m1.isub(m2).imul(qinv).umod(p).imul(q)
  return m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(Buffer, 'be', len)
}
crt.getr = getr

module.exports = crt

}).call(this)}).call(this,require("buffer").Buffer)
},{"bn.js":25,"buffer":73,"randombytes":194}],49:[function(require,module,exports){
module.exports = require('./browser/algorithms.json')

},{"./browser/algorithms.json":50}],50:[function(require,module,exports){
module.exports={
  "sha224WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha224",
    "id": "302d300d06096086480165030402040500041c"
  },
  "RSA-SHA224": {
    "sign": "ecdsa/rsa",
    "hash": "sha224",
    "id": "302d300d06096086480165030402040500041c"
  },
  "sha256WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha256",
    "id": "3031300d060960864801650304020105000420"
  },
  "RSA-SHA256": {
    "sign": "ecdsa/rsa",
    "hash": "sha256",
    "id": "3031300d060960864801650304020105000420"
  },
  "sha384WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha384",
    "id": "3041300d060960864801650304020205000430"
  },
  "RSA-SHA384": {
    "sign": "ecdsa/rsa",
    "hash": "sha384",
    "id": "3041300d060960864801650304020205000430"
  },
  "sha512WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha512",
    "id": "3051300d060960864801650304020305000440"
  },
  "RSA-SHA512": {
    "sign": "ecdsa/rsa",
    "hash": "sha512",
    "id": "3051300d060960864801650304020305000440"
  },
  "RSA-SHA1": {
    "sign": "rsa",
    "hash": "sha1",
    "id": "3021300906052b0e03021a05000414"
  },
  "ecdsa-with-SHA1": {
    "sign": "ecdsa",
    "hash": "sha1",
    "id": ""
  },
  "sha256": {
    "sign": "ecdsa",
    "hash": "sha256",
    "id": ""
  },
  "sha224": {
    "sign": "ecdsa",
    "hash": "sha224",
    "id": ""
  },
  "sha384": {
    "sign": "ecdsa",
    "hash": "sha384",
    "id": ""
  },
  "sha512": {
    "sign": "ecdsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-SHA": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA-SHA1": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA-WITH-SHA224": {
    "sign": "dsa",
    "hash": "sha224",
    "id": ""
  },
  "DSA-SHA224": {
    "sign": "dsa",
    "hash": "sha224",
    "id": ""
  },
  "DSA-WITH-SHA256": {
    "sign": "dsa",
    "hash": "sha256",
    "id": ""
  },
  "DSA-SHA256": {
    "sign": "dsa",
    "hash": "sha256",
    "id": ""
  },
  "DSA-WITH-SHA384": {
    "sign": "dsa",
    "hash": "sha384",
    "id": ""
  },
  "DSA-SHA384": {
    "sign": "dsa",
    "hash": "sha384",
    "id": ""
  },
  "DSA-WITH-SHA512": {
    "sign": "dsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-SHA512": {
    "sign": "dsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-RIPEMD160": {
    "sign": "dsa",
    "hash": "rmd160",
    "id": ""
  },
  "ripemd160WithRSA": {
    "sign": "rsa",
    "hash": "rmd160",
    "id": "3021300906052b2403020105000414"
  },
  "RSA-RIPEMD160": {
    "sign": "rsa",
    "hash": "rmd160",
    "id": "3021300906052b2403020105000414"
  },
  "md5WithRSAEncryption": {
    "sign": "rsa",
    "hash": "md5",
    "id": "3020300c06082a864886f70d020505000410"
  },
  "RSA-MD5": {
    "sign": "rsa",
    "hash": "md5",
    "id": "3020300c06082a864886f70d020505000410"
  }
}

},{}],51:[function(require,module,exports){
module.exports={
  "1.3.132.0.10": "secp256k1",
  "1.3.132.0.33": "p224",
  "1.2.840.10045.3.1.1": "p192",
  "1.2.840.10045.3.1.7": "p256",
  "1.3.132.0.34": "p384",
  "1.3.132.0.35": "p521"
}

},{}],52:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var createHash = require('create-hash')
var stream = require('readable-stream')
var inherits = require('inherits')
var sign = require('./sign')
var verify = require('./verify')

var algorithms = require('./algorithms.json')
Object.keys(algorithms).forEach(function (key) {
  algorithms[key].id = Buffer.from(algorithms[key].id, 'hex')
  algorithms[key.toLowerCase()] = algorithms[key]
})

function Sign (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hashType = data.hash
  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Sign, stream.Writable)

Sign.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Sign.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = Buffer.from(data, enc)

  this._hash.update(data)
  return this
}

Sign.prototype.sign = function signMethod (key, enc) {
  this.end()
  var hash = this._hash.digest()
  var sig = sign(hash, key, this._hashType, this._signType, this._tag)

  return enc ? sig.toString(enc) : sig
}

function Verify (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Verify, stream.Writable)

Verify.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Verify.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = Buffer.from(data, enc)

  this._hash.update(data)
  return this
}

Verify.prototype.verify = function verifyMethod (key, sig, enc) {
  if (typeof sig === 'string') sig = Buffer.from(sig, enc)

  this.end()
  var hash = this._hash.digest()
  return verify(sig, hash, key, this._signType, this._tag)
}

function createSign (algorithm) {
  return new Sign(algorithm)
}

function createVerify (algorithm) {
  return new Verify(algorithm)
}

module.exports = {
  Sign: createSign,
  Verify: createVerify,
  createSign: createSign,
  createVerify: createVerify
}

},{"./algorithms.json":50,"./sign":53,"./verify":54,"create-hash":80,"inherits":154,"readable-stream":69,"safe-buffer":197}],53:[function(require,module,exports){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var Buffer = require('safe-buffer').Buffer
var createHmac = require('create-hmac')
var crt = require('browserify-rsa')
var EC = require('elliptic').ec
var BN = require('bn.js')
var parseKeys = require('parse-asn1')
var curves = require('./curves.json')

function sign (hash, key, hashType, signType, tag) {
  var priv = parseKeys(key)
  if (priv.curve) {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
    return ecSign(hash, priv)
  } else if (priv.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong private key type')
    return dsaSign(hash, priv, hashType)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = priv.modulus.byteLength()
  var pad = [0, 1]
  while (hash.length + pad.length + 1 < len) pad.push(0xff)
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) pad.push(hash[i])

  var out = crt(pad, priv)
  return out
}

function ecSign (hash, priv) {
  var curveId = curves[priv.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))

  var curve = new EC(curveId)
  var key = curve.keyFromPrivate(priv.privateKey)
  var out = key.sign(hash)

  return Buffer.from(out.toDER())
}

function dsaSign (hash, priv, algo) {
  var x = priv.params.priv_key
  var p = priv.params.p
  var q = priv.params.q
  var g = priv.params.g
  var r = new BN(0)
  var k
  var H = bits2int(hash, q).mod(q)
  var s = false
  var kv = getKey(x, q, hash, algo)
  while (s === false) {
    k = makeKey(q, kv, algo)
    r = makeR(g, k, p, q)
    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)
    if (s.cmpn(0) === 0) {
      s = false
      r = new BN(0)
    }
  }
  return toDER(r, s)
}

function toDER (r, s) {
  r = r.toArray()
  s = s.toArray()

  // Pad values
  if (r[0] & 0x80) r = [0].concat(r)
  if (s[0] & 0x80) s = [0].concat(s)

  var total = r.length + s.length + 4
  var res = [0x30, total, 0x02, r.length]
  res = res.concat(r, [0x02, s.length], s)
  return Buffer.from(res)
}

function getKey (x, q, hash, algo) {
  x = Buffer.from(x.toArray())
  if (x.length < q.byteLength()) {
    var zeros = Buffer.alloc(q.byteLength() - x.length)
    x = Buffer.concat([zeros, x])
  }
  var hlen = hash.length
  var hbits = bits2octets(hash, q)
  var v = Buffer.alloc(hlen)
  v.fill(1)
  var k = Buffer.alloc(hlen)
  k = createHmac(algo, k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  k = createHmac(algo, k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  return { k: k, v: v }
}

function bits2int (obits, q) {
  var bits = new BN(obits)
  var shift = (obits.length << 3) - q.bitLength()
  if (shift > 0) bits.ishrn(shift)
  return bits
}

function bits2octets (bits, q) {
  bits = bits2int(bits, q)
  bits = bits.mod(q)
  var out = Buffer.from(bits.toArray())
  if (out.length < q.byteLength()) {
    var zeros = Buffer.alloc(q.byteLength() - out.length)
    out = Buffer.concat([zeros, out])
  }
  return out
}

function makeKey (q, kv, algo) {
  var t
  var k

  do {
    t = Buffer.alloc(0)

    while (t.length * 8 < q.bitLength()) {
      kv.v = createHmac(algo, kv.k).update(kv.v).digest()
      t = Buffer.concat([t, kv.v])
    }

    k = bits2int(t, q)
    kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([0])).digest()
    kv.v = createHmac(algo, kv.k).update(kv.v).digest()
  } while (k.cmp(q) !== -1)

  return k
}

function makeR (g, k, p, q) {
  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)
}

module.exports = sign
module.exports.getKey = getKey
module.exports.makeKey = makeKey

},{"./curves.json":51,"bn.js":25,"browserify-rsa":48,"create-hmac":82,"elliptic":96,"parse-asn1":179,"safe-buffer":197}],54:[function(require,module,exports){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var Buffer = require('safe-buffer').Buffer
var BN = require('bn.js')
var EC = require('elliptic').ec
var parseKeys = require('parse-asn1')
var curves = require('./curves.json')

function verify (sig, hash, key, signType, tag) {
  var pub = parseKeys(key)
  if (pub.type === 'ec') {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
    return ecVerify(sig, hash, pub)
  } else if (pub.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong public key type')
    return dsaVerify(sig, hash, pub)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = pub.modulus.byteLength()
  var pad = [1]
  var padNum = 0
  while (hash.length + pad.length + 2 < len) {
    pad.push(0xff)
    padNum++
  }
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) {
    pad.push(hash[i])
  }
  pad = Buffer.from(pad)
  var red = BN.mont(pub.modulus)
  sig = new BN(sig).toRed(red)

  sig = sig.redPow(new BN(pub.publicExponent))
  sig = Buffer.from(sig.fromRed().toArray())
  var out = padNum < 8 ? 1 : 0
  len = Math.min(sig.length, pad.length)
  if (sig.length !== pad.length) out = 1

  i = -1
  while (++i < len) out |= sig[i] ^ pad[i]
  return out === 0
}

function ecVerify (sig, hash, pub) {
  var curveId = curves[pub.data.algorithm.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))

  var curve = new EC(curveId)
  var pubkey = pub.data.subjectPrivateKey.data

  return curve.verify(hash, sig, pubkey)
}

function dsaVerify (sig, hash, pub) {
  var p = pub.data.p
  var q = pub.data.q
  var g = pub.data.g
  var y = pub.data.pub_key
  var unpacked = parseKeys.signature.decode(sig, 'der')
  var s = unpacked.s
  var r = unpacked.r
  checkValue(s, q)
  checkValue(r, q)
  var montp = BN.mont(p)
  var w = s.invm(q)
  var v = g.toRed(montp)
    .redPow(new BN(hash).mul(w).mod(q))
    .fromRed()
    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())
    .mod(p)
    .mod(q)
  return v.cmp(r) === 0
}

function checkValue (b, q) {
  if (b.cmpn(0) <= 0) throw new Error('invalid sig')
  if (b.cmp(q) >= q) throw new Error('invalid sig')
}

module.exports = verify

},{"./curves.json":51,"bn.js":25,"elliptic":96,"parse-asn1":179,"safe-buffer":197}],55:[function(require,module,exports){
'use strict';

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var codes = {};

function createErrorType(code, message, Base) {
  if (!Base) {
    Base = Error;
  }

  function getMessage(arg1, arg2, arg3) {
    if (typeof message === 'string') {
      return message;
    } else {
      return message(arg1, arg2, arg3);
    }
  }

  var NodeError =
  /*#__PURE__*/
  function (_Base) {
    _inheritsLoose(NodeError, _Base);

    function NodeError(arg1, arg2, arg3) {
      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
    }

    return NodeError;
  }(Base);

  NodeError.prototype.name = Base.name;
  NodeError.prototype.code = code;
  codes[code] = NodeError;
} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js


function oneOf(expected, thing) {
  if (Array.isArray(expected)) {
    var len = expected.length;
    expected = expected.map(function (i) {
      return String(i);
    });

    if (len > 2) {
      return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(', '), ", or ") + expected[len - 1];
    } else if (len === 2) {
      return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
    } else {
      return "of ".concat(thing, " ").concat(expected[0]);
    }
  } else {
    return "of ".concat(thing, " ").concat(String(expected));
  }
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith


function startsWith(str, search, pos) {
  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith


function endsWith(str, search, this_len) {
  if (this_len === undefined || this_len > str.length) {
    this_len = str.length;
  }

  return str.substring(this_len - search.length, this_len) === search;
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes


function includes(str, search, start) {
  if (typeof start !== 'number') {
    start = 0;
  }

  if (start + search.length > str.length) {
    return false;
  } else {
    return str.indexOf(search, start) !== -1;
  }
}

createErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {
  return 'The value "' + value + '" is invalid for option "' + name + '"';
}, TypeError);
createErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {
  // determiner: 'must be' or 'must not be'
  var determiner;

  if (typeof expected === 'string' && startsWith(expected, 'not ')) {
    determiner = 'must not be';
    expected = expected.replace(/^not /, '');
  } else {
    determiner = 'must be';
  }

  var msg;

  if (endsWith(name, ' argument')) {
    // For cases like 'first argument'
    msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  } else {
    var type = includes(name, '.') ? 'property' : 'argument';
    msg = "The \"".concat(name, "\" ").concat(type, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
  }

  msg += ". Received type ".concat(typeof actual);
  return msg;
}, TypeError);
createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');
createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {
  return 'The ' + name + ' method is not implemented';
});
createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');
createErrorType('ERR_STREAM_DESTROYED', function (name) {
  return 'Cannot call ' + name + ' after a stream was destroyed';
});
createErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');
createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');
createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');
createErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);
createErrorType('ERR_UNKNOWN_ENCODING', function (arg) {
  return 'Unknown encoding: ' + arg;
}, TypeError);
createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');
module.exports.codes = codes;

},{}],56:[function(require,module,exports){
(function (process){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.
'use strict';
/*<replacement>*/

var objectKeys = Object.keys || function (obj) {
  var keys = [];

  for (var key in obj) {
    keys.push(key);
  }

  return keys;
};
/*</replacement>*/


module.exports = Duplex;

var Readable = require('./_stream_readable');

var Writable = require('./_stream_writable');

require('inherits')(Duplex, Readable);

{
  // Allow the keys array to be GC'ed.
  var keys = objectKeys(Writable.prototype);

  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);
  Readable.call(this, options);
  Writable.call(this, options);
  this.allowHalfOpen = true;

  if (options) {
    if (options.readable === false) this.readable = false;
    if (options.writable === false) this.writable = false;

    if (options.allowHalfOpen === false) {
      this.allowHalfOpen = false;
      this.once('end', onend);
    }
  }
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
});
Object.defineProperty(Duplex.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});
Object.defineProperty(Duplex.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
}); // the no-half-open enforcer

function onend() {
  // If the writable side ended, then we're ok.
  if (this._writableState.ended) return; // no more data can be written.
  // But allow more writes to happen in this tick.

  process.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }

    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});
}).call(this)}).call(this,require('_process'))
},{"./_stream_readable":58,"./_stream_writable":60,"_process":186,"inherits":154}],57:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.
'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

require('inherits')(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);
  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":59,"inherits":154}],58:[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';

module.exports = Readable;
/*<replacement>*/

var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;
/*<replacement>*/

var EE = require('events').EventEmitter;

var EElistenerCount = function EElistenerCount(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/


var Stream = require('./internal/streams/stream');
/*</replacement>*/


var Buffer = require('buffer').Buffer;

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*<replacement>*/


var debugUtil = require('util');

var debug;

if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function debug() {};
}
/*</replacement>*/


var BufferList = require('./internal/streams/buffer_list');

var destroyImpl = require('./internal/streams/destroy');

var _require = require('./internal/streams/state'),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = require('../errors').codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.


var StringDecoder;
var createReadableStreamAsyncIterator;
var from;

require('inherits')(Readable, Stream);

var errorOrDestroy = destroyImpl.errorOrDestroy;
var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.

  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream, isDuplex) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"

  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()

  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.

  this.sync = true; // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.

  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;
  this.paused = true; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')

  this.autoDestroy = !!options.autoDestroy; // has it been destroyed

  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s

  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled

  this.readingMore = false;
  this.decoder = null;
  this.encoding = null;

  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');
  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside
  // the ReadableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  this._readableState = new ReadableState(options, this, isDuplex); // legacy

  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._readableState === undefined) {
      return false;
    }

    return this._readableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._readableState.destroyed = value;
  }
});
Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;

Readable.prototype._destroy = function (err, cb) {
  cb(err);
}; // Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.


Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;

      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }

      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
}; // Unshift should *always* be something directly out of read()


Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  debug('readableAddChunk', chunk);
  var state = stream._readableState;

  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);

    if (er) {
      errorOrDestroy(stream, er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
      } else if (state.destroyed) {
        return false;
      } else {
        state.reading = false;

        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
      maybeReadMore(stream, state);
    }
  } // We can push more data if we are below the highWaterMark.
  // Also, if we have no data yet, we can stand some more bytes.
  // This is to work around cases where hwm=0, such as the repl.


  return !state.ended && (state.length < state.highWaterMark || state.length === 0);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    state.awaitDrain = 0;
    stream.emit('data', chunk);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);
    if (state.needReadable) emitReadable(stream);
  }

  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;

  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);
  }

  return er;
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
}; // backwards compatibility.


Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  var decoder = new StringDecoder(enc);
  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8

  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:

  var p = this._readableState.buffer.head;
  var content = '';

  while (p !== null) {
    content += decoder.write(p.data);
    p = p.next;
  }

  this._readableState.buffer.clear();

  if (content !== '') this._readableState.buffer.push(content);
  this._readableState.length = content.length;
  return this;
}; // Don't raise the hwm > 1GB


var MAX_HWM = 0x40000000;

function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }

  return n;
} // This function is designed to be inlinable, so please take care when making
// changes to the function body.


function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;

  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  } // If we're asking for more than the current hwm, then raise the hwm.


  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n; // Don't have enough

  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }

  return state.length;
} // you can override either this method, or the async _read(n) below.


Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;
  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.

  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.

  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  } // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.
  // if we need a readable event, then we need to do some reading.


  var doRead = state.needReadable;
  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some

  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  } // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.


  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true; // if the length is currently zero, then we *need* a readable event.

    if (state.length === 0) state.needReadable = true; // call internal read method

    this._read(state.highWaterMark);

    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.

    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = state.length <= state.highWaterMark;
    n = 0;
  } else {
    state.length -= n;
    state.awaitDrain = 0;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.

    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);
  return ret;
};

function onEofChunk(stream, state) {
  debug('onEofChunk');
  if (state.ended) return;

  if (state.decoder) {
    var chunk = state.decoder.end();

    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }

  state.ended = true;

  if (state.sync) {
    // if we are sync, wait until next tick to emit the data.
    // Otherwise we risk emitting data in the flow()
    // the readable code triggers during a read() call
    emitReadable(stream);
  } else {
    // emit 'readable' now to make sure it gets picked up.
    state.needReadable = false;

    if (!state.emittedReadable) {
      state.emittedReadable = true;
      emitReadable_(stream);
    }
  }
} // Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.


function emitReadable(stream) {
  var state = stream._readableState;
  debug('emitReadable', state.needReadable, state.emittedReadable);
  state.needReadable = false;

  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    process.nextTick(emitReadable_, stream);
  }
}

function emitReadable_(stream) {
  var state = stream._readableState;
  debug('emitReadable_', state.destroyed, state.length, state.ended);

  if (!state.destroyed && (state.length || state.ended)) {
    stream.emit('readable');
    state.emittedReadable = false;
  } // The stream needs another readable event if
  // 1. It is not flowing, as the flow mechanism will take
  //    care of it.
  // 2. It is not ended.
  // 3. It is below the highWaterMark, so we can schedule
  //    another readable later.


  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
  flow(stream);
} // at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.


function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  // Attempt to read more data if we should.
  //
  // The conditions for reading more data are (one of):
  // - Not enough data buffered (state.length < state.highWaterMark). The loop
  //   is responsible for filling the buffer with enough data if such data
  //   is available. If highWaterMark is 0 and we are not in the flowing mode
  //   we should _not_ attempt to buffer any extra data. We'll get more data
  //   when the stream consumer calls read() instead.
  // - No data in the buffer, and the stream is in flowing mode. In this mode
  //   the loop below is responsible for ensuring read() is called. Failing to
  //   call read here would abort the flow and there's no other mechanism for
  //   continuing the flow if the stream consumer has just subscribed to the
  //   'data' event.
  //
  // In addition to the above conditions to keep reading data, the following
  // conditions prevent the data from being read:
  // - The stream has ended (state.ended).
  // - There is already a pending 'read' operation (state.reading). This is a
  //   case where the the stream has called the implementation defined _read()
  //   method, but they are processing the call asynchronously and have _not_
  //   called push() with new data. In this case we skip performing more
  //   read()s. The execution ends in this method again after the _read() ends
  //   up calling push() with more data.
  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
    var len = state.length;
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length) // didn't get any data, stop spinning.
      break;
  }

  state.readingMore = false;
} // abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.


Readable.prototype._read = function (n) {
  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;

    case 1:
      state.pipes = [state.pipes, dest];
      break;

    default:
      state.pipes.push(dest);
      break;
  }

  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);
  dest.on('unpipe', onunpipe);

  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');

    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  } // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.


  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);
  var cleanedUp = false;

  function cleanup() {
    debug('cleanup'); // cleanup event handlers once the pipe is broken

    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);
    cleanedUp = true; // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.

    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  src.on('data', ondata);

  function ondata(chunk) {
    debug('ondata');
    var ret = dest.write(chunk);
    debug('dest.write', ret);

    if (ret === false) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', state.awaitDrain);
        state.awaitDrain++;
      }

      src.pause();
    }
  } // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.


  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);
  } // Make sure our error handler is attached before userland ones.


  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.

  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }

  dest.once('close', onclose);

  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }

  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  } // tell the dest that it's being piped to


  dest.emit('pipe', src); // start the flow if it hasn't been started already.

  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function pipeOnDrainFunctionResult() {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;

    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = {
    hasUnpiped: false
  }; // if we're not piping anywhere, then do nothing.

  if (state.pipesCount === 0) return this; // just one destination.  most common case.

  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;
    if (!dest) dest = state.pipes; // got a match.

    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  } // slow case. multiple pipe destinations.


  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, {
        hasUnpiped: false
      });
    }

    return this;
  } // try to find the right one.


  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;
  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];
  dest.emit('unpipe', this, unpipeInfo);
  return this;
}; // set up data events if they are asked for
// Ensure readable listeners eventually get something


Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);
  var state = this._readableState;

  if (ev === 'data') {
    // update readableListening so that resume() may be a no-op
    // a few lines down. This is needed to support once('readable').
    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused

    if (state.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.flowing = false;
      state.emittedReadable = false;
      debug('on readable', state.length, state.reading);

      if (state.length) {
        emitReadable(this);
      } else if (!state.reading) {
        process.nextTick(nReadingNextTick, this);
      }
    }
  }

  return res;
};

Readable.prototype.addListener = Readable.prototype.on;

Readable.prototype.removeListener = function (ev, fn) {
  var res = Stream.prototype.removeListener.call(this, ev, fn);

  if (ev === 'readable') {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

Readable.prototype.removeAllListeners = function (ev) {
  var res = Stream.prototype.removeAllListeners.apply(this, arguments);

  if (ev === 'readable' || ev === undefined) {
    // We need to check if there is someone still listening to
    // readable and reset the state. However this needs to happen
    // after readable has been emitted but before I/O (nextTick) to
    // support once('readable', fn) cycles. This means that calling
    // resume within the same tick will have no
    // effect.
    process.nextTick(updateReadableListening, this);
  }

  return res;
};

function updateReadableListening(self) {
  var state = self._readableState;
  state.readableListening = self.listenerCount('readable') > 0;

  if (state.resumeScheduled && !state.paused) {
    // flowing needs to be set to true now, otherwise
    // the upcoming resume will not flow.
    state.flowing = true; // crude way to check if we should resume
  } else if (self.listenerCount('data') > 0) {
    self.resume();
  }
}

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
} // pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.


Readable.prototype.resume = function () {
  var state = this._readableState;

  if (!state.flowing) {
    debug('resume'); // we flow only if there is no one listening
    // for readable, but we still have to call
    // resume()

    state.flowing = !state.readableListening;
    resume(this, state);
  }

  state.paused = false;
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    process.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  debug('resume', state.reading);

  if (!state.reading) {
    stream.read(0);
  }

  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);

  if (this._readableState.flowing !== false) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }

  this._readableState.paused = true;
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);

  while (state.flowing && stream.read() !== null) {
    ;
  }
} // wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.


Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;
  stream.on('end', function () {
    debug('wrapped end');

    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });
  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode

    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);

    if (!ret) {
      paused = true;
      stream.pause();
    }
  }); // proxy all the other methods.
  // important when wrapping filters and duplexes.

  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function methodWrap(method) {
        return function methodWrapReturnFunction() {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  } // proxy certain important events.


  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  } // when we try to consume some more bytes, simply unpause the
  // underlying stream.


  this._read = function (n) {
    debug('wrapped _read', n);

    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

if (typeof Symbol === 'function') {
  Readable.prototype[Symbol.asyncIterator] = function () {
    if (createReadableStreamAsyncIterator === undefined) {
      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');
    }

    return createReadableStreamAsyncIterator(this);
  };
}

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.highWaterMark;
  }
});
Object.defineProperty(Readable.prototype, 'readableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState && this._readableState.buffer;
  }
});
Object.defineProperty(Readable.prototype, 'readableFlowing', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.flowing;
  },
  set: function set(state) {
    if (this._readableState) {
      this._readableState.flowing = state;
    }
  }
}); // exposed for testing purposes only.

Readable._fromList = fromList;
Object.defineProperty(Readable.prototype, 'readableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._readableState.length;
  }
}); // Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.

function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;
  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = state.buffer.consume(n, state.decoder);
  }
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;
  debug('endReadable', state.endEmitted);

  if (!state.endEmitted) {
    state.ended = true;
    process.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.

  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');

    if (state.autoDestroy) {
      // In case of duplex streams we need a way to detect
      // if the writable side is ready for autoDestroy as well
      var wState = stream._writableState;

      if (!wState || wState.autoDestroy && wState.finished) {
        stream.destroy();
      }
    }
  }
}

if (typeof Symbol === 'function') {
  Readable.from = function (iterable, opts) {
    if (from === undefined) {
      from = require('./internal/streams/from');
    }

    return from(Readable, iterable, opts);
  };
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }

  return -1;
}
}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../errors":55,"./_stream_duplex":56,"./internal/streams/async_iterator":61,"./internal/streams/buffer_list":62,"./internal/streams/destroy":63,"./internal/streams/from":65,"./internal/streams/state":67,"./internal/streams/stream":68,"_process":186,"buffer":73,"events":114,"inherits":154,"string_decoder/":222,"util":27}],59:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.
'use strict';

module.exports = Transform;

var _require$codes = require('../errors').codes,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;

var Duplex = require('./_stream_duplex');

require('inherits')(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;
  var cb = ts.writecb;

  if (cb === null) {
    return this.emit('error', new ERR_MULTIPLE_CALLBACK());
  }

  ts.writechunk = null;
  ts.writecb = null;
  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);
  cb(er);
  var rs = this._readableState;
  rs.reading = false;

  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);
  Duplex.call(this, options);
  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  }; // start out asking for a readable event once data is transformed.

  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.

  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;
    if (typeof options.flush === 'function') this._flush = options.flush;
  } // When the writable side finishes, then flush out anything remaining.


  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function' && !this._readableState.destroyed) {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
}; // This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.


Transform.prototype._transform = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;

  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
}; // Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.


Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && !ts.transforming) {
    ts.transforming = true;

    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);
  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases
  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided

  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();
  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
  return stream.push(null);
}
},{"../errors":55,"./_stream_duplex":56,"inherits":154}],60:[function(require,module,exports){
(function (process,global){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.
'use strict';

module.exports = Writable;
/* <replacement> */

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
} // It seems a linked list but it is not
// there will be only 2 of these for each stream


function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;

  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/


var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;
/*<replacement>*/

var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/

var Stream = require('./internal/streams/stream');
/*</replacement>*/


var Buffer = require('buffer').Buffer;

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

var destroyImpl = require('./internal/streams/destroy');

var _require = require('./internal/streams/state'),
    getHighWaterMark = _require.getHighWaterMark;

var _require$codes = require('../errors').codes,
    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,
    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;

var errorOrDestroy = destroyImpl.errorOrDestroy;

require('inherits')(Writable, Stream);

function nop() {}

function WritableState(options, stream, isDuplex) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream,
  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.

  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream
  // contains buffers or objects.

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()

  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called

  this.finalCalled = false; // drain event flag.

  this.needDrain = false; // at the start of calling end()

  this.ending = false; // when end() has been called, and returned

  this.ended = false; // when 'finish' is emitted

  this.finished = false; // has it been destroyed

  this.destroyed = false; // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.

  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.

  this.length = 0; // a flag to see when we're in the middle of a write.

  this.writing = false; // when true all writes will be buffered until .uncork() call

  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.

  this.sync = true; // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.

  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)

  this.onwrite = function (er) {
    onwrite(stream, er);
  }; // the callback that the user supplies to write(chunk,encoding,cb)


  this.writecb = null; // the amount that is being written when _write is called.

  this.writelen = 0;
  this.bufferedRequest = null;
  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted

  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams

  this.prefinished = false; // True if the error was already emitted and should not be thrown again

  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.

  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')

  this.autoDestroy = !!options.autoDestroy; // count buffered requests

  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two

  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];

  while (current) {
    out.push(current);
    current = current.next;
  }

  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function writableStateBufferGetter() {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})(); // Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.


var realHasInstance;

if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function value(object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;
      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function realHasInstance(object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.
  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  // Checking for a Stream.Duplex instance is faster here instead of inside
  // the WritableState constructor, at least with V8 6.5

  var isDuplex = this instanceof Duplex;
  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
  this._writableState = new WritableState(options, this, isDuplex); // legacy.

  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;
    if (typeof options.writev === 'function') this._writev = options.writev;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
} // Otherwise people can pipe Writable streams, which is just wrong.


Writable.prototype.pipe = function () {
  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
};

function writeAfterEnd(stream, cb) {
  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb

  errorOrDestroy(stream, er);
  process.nextTick(cb, er);
} // Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.


function validChunk(stream, state, chunk, cb) {
  var er;

  if (chunk === null) {
    er = new ERR_STREAM_NULL_VALUES();
  } else if (typeof chunk !== 'string' && !state.objectMode) {
    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);
  }

  if (er) {
    errorOrDestroy(stream, er);
    process.nextTick(cb, er);
    return false;
  }

  return true;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
  if (typeof cb !== 'function') cb = nop;
  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }
  return ret;
};

Writable.prototype.cork = function () {
  this._writableState.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;
    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

Object.defineProperty(Writable.prototype, 'writableBuffer', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState && this._writableState.getBuffer();
  }
});

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }

  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.highWaterMark;
  }
}); // if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.

function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);

    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }

  var len = state.objectMode ? 1 : chunk.length;
  state.length += len;
  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.

  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };

    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }

    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    process.nextTick(cb, er); // this can emit finish, and it will always happen
    // after error

    process.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    errorOrDestroy(stream, er); // this can emit finish, but finish must
    // always follow error

    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;
  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();
  onwriteStateUpdate(state);
  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state) || stream.destroyed;

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      process.nextTick(afterWrite, stream, state, finished, cb);
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
} // Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.


function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
} // if there's something in the buffer waiting, then process it


function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;
    var count = 0;
    var allBuffers = true;

    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }

    buffer.allBuffers = allBuffers;
    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite

    state.pendingcb++;
    state.lastBufferedRequest = null;

    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }

    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;
      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.

      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks

  if (state.corked) {
    state.corked = 1;
    this.uncork();
  } // ignore unnecessary end() calls.


  if (!state.ending) endWritable(this, state, cb);
  return this;
};

Object.defineProperty(Writable.prototype, 'writableLength', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    return this._writableState.length;
  }
});

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}

function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;

    if (err) {
      errorOrDestroy(stream, err);
    }

    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}

function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function' && !state.destroyed) {
      state.pendingcb++;
      state.finalCalled = true;
      process.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);

  if (need) {
    prefinish(stream, state);

    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');

      if (state.autoDestroy) {
        // In case of duplex streams we need a way to detect
        // if the readable side is ready for autoDestroy as well
        var rState = stream._readableState;

        if (!rState || rState.autoDestroy && rState.endEmitted) {
          stream.destroy();
        }
      }
    }
  }

  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);

  if (cb) {
    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);
  }

  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;

  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  } // reuse the free corkReq.


  state.corkedRequestsFree.next = corkReq;
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function get() {
    if (this._writableState === undefined) {
      return false;
    }

    return this._writableState.destroyed;
  },
  set: function set(value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._writableState.destroyed = value;
  }
});
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;

Writable.prototype._destroy = function (err, cb) {
  cb(err);
};
}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../errors":55,"./_stream_duplex":56,"./internal/streams/destroy":63,"./internal/streams/state":67,"./internal/streams/stream":68,"_process":186,"buffer":73,"inherits":154,"util-deprecate":223}],61:[function(require,module,exports){
(function (process){(function (){
'use strict';

var _Object$setPrototypeO;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var finished = require('./end-of-stream');

var kLastResolve = Symbol('lastResolve');
var kLastReject = Symbol('lastReject');
var kError = Symbol('error');
var kEnded = Symbol('ended');
var kLastPromise = Symbol('lastPromise');
var kHandlePromise = Symbol('handlePromise');
var kStream = Symbol('stream');

function createIterResult(value, done) {
  return {
    value: value,
    done: done
  };
}

function readAndResolve(iter) {
  var resolve = iter[kLastResolve];

  if (resolve !== null) {
    var data = iter[kStream].read(); // we defer if data is null
    // we can be expecting either 'end' or
    // 'error'

    if (data !== null) {
      iter[kLastPromise] = null;
      iter[kLastResolve] = null;
      iter[kLastReject] = null;
      resolve(createIterResult(data, false));
    }
  }
}

function onReadable(iter) {
  // we wait for the next tick, because it might
  // emit an error with process.nextTick
  process.nextTick(readAndResolve, iter);
}

function wrapForNext(lastPromise, iter) {
  return function (resolve, reject) {
    lastPromise.then(function () {
      if (iter[kEnded]) {
        resolve(createIterResult(undefined, true));
        return;
      }

      iter[kHandlePromise](resolve, reject);
    }, reject);
  };
}

var AsyncIteratorPrototype = Object.getPrototypeOf(function () {});
var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
  get stream() {
    return this[kStream];
  },

  next: function next() {
    var _this = this;

    // if we have detected an error in the meanwhile
    // reject straight away
    var error = this[kError];

    if (error !== null) {
      return Promise.reject(error);
    }

    if (this[kEnded]) {
      return Promise.resolve(createIterResult(undefined, true));
    }

    if (this[kStream].destroyed) {
      // We need to defer via nextTick because if .destroy(err) is
      // called, the error will be emitted via nextTick, and
      // we cannot guarantee that there is no error lingering around
      // waiting to be emitted.
      return new Promise(function (resolve, reject) {
        process.nextTick(function () {
          if (_this[kError]) {
            reject(_this[kError]);
          } else {
            resolve(createIterResult(undefined, true));
          }
        });
      });
    } // if we have multiple next() calls
    // we will wait for the previous Promise to finish
    // this logic is optimized to support for await loops,
    // where next() is only called once at a time


    var lastPromise = this[kLastPromise];
    var promise;

    if (lastPromise) {
      promise = new Promise(wrapForNext(lastPromise, this));
    } else {
      // fast path needed to support multiple this.push()
      // without triggering the next() queue
      var data = this[kStream].read();

      if (data !== null) {
        return Promise.resolve(createIterResult(data, false));
      }

      promise = new Promise(this[kHandlePromise]);
    }

    this[kLastPromise] = promise;
    return promise;
  }
}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {
  return this;
}), _defineProperty(_Object$setPrototypeO, "return", function _return() {
  var _this2 = this;

  // destroy(err, cb) is a private API
  // we can guarantee we have that here, because we control the
  // Readable class this is attached to
  return new Promise(function (resolve, reject) {
    _this2[kStream].destroy(null, function (err) {
      if (err) {
        reject(err);
        return;
      }

      resolve(createIterResult(undefined, true));
    });
  });
}), _Object$setPrototypeO), AsyncIteratorPrototype);

var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {
  var _Object$create;

  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {
    value: stream,
    writable: true
  }), _defineProperty(_Object$create, kLastResolve, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kLastReject, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kError, {
    value: null,
    writable: true
  }), _defineProperty(_Object$create, kEnded, {
    value: stream._readableState.endEmitted,
    writable: true
  }), _defineProperty(_Object$create, kHandlePromise, {
    value: function value(resolve, reject) {
      var data = iterator[kStream].read();

      if (data) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        resolve(createIterResult(data, false));
      } else {
        iterator[kLastResolve] = resolve;
        iterator[kLastReject] = reject;
      }
    },
    writable: true
  }), _Object$create));
  iterator[kLastPromise] = null;
  finished(stream, function (err) {
    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise
      // returned by next() and store the error

      if (reject !== null) {
        iterator[kLastPromise] = null;
        iterator[kLastResolve] = null;
        iterator[kLastReject] = null;
        reject(err);
      }

      iterator[kError] = err;
      return;
    }

    var resolve = iterator[kLastResolve];

    if (resolve !== null) {
      iterator[kLastPromise] = null;
      iterator[kLastResolve] = null;
      iterator[kLastReject] = null;
      resolve(createIterResult(undefined, true));
    }

    iterator[kEnded] = true;
  });
  stream.on('readable', onReadable.bind(null, iterator));
  return iterator;
};

module.exports = createReadableStreamAsyncIterator;
}).call(this)}).call(this,require('_process'))
},{"./end-of-stream":64,"_process":186}],62:[function(require,module,exports){
'use strict';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var _require = require('buffer'),
    Buffer = _require.Buffer;

var _require2 = require('util'),
    inspect = _require2.inspect;

var custom = inspect && inspect.custom || 'inspect';

function copyBuffer(src, target, offset) {
  Buffer.prototype.copy.call(src, target, offset);
}

module.exports =
/*#__PURE__*/
function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  _createClass(BufferList, [{
    key: "push",
    value: function push(v) {
      var entry = {
        data: v,
        next: null
      };
      if (this.length > 0) this.tail.next = entry;else this.head = entry;
      this.tail = entry;
      ++this.length;
    }
  }, {
    key: "unshift",
    value: function unshift(v) {
      var entry = {
        data: v,
        next: this.head
      };
      if (this.length === 0) this.tail = entry;
      this.head = entry;
      ++this.length;
    }
  }, {
    key: "shift",
    value: function shift() {
      if (this.length === 0) return;
      var ret = this.head.data;
      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
      --this.length;
      return ret;
    }
  }, {
    key: "clear",
    value: function clear() {
      this.head = this.tail = null;
      this.length = 0;
    }
  }, {
    key: "join",
    value: function join(s) {
      if (this.length === 0) return '';
      var p = this.head;
      var ret = '' + p.data;

      while (p = p.next) {
        ret += s + p.data;
      }

      return ret;
    }
  }, {
    key: "concat",
    value: function concat(n) {
      if (this.length === 0) return Buffer.alloc(0);
      var ret = Buffer.allocUnsafe(n >>> 0);
      var p = this.head;
      var i = 0;

      while (p) {
        copyBuffer(p.data, ret, i);
        i += p.data.length;
        p = p.next;
      }

      return ret;
    } // Consumes a specified amount of bytes or characters from the buffered data.

  }, {
    key: "consume",
    value: function consume(n, hasStrings) {
      var ret;

      if (n < this.head.data.length) {
        // `slice` is the same for buffers and strings.
        ret = this.head.data.slice(0, n);
        this.head.data = this.head.data.slice(n);
      } else if (n === this.head.data.length) {
        // First chunk is a perfect match.
        ret = this.shift();
      } else {
        // Result spans more than one buffer.
        ret = hasStrings ? this._getString(n) : this._getBuffer(n);
      }

      return ret;
    }
  }, {
    key: "first",
    value: function first() {
      return this.head.data;
    } // Consumes a specified amount of characters from the buffered data.

  }, {
    key: "_getString",
    value: function _getString(n) {
      var p = this.head;
      var c = 1;
      var ret = p.data;
      n -= ret.length;

      while (p = p.next) {
        var str = p.data;
        var nb = n > str.length ? str.length : n;
        if (nb === str.length) ret += str;else ret += str.slice(0, n);
        n -= nb;

        if (n === 0) {
          if (nb === str.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = str.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Consumes a specified amount of bytes from the buffered data.

  }, {
    key: "_getBuffer",
    value: function _getBuffer(n) {
      var ret = Buffer.allocUnsafe(n);
      var p = this.head;
      var c = 1;
      p.data.copy(ret);
      n -= p.data.length;

      while (p = p.next) {
        var buf = p.data;
        var nb = n > buf.length ? buf.length : n;
        buf.copy(ret, ret.length - n, 0, nb);
        n -= nb;

        if (n === 0) {
          if (nb === buf.length) {
            ++c;
            if (p.next) this.head = p.next;else this.head = this.tail = null;
          } else {
            this.head = p;
            p.data = buf.slice(nb);
          }

          break;
        }

        ++c;
      }

      this.length -= c;
      return ret;
    } // Make sure the linked list only shows the minimal necessary information.

  }, {
    key: custom,
    value: function value(_, options) {
      return inspect(this, _objectSpread({}, options, {
        // Only inspect one level.
        depth: 0,
        // It should not recurse.
        customInspect: false
      }));
    }
  }]);

  return BufferList;
}();
},{"buffer":73,"util":27}],63:[function(require,module,exports){
(function (process){(function (){
'use strict'; // undocumented cb() API, needed for core, not for public API

function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err) {
      if (!this._writableState) {
        process.nextTick(emitErrorNT, this, err);
      } else if (!this._writableState.errorEmitted) {
        this._writableState.errorEmitted = true;
        process.nextTick(emitErrorNT, this, err);
      }
    }

    return this;
  } // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks


  if (this._readableState) {
    this._readableState.destroyed = true;
  } // if this is a duplex stream mark the writable part as destroyed as well


  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      if (!_this._writableState) {
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else if (!_this._writableState.errorEmitted) {
        _this._writableState.errorEmitted = true;
        process.nextTick(emitErrorAndCloseNT, _this, err);
      } else {
        process.nextTick(emitCloseNT, _this);
      }
    } else if (cb) {
      process.nextTick(emitCloseNT, _this);
      cb(err);
    } else {
      process.nextTick(emitCloseNT, _this);
    }
  });

  return this;
}

function emitErrorAndCloseNT(self, err) {
  emitErrorNT(self, err);
  emitCloseNT(self);
}

function emitCloseNT(self) {
  if (self._writableState && !self._writableState.emitClose) return;
  if (self._readableState && !self._readableState.emitClose) return;
  self.emit('close');
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finalCalled = false;
    this._writableState.prefinished = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

function errorOrDestroy(stream, err) {
  // We have tests that rely on errors being emitted
  // in the same tick, so changing this is semver major.
  // For now when you opt-in to autoDestroy we allow
  // the error to be emitted nextTick. In a future
  // semver major update we should change the default to this.
  var rState = stream._readableState;
  var wState = stream._writableState;
  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy,
  errorOrDestroy: errorOrDestroy
};
}).call(this)}).call(this,require('_process'))
},{"_process":186}],64:[function(require,module,exports){
// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';

var ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    callback.apply(this, args);
  };
}

function noop() {}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function eos(stream, opts, callback) {
  if (typeof opts === 'function') return eos(stream, null, opts);
  if (!opts) opts = {};
  callback = once(callback || noop);
  var readable = opts.readable || opts.readable !== false && stream.readable;
  var writable = opts.writable || opts.writable !== false && stream.writable;

  var onlegacyfinish = function onlegacyfinish() {
    if (!stream.writable) onfinish();
  };

  var writableEnded = stream._writableState && stream._writableState.finished;

  var onfinish = function onfinish() {
    writable = false;
    writableEnded = true;
    if (!readable) callback.call(stream);
  };

  var readableEnded = stream._readableState && stream._readableState.endEmitted;

  var onend = function onend() {
    readable = false;
    readableEnded = true;
    if (!writable) callback.call(stream);
  };

  var onerror = function onerror(err) {
    callback.call(stream, err);
  };

  var onclose = function onclose() {
    var err;

    if (readable && !readableEnded) {
      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }

    if (writable && !writableEnded) {
      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
      return callback.call(stream, err);
    }
  };

  var onrequest = function onrequest() {
    stream.req.on('finish', onfinish);
  };

  if (isRequest(stream)) {
    stream.on('complete', onfinish);
    stream.on('abort', onclose);
    if (stream.req) onrequest();else stream.on('request', onrequest);
  } else if (writable && !stream._writableState) {
    // legacy streams
    stream.on('end', onlegacyfinish);
    stream.on('close', onlegacyfinish);
  }

  stream.on('end', onend);
  stream.on('finish', onfinish);
  if (opts.error !== false) stream.on('error', onerror);
  stream.on('close', onclose);
  return function () {
    stream.removeListener('complete', onfinish);
    stream.removeListener('abort', onclose);
    stream.removeListener('request', onrequest);
    if (stream.req) stream.req.removeListener('finish', onfinish);
    stream.removeListener('end', onlegacyfinish);
    stream.removeListener('close', onlegacyfinish);
    stream.removeListener('finish', onfinish);
    stream.removeListener('end', onend);
    stream.removeListener('error', onerror);
    stream.removeListener('close', onclose);
  };
}

module.exports = eos;
},{"../../../errors":55}],65:[function(require,module,exports){
module.exports = function () {
  throw new Error('Readable.from is not available in the browser')
};

},{}],66:[function(require,module,exports){
// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';

var eos;

function once(callback) {
  var called = false;
  return function () {
    if (called) return;
    called = true;
    callback.apply(void 0, arguments);
  };
}

var _require$codes = require('../../../errors').codes,
    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;

function noop(err) {
  // Rethrow the error if it exists to avoid swallowing it
  if (err) throw err;
}

function isRequest(stream) {
  return stream.setHeader && typeof stream.abort === 'function';
}

function destroyer(stream, reading, writing, callback) {
  callback = once(callback);
  var closed = false;
  stream.on('close', function () {
    closed = true;
  });
  if (eos === undefined) eos = require('./end-of-stream');
  eos(stream, {
    readable: reading,
    writable: writing
  }, function (err) {
    if (err) return callback(err);
    closed = true;
    callback();
  });
  var destroyed = false;
  return function (err) {
    if (closed) return;
    if (destroyed) return;
    destroyed = true; // request.destroy just do .end - .abort is what we want

    if (isRequest(stream)) return stream.abort();
    if (typeof stream.destroy === 'function') return stream.destroy();
    callback(err || new ERR_STREAM_DESTROYED('pipe'));
  };
}

function call(fn) {
  fn();
}

function pipe(from, to) {
  return from.pipe(to);
}

function popCallback(streams) {
  if (!streams.length) return noop;
  if (typeof streams[streams.length - 1] !== 'function') return noop;
  return streams.pop();
}

function pipeline() {
  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {
    streams[_key] = arguments[_key];
  }

  var callback = popCallback(streams);
  if (Array.isArray(streams[0])) streams = streams[0];

  if (streams.length < 2) {
    throw new ERR_MISSING_ARGS('streams');
  }

  var error;
  var destroys = streams.map(function (stream, i) {
    var reading = i < streams.length - 1;
    var writing = i > 0;
    return destroyer(stream, reading, writing, function (err) {
      if (!error) error = err;
      if (err) destroys.forEach(call);
      if (reading) return;
      destroys.forEach(call);
      callback(error);
    });
  });
  return streams.reduce(pipe);
}

module.exports = pipeline;
},{"../../../errors":55,"./end-of-stream":64}],67:[function(require,module,exports){
'use strict';

var ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;

function highWaterMarkFrom(options, isDuplex, duplexKey) {
  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
}

function getHighWaterMark(state, options, duplexKey, isDuplex) {
  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);

  if (hwm != null) {
    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
      var name = isDuplex ? duplexKey : 'highWaterMark';
      throw new ERR_INVALID_OPT_VALUE(name, hwm);
    }

    return Math.floor(hwm);
  } // Default value


  return state.objectMode ? 16 : 16 * 1024;
}

module.exports = {
  getHighWaterMark: getHighWaterMark
};
},{"../../../errors":55}],68:[function(require,module,exports){
module.exports = require('events').EventEmitter;

},{"events":114}],69:[function(require,module,exports){
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');
exports.finished = require('./lib/internal/streams/end-of-stream.js');
exports.pipeline = require('./lib/internal/streams/pipeline.js');

},{"./lib/_stream_duplex.js":56,"./lib/_stream_passthrough.js":57,"./lib/_stream_readable.js":58,"./lib/_stream_transform.js":59,"./lib/_stream_writable.js":60,"./lib/internal/streams/end-of-stream.js":64,"./lib/internal/streams/pipeline.js":66}],70:[function(require,module,exports){
(function (process,Buffer){(function (){
'use strict';
/* eslint camelcase: "off" */

var assert = require('assert');

var Zstream = require('pako/lib/zlib/zstream');
var zlib_deflate = require('pako/lib/zlib/deflate.js');
var zlib_inflate = require('pako/lib/zlib/inflate.js');
var constants = require('pako/lib/zlib/constants');

for (var key in constants) {
  exports[key] = constants[key];
}

// zlib modes
exports.NONE = 0;
exports.DEFLATE = 1;
exports.INFLATE = 2;
exports.GZIP = 3;
exports.GUNZIP = 4;
exports.DEFLATERAW = 5;
exports.INFLATERAW = 6;
exports.UNZIP = 7;

var GZIP_HEADER_ID1 = 0x1f;
var GZIP_HEADER_ID2 = 0x8b;

/**
 * Emulate Node's zlib C++ layer for use by the JS layer in index.js
 */
function Zlib(mode) {
  if (typeof mode !== 'number' || mode < exports.DEFLATE || mode > exports.UNZIP) {
    throw new TypeError('Bad argument');
  }

  this.dictionary = null;
  this.err = 0;
  this.flush = 0;
  this.init_done = false;
  this.level = 0;
  this.memLevel = 0;
  this.mode = mode;
  this.strategy = 0;
  this.windowBits = 0;
  this.write_in_progress = false;
  this.pending_close = false;
  this.gzip_id_bytes_read = 0;
}

Zlib.prototype.close = function () {
  if (this.write_in_progress) {
    this.pending_close = true;
    return;
  }

  this.pending_close = false;

  assert(this.init_done, 'close before init');
  assert(this.mode <= exports.UNZIP);

  if (this.mode === exports.DEFLATE || this.mode === exports.GZIP || this.mode === exports.DEFLATERAW) {
    zlib_deflate.deflateEnd(this.strm);
  } else if (this.mode === exports.INFLATE || this.mode === exports.GUNZIP || this.mode === exports.INFLATERAW || this.mode === exports.UNZIP) {
    zlib_inflate.inflateEnd(this.strm);
  }

  this.mode = exports.NONE;

  this.dictionary = null;
};

Zlib.prototype.write = function (flush, input, in_off, in_len, out, out_off, out_len) {
  return this._write(true, flush, input, in_off, in_len, out, out_off, out_len);
};

Zlib.prototype.writeSync = function (flush, input, in_off, in_len, out, out_off, out_len) {
  return this._write(false, flush, input, in_off, in_len, out, out_off, out_len);
};

Zlib.prototype._write = function (async, flush, input, in_off, in_len, out, out_off, out_len) {
  assert.equal(arguments.length, 8);

  assert(this.init_done, 'write before init');
  assert(this.mode !== exports.NONE, 'already finalized');
  assert.equal(false, this.write_in_progress, 'write already in progress');
  assert.equal(false, this.pending_close, 'close is pending');

  this.write_in_progress = true;

  assert.equal(false, flush === undefined, 'must provide flush value');

  this.write_in_progress = true;

  if (flush !== exports.Z_NO_FLUSH && flush !== exports.Z_PARTIAL_FLUSH && flush !== exports.Z_SYNC_FLUSH && flush !== exports.Z_FULL_FLUSH && flush !== exports.Z_FINISH && flush !== exports.Z_BLOCK) {
    throw new Error('Invalid flush value');
  }

  if (input == null) {
    input = Buffer.alloc(0);
    in_len = 0;
    in_off = 0;
  }

  this.strm.avail_in = in_len;
  this.strm.input = input;
  this.strm.next_in = in_off;
  this.strm.avail_out = out_len;
  this.strm.output = out;
  this.strm.next_out = out_off;
  this.flush = flush;

  if (!async) {
    // sync version
    this._process();

    if (this._checkError()) {
      return this._afterSync();
    }
    return;
  }

  // async version
  var self = this;
  process.nextTick(function () {
    self._process();
    self._after();
  });

  return this;
};

Zlib.prototype._afterSync = function () {
  var avail_out = this.strm.avail_out;
  var avail_in = this.strm.avail_in;

  this.write_in_progress = false;

  return [avail_in, avail_out];
};

Zlib.prototype._process = function () {
  var next_expected_header_byte = null;

  // If the avail_out is left at 0, then it means that it ran out
  // of room.  If there was avail_out left over, then it means
  // that all of the input was consumed.
  switch (this.mode) {
    case exports.DEFLATE:
    case exports.GZIP:
    case exports.DEFLATERAW:
      this.err = zlib_deflate.deflate(this.strm, this.flush);
      break;
    case exports.UNZIP:
      if (this.strm.avail_in > 0) {
        next_expected_header_byte = this.strm.next_in;
      }

      switch (this.gzip_id_bytes_read) {
        case 0:
          if (next_expected_header_byte === null) {
            break;
          }

          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID1) {
            this.gzip_id_bytes_read = 1;
            next_expected_header_byte++;

            if (this.strm.avail_in === 1) {
              // The only available byte was already read.
              break;
            }
          } else {
            this.mode = exports.INFLATE;
            break;
          }

        // fallthrough
        case 1:
          if (next_expected_header_byte === null) {
            break;
          }

          if (this.strm.input[next_expected_header_byte] === GZIP_HEADER_ID2) {
            this.gzip_id_bytes_read = 2;
            this.mode = exports.GUNZIP;
          } else {
            // There is no actual difference between INFLATE and INFLATERAW
            // (after initialization).
            this.mode = exports.INFLATE;
          }

          break;
        default:
          throw new Error('invalid number of gzip magic number bytes read');
      }

    // fallthrough
    case exports.INFLATE:
    case exports.GUNZIP:
    case exports.INFLATERAW:
      this.err = zlib_inflate.inflate(this.strm, this.flush

      // If data was encoded with dictionary
      );if (this.err === exports.Z_NEED_DICT && this.dictionary) {
        // Load it
        this.err = zlib_inflate.inflateSetDictionary(this.strm, this.dictionary);
        if (this.err === exports.Z_OK) {
          // And try to decode again
          this.err = zlib_inflate.inflate(this.strm, this.flush);
        } else if (this.err === exports.Z_DATA_ERROR) {
          // Both inflateSetDictionary() and inflate() return Z_DATA_ERROR.
          // Make it possible for After() to tell a bad dictionary from bad
          // input.
          this.err = exports.Z_NEED_DICT;
        }
      }
      while (this.strm.avail_in > 0 && this.mode === exports.GUNZIP && this.err === exports.Z_STREAM_END && this.strm.next_in[0] !== 0x00) {
        // Bytes remain in input buffer. Perhaps this is another compressed
        // member in the same archive, or just trailing garbage.
        // Trailing zero bytes are okay, though, since they are frequently
        // used for padding.

        this.reset();
        this.err = zlib_inflate.inflate(this.strm, this.flush);
      }
      break;
    default:
      throw new Error('Unknown mode ' + this.mode);
  }
};

Zlib.prototype._checkError = function () {
  // Acceptable error states depend on the type of zlib stream.
  switch (this.err) {
    case exports.Z_OK:
    case exports.Z_BUF_ERROR:
      if (this.strm.avail_out !== 0 && this.flush === exports.Z_FINISH) {
        this._error('unexpected end of file');
        return false;
      }
      break;
    case exports.Z_STREAM_END:
      // normal statuses, not fatal
      break;
    case exports.Z_NEED_DICT:
      if (this.dictionary == null) {
        this._error('Missing dictionary');
      } else {
        this._error('Bad dictionary');
      }
      return false;
    default:
      // something else.
      this._error('Zlib error');
      return false;
  }

  return true;
};

Zlib.prototype._after = function () {
  if (!this._checkError()) {
    return;
  }

  var avail_out = this.strm.avail_out;
  var avail_in = this.strm.avail_in;

  this.write_in_progress = false;

  // call the write() cb
  this.callback(avail_in, avail_out);

  if (this.pending_close) {
    this.close();
  }
};

Zlib.prototype._error = function (message) {
  if (this.strm.msg) {
    message = this.strm.msg;
  }
  this.onerror(message, this.err

  // no hope of rescue.
  );this.write_in_progress = false;
  if (this.pending_close) {
    this.close();
  }
};

Zlib.prototype.init = function (windowBits, level, memLevel, strategy, dictionary) {
  assert(arguments.length === 4 || arguments.length === 5, 'init(windowBits, level, memLevel, strategy, [dictionary])');

  assert(windowBits >= 8 && windowBits <= 15, 'invalid windowBits');
  assert(level >= -1 && level <= 9, 'invalid compression level');

  assert(memLevel >= 1 && memLevel <= 9, 'invalid memlevel');

  assert(strategy === exports.Z_FILTERED || strategy === exports.Z_HUFFMAN_ONLY || strategy === exports.Z_RLE || strategy === exports.Z_FIXED || strategy === exports.Z_DEFAULT_STRATEGY, 'invalid strategy');

  this._init(level, windowBits, memLevel, strategy, dictionary);
  this._setDictionary();
};

Zlib.prototype.params = function () {
  throw new Error('deflateParams Not supported');
};

Zlib.prototype.reset = function () {
  this._reset();
  this._setDictionary();
};

Zlib.prototype._init = function (level, windowBits, memLevel, strategy, dictionary) {
  this.level = level;
  this.windowBits = windowBits;
  this.memLevel = memLevel;
  this.strategy = strategy;

  this.flush = exports.Z_NO_FLUSH;

  this.err = exports.Z_OK;

  if (this.mode === exports.GZIP || this.mode === exports.GUNZIP) {
    this.windowBits += 16;
  }

  if (this.mode === exports.UNZIP) {
    this.windowBits += 32;
  }

  if (this.mode === exports.DEFLATERAW || this.mode === exports.INFLATERAW) {
    this.windowBits = -1 * this.windowBits;
  }

  this.strm = new Zstream();

  switch (this.mode) {
    case exports.DEFLATE:
    case exports.GZIP:
    case exports.DEFLATERAW:
      this.err = zlib_deflate.deflateInit2(this.strm, this.level, exports.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);
      break;
    case exports.INFLATE:
    case exports.GUNZIP:
    case exports.INFLATERAW:
    case exports.UNZIP:
      this.err = zlib_inflate.inflateInit2(this.strm, this.windowBits);
      break;
    default:
      throw new Error('Unknown mode ' + this.mode);
  }

  if (this.err !== exports.Z_OK) {
    this._error('Init error');
  }

  this.dictionary = dictionary;

  this.write_in_progress = false;
  this.init_done = true;
};

Zlib.prototype._setDictionary = function () {
  if (this.dictionary == null) {
    return;
  }

  this.err = exports.Z_OK;

  switch (this.mode) {
    case exports.DEFLATE:
    case exports.DEFLATERAW:
      this.err = zlib_deflate.deflateSetDictionary(this.strm, this.dictionary);
      break;
    default:
      break;
  }

  if (this.err !== exports.Z_OK) {
    this._error('Failed to set dictionary');
  }
};

Zlib.prototype._reset = function () {
  this.err = exports.Z_OK;

  switch (this.mode) {
    case exports.DEFLATE:
    case exports.DEFLATERAW:
    case exports.GZIP:
      this.err = zlib_deflate.deflateReset(this.strm);
      break;
    case exports.INFLATE:
    case exports.INFLATERAW:
    case exports.GUNZIP:
      this.err = zlib_inflate.inflateReset(this.strm);
      break;
    default:
      break;
  }

  if (this.err !== exports.Z_OK) {
    this._error('Failed to reset stream');
  }
};

exports.Zlib = Zlib;
}).call(this)}).call(this,require('_process'),require("buffer").Buffer)
},{"_process":186,"assert":19,"buffer":73,"pako/lib/zlib/constants":166,"pako/lib/zlib/deflate.js":168,"pako/lib/zlib/inflate.js":170,"pako/lib/zlib/zstream":174}],71:[function(require,module,exports){
(function (process){(function (){
'use strict';

var Buffer = require('buffer').Buffer;
var Transform = require('stream').Transform;
var binding = require('./binding');
var util = require('util');
var assert = require('assert').ok;
var kMaxLength = require('buffer').kMaxLength;
var kRangeErrorMessage = 'Cannot create final Buffer. It would be larger ' + 'than 0x' + kMaxLength.toString(16) + ' bytes';

// zlib doesn't provide these, so kludge them in following the same
// const naming scheme zlib uses.
binding.Z_MIN_WINDOWBITS = 8;
binding.Z_MAX_WINDOWBITS = 15;
binding.Z_DEFAULT_WINDOWBITS = 15;

// fewer than 64 bytes per chunk is stupid.
// technically it could work with as few as 8, but even 64 bytes
// is absurdly low.  Usually a MB or more is best.
binding.Z_MIN_CHUNK = 64;
binding.Z_MAX_CHUNK = Infinity;
binding.Z_DEFAULT_CHUNK = 16 * 1024;

binding.Z_MIN_MEMLEVEL = 1;
binding.Z_MAX_MEMLEVEL = 9;
binding.Z_DEFAULT_MEMLEVEL = 8;

binding.Z_MIN_LEVEL = -1;
binding.Z_MAX_LEVEL = 9;
binding.Z_DEFAULT_LEVEL = binding.Z_DEFAULT_COMPRESSION;

// expose all the zlib constants
var bkeys = Object.keys(binding);
for (var bk = 0; bk < bkeys.length; bk++) {
  var bkey = bkeys[bk];
  if (bkey.match(/^Z/)) {
    Object.defineProperty(exports, bkey, {
      enumerable: true, value: binding[bkey], writable: false
    });
  }
}

// translation table for return codes.
var codes = {
  Z_OK: binding.Z_OK,
  Z_STREAM_END: binding.Z_STREAM_END,
  Z_NEED_DICT: binding.Z_NEED_DICT,
  Z_ERRNO: binding.Z_ERRNO,
  Z_STREAM_ERROR: binding.Z_STREAM_ERROR,
  Z_DATA_ERROR: binding.Z_DATA_ERROR,
  Z_MEM_ERROR: binding.Z_MEM_ERROR,
  Z_BUF_ERROR: binding.Z_BUF_ERROR,
  Z_VERSION_ERROR: binding.Z_VERSION_ERROR
};

var ckeys = Object.keys(codes);
for (var ck = 0; ck < ckeys.length; ck++) {
  var ckey = ckeys[ck];
  codes[codes[ckey]] = ckey;
}

Object.defineProperty(exports, 'codes', {
  enumerable: true, value: Object.freeze(codes), writable: false
});

exports.Deflate = Deflate;
exports.Inflate = Inflate;
exports.Gzip = Gzip;
exports.Gunzip = Gunzip;
exports.DeflateRaw = DeflateRaw;
exports.InflateRaw = InflateRaw;
exports.Unzip = Unzip;

exports.createDeflate = function (o) {
  return new Deflate(o);
};

exports.createInflate = function (o) {
  return new Inflate(o);
};

exports.createDeflateRaw = function (o) {
  return new DeflateRaw(o);
};

exports.createInflateRaw = function (o) {
  return new InflateRaw(o);
};

exports.createGzip = function (o) {
  return new Gzip(o);
};

exports.createGunzip = function (o) {
  return new Gunzip(o);
};

exports.createUnzip = function (o) {
  return new Unzip(o);
};

// Convenience methods.
// compress/decompress a string or buffer in one step.
exports.deflate = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Deflate(opts), buffer, callback);
};

exports.deflateSync = function (buffer, opts) {
  return zlibBufferSync(new Deflate(opts), buffer);
};

exports.gzip = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Gzip(opts), buffer, callback);
};

exports.gzipSync = function (buffer, opts) {
  return zlibBufferSync(new Gzip(opts), buffer);
};

exports.deflateRaw = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new DeflateRaw(opts), buffer, callback);
};

exports.deflateRawSync = function (buffer, opts) {
  return zlibBufferSync(new DeflateRaw(opts), buffer);
};

exports.unzip = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Unzip(opts), buffer, callback);
};

exports.unzipSync = function (buffer, opts) {
  return zlibBufferSync(new Unzip(opts), buffer);
};

exports.inflate = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Inflate(opts), buffer, callback);
};

exports.inflateSync = function (buffer, opts) {
  return zlibBufferSync(new Inflate(opts), buffer);
};

exports.gunzip = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new Gunzip(opts), buffer, callback);
};

exports.gunzipSync = function (buffer, opts) {
  return zlibBufferSync(new Gunzip(opts), buffer);
};

exports.inflateRaw = function (buffer, opts, callback) {
  if (typeof opts === 'function') {
    callback = opts;
    opts = {};
  }
  return zlibBuffer(new InflateRaw(opts), buffer, callback);
};

exports.inflateRawSync = function (buffer, opts) {
  return zlibBufferSync(new InflateRaw(opts), buffer);
};

function zlibBuffer(engine, buffer, callback) {
  var buffers = [];
  var nread = 0;

  engine.on('error', onError);
  engine.on('end', onEnd);

  engine.end(buffer);
  flow();

  function flow() {
    var chunk;
    while (null !== (chunk = engine.read())) {
      buffers.push(chunk);
      nread += chunk.length;
    }
    engine.once('readable', flow);
  }

  function onError(err) {
    engine.removeListener('end', onEnd);
    engine.removeListener('readable', flow);
    callback(err);
  }

  function onEnd() {
    var buf;
    var err = null;

    if (nread >= kMaxLength) {
      err = new RangeError(kRangeErrorMessage);
    } else {
      buf = Buffer.concat(buffers, nread);
    }

    buffers = [];
    engine.close();
    callback(err, buf);
  }
}

function zlibBufferSync(engine, buffer) {
  if (typeof buffer === 'string') buffer = Buffer.from(buffer);

  if (!Buffer.isBuffer(buffer)) throw new TypeError('Not a string or buffer');

  var flushFlag = engine._finishFlushFlag;

  return engine._processChunk(buffer, flushFlag);
}

// generic zlib
// minimal 2-byte header
function Deflate(opts) {
  if (!(this instanceof Deflate)) return new Deflate(opts);
  Zlib.call(this, opts, binding.DEFLATE);
}

function Inflate(opts) {
  if (!(this instanceof Inflate)) return new Inflate(opts);
  Zlib.call(this, opts, binding.INFLATE);
}

// gzip - bigger header, same deflate compression
function Gzip(opts) {
  if (!(this instanceof Gzip)) return new Gzip(opts);
  Zlib.call(this, opts, binding.GZIP);
}

function Gunzip(opts) {
  if (!(this instanceof Gunzip)) return new Gunzip(opts);
  Zlib.call(this, opts, binding.GUNZIP);
}

// raw - no header
function DeflateRaw(opts) {
  if (!(this instanceof DeflateRaw)) return new DeflateRaw(opts);
  Zlib.call(this, opts, binding.DEFLATERAW);
}

function InflateRaw(opts) {
  if (!(this instanceof InflateRaw)) return new InflateRaw(opts);
  Zlib.call(this, opts, binding.INFLATERAW);
}

// auto-detect header.
function Unzip(opts) {
  if (!(this instanceof Unzip)) return new Unzip(opts);
  Zlib.call(this, opts, binding.UNZIP);
}

function isValidFlushFlag(flag) {
  return flag === binding.Z_NO_FLUSH || flag === binding.Z_PARTIAL_FLUSH || flag === binding.Z_SYNC_FLUSH || flag === binding.Z_FULL_FLUSH || flag === binding.Z_FINISH || flag === binding.Z_BLOCK;
}

// the Zlib class they all inherit from
// This thing manages the queue of requests, and returns
// true or false if there is anything in the queue when
// you call the .write() method.

function Zlib(opts, mode) {
  var _this = this;

  this._opts = opts = opts || {};
  this._chunkSize = opts.chunkSize || exports.Z_DEFAULT_CHUNK;

  Transform.call(this, opts);

  if (opts.flush && !isValidFlushFlag(opts.flush)) {
    throw new Error('Invalid flush flag: ' + opts.flush);
  }
  if (opts.finishFlush && !isValidFlushFlag(opts.finishFlush)) {
    throw new Error('Invalid flush flag: ' + opts.finishFlush);
  }

  this._flushFlag = opts.flush || binding.Z_NO_FLUSH;
  this._finishFlushFlag = typeof opts.finishFlush !== 'undefined' ? opts.finishFlush : binding.Z_FINISH;

  if (opts.chunkSize) {
    if (opts.chunkSize < exports.Z_MIN_CHUNK || opts.chunkSize > exports.Z_MAX_CHUNK) {
      throw new Error('Invalid chunk size: ' + opts.chunkSize);
    }
  }

  if (opts.windowBits) {
    if (opts.windowBits < exports.Z_MIN_WINDOWBITS || opts.windowBits > exports.Z_MAX_WINDOWBITS) {
      throw new Error('Invalid windowBits: ' + opts.windowBits);
    }
  }

  if (opts.level) {
    if (opts.level < exports.Z_MIN_LEVEL || opts.level > exports.Z_MAX_LEVEL) {
      throw new Error('Invalid compression level: ' + opts.level);
    }
  }

  if (opts.memLevel) {
    if (opts.memLevel < exports.Z_MIN_MEMLEVEL || opts.memLevel > exports.Z_MAX_MEMLEVEL) {
      throw new Error('Invalid memLevel: ' + opts.memLevel);
    }
  }

  if (opts.strategy) {
    if (opts.strategy != exports.Z_FILTERED && opts.strategy != exports.Z_HUFFMAN_ONLY && opts.strategy != exports.Z_RLE && opts.strategy != exports.Z_FIXED && opts.strategy != exports.Z_DEFAULT_STRATEGY) {
      throw new Error('Invalid strategy: ' + opts.strategy);
    }
  }

  if (opts.dictionary) {
    if (!Buffer.isBuffer(opts.dictionary)) {
      throw new Error('Invalid dictionary: it should be a Buffer instance');
    }
  }

  this._handle = new binding.Zlib(mode);

  var self = this;
  this._hadError = false;
  this._handle.onerror = function (message, errno) {
    // there is no way to cleanly recover.
    // continuing only obscures problems.
    _close(self);
    self._hadError = true;

    var error = new Error(message);
    error.errno = errno;
    error.code = exports.codes[errno];
    self.emit('error', error);
  };

  var level = exports.Z_DEFAULT_COMPRESSION;
  if (typeof opts.level === 'number') level = opts.level;

  var strategy = exports.Z_DEFAULT_STRATEGY;
  if (typeof opts.strategy === 'number') strategy = opts.strategy;

  this._handle.init(opts.windowBits || exports.Z_DEFAULT_WINDOWBITS, level, opts.memLevel || exports.Z_DEFAULT_MEMLEVEL, strategy, opts.dictionary);

  this._buffer = Buffer.allocUnsafe(this._chunkSize);
  this._offset = 0;
  this._level = level;
  this._strategy = strategy;

  this.once('end', this.close);

  Object.defineProperty(this, '_closed', {
    get: function () {
      return !_this._handle;
    },
    configurable: true,
    enumerable: true
  });
}

util.inherits(Zlib, Transform);

Zlib.prototype.params = function (level, strategy, callback) {
  if (level < exports.Z_MIN_LEVEL || level > exports.Z_MAX_LEVEL) {
    throw new RangeError('Invalid compression level: ' + level);
  }
  if (strategy != exports.Z_FILTERED && strategy != exports.Z_HUFFMAN_ONLY && strategy != exports.Z_RLE && strategy != exports.Z_FIXED && strategy != exports.Z_DEFAULT_STRATEGY) {
    throw new TypeError('Invalid strategy: ' + strategy);
  }

  if (this._level !== level || this._strategy !== strategy) {
    var self = this;
    this.flush(binding.Z_SYNC_FLUSH, function () {
      assert(self._handle, 'zlib binding closed');
      self._handle.params(level, strategy);
      if (!self._hadError) {
        self._level = level;
        self._strategy = strategy;
        if (callback) callback();
      }
    });
  } else {
    process.nextTick(callback);
  }
};

Zlib.prototype.reset = function () {
  assert(this._handle, 'zlib binding closed');
  return this._handle.reset();
};

// This is the _flush function called by the transform class,
// internally, when the last chunk has been written.
Zlib.prototype._flush = function (callback) {
  this._transform(Buffer.alloc(0), '', callback);
};

Zlib.prototype.flush = function (kind, callback) {
  var _this2 = this;

  var ws = this._writableState;

  if (typeof kind === 'function' || kind === undefined && !callback) {
    callback = kind;
    kind = binding.Z_FULL_FLUSH;
  }

  if (ws.ended) {
    if (callback) process.nextTick(callback);
  } else if (ws.ending) {
    if (callback) this.once('end', callback);
  } else if (ws.needDrain) {
    if (callback) {
      this.once('drain', function () {
        return _this2.flush(kind, callback);
      });
    }
  } else {
    this._flushFlag = kind;
    this.write(Buffer.alloc(0), '', callback);
  }
};

Zlib.prototype.close = function (callback) {
  _close(this, callback);
  process.nextTick(emitCloseNT, this);
};

function _close(engine, callback) {
  if (callback) process.nextTick(callback);

  // Caller may invoke .close after a zlib error (which will null _handle).
  if (!engine._handle) return;

  engine._handle.close();
  engine._handle = null;
}

function emitCloseNT(self) {
  self.emit('close');
}

Zlib.prototype._transform = function (chunk, encoding, cb) {
  var flushFlag;
  var ws = this._writableState;
  var ending = ws.ending || ws.ended;
  var last = ending && (!chunk || ws.length === chunk.length);

  if (chunk !== null && !Buffer.isBuffer(chunk)) return cb(new Error('invalid input'));

  if (!this._handle) return cb(new Error('zlib binding closed'));

  // If it's the last chunk, or a final flush, we use the Z_FINISH flush flag
  // (or whatever flag was provided using opts.finishFlush).
  // If it's explicitly flushing at some other time, then we use
  // Z_FULL_FLUSH. Otherwise, use Z_NO_FLUSH for maximum compression
  // goodness.
  if (last) flushFlag = this._finishFlushFlag;else {
    flushFlag = this._flushFlag;
    // once we've flushed the last of the queue, stop flushing and
    // go back to the normal behavior.
    if (chunk.length >= ws.length) {
      this._flushFlag = this._opts.flush || binding.Z_NO_FLUSH;
    }
  }

  this._processChunk(chunk, flushFlag, cb);
};

Zlib.prototype._processChunk = function (chunk, flushFlag, cb) {
  var availInBefore = chunk && chunk.length;
  var availOutBefore = this._chunkSize - this._offset;
  var inOff = 0;

  var self = this;

  var async = typeof cb === 'function';

  if (!async) {
    var buffers = [];
    var nread = 0;

    var error;
    this.on('error', function (er) {
      error = er;
    });

    assert(this._handle, 'zlib binding closed');
    do {
      var res = this._handle.writeSync(flushFlag, chunk, // in
      inOff, // in_off
      availInBefore, // in_len
      this._buffer, // out
      this._offset, //out_off
      availOutBefore); // out_len
    } while (!this._hadError && callback(res[0], res[1]));

    if (this._hadError) {
      throw error;
    }

    if (nread >= kMaxLength) {
      _close(this);
      throw new RangeError(kRangeErrorMessage);
    }

    var buf = Buffer.concat(buffers, nread);
    _close(this);

    return buf;
  }

  assert(this._handle, 'zlib binding closed');
  var req = this._handle.write(flushFlag, chunk, // in
  inOff, // in_off
  availInBefore, // in_len
  this._buffer, // out
  this._offset, //out_off
  availOutBefore); // out_len

  req.buffer = chunk;
  req.callback = callback;

  function callback(availInAfter, availOutAfter) {
    // When the callback is used in an async write, the callback's
    // context is the `req` object that was created. The req object
    // is === this._handle, and that's why it's important to null
    // out the values after they are done being used. `this._handle`
    // can stay in memory longer than the callback and buffer are needed.
    if (this) {
      this.buffer = null;
      this.callback = null;
    }

    if (self._hadError) return;

    var have = availOutBefore - availOutAfter;
    assert(have >= 0, 'have should not go down');

    if (have > 0) {
      var out = self._buffer.slice(self._offset, self._offset + have);
      self._offset += have;
      // serve some output to the consumer.
      if (async) {
        self.push(out);
      } else {
        buffers.push(out);
        nread += out.length;
      }
    }

    // exhausted the output buffer, or used all the input create a new one.
    if (availOutAfter === 0 || self._offset >= self._chunkSize) {
      availOutBefore = self._chunkSize;
      self._offset = 0;
      self._buffer = Buffer.allocUnsafe(self._chunkSize);
    }

    if (availOutAfter === 0) {
      // Not actually done.  Need to reprocess.
      // Also, update the availInBefore to the availInAfter value,
      // so that if we have to hit it a third (fourth, etc.) time,
      // it'll have the correct byte counts.
      inOff += availInBefore - availInAfter;
      availInBefore = availInAfter;

      if (!async) return true;

      var newReq = self._handle.write(flushFlag, chunk, inOff, availInBefore, self._buffer, self._offset, self._chunkSize);
      newReq.callback = callback; // this same function
      newReq.buffer = chunk;
      return;
    }

    if (!async) return false;

    // finished with the chunk.
    cb();
  }
};

util.inherits(Deflate, Zlib);
util.inherits(Inflate, Zlib);
util.inherits(Gzip, Zlib);
util.inherits(Gunzip, Zlib);
util.inherits(DeflateRaw, Zlib);
util.inherits(InflateRaw, Zlib);
util.inherits(Unzip, Zlib);
}).call(this)}).call(this,require('_process'))
},{"./binding":70,"_process":186,"assert":19,"buffer":73,"stream":207,"util":226}],72:[function(require,module,exports){
(function (Buffer){(function (){
module.exports = function xor (a, b) {
  var length = Math.min(a.length, b.length)
  var buffer = new Buffer(length)

  for (var i = 0; i < length; ++i) {
    buffer[i] = a[i] ^ b[i]
  }

  return buffer
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":73}],73:[function(require,module,exports){
(function (Buffer){(function (){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species != null &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayLike(value)
  }

  if (value == null) {
    throw TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  var valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  var b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(
      value[Symbol.toPrimitive]('string'), encodingOrOffset, length
    )
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      buf = Buffer.from(buf)
    }
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  var len = string.length
  var mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
        : (firstByte > 0xBF) ? 2
          : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (var i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"base64-js":24,"buffer":73,"ieee754":153}],74:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var callBind = require('./');

var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));

module.exports = function callBoundIntrinsic(name, allowMissing) {
	var intrinsic = GetIntrinsic(name, !!allowMissing);
	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
		return callBind(intrinsic);
	}
	return intrinsic;
};

},{"./":75,"get-intrinsic":119}],75:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var GetIntrinsic = require('get-intrinsic');

var $apply = GetIntrinsic('%Function.prototype.apply%');
var $call = GetIntrinsic('%Function.prototype.call%');
var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);

var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);
var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);
var $max = GetIntrinsic('%Math.max%');

if ($defineProperty) {
	try {
		$defineProperty({}, 'a', { value: 1 });
	} catch (e) {
		// IE 8 has a broken defineProperty
		$defineProperty = null;
	}
}

module.exports = function callBind(originalFunction) {
	var func = $reflectApply(bind, $call, arguments);
	if ($gOPD && $defineProperty) {
		var desc = $gOPD(func, 'length');
		if (desc.configurable) {
			// original length, plus the receiver, minus any additional arguments (after the receiver)
			$defineProperty(
				func,
				'length',
				{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }
			);
		}
	}
	return func;
};

var applyBind = function applyBind() {
	return $reflectApply(bind, $apply, arguments);
};

if ($defineProperty) {
	$defineProperty(module.exports, 'apply', { value: applyBind });
} else {
	module.exports.apply = applyBind;
}

},{"function-bind":118,"get-intrinsic":119}],76:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var Transform = require('stream').Transform
var StringDecoder = require('string_decoder').StringDecoder
var inherits = require('inherits')

function CipherBase (hashMode) {
  Transform.call(this)
  this.hashMode = typeof hashMode === 'string'
  if (this.hashMode) {
    this[hashMode] = this._finalOrDigest
  } else {
    this.final = this._finalOrDigest
  }
  if (this._final) {
    this.__final = this._final
    this._final = null
  }
  this._decoder = null
  this._encoding = null
}
inherits(CipherBase, Transform)

CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = Buffer.from(data, inputEnc)
  }

  var outData = this._update(data)
  if (this.hashMode) return this

  if (outputEnc) {
    outData = this._toString(outData, outputEnc)
  }

  return outData
}

CipherBase.prototype.setAutoPadding = function () {}
CipherBase.prototype.getAuthTag = function () {
  throw new Error('trying to get auth tag in unsupported state')
}

CipherBase.prototype.setAuthTag = function () {
  throw new Error('trying to set auth tag in unsupported state')
}

CipherBase.prototype.setAAD = function () {
  throw new Error('trying to set aad in unsupported state')
}

CipherBase.prototype._transform = function (data, _, next) {
  var err
  try {
    if (this.hashMode) {
      this._update(data)
    } else {
      this.push(this._update(data))
    }
  } catch (e) {
    err = e
  } finally {
    next(err)
  }
}
CipherBase.prototype._flush = function (done) {
  var err
  try {
    this.push(this.__final())
  } catch (e) {
    err = e
  }

  done(err)
}
CipherBase.prototype._finalOrDigest = function (outputEnc) {
  var outData = this.__final() || Buffer.alloc(0)
  if (outputEnc) {
    outData = this._toString(outData, outputEnc, true)
  }
  return outData
}

CipherBase.prototype._toString = function (value, enc, fin) {
  if (!this._decoder) {
    this._decoder = new StringDecoder(enc)
    this._encoding = enc
  }

  if (this._encoding !== enc) throw new Error('can\'t switch encodings')

  var out = this._decoder.write(value)
  if (fin) {
    out += this._decoder.end()
  }

  return out
}

module.exports = CipherBase

},{"inherits":154,"safe-buffer":197,"stream":207,"string_decoder":222}],77:[function(require,module,exports){
module.exports={
  "O_RDONLY": 0,
  "O_WRONLY": 1,
  "O_RDWR": 2,
  "S_IFMT": 61440,
  "S_IFREG": 32768,
  "S_IFDIR": 16384,
  "S_IFCHR": 8192,
  "S_IFBLK": 24576,
  "S_IFIFO": 4096,
  "S_IFLNK": 40960,
  "S_IFSOCK": 49152,
  "O_CREAT": 512,
  "O_EXCL": 2048,
  "O_NOCTTY": 131072,
  "O_TRUNC": 1024,
  "O_APPEND": 8,
  "O_DIRECTORY": 1048576,
  "O_NOFOLLOW": 256,
  "O_SYNC": 128,
  "O_SYMLINK": 2097152,
  "O_NONBLOCK": 4,
  "S_IRWXU": 448,
  "S_IRUSR": 256,
  "S_IWUSR": 128,
  "S_IXUSR": 64,
  "S_IRWXG": 56,
  "S_IRGRP": 32,
  "S_IWGRP": 16,
  "S_IXGRP": 8,
  "S_IRWXO": 7,
  "S_IROTH": 4,
  "S_IWOTH": 2,
  "S_IXOTH": 1,
  "E2BIG": 7,
  "EACCES": 13,
  "EADDRINUSE": 48,
  "EADDRNOTAVAIL": 49,
  "EAFNOSUPPORT": 47,
  "EAGAIN": 35,
  "EALREADY": 37,
  "EBADF": 9,
  "EBADMSG": 94,
  "EBUSY": 16,
  "ECANCELED": 89,
  "ECHILD": 10,
  "ECONNABORTED": 53,
  "ECONNREFUSED": 61,
  "ECONNRESET": 54,
  "EDEADLK": 11,
  "EDESTADDRREQ": 39,
  "EDOM": 33,
  "EDQUOT": 69,
  "EEXIST": 17,
  "EFAULT": 14,
  "EFBIG": 27,
  "EHOSTUNREACH": 65,
  "EIDRM": 90,
  "EILSEQ": 92,
  "EINPROGRESS": 36,
  "EINTR": 4,
  "EINVAL": 22,
  "EIO": 5,
  "EISCONN": 56,
  "EISDIR": 21,
  "ELOOP": 62,
  "EMFILE": 24,
  "EMLINK": 31,
  "EMSGSIZE": 40,
  "EMULTIHOP": 95,
  "ENAMETOOLONG": 63,
  "ENETDOWN": 50,
  "ENETRESET": 52,
  "ENETUNREACH": 51,
  "ENFILE": 23,
  "ENOBUFS": 55,
  "ENODATA": 96,
  "ENODEV": 19,
  "ENOENT": 2,
  "ENOEXEC": 8,
  "ENOLCK": 77,
  "ENOLINK": 97,
  "ENOMEM": 12,
  "ENOMSG": 91,
  "ENOPROTOOPT": 42,
  "ENOSPC": 28,
  "ENOSR": 98,
  "ENOSTR": 99,
  "ENOSYS": 78,
  "ENOTCONN": 57,
  "ENOTDIR": 20,
  "ENOTEMPTY": 66,
  "ENOTSOCK": 38,
  "ENOTSUP": 45,
  "ENOTTY": 25,
  "ENXIO": 6,
  "EOPNOTSUPP": 102,
  "EOVERFLOW": 84,
  "EPERM": 1,
  "EPIPE": 32,
  "EPROTO": 100,
  "EPROTONOSUPPORT": 43,
  "EPROTOTYPE": 41,
  "ERANGE": 34,
  "EROFS": 30,
  "ESPIPE": 29,
  "ESRCH": 3,
  "ESTALE": 70,
  "ETIME": 101,
  "ETIMEDOUT": 60,
  "ETXTBSY": 26,
  "EWOULDBLOCK": 35,
  "EXDEV": 18,
  "SIGHUP": 1,
  "SIGINT": 2,
  "SIGQUIT": 3,
  "SIGILL": 4,
  "SIGTRAP": 5,
  "SIGABRT": 6,
  "SIGIOT": 6,
  "SIGBUS": 10,
  "SIGFPE": 8,
  "SIGKILL": 9,
  "SIGUSR1": 30,
  "SIGSEGV": 11,
  "SIGUSR2": 31,
  "SIGPIPE": 13,
  "SIGALRM": 14,
  "SIGTERM": 15,
  "SIGCHLD": 20,
  "SIGCONT": 19,
  "SIGSTOP": 17,
  "SIGTSTP": 18,
  "SIGTTIN": 21,
  "SIGTTOU": 22,
  "SIGURG": 16,
  "SIGXCPU": 24,
  "SIGXFSZ": 25,
  "SIGVTALRM": 26,
  "SIGPROF": 27,
  "SIGWINCH": 28,
  "SIGIO": 23,
  "SIGSYS": 12,
  "SSL_OP_ALL": 2147486719,
  "SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION": 262144,
  "SSL_OP_CIPHER_SERVER_PREFERENCE": 4194304,
  "SSL_OP_CISCO_ANYCONNECT": 32768,
  "SSL_OP_COOKIE_EXCHANGE": 8192,
  "SSL_OP_CRYPTOPRO_TLSEXT_BUG": 2147483648,
  "SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS": 2048,
  "SSL_OP_EPHEMERAL_RSA": 0,
  "SSL_OP_LEGACY_SERVER_CONNECT": 4,
  "SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER": 32,
  "SSL_OP_MICROSOFT_SESS_ID_BUG": 1,
  "SSL_OP_MSIE_SSLV2_RSA_PADDING": 0,
  "SSL_OP_NETSCAPE_CA_DN_BUG": 536870912,
  "SSL_OP_NETSCAPE_CHALLENGE_BUG": 2,
  "SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG": 1073741824,
  "SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG": 8,
  "SSL_OP_NO_COMPRESSION": 131072,
  "SSL_OP_NO_QUERY_MTU": 4096,
  "SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION": 65536,
  "SSL_OP_NO_SSLv2": 16777216,
  "SSL_OP_NO_SSLv3": 33554432,
  "SSL_OP_NO_TICKET": 16384,
  "SSL_OP_NO_TLSv1": 67108864,
  "SSL_OP_NO_TLSv1_1": 268435456,
  "SSL_OP_NO_TLSv1_2": 134217728,
  "SSL_OP_PKCS1_CHECK_1": 0,
  "SSL_OP_PKCS1_CHECK_2": 0,
  "SSL_OP_SINGLE_DH_USE": 1048576,
  "SSL_OP_SINGLE_ECDH_USE": 524288,
  "SSL_OP_SSLEAY_080_CLIENT_DH_BUG": 128,
  "SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG": 0,
  "SSL_OP_TLS_BLOCK_PADDING_BUG": 512,
  "SSL_OP_TLS_D5_BUG": 256,
  "SSL_OP_TLS_ROLLBACK_BUG": 8388608,
  "ENGINE_METHOD_DSA": 2,
  "ENGINE_METHOD_DH": 4,
  "ENGINE_METHOD_RAND": 8,
  "ENGINE_METHOD_ECDH": 16,
  "ENGINE_METHOD_ECDSA": 32,
  "ENGINE_METHOD_CIPHERS": 64,
  "ENGINE_METHOD_DIGESTS": 128,
  "ENGINE_METHOD_STORE": 256,
  "ENGINE_METHOD_PKEY_METHS": 512,
  "ENGINE_METHOD_PKEY_ASN1_METHS": 1024,
  "ENGINE_METHOD_ALL": 65535,
  "ENGINE_METHOD_NONE": 0,
  "DH_CHECK_P_NOT_SAFE_PRIME": 2,
  "DH_CHECK_P_NOT_PRIME": 1,
  "DH_UNABLE_TO_CHECK_GENERATOR": 4,
  "DH_NOT_SUITABLE_GENERATOR": 8,
  "NPN_ENABLED": 1,
  "RSA_PKCS1_PADDING": 1,
  "RSA_SSLV23_PADDING": 2,
  "RSA_NO_PADDING": 3,
  "RSA_PKCS1_OAEP_PADDING": 4,
  "RSA_X931_PADDING": 5,
  "RSA_PKCS1_PSS_PADDING": 6,
  "POINT_CONVERSION_COMPRESSED": 2,
  "POINT_CONVERSION_UNCOMPRESSED": 4,
  "POINT_CONVERSION_HYBRID": 6,
  "F_OK": 0,
  "R_OK": 4,
  "W_OK": 2,
  "X_OK": 1,
  "UV_UDP_REUSEADDR": 4
}

},{}],78:[function(require,module,exports){
(function (Buffer){(function (){
var elliptic = require('elliptic')
var BN = require('bn.js')

module.exports = function createECDH (curve) {
  return new ECDH(curve)
}

var aliases = {
  secp256k1: {
    name: 'secp256k1',
    byteLength: 32
  },
  secp224r1: {
    name: 'p224',
    byteLength: 28
  },
  prime256v1: {
    name: 'p256',
    byteLength: 32
  },
  prime192v1: {
    name: 'p192',
    byteLength: 24
  },
  ed25519: {
    name: 'ed25519',
    byteLength: 32
  },
  secp384r1: {
    name: 'p384',
    byteLength: 48
  },
  secp521r1: {
    name: 'p521',
    byteLength: 66
  }
}

aliases.p224 = aliases.secp224r1
aliases.p256 = aliases.secp256r1 = aliases.prime256v1
aliases.p192 = aliases.secp192r1 = aliases.prime192v1
aliases.p384 = aliases.secp384r1
aliases.p521 = aliases.secp521r1

function ECDH (curve) {
  this.curveType = aliases[curve]
  if (!this.curveType) {
    this.curveType = {
      name: curve
    }
  }
  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap
  this.keys = void 0
}

ECDH.prototype.generateKeys = function (enc, format) {
  this.keys = this.curve.genKeyPair()
  return this.getPublicKey(enc, format)
}

ECDH.prototype.computeSecret = function (other, inenc, enc) {
  inenc = inenc || 'utf8'
  if (!Buffer.isBuffer(other)) {
    other = new Buffer(other, inenc)
  }
  var otherPub = this.curve.keyFromPublic(other).getPublic()
  var out = otherPub.mul(this.keys.getPrivate()).getX()
  return formatReturnValue(out, enc, this.curveType.byteLength)
}

ECDH.prototype.getPublicKey = function (enc, format) {
  var key = this.keys.getPublic(format === 'compressed', true)
  if (format === 'hybrid') {
    if (key[key.length - 1] % 2) {
      key[0] = 7
    } else {
      key[0] = 6
    }
  }
  return formatReturnValue(key, enc)
}

ECDH.prototype.getPrivateKey = function (enc) {
  return formatReturnValue(this.keys.getPrivate(), enc)
}

ECDH.prototype.setPublicKey = function (pub, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc)
  }
  this.keys._importPublic(pub)
  return this
}

ECDH.prototype.setPrivateKey = function (priv, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc)
  }

  var _priv = new BN(priv)
  _priv = _priv.toString(16)
  this.keys = this.curve.genKeyPair()
  this.keys._importPrivate(_priv)
  return this
}

function formatReturnValue (bn, enc, len) {
  if (!Array.isArray(bn)) {
    bn = bn.toArray()
  }
  var buf = new Buffer(bn)
  if (len && buf.length < len) {
    var zeros = new Buffer(len - buf.length)
    zeros.fill(0)
    buf = Buffer.concat([zeros, buf])
  }
  if (!enc) {
    return buf
  } else {
    return buf.toString(enc)
  }
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"bn.js":79,"buffer":73,"elliptic":96}],79:[function(require,module,exports){
arguments[4][18][0].apply(exports,arguments)
},{"buffer":27,"dup":18}],80:[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var MD5 = require('md5.js')
var RIPEMD160 = require('ripemd160')
var sha = require('sha.js')
var Base = require('cipher-base')

function Hash (hash) {
  Base.call(this, 'digest')

  this._hash = hash
}

inherits(Hash, Base)

Hash.prototype._update = function (data) {
  this._hash.update(data)
}

Hash.prototype._final = function () {
  return this._hash.digest()
}

module.exports = function createHash (alg) {
  alg = alg.toLowerCase()
  if (alg === 'md5') return new MD5()
  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()

  return new Hash(sha(alg))
}

},{"cipher-base":76,"inherits":154,"md5.js":158,"ripemd160":196,"sha.js":200}],81:[function(require,module,exports){
var MD5 = require('md5.js')

module.exports = function (buffer) {
  return new MD5().update(buffer).digest()
}

},{"md5.js":158}],82:[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var Legacy = require('./legacy')
var Base = require('cipher-base')
var Buffer = require('safe-buffer').Buffer
var md5 = require('create-hash/md5')
var RIPEMD160 = require('ripemd160')

var sha = require('sha.js')

var ZEROS = Buffer.alloc(128)

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  this._alg = alg
  this._key = key
  if (key.length > blocksize) {
    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
    key = hash.update(key).digest()
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }
  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
  this._hash.update(ipad)
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.update(data)
}

Hmac.prototype._final = function () {
  var h = this._hash.digest()
  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)
  return hash.update(this._opad).update(h).digest()
}

module.exports = function createHmac (alg, key) {
  alg = alg.toLowerCase()
  if (alg === 'rmd160' || alg === 'ripemd160') {
    return new Hmac('rmd160', key)
  }
  if (alg === 'md5') {
    return new Legacy(md5, key)
  }
  return new Hmac(alg, key)
}

},{"./legacy":83,"cipher-base":76,"create-hash/md5":81,"inherits":154,"ripemd160":196,"safe-buffer":197,"sha.js":200}],83:[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var Buffer = require('safe-buffer').Buffer

var Base = require('cipher-base')

var ZEROS = Buffer.alloc(128)
var blocksize = 64

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  this._alg = alg
  this._key = key

  if (key.length > blocksize) {
    key = alg(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  this._hash = [ipad]
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.push(data)
}

Hmac.prototype._final = function () {
  var h = this._alg(Buffer.concat(this._hash))
  return this._alg(Buffer.concat([this._opad, h]))
}
module.exports = Hmac

},{"cipher-base":76,"inherits":154,"safe-buffer":197}],84:[function(require,module,exports){
'use strict'

exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')
exports.createHash = exports.Hash = require('create-hash')
exports.createHmac = exports.Hmac = require('create-hmac')

var algos = require('browserify-sign/algos')
var algoKeys = Object.keys(algos)
var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)
exports.getHashes = function () {
  return hashes
}

var p = require('pbkdf2')
exports.pbkdf2 = p.pbkdf2
exports.pbkdf2Sync = p.pbkdf2Sync

var aes = require('browserify-cipher')

exports.Cipher = aes.Cipher
exports.createCipher = aes.createCipher
exports.Cipheriv = aes.Cipheriv
exports.createCipheriv = aes.createCipheriv
exports.Decipher = aes.Decipher
exports.createDecipher = aes.createDecipher
exports.Decipheriv = aes.Decipheriv
exports.createDecipheriv = aes.createDecipheriv
exports.getCiphers = aes.getCiphers
exports.listCiphers = aes.listCiphers

var dh = require('diffie-hellman')

exports.DiffieHellmanGroup = dh.DiffieHellmanGroup
exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup
exports.getDiffieHellman = dh.getDiffieHellman
exports.createDiffieHellman = dh.createDiffieHellman
exports.DiffieHellman = dh.DiffieHellman

var sign = require('browserify-sign')

exports.createSign = sign.createSign
exports.Sign = sign.Sign
exports.createVerify = sign.createVerify
exports.Verify = sign.Verify

exports.createECDH = require('create-ecdh')

var publicEncrypt = require('public-encrypt')

exports.publicEncrypt = publicEncrypt.publicEncrypt
exports.privateEncrypt = publicEncrypt.privateEncrypt
exports.publicDecrypt = publicEncrypt.publicDecrypt
exports.privateDecrypt = publicEncrypt.privateDecrypt

// the least I can do is make error messages for the rest of the node.js/crypto api.
// ;[
//   'createCredentials'
// ].forEach(function (name) {
//   exports[name] = function () {
//     throw new Error([
//       'sorry, ' + name + ' is not implemented yet',
//       'we accept pull requests',
//       'https://github.com/crypto-browserify/crypto-browserify'
//     ].join('\n'))
//   }
// })

var rf = require('randomfill')

exports.randomFill = rf.randomFill
exports.randomFillSync = rf.randomFillSync

exports.createCredentials = function () {
  throw new Error([
    'sorry, createCredentials is not implemented yet',
    'we accept pull requests',
    'https://github.com/crypto-browserify/crypto-browserify'
  ].join('\n'))
}

exports.constants = {
  'DH_CHECK_P_NOT_SAFE_PRIME': 2,
  'DH_CHECK_P_NOT_PRIME': 1,
  'DH_UNABLE_TO_CHECK_GENERATOR': 4,
  'DH_NOT_SUITABLE_GENERATOR': 8,
  'NPN_ENABLED': 1,
  'ALPN_ENABLED': 1,
  'RSA_PKCS1_PADDING': 1,
  'RSA_SSLV23_PADDING': 2,
  'RSA_NO_PADDING': 3,
  'RSA_PKCS1_OAEP_PADDING': 4,
  'RSA_X931_PADDING': 5,
  'RSA_PKCS1_PSS_PADDING': 6,
  'POINT_CONVERSION_COMPRESSED': 2,
  'POINT_CONVERSION_UNCOMPRESSED': 4,
  'POINT_CONVERSION_HYBRID': 6
}

},{"browserify-cipher":45,"browserify-sign":52,"browserify-sign/algos":49,"create-ecdh":78,"create-hash":80,"create-hmac":82,"diffie-hellman":91,"pbkdf2":180,"public-encrypt":187,"randombytes":194,"randomfill":195}],85:[function(require,module,exports){
'use strict';

exports.utils = require('./des/utils');
exports.Cipher = require('./des/cipher');
exports.DES = require('./des/des');
exports.CBC = require('./des/cbc');
exports.EDE = require('./des/ede');

},{"./des/cbc":86,"./des/cipher":87,"./des/des":88,"./des/ede":89,"./des/utils":90}],86:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var proto = {};

function CBCState(iv) {
  assert.equal(iv.length, 8, 'Invalid IV length');

  this.iv = new Array(8);
  for (var i = 0; i < this.iv.length; i++)
    this.iv[i] = iv[i];
}

function instantiate(Base) {
  function CBC(options) {
    Base.call(this, options);
    this._cbcInit();
  }
  inherits(CBC, Base);

  var keys = Object.keys(proto);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    CBC.prototype[key] = proto[key];
  }

  CBC.create = function create(options) {
    return new CBC(options);
  };

  return CBC;
}

exports.instantiate = instantiate;

proto._cbcInit = function _cbcInit() {
  var state = new CBCState(this.options.iv);
  this._cbcState = state;
};

proto._update = function _update(inp, inOff, out, outOff) {
  var state = this._cbcState;
  var superProto = this.constructor.super_.prototype;

  var iv = state.iv;
  if (this.type === 'encrypt') {
    for (var i = 0; i < this.blockSize; i++)
      iv[i] ^= inp[inOff + i];

    superProto._update.call(this, iv, 0, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = out[outOff + i];
  } else {
    superProto._update.call(this, inp, inOff, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      out[outOff + i] ^= iv[i];

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = inp[inOff + i];
  }
};

},{"inherits":154,"minimalistic-assert":161}],87:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');

function Cipher(options) {
  this.options = options;

  this.type = this.options.type;
  this.blockSize = 8;
  this._init();

  this.buffer = new Array(this.blockSize);
  this.bufferOff = 0;
}
module.exports = Cipher;

Cipher.prototype._init = function _init() {
  // Might be overrided
};

Cipher.prototype.update = function update(data) {
  if (data.length === 0)
    return [];

  if (this.type === 'decrypt')
    return this._updateDecrypt(data);
  else
    return this._updateEncrypt(data);
};

Cipher.prototype._buffer = function _buffer(data, off) {
  // Append data to buffer
  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
  for (var i = 0; i < min; i++)
    this.buffer[this.bufferOff + i] = data[off + i];
  this.bufferOff += min;

  // Shift next
  return min;
};

Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
  this._update(this.buffer, 0, out, off);
  this.bufferOff = 0;
  return this.blockSize;
};

Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;
  var out = new Array(count * this.blockSize);

  if (this.bufferOff !== 0) {
    inputOff += this._buffer(data, inputOff);

    if (this.bufferOff === this.buffer.length)
      outputOff += this._flushBuffer(out, outputOff);
  }

  // Write blocks
  var max = data.length - ((data.length - inputOff) % this.blockSize);
  for (; inputOff < max; inputOff += this.blockSize) {
    this._update(data, inputOff, out, outputOff);
    outputOff += this.blockSize;
  }

  // Queue rest
  for (; inputOff < data.length; inputOff++, this.bufferOff++)
    this.buffer[this.bufferOff] = data[inputOff];

  return out;
};

Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
  var out = new Array(count * this.blockSize);

  // TODO(indutny): optimize it, this is far from optimal
  for (; count > 0; count--) {
    inputOff += this._buffer(data, inputOff);
    outputOff += this._flushBuffer(out, outputOff);
  }

  // Buffer rest of the input
  inputOff += this._buffer(data, inputOff);

  return out;
};

Cipher.prototype.final = function final(buffer) {
  var first;
  if (buffer)
    first = this.update(buffer);

  var last;
  if (this.type === 'encrypt')
    last = this._finalEncrypt();
  else
    last = this._finalDecrypt();

  if (first)
    return first.concat(last);
  else
    return last;
};

Cipher.prototype._pad = function _pad(buffer, off) {
  if (off === 0)
    return false;

  while (off < buffer.length)
    buffer[off++] = 0;

  return true;
};

Cipher.prototype._finalEncrypt = function _finalEncrypt() {
  if (!this._pad(this.buffer, this.bufferOff))
    return [];

  var out = new Array(this.blockSize);
  this._update(this.buffer, 0, out, 0);
  return out;
};

Cipher.prototype._unpad = function _unpad(buffer) {
  return buffer;
};

Cipher.prototype._finalDecrypt = function _finalDecrypt() {
  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');
  var out = new Array(this.blockSize);
  this._flushBuffer(out, 0);

  return this._unpad(out);
};

},{"minimalistic-assert":161}],88:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var utils = require('./utils');
var Cipher = require('./cipher');

function DESState() {
  this.tmp = new Array(2);
  this.keys = null;
}

function DES(options) {
  Cipher.call(this, options);

  var state = new DESState();
  this._desState = state;

  this.deriveKeys(state, options.key);
}
inherits(DES, Cipher);
module.exports = DES;

DES.create = function create(options) {
  return new DES(options);
};

var shiftTable = [
  1, 1, 2, 2, 2, 2, 2, 2,
  1, 2, 2, 2, 2, 2, 2, 1
];

DES.prototype.deriveKeys = function deriveKeys(state, key) {
  state.keys = new Array(16 * 2);

  assert.equal(key.length, this.blockSize, 'Invalid key length');

  var kL = utils.readUInt32BE(key, 0);
  var kR = utils.readUInt32BE(key, 4);

  utils.pc1(kL, kR, state.tmp, 0);
  kL = state.tmp[0];
  kR = state.tmp[1];
  for (var i = 0; i < state.keys.length; i += 2) {
    var shift = shiftTable[i >>> 1];
    kL = utils.r28shl(kL, shift);
    kR = utils.r28shl(kR, shift);
    utils.pc2(kL, kR, state.keys, i);
  }
};

DES.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._desState;

  var l = utils.readUInt32BE(inp, inOff);
  var r = utils.readUInt32BE(inp, inOff + 4);

  // Initial Permutation
  utils.ip(l, r, state.tmp, 0);
  l = state.tmp[0];
  r = state.tmp[1];

  if (this.type === 'encrypt')
    this._encrypt(state, l, r, state.tmp, 0);
  else
    this._decrypt(state, l, r, state.tmp, 0);

  l = state.tmp[0];
  r = state.tmp[1];

  utils.writeUInt32BE(out, l, outOff);
  utils.writeUInt32BE(out, r, outOff + 4);
};

DES.prototype._pad = function _pad(buffer, off) {
  var value = buffer.length - off;
  for (var i = off; i < buffer.length; i++)
    buffer[i] = value;

  return true;
};

DES.prototype._unpad = function _unpad(buffer) {
  var pad = buffer[buffer.length - 1];
  for (var i = buffer.length - pad; i < buffer.length; i++)
    assert.equal(buffer[i], pad);

  return buffer.slice(0, buffer.length - pad);
};

DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
  var l = lStart;
  var r = rStart;

  // Apply f() x16 times
  for (var i = 0; i < state.keys.length; i += 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(r, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = r;
    r = (l ^ f) >>> 0;
    l = t;
  }

  // Reverse Initial Permutation
  utils.rip(r, l, out, off);
};

DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
  var l = rStart;
  var r = lStart;

  // Apply f() x16 times
  for (var i = state.keys.length - 2; i >= 0; i -= 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(l, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = l;
    l = (r ^ f) >>> 0;
    r = t;
  }

  // Reverse Initial Permutation
  utils.rip(l, r, out, off);
};

},{"./cipher":87,"./utils":90,"inherits":154,"minimalistic-assert":161}],89:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var Cipher = require('./cipher');
var DES = require('./des');

function EDEState(type, key) {
  assert.equal(key.length, 24, 'Invalid key length');

  var k1 = key.slice(0, 8);
  var k2 = key.slice(8, 16);
  var k3 = key.slice(16, 24);

  if (type === 'encrypt') {
    this.ciphers = [
      DES.create({ type: 'encrypt', key: k1 }),
      DES.create({ type: 'decrypt', key: k2 }),
      DES.create({ type: 'encrypt', key: k3 })
    ];
  } else {
    this.ciphers = [
      DES.create({ type: 'decrypt', key: k3 }),
      DES.create({ type: 'encrypt', key: k2 }),
      DES.create({ type: 'decrypt', key: k1 })
    ];
  }
}

function EDE(options) {
  Cipher.call(this, options);

  var state = new EDEState(this.type, this.options.key);
  this._edeState = state;
}
inherits(EDE, Cipher);

module.exports = EDE;

EDE.create = function create(options) {
  return new EDE(options);
};

EDE.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._edeState;

  state.ciphers[0]._update(inp, inOff, out, outOff);
  state.ciphers[1]._update(out, outOff, out, outOff);
  state.ciphers[2]._update(out, outOff, out, outOff);
};

EDE.prototype._pad = DES.prototype._pad;
EDE.prototype._unpad = DES.prototype._unpad;

},{"./cipher":87,"./des":88,"inherits":154,"minimalistic-assert":161}],90:[function(require,module,exports){
'use strict';

exports.readUInt32BE = function readUInt32BE(bytes, off) {
  var res =  (bytes[0 + off] << 24) |
             (bytes[1 + off] << 16) |
             (bytes[2 + off] << 8) |
             bytes[3 + off];
  return res >>> 0;
};

exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
  bytes[0 + off] = value >>> 24;
  bytes[1 + off] = (value >>> 16) & 0xff;
  bytes[2 + off] = (value >>> 8) & 0xff;
  bytes[3 + off] = value & 0xff;
};

exports.ip = function ip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
    }
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.rip = function rip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 0; i < 4; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }
  for (var i = 4; i < 8; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.pc1 = function pc1(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  // 7, 15, 23, 31, 39, 47, 55, 63
  // 6, 14, 22, 30, 39, 47, 55, 63
  // 5, 13, 21, 29, 39, 47, 55, 63
  // 4, 12, 20, 28
  for (var i = 7; i >= 5; i--) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outL <<= 1;
    outL |= (inR >> (j + i)) & 1;
  }

  // 1, 9, 17, 25, 33, 41, 49, 57
  // 2, 10, 18, 26, 34, 42, 50, 58
  // 3, 11, 19, 27, 35, 43, 51, 59
  // 36, 44, 52, 60
  for (var i = 1; i <= 3; i++) {
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outR <<= 1;
    outR |= (inL >> (j + i)) & 1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.r28shl = function r28shl(num, shift) {
  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));
};

var pc2table = [
  // inL => outL
  14, 11, 17, 4, 27, 23, 25, 0,
  13, 22, 7, 18, 5, 9, 16, 24,
  2, 20, 12, 21, 1, 8, 15, 26,

  // inR => outR
  15, 4, 25, 19, 9, 1, 26, 16,
  5, 11, 23, 8, 12, 7, 17, 0,
  22, 3, 10, 14, 6, 20, 27, 24
];

exports.pc2 = function pc2(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  var len = pc2table.length >>> 1;
  for (var i = 0; i < len; i++) {
    outL <<= 1;
    outL |= (inL >>> pc2table[i]) & 0x1;
  }
  for (var i = len; i < pc2table.length; i++) {
    outR <<= 1;
    outR |= (inR >>> pc2table[i]) & 0x1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.expand = function expand(r, out, off) {
  var outL = 0;
  var outR = 0;

  outL = ((r & 1) << 5) | (r >>> 27);
  for (var i = 23; i >= 15; i -= 4) {
    outL <<= 6;
    outL |= (r >>> i) & 0x3f;
  }
  for (var i = 11; i >= 3; i -= 4) {
    outR |= (r >>> i) & 0x3f;
    outR <<= 6;
  }
  outR |= ((r & 0x1f) << 1) | (r >>> 31);

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

var sTable = [
  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,
  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,
  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,
  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,

  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,
  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,
  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,
  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,

  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,
  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,
  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,
  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,

  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,
  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,
  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,
  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,

  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,
  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,
  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,
  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,

  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,
  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,
  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,
  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,

  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,
  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,
  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,
  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,

  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,
  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,
  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,
  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11
];

exports.substitute = function substitute(inL, inR) {
  var out = 0;
  for (var i = 0; i < 4; i++) {
    var b = (inL >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  for (var i = 0; i < 4; i++) {
    var b = (inR >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[4 * 0x40 + i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  return out >>> 0;
};

var permuteTable = [
  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,
  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7
];

exports.permute = function permute(num) {
  var out = 0;
  for (var i = 0; i < permuteTable.length; i++) {
    out <<= 1;
    out |= (num >>> permuteTable[i]) & 0x1;
  }
  return out >>> 0;
};

exports.padSplit = function padSplit(num, size, group) {
  var str = num.toString(2);
  while (str.length < size)
    str = '0' + str;

  var out = [];
  for (var i = 0; i < size; i += group)
    out.push(str.slice(i, i + group));
  return out.join(' ');
};

},{}],91:[function(require,module,exports){
(function (Buffer){(function (){
var generatePrime = require('./lib/generatePrime')
var primes = require('./lib/primes.json')

var DH = require('./lib/dh')

function getDiffieHellman (mod) {
  var prime = new Buffer(primes[mod].prime, 'hex')
  var gen = new Buffer(primes[mod].gen, 'hex')

  return new DH(prime, gen)
}

var ENCODINGS = {
  'binary': true, 'hex': true, 'base64': true
}

function createDiffieHellman (prime, enc, generator, genc) {
  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
    return createDiffieHellman(prime, 'binary', enc, generator)
  }

  enc = enc || 'binary'
  genc = genc || 'binary'
  generator = generator || new Buffer([2])

  if (!Buffer.isBuffer(generator)) {
    generator = new Buffer(generator, genc)
  }

  if (typeof prime === 'number') {
    return new DH(generatePrime(prime, generator), generator, true)
  }

  if (!Buffer.isBuffer(prime)) {
    prime = new Buffer(prime, enc)
  }

  return new DH(prime, generator, true)
}

exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman
exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman

}).call(this)}).call(this,require("buffer").Buffer)
},{"./lib/dh":92,"./lib/generatePrime":93,"./lib/primes.json":94,"buffer":73}],92:[function(require,module,exports){
(function (Buffer){(function (){
var BN = require('bn.js');
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var TWENTYFOUR = new BN(24);
var ELEVEN = new BN(11);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var primes = require('./generatePrime');
var randomBytes = require('randombytes');
module.exports = DH;

function setPublicKey(pub, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc);
  }
  this._pub = new BN(pub);
  return this;
}

function setPrivateKey(priv, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc);
  }
  this._priv = new BN(priv);
  return this;
}

var primeCache = {};
function checkPrime(prime, generator) {
  var gen = generator.toString('hex');
  var hex = [gen, prime.toString(16)].join('_');
  if (hex in primeCache) {
    return primeCache[hex];
  }
  var error = 0;

  if (prime.isEven() ||
    !primes.simpleSieve ||
    !primes.fermatTest(prime) ||
    !millerRabin.test(prime)) {
    //not a prime so +1
    error += 1;

    if (gen === '02' || gen === '05') {
      // we'd be able to check the generator
      // it would fail so +8
      error += 8;
    } else {
      //we wouldn't be able to test the generator
      // so +4
      error += 4;
    }
    primeCache[hex] = error;
    return error;
  }
  if (!millerRabin.test(prime.shrn(1))) {
    //not a safe prime
    error += 2;
  }
  var rem;
  switch (gen) {
    case '02':
      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
        // unsuidable generator
        error += 8;
      }
      break;
    case '05':
      rem = prime.mod(TEN);
      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
        // prime mod 10 needs to equal 3 or 7
        error += 8;
      }
      break;
    default:
      error += 4;
  }
  primeCache[hex] = error;
  return error;
}

function DH(prime, generator, malleable) {
  this.setGenerator(generator);
  this.__prime = new BN(prime);
  this._prime = BN.mont(this.__prime);
  this._primeLen = prime.length;
  this._pub = undefined;
  this._priv = undefined;
  this._primeCode = undefined;
  if (malleable) {
    this.setPublicKey = setPublicKey;
    this.setPrivateKey = setPrivateKey;
  } else {
    this._primeCode = 8;
  }
}
Object.defineProperty(DH.prototype, 'verifyError', {
  enumerable: true,
  get: function () {
    if (typeof this._primeCode !== 'number') {
      this._primeCode = checkPrime(this.__prime, this.__gen);
    }
    return this._primeCode;
  }
});
DH.prototype.generateKeys = function () {
  if (!this._priv) {
    this._priv = new BN(randomBytes(this._primeLen));
  }
  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
  return this.getPublicKey();
};

DH.prototype.computeSecret = function (other) {
  other = new BN(other);
  other = other.toRed(this._prime);
  var secret = other.redPow(this._priv).fromRed();
  var out = new Buffer(secret.toArray());
  var prime = this.getPrime();
  if (out.length < prime.length) {
    var front = new Buffer(prime.length - out.length);
    front.fill(0);
    out = Buffer.concat([front, out]);
  }
  return out;
};

DH.prototype.getPublicKey = function getPublicKey(enc) {
  return formatReturnValue(this._pub, enc);
};

DH.prototype.getPrivateKey = function getPrivateKey(enc) {
  return formatReturnValue(this._priv, enc);
};

DH.prototype.getPrime = function (enc) {
  return formatReturnValue(this.__prime, enc);
};

DH.prototype.getGenerator = function (enc) {
  return formatReturnValue(this._gen, enc);
};

DH.prototype.setGenerator = function (gen, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(gen)) {
    gen = new Buffer(gen, enc);
  }
  this.__gen = gen;
  this._gen = new BN(gen);
  return this;
};

function formatReturnValue(bn, enc) {
  var buf = new Buffer(bn.toArray());
  if (!enc) {
    return buf;
  } else {
    return buf.toString(enc);
  }
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"./generatePrime":93,"bn.js":95,"buffer":73,"miller-rabin":159,"randombytes":194}],93:[function(require,module,exports){
var randomBytes = require('randombytes');
module.exports = findPrime;
findPrime.simpleSieve = simpleSieve;
findPrime.fermatTest = fermatTest;
var BN = require('bn.js');
var TWENTYFOUR = new BN(24);
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var ONE = new BN(1);
var TWO = new BN(2);
var FIVE = new BN(5);
var SIXTEEN = new BN(16);
var EIGHT = new BN(8);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var ELEVEN = new BN(11);
var FOUR = new BN(4);
var TWELVE = new BN(12);
var primes = null;

function _getPrimes() {
  if (primes !== null)
    return primes;

  var limit = 0x100000;
  var res = [];
  res[0] = 2;
  for (var i = 1, k = 3; k < limit; k += 2) {
    var sqrt = Math.ceil(Math.sqrt(k));
    for (var j = 0; j < i && res[j] <= sqrt; j++)
      if (k % res[j] === 0)
        break;

    if (i !== j && res[j] <= sqrt)
      continue;

    res[i++] = k;
  }
  primes = res;
  return res;
}

function simpleSieve(p) {
  var primes = _getPrimes();

  for (var i = 0; i < primes.length; i++)
    if (p.modn(primes[i]) === 0) {
      if (p.cmpn(primes[i]) === 0) {
        return true;
      } else {
        return false;
      }
    }

  return true;
}

function fermatTest(p) {
  var red = BN.mont(p);
  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
}

function findPrime(bits, gen) {
  if (bits < 16) {
    // this is what openssl does
    if (gen === 2 || gen === 5) {
      return new BN([0x8c, 0x7b]);
    } else {
      return new BN([0x8c, 0x27]);
    }
  }
  gen = new BN(gen);

  var num, n2;

  while (true) {
    num = new BN(randomBytes(Math.ceil(bits / 8)));
    while (num.bitLength() > bits) {
      num.ishrn(1);
    }
    if (num.isEven()) {
      num.iadd(ONE);
    }
    if (!num.testn(1)) {
      num.iadd(TWO);
    }
    if (!gen.cmp(TWO)) {
      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
        num.iadd(FOUR);
      }
    } else if (!gen.cmp(FIVE)) {
      while (num.mod(TEN).cmp(THREE)) {
        num.iadd(FOUR);
      }
    }
    n2 = num.shrn(1);
    if (simpleSieve(n2) && simpleSieve(num) &&
      fermatTest(n2) && fermatTest(num) &&
      millerRabin.test(n2) && millerRabin.test(num)) {
      return num;
    }
  }

}

},{"bn.js":95,"miller-rabin":159,"randombytes":194}],94:[function(require,module,exports){
module.exports={
    "modp1": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
    },
    "modp2": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
    },
    "modp5": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
    },
    "modp14": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
    },
    "modp15": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
    },
    "modp16": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
    },
    "modp17": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
    },
    "modp18": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
    }
}
},{}],95:[function(require,module,exports){
arguments[4][18][0].apply(exports,arguments)
},{"buffer":27,"dup":18}],96:[function(require,module,exports){
'use strict';

var elliptic = exports;

elliptic.version = require('../package.json').version;
elliptic.utils = require('./elliptic/utils');
elliptic.rand = require('brorand');
elliptic.curve = require('./elliptic/curve');
elliptic.curves = require('./elliptic/curves');

// Protocols
elliptic.ec = require('./elliptic/ec');
elliptic.eddsa = require('./elliptic/eddsa');

},{"../package.json":112,"./elliptic/curve":99,"./elliptic/curves":102,"./elliptic/ec":103,"./elliptic/eddsa":106,"./elliptic/utils":110,"brorand":26}],97:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var utils = require('../utils');
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

  // Useful for many curves
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  this._bitLength = this.n ? this.n.bitLength() : 0;

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1, this._bitLength);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  var j;
  var nafW;
  for (j = 0; j < naf.length; j += doubles.step) {
    nafW = 0;
    for (var l = j + doubles.step - 1; l >= j; l--)
      nafW = (nafW << 1) + naf[l];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (j = 0; j < repr.length; j++) {
      nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w, this._bitLength);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var l = 0; i >= 0 && naf[i] === 0; i--)
      l++;
    if (i >= 0)
      l++;
    acc = acc.dblp(l);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
  points,
  coeffs,
  len,
  jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  var i;
  var j;
  var p;
  for (i = 0; i < len; i++) {
    p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b], /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3,  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (j = 0; j < len; j++) {
      var z = tmp[j];
      p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
      bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len));
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null,
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles,
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res,
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};

},{"../utils":110,"bn.js":111}],98:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = require('./base');

var assert = utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new BN(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.c2);
  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.fromRed().isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = z ? new BN(z, 16) : this.curve.one;
    this.t = t && new BN(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
    (this.y.cmp(this.z) === 0 ||
    (this.zOne && this.y.cmp(this.curve.c) === 0));
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  var e;
  var h;
  var j;
  if (this.curve.twisted) {
    // E = a * C
    e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      h = this.z.redSqr();
      // J = F - 2 * H
      j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    e = c.redAdd(d);
    // H = (c * Z1)^2
    h = this.curve._mulC(this.z).redSqr();
    // J = E - 2 * H
    j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
    this.y,
    this.z,
    this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

Point.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;

},{"../utils":110,"./base":97,"bn.js":111,"inherits":154}],99:[function(require,module,exports){
'use strict';

var curve = exports;

curve.base = require('./base');
curve.short = require('./short');
curve.mont = require('./mont');
curve.edwards = require('./edwards');

},{"./base":97,"./edwards":98,"./mont":100,"./short":101}],100:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var inherits = require('inherits');
var Base = require('./base');

var utils = require('../utils');

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.i4 = new BN(4).toRed(this.red).redInvm();
  this.two = new BN(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN(x, 16);
    this.z = new BN(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};

},{"../utils":110,"./base":97,"bn.js":111,"inherits":154}],101:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = require('./base');

var assert = utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16),
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis,
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 },
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
      var npoints = this._endoWnafT1;
      var ncoeffs = this._endoWnafT2;
      for (var i = 0; i < points.length; i++) {
        var split = this._endoSplit(coeffs[i]);
        var p = points[i];
        var beta = p._getBeta();

        if (split.k1.negative) {
          split.k1.ineg();
          p = p.neg(true);
        }
        if (split.k2.negative) {
          split.k2.ineg();
          beta = beta.neg(true);
        }

        npoints[i * 2] = p;
        npoints[i * 2 + 1] = beta;
        ncoeffs[i * 2] = split.k1;
        ncoeffs[i * 2 + 1] = split.k2;
      }
      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

      // Clean-up references to points and coefficients
      for (var j = 0; j < i * 2; j++) {
        npoints[j] = null;
        ncoeffs[j] = null;
      }
      return res;
    };

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul),
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul),
      },
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1),
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1),
    },
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point)),
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point)),
    },
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);
  if (this.isInfinity())
    return this;
  else if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate),
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate),
      },
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  var i;
  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

},{"../utils":110,"./base":97,"bn.js":111,"inherits":154}],102:[function(require,module,exports){
'use strict';

var curves = exports;

var hash = require('hash.js');
var curve = require('./curve');
var utils = require('./utils');

var assert = utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new curve.edwards(options);
  else
    this.curve = new curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve,
      });
      return curve;
    },
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',
  ],
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',
  ],
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',
  ],
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',
  ],
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650',
  ],
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '1',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9',
  ],
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658',
  ],
});

var pre;
try {
  pre = require('./precomputed/secp256k1');
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3',
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15',
    },
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre,
  ],
});

},{"./curve":99,"./precomputed/secp256k1":109,"./utils":110,"hash.js":140}],103:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var HmacDRBG = require('hmac-drbg');
var utils = require('../utils');
var curves = require('../curves');
var rand = require('brorand');
var assert = utils.assert;

var KeyPair = require('./key');
var Signature = require('./signature');

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(Object.prototype.hasOwnProperty.call(curves, options),
      'Unknown curve ' + options);

    options = curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray(),
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  for (;;) {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  }
};

EC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN(1));

  for (var iter = 0; ; iter++) {
    var k = options.k ?
      options.k(iter) :
      new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new BN(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);
  var p;

  if (!this.curve._maxwellTrick) {
    p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new BN(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var rInv = signature.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};

},{"../curves":102,"../utils":110,"./key":104,"./signature":105,"bn.js":111,"brorand":26,"hmac-drbg":152}],104:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var utils = require('../utils');
var assert = utils.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc,
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc,
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' ||
               this.ec.curve.type === 'edwards') {
      assert(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  if(!pub.validate()) {
    assert(pub.validate(), 'public point not validated');
  }
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};

},{"../utils":110,"bn.js":111}],105:[function(require,module,exports){
'use strict';

var BN = require('bn.js');

var utils = require('../utils');
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new BN(options.r, 16);
  this.s = new BN(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;

  // Indefinite length or overflow
  if (octetLen === 0 || octetLen > 4) {
    return false;
  }

  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
    val >>>= 0;
  }

  // Leading zeroes
  if (val <= 0x7f) {
    return false;
  }

  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if (len === false) {
    return false;
  }
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  if (rlen === false) {
    return false;
  }
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (slen === false) {
    return false;
  }
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0) {
    if (r[1] & 0x80) {
      r = r.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }
  if (s[0] === 0) {
    if (s[1] & 0x80) {
      s = s.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }

  this.r = new BN(r);
  this.s = new BN(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};

},{"../utils":110,"bn.js":111}],106:[function(require,module,exports){
'use strict';

var hash = require('hash.js');
var curves = require('../curves');
var utils = require('../utils');
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = require('./key');
var Signature = require('./signature');

function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');

  if (!(this instanceof EDDSA))
    return new EDDSA(curve);

  curve = curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);

  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}

module.exports = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
    .mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};

EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++)
    hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};

EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};

EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};

EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature)
    return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};

EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);

  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};

EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};

EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};

EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};

},{"../curves":102,"../utils":110,"./key":107,"./signature":108,"hash.js":140}],107:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, 'pub', function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;

},{"../utils":110}],108:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var utils = require('../utils');
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength),
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof BN)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;

},{"../utils":110,"bn.js":111}],109:[function(require,module,exports){
module.exports = {
  doubles: {
    step: 4,
    points: [
      [
        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',
      ],
      [
        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',
      ],
      [
        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',
      ],
      [
        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',
      ],
      [
        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',
      ],
      [
        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',
      ],
      [
        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',
      ],
      [
        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',
      ],
      [
        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',
      ],
      [
        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',
      ],
      [
        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',
      ],
      [
        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',
      ],
      [
        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',
      ],
      [
        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',
      ],
      [
        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',
      ],
      [
        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',
      ],
      [
        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',
      ],
      [
        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',
      ],
      [
        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',
      ],
      [
        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',
      ],
      [
        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',
      ],
      [
        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',
      ],
      [
        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',
      ],
      [
        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',
      ],
      [
        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',
      ],
      [
        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',
      ],
      [
        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',
      ],
      [
        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',
      ],
      [
        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',
      ],
      [
        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',
      ],
      [
        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',
      ],
      [
        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',
      ],
      [
        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',
      ],
      [
        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',
      ],
      [
        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',
      ],
      [
        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',
      ],
      [
        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',
      ],
      [
        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',
      ],
      [
        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',
      ],
      [
        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',
      ],
      [
        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',
      ],
      [
        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',
      ],
      [
        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',
      ],
      [
        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',
      ],
      [
        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',
      ],
      [
        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',
      ],
      [
        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',
      ],
      [
        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',
      ],
      [
        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',
      ],
      [
        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',
      ],
      [
        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',
      ],
      [
        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',
      ],
      [
        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',
      ],
      [
        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',
      ],
      [
        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',
      ],
      [
        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',
      ],
      [
        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',
      ],
      [
        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',
      ],
      [
        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',
      ],
      [
        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',
      ],
      [
        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',
      ],
      [
        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',
      ],
      [
        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',
      ],
      [
        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',
      ],
      [
        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',
      ],
    ],
  },
  naf: {
    wnd: 7,
    points: [
      [
        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',
      ],
      [
        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',
      ],
      [
        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',
      ],
      [
        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',
      ],
      [
        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',
      ],
      [
        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',
      ],
      [
        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',
      ],
      [
        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',
      ],
      [
        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',
      ],
      [
        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',
      ],
      [
        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',
      ],
      [
        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',
      ],
      [
        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',
      ],
      [
        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',
      ],
      [
        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',
      ],
      [
        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',
      ],
      [
        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',
      ],
      [
        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',
      ],
      [
        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',
      ],
      [
        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',
      ],
      [
        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',
      ],
      [
        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',
      ],
      [
        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',
      ],
      [
        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',
      ],
      [
        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',
      ],
      [
        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',
      ],
      [
        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',
      ],
      [
        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',
      ],
      [
        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',
      ],
      [
        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',
      ],
      [
        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',
      ],
      [
        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',
      ],
      [
        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',
      ],
      [
        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',
      ],
      [
        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',
      ],
      [
        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',
      ],
      [
        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',
      ],
      [
        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',
      ],
      [
        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',
      ],
      [
        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',
      ],
      [
        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',
      ],
      [
        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',
      ],
      [
        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',
      ],
      [
        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',
      ],
      [
        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',
      ],
      [
        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',
      ],
      [
        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',
      ],
      [
        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',
      ],
      [
        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',
      ],
      [
        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',
      ],
      [
        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',
      ],
      [
        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',
      ],
      [
        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',
      ],
      [
        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',
      ],
      [
        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',
      ],
      [
        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',
      ],
      [
        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',
      ],
      [
        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',
      ],
      [
        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',
      ],
      [
        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',
      ],
      [
        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',
      ],
      [
        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',
      ],
      [
        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',
      ],
      [
        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',
      ],
      [
        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',
      ],
      [
        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',
      ],
      [
        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',
      ],
      [
        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',
      ],
      [
        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',
      ],
      [
        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',
      ],
      [
        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',
      ],
      [
        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',
      ],
      [
        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',
      ],
      [
        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',
      ],
      [
        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',
      ],
      [
        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',
      ],
      [
        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',
      ],
      [
        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',
      ],
      [
        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',
      ],
      [
        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',
      ],
      [
        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',
      ],
      [
        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',
      ],
      [
        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',
      ],
      [
        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',
      ],
      [
        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',
      ],
      [
        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',
      ],
      [
        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',
      ],
      [
        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',
      ],
      [
        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',
      ],
      [
        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',
      ],
      [
        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',
      ],
      [
        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',
      ],
      [
        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',
      ],
      [
        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',
      ],
      [
        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',
      ],
      [
        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',
      ],
      [
        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',
      ],
      [
        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',
      ],
      [
        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',
      ],
      [
        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',
      ],
      [
        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',
      ],
      [
        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',
      ],
      [
        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',
      ],
      [
        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',
      ],
      [
        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',
      ],
      [
        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',
      ],
      [
        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',
      ],
      [
        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',
      ],
      [
        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',
      ],
      [
        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',
      ],
      [
        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',
      ],
      [
        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',
      ],
      [
        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',
      ],
      [
        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',
      ],
      [
        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',
      ],
      [
        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',
      ],
      [
        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',
      ],
      [
        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',
      ],
      [
        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',
      ],
      [
        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',
      ],
      [
        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',
      ],
      [
        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',
      ],
      [
        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',
      ],
      [
        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',
      ],
      [
        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',
      ],
      [
        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',
      ],
      [
        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',
      ],
    ],
  },
};

},{}],110:[function(require,module,exports){
'use strict';

var utils = exports;
var BN = require('bn.js');
var minAssert = require('minimalistic-assert');
var minUtils = require('minimalistic-crypto-utils');

utils.assert = minAssert;
utils.toArray = minUtils.toArray;
utils.zero2 = minUtils.zero2;
utils.toHex = minUtils.toHex;
utils.encode = minUtils.encode;

// Represent num in a w-NAF form
function getNAF(num, w, bits) {
  var naf = new Array(Math.max(num.bitLength(), bits) + 1);
  naf.fill(0);

  var ws = 1 << (w + 1);
  var k = num.clone();

  for (var i = 0; i < naf.length; i++) {
    var z;
    var mod = k.andln(ws - 1);
    if (k.isOdd()) {
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }

    naf[i] = z;
    k.iushrn(1);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    [],
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  var m8;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
      this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
    bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;


},{"bn.js":111,"minimalistic-assert":161,"minimalistic-crypto-utils":162}],111:[function(require,module,exports){
arguments[4][18][0].apply(exports,arguments)
},{"buffer":27,"dup":18}],112:[function(require,module,exports){
module.exports={
  "name": "elliptic",
  "version": "6.5.4",
  "description": "EC cryptography",
  "main": "lib/elliptic.js",
  "files": [
    "lib"
  ],
  "scripts": {
    "lint": "eslint lib test",
    "lint:fix": "npm run lint -- --fix",
    "unit": "istanbul test _mocha --reporter=spec test/index.js",
    "test": "npm run lint && npm run unit",
    "version": "grunt dist && git add dist/"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:indutny/elliptic"
  },
  "keywords": [
    "EC",
    "Elliptic",
    "curve",
    "Cryptography"
  ],
  "author": "Fedor Indutny <fedor@indutny.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/indutny/elliptic/issues"
  },
  "homepage": "https://github.com/indutny/elliptic",
  "devDependencies": {
    "brfs": "^2.0.2",
    "coveralls": "^3.1.0",
    "eslint": "^7.6.0",
    "grunt": "^1.2.1",
    "grunt-browserify": "^5.3.0",
    "grunt-cli": "^1.3.2",
    "grunt-contrib-connect": "^3.0.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-uglify": "^5.0.0",
    "grunt-mocha-istanbul": "^5.0.2",
    "grunt-saucelabs": "^9.0.1",
    "istanbul": "^0.4.5",
    "mocha": "^8.0.1"
  },
  "dependencies": {
    "bn.js": "^4.11.9",
    "brorand": "^1.1.0",
    "hash.js": "^1.0.0",
    "hmac-drbg": "^1.0.1",
    "inherits": "^2.0.4",
    "minimalistic-assert": "^1.0.1",
    "minimalistic-crypto-utils": "^1.0.1"
  }
}

},{}],113:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);
if ($gOPD) {
	try {
		$gOPD([], 'length');
	} catch (e) {
		// IE 8 has a broken gOPD
		$gOPD = null;
	}
}

module.exports = $gOPD;

},{"get-intrinsic":119}],114:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var R = typeof Reflect === 'object' ? Reflect : null
var ReflectApply = R && typeof R.apply === 'function'
  ? R.apply
  : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  }

var ReflectOwnKeys
if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target)
      .concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
}

function EventEmitter() {
  EventEmitter.init.call(this);
}
module.exports = EventEmitter;
module.exports.once = once;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function() {
    return defaultMaxListeners;
  },
  set: function(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }
    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function() {

  if (this._events === undefined ||
      this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
};

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }
  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
  var doError = (type === 'error');

  var events = this._events;
  if (events !== undefined)
    doError = (doError && events.error === undefined);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    var er;
    if (args.length > 0)
      er = args[0];
    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    // At least give some kind of context to the user
    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];

  if (handler === undefined)
    return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  checkListener(listener);

  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type,
                  listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
        prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }

    // Check for listener leak
    m = _getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      var w = new Error('Possible EventEmitter memory leak detected. ' +
                          existing.length + ' ' + String(type) + ' listeners ' +
                          'added. Use emitter.setMaxListeners() to ' +
                          'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0)
      return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      checkListener(listener);

      events = this._events;
      if (events === undefined)
        return this;

      list = events[type];
      if (list === undefined)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener !== undefined)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (events === undefined)
        return this;

      // not listening for removeListener, no need to emit
      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (events === undefined)
    return [];

  var evlistener = events[type];
  if (evlistener === undefined)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ?
    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++)
    list[index] = list[index + 1];
  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }

    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }
      resolve([].slice.call(arguments));
    };

    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });
    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
    }
  });
}

function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}

function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin `{ once: true }` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }
      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
  }
}

},{}],115:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var MD5 = require('md5.js')

/* eslint-disable camelcase */
function EVP_BytesToKey (password, salt, keyBits, ivLen) {
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')
  if (salt) {
    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')
    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')
  }

  var keyLen = keyBits / 8
  var key = Buffer.alloc(keyLen)
  var iv = Buffer.alloc(ivLen || 0)
  var tmp = Buffer.alloc(0)

  while (keyLen > 0 || ivLen > 0) {
    var hash = new MD5()
    hash.update(tmp)
    hash.update(password)
    if (salt) hash.update(salt)
    tmp = hash.digest()

    var used = 0

    if (keyLen > 0) {
      var keyStart = key.length - keyLen
      used = Math.min(keyLen, tmp.length)
      tmp.copy(key, keyStart, 0, used)
      keyLen -= used
    }

    if (used < tmp.length && ivLen > 0) {
      var ivStart = iv.length - ivLen
      var length = Math.min(ivLen, tmp.length - used)
      tmp.copy(iv, ivStart, used, used + length)
      ivLen -= length
    }
  }

  tmp.fill(0)
  return { key: key, iv: iv }
}

module.exports = EVP_BytesToKey

},{"md5.js":158,"safe-buffer":197}],116:[function(require,module,exports){

var hasOwn = Object.prototype.hasOwnProperty;
var toString = Object.prototype.toString;

module.exports = function forEach (obj, fn, ctx) {
    if (toString.call(fn) !== '[object Function]') {
        throw new TypeError('iterator must be a function');
    }
    var l = obj.length;
    if (l === +l) {
        for (var i = 0; i < l; i++) {
            fn.call(ctx, obj[i], i, obj);
        }
    } else {
        for (var k in obj) {
            if (hasOwn.call(obj, k)) {
                fn.call(ctx, obj[k], k, obj);
            }
        }
    }
};


},{}],117:[function(require,module,exports){
'use strict';

/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = '[object Function]';

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slice.call(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                args.concat(slice.call(arguments))
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        } else {
            return target.apply(
                that,
                args.concat(slice.call(arguments))
            );
        }
    };

    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs.push('$' + i);
    }

    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};

},{}],118:[function(require,module,exports){
'use strict';

var implementation = require('./implementation');

module.exports = Function.prototype.bind || implementation;

},{"./implementation":117}],119:[function(require,module,exports){
'use strict';

var undefined;

var $SyntaxError = SyntaxError;
var $Function = Function;
var $TypeError = TypeError;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) {
	try {
		return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	} catch (e) {}
};

var $gOPD = Object.getOwnPropertyDescriptor;
if ($gOPD) {
	try {
		$gOPD({}, '');
	} catch (e) {
		$gOPD = null; // this is IE 8, which has a broken gOPD
	}
}

var throwTypeError = function () {
	throw new $TypeError();
};
var ThrowTypeError = $gOPD
	? (function () {
		try {
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		} catch (calleeThrows) {
			try {
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD(arguments, 'callee').get;
			} catch (gOPDthrows) {
				return throwTypeError;
			}
		}
	}())
	: throwTypeError;

var hasSymbols = require('has-symbols')();

var getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto

var needsEval = {};

var TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);

var INTRINSICS = {
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,
	'%AsyncFromSyncIteratorPrototype%': undefined,
	'%AsyncFunction%': needsEval,
	'%AsyncGenerator%': needsEval,
	'%AsyncGeneratorFunction%': needsEval,
	'%AsyncIteratorPrototype%': needsEval,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': EvalError,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': needsEval,
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
	'%Map%': typeof Map === 'undefined' ? undefined : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': Object,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'%RangeError%': RangeError,
	'%ReferenceError%': ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,
	'%Symbol%': hasSymbols ? Symbol : undefined,
	'%SyntaxError%': $SyntaxError,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'%URIError%': URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};

var doEval = function doEval(name) {
	var value;
	if (name === '%AsyncFunction%') {
		value = getEvalledConstructor('async function () {}');
	} else if (name === '%GeneratorFunction%') {
		value = getEvalledConstructor('function* () {}');
	} else if (name === '%AsyncGeneratorFunction%') {
		value = getEvalledConstructor('async function* () {}');
	} else if (name === '%AsyncGenerator%') {
		var fn = doEval('%AsyncGeneratorFunction%');
		if (fn) {
			value = fn.prototype;
		}
	} else if (name === '%AsyncIteratorPrototype%') {
		var gen = doEval('%AsyncGenerator%');
		if (gen) {
			value = getProto(gen.prototype);
		}
	}

	INTRINSICS[name] = value;

	return value;
};

var LEGACY_ALIASES = {
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = require('function-bind');
var hasOwn = require('has');
var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);
var $strSlice = bind.call(Function.call, String.prototype.slice);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) {
	var first = $strSlice(string, 0, 1);
	var last = $strSlice(string, -1);
	if (first === '%' && last !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
	} else if (last === '%' && first !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
	}
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) {
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	});
	return result;
};
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	var intrinsicName = name;
	var alias;
	if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	}

	if (hasOwn(INTRINSICS, intrinsicName)) {
		var value = INTRINSICS[intrinsicName];
		if (value === needsEval) {
			value = doEval(intrinsicName);
		}
		if (typeof value === 'undefined' && !allowMissing) {
			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		}

		return {
			alias: alias,
			name: intrinsicName,
			value: value
		};
	}

	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
	if (typeof name !== 'string' || name.length === 0) {
		throw new $TypeError('intrinsic name must be a non-empty string');
	}
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new $TypeError('"allowMissing" argument must be a boolean');
	}

	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) {
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	}

	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
		var part = parts[i];
		var first = $strSlice(part, 0, 1);
		var last = $strSlice(part, -1);
		if (
			(
				(first === '"' || first === "'" || first === '`')
				|| (last === '"' || last === "'" || last === '`')
			)
			&& first !== last
		) {
			throw new $SyntaxError('property names with quotes must have matching quotes');
		}
		if (part === 'constructor' || !isOwn) {
			skipFurtherCaching = true;
		}

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn(INTRINSICS, intrinsicRealName)) {
			value = INTRINSICS[intrinsicRealName];
		} else if (value != null) {
			if (!(part in value)) {
				if (!allowMissing) {
					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
				}
				return void undefined;
			}
			if ($gOPD && (i + 1) >= parts.length) {
				var desc = $gOPD(value, part);
				isOwn = !!desc;

				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an `originalValue` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
					value = desc.get;
				} else {
					value = value[part];
				}
			} else {
				isOwn = hasOwn(value, part);
				value = value[part];
			}

			if (isOwn && !skipFurtherCaching) {
				INTRINSICS[intrinsicRealName] = value;
			}
		}
	}
	return value;
};

},{"function-bind":118,"has":123,"has-symbols":120}],120:[function(require,module,exports){
'use strict';

var origSymbol = typeof Symbol !== 'undefined' && Symbol;
var hasSymbolSham = require('./shams');

module.exports = function hasNativeSymbols() {
	if (typeof origSymbol !== 'function') { return false; }
	if (typeof Symbol !== 'function') { return false; }
	if (typeof origSymbol('foo') !== 'symbol') { return false; }
	if (typeof Symbol('bar') !== 'symbol') { return false; }

	return hasSymbolSham();
};

},{"./shams":121}],121:[function(require,module,exports){
'use strict';

/* eslint complexity: [2, 18], max-statements: [2, 33] */
module.exports = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	var obj = {};
	var sym = Symbol('test');
	var symObj = Object(sym);
	if (typeof sym === 'string') { return false; }

	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) { return false; }
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(symObj instanceof Symbol)) { return false; }

	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

	var symVal = 42;
	obj[sym] = symVal;
	for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
	}

	return true;
};

},{}],122:[function(require,module,exports){
'use strict';

var hasSymbols = require('has-symbols/shams');

module.exports = function hasToStringTagShams() {
	return hasSymbols() && !!Symbol.toStringTag;
};

},{"has-symbols/shams":121}],123:[function(require,module,exports){
'use strict';

var bind = require('function-bind');

module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);

},{"function-bind":118}],124:[function(require,module,exports){
'use strict'
var Buffer = require('safe-buffer').Buffer
var Transform = require('readable-stream').Transform
var inherits = require('inherits')

function throwIfNotStringOrBuffer (val, prefix) {
  if (!Buffer.isBuffer(val) && typeof val !== 'string') {
    throw new TypeError(prefix + ' must be a string or a buffer')
  }
}

function HashBase (blockSize) {
  Transform.call(this)

  this._block = Buffer.allocUnsafe(blockSize)
  this._blockSize = blockSize
  this._blockOffset = 0
  this._length = [0, 0, 0, 0]

  this._finalized = false
}

inherits(HashBase, Transform)

HashBase.prototype._transform = function (chunk, encoding, callback) {
  var error = null
  try {
    this.update(chunk, encoding)
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype._flush = function (callback) {
  var error = null
  try {
    this.push(this.digest())
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype.update = function (data, encoding) {
  throwIfNotStringOrBuffer(data, 'Data')
  if (this._finalized) throw new Error('Digest already called')
  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)

  // consume data
  var block = this._block
  var offset = 0
  while (this._blockOffset + data.length - offset >= this._blockSize) {
    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]
    this._update()
    this._blockOffset = 0
  }
  while (offset < data.length) block[this._blockOffset++] = data[offset++]

  // update length
  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
    this._length[j] += carry
    carry = (this._length[j] / 0x0100000000) | 0
    if (carry > 0) this._length[j] -= 0x0100000000 * carry
  }

  return this
}

HashBase.prototype._update = function () {
  throw new Error('_update is not implemented')
}

HashBase.prototype.digest = function (encoding) {
  if (this._finalized) throw new Error('Digest already called')
  this._finalized = true

  var digest = this._digest()
  if (encoding !== undefined) digest = digest.toString(encoding)

  // reset state
  this._block.fill(0)
  this._blockOffset = 0
  for (var i = 0; i < 4; ++i) this._length[i] = 0

  return digest
}

HashBase.prototype._digest = function () {
  throw new Error('_digest is not implemented')
}

module.exports = HashBase

},{"inherits":154,"readable-stream":139,"safe-buffer":197}],125:[function(require,module,exports){
arguments[4][55][0].apply(exports,arguments)
},{"dup":55}],126:[function(require,module,exports){
arguments[4][56][0].apply(exports,arguments)
},{"./_stream_readable":128,"./_stream_writable":130,"_process":186,"dup":56,"inherits":154}],127:[function(require,module,exports){
arguments[4][57][0].apply(exports,arguments)
},{"./_stream_transform":129,"dup":57,"inherits":154}],128:[function(require,module,exports){
arguments[4][58][0].apply(exports,arguments)
},{"../errors":125,"./_stream_duplex":126,"./internal/streams/async_iterator":131,"./internal/streams/buffer_list":132,"./internal/streams/destroy":133,"./internal/streams/from":135,"./internal/streams/state":137,"./internal/streams/stream":138,"_process":186,"buffer":73,"dup":58,"events":114,"inherits":154,"string_decoder/":222,"util":27}],129:[function(require,module,exports){
arguments[4][59][0].apply(exports,arguments)
},{"../errors":125,"./_stream_duplex":126,"dup":59,"inherits":154}],130:[function(require,module,exports){
arguments[4][60][0].apply(exports,arguments)
},{"../errors":125,"./_stream_duplex":126,"./internal/streams/destroy":133,"./internal/streams/state":137,"./internal/streams/stream":138,"_process":186,"buffer":73,"dup":60,"inherits":154,"util-deprecate":223}],131:[function(require,module,exports){
arguments[4][61][0].apply(exports,arguments)
},{"./end-of-stream":134,"_process":186,"dup":61}],132:[function(require,module,exports){
arguments[4][62][0].apply(exports,arguments)
},{"buffer":73,"dup":62,"util":27}],133:[function(require,module,exports){
arguments[4][63][0].apply(exports,arguments)
},{"_process":186,"dup":63}],134:[function(require,module,exports){
arguments[4][64][0].apply(exports,arguments)
},{"../../../errors":125,"dup":64}],135:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"dup":65}],136:[function(require,module,exports){
arguments[4][66][0].apply(exports,arguments)
},{"../../../errors":125,"./end-of-stream":134,"dup":66}],137:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"../../../errors":125,"dup":67}],138:[function(require,module,exports){
arguments[4][68][0].apply(exports,arguments)
},{"dup":68,"events":114}],139:[function(require,module,exports){
arguments[4][69][0].apply(exports,arguments)
},{"./lib/_stream_duplex.js":126,"./lib/_stream_passthrough.js":127,"./lib/_stream_readable.js":128,"./lib/_stream_transform.js":129,"./lib/_stream_writable.js":130,"./lib/internal/streams/end-of-stream.js":134,"./lib/internal/streams/pipeline.js":136,"dup":69}],140:[function(require,module,exports){
var hash = exports;

hash.utils = require('./hash/utils');
hash.common = require('./hash/common');
hash.sha = require('./hash/sha');
hash.ripemd = require('./hash/ripemd');
hash.hmac = require('./hash/hmac');

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;

},{"./hash/common":141,"./hash/hmac":142,"./hash/ripemd":143,"./hash/sha":144,"./hash/utils":151}],141:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var assert = require('minimalistic-assert');

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};

},{"./utils":151,"minimalistic-assert":161}],142:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var assert = require('minimalistic-assert');

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};

},{"./utils":151,"minimalistic-assert":161}],143:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var common = require('./common');

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];

},{"./common":141,"./utils":151}],144:[function(require,module,exports){
'use strict';

exports.sha1 = require('./sha/1');
exports.sha224 = require('./sha/224');
exports.sha256 = require('./sha/256');
exports.sha384 = require('./sha/384');
exports.sha512 = require('./sha/512');

},{"./sha/1":145,"./sha/224":146,"./sha/256":147,"./sha/384":148,"./sha/512":149}],145:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [
    0x67452301, 0xefcdab89, 0x98badcfe,
    0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
module.exports = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

},{"../common":141,"../utils":151,"./common":150}],146:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var SHA256 = require('./256');

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [
    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};


},{"../utils":151,"./256":147}],147:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');
var assert = require('minimalistic-assert');

var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;

var BlockHash = common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

},{"../common":141,"../utils":151,"./common":150,"minimalistic-assert":161}],148:[function(require,module,exports){
'use strict';

var utils = require('../utils');

var SHA512 = require('./512');

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [
    0xcbbb9d5d, 0xc1059ed8,
    0x629a292a, 0x367cd507,
    0x9159015a, 0x3070dd17,
    0x152fecd8, 0xf70e5939,
    0x67332667, 0xffc00b31,
    0x8eb44a87, 0x68581511,
    0xdb0c2e0d, 0x64f98fa7,
    0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};

},{"../utils":151,"./512":149}],149:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var assert = require('minimalistic-assert');

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;

var BlockHash = common.BlockHash;

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xf3bcc908,
    0xbb67ae85, 0x84caa73b,
    0x3c6ef372, 0xfe94f82b,
    0xa54ff53a, 0x5f1d36f1,
    0x510e527f, 0xade682d1,
    0x9b05688c, 0x2b3e6c1f,
    0x1f83d9ab, 0xfb41bd6b,
    0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);

    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

},{"../common":141,"../utils":151,"minimalistic-assert":161}],150:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var rotr32 = utils.rotr32;

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}
exports.ft_1 = ft_1;

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}
exports.ch32 = ch32;

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
exports.maj32 = maj32;

function p32(x, y, z) {
  return x ^ y ^ z;
}
exports.p32 = p32;

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}
exports.g0_256 = g0_256;

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}
exports.g1_256 = g1_256;

},{"../utils":151}],151:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

exports.inherits = inherits;

function isSurrogatePair(msg, i) {
  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {
    return false;
  }
  if (i < 0 || i + 1 >= msg.length) {
    return false;
  }
  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;
}

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      // Inspired by stringToUtf8ByteArray() in closure-library by Google
      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
      // Apache License 2.0
      // https://github.com/google/closure-library/blob/master/LICENSE
      var p = 0;
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        if (c < 128) {
          res[p++] = c;
        } else if (c < 2048) {
          res[p++] = (c >> 6) | 192;
          res[p++] = (c & 63) | 128;
        } else if (isSurrogatePair(msg, i)) {
          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);
          res[p++] = (c >> 18) | 240;
          res[p++] = ((c >> 12) & 63) | 128;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        } else {
          res[p++] = (c >> 12) | 224;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        }
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
exports.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
exports.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
exports.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
exports.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
exports.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
exports.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
exports.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
exports.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
exports.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
exports.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
exports.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
exports.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
exports.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
exports.sum32_5 = sum32_5;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
}
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.shr64_lo = shr64_lo;

},{"inherits":154,"minimalistic-assert":161}],152:[function(require,module,exports){
'use strict';

var hash = require('hash.js');
var utils = require('minimalistic-crypto-utils');
var assert = require('minimalistic-assert');

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils.toArray(options.pers, options.persEnc || 'hex');
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toArray(entropy, entropyEnc);
  add = utils.toArray(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this._reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc || 'hex');
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils.encode(res, enc);
};

},{"hash.js":140,"minimalistic-assert":161,"minimalistic-crypto-utils":162}],153:[function(require,module,exports){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],154:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}

},{}],155:[function(require,module,exports){
'use strict';

var hasToStringTag = require('has-tostringtag/shams')();
var callBound = require('call-bind/callBound');

var $toString = callBound('Object.prototype.toString');

var isStandardArguments = function isArguments(value) {
	if (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {
		return false;
	}
	return $toString(value) === '[object Arguments]';
};

var isLegacyArguments = function isArguments(value) {
	if (isStandardArguments(value)) {
		return true;
	}
	return value !== null &&
		typeof value === 'object' &&
		typeof value.length === 'number' &&
		value.length >= 0 &&
		$toString(value) !== '[object Array]' &&
		$toString(value.callee) === '[object Function]';
};

var supportsStandardArguments = (function () {
	return isStandardArguments(arguments);
}());

isStandardArguments.isLegacyArguments = isLegacyArguments; // for tests

module.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;

},{"call-bind/callBound":74,"has-tostringtag/shams":122}],156:[function(require,module,exports){
'use strict';

var toStr = Object.prototype.toString;
var fnToStr = Function.prototype.toString;
var isFnRegex = /^\s*(?:function)?\*/;
var hasToStringTag = require('has-tostringtag/shams')();
var getProto = Object.getPrototypeOf;
var getGeneratorFunc = function () { // eslint-disable-line consistent-return
	if (!hasToStringTag) {
		return false;
	}
	try {
		return Function('return function*() {}')();
	} catch (e) {
	}
};
var GeneratorFunction;

module.exports = function isGeneratorFunction(fn) {
	if (typeof fn !== 'function') {
		return false;
	}
	if (isFnRegex.test(fnToStr.call(fn))) {
		return true;
	}
	if (!hasToStringTag) {
		var str = toStr.call(fn);
		return str === '[object GeneratorFunction]';
	}
	if (!getProto) {
		return false;
	}
	if (typeof GeneratorFunction === 'undefined') {
		var generatorFunc = getGeneratorFunc();
		GeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;
	}
	return getProto(fn) === GeneratorFunction;
};

},{"has-tostringtag/shams":122}],157:[function(require,module,exports){
(function (global){(function (){
'use strict';

var forEach = require('foreach');
var availableTypedArrays = require('available-typed-arrays');
var callBound = require('call-bind/callBound');

var $toString = callBound('Object.prototype.toString');
var hasToStringTag = require('has-tostringtag/shams')();

var g = typeof globalThis === 'undefined' ? global : globalThis;
var typedArrays = availableTypedArrays();

var $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {
	for (var i = 0; i < array.length; i += 1) {
		if (array[i] === value) {
			return i;
		}
	}
	return -1;
};
var $slice = callBound('String.prototype.slice');
var toStrTags = {};
var gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');
var getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');
if (hasToStringTag && gOPD && getPrototypeOf) {
	forEach(typedArrays, function (typedArray) {
		var arr = new g[typedArray]();
		if (Symbol.toStringTag in arr) {
			var proto = getPrototypeOf(arr);
			var descriptor = gOPD(proto, Symbol.toStringTag);
			if (!descriptor) {
				var superProto = getPrototypeOf(proto);
				descriptor = gOPD(superProto, Symbol.toStringTag);
			}
			toStrTags[typedArray] = descriptor.get;
		}
	});
}

var tryTypedArrays = function tryAllTypedArrays(value) {
	var anyTrue = false;
	forEach(toStrTags, function (getter, typedArray) {
		if (!anyTrue) {
			try {
				anyTrue = getter.call(value) === typedArray;
			} catch (e) { /**/ }
		}
	});
	return anyTrue;
};

module.exports = function isTypedArray(value) {
	if (!value || typeof value !== 'object') { return false; }
	if (!hasToStringTag || !(Symbol.toStringTag in value)) {
		var tag = $slice($toString(value), 8, -1);
		return $indexOf(typedArrays, tag) > -1;
	}
	if (!gOPD) { return false; }
	return tryTypedArrays(value);
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"available-typed-arrays":23,"call-bind/callBound":74,"es-abstract/helpers/getOwnPropertyDescriptor":113,"foreach":116,"has-tostringtag/shams":122}],158:[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var HashBase = require('hash-base')
var Buffer = require('safe-buffer').Buffer

var ARRAY16 = new Array(16)

function MD5 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
}

inherits(MD5, HashBase)

MD5.prototype._update = function () {
  var M = ARRAY16
  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)

  var a = this._a
  var b = this._b
  var c = this._c
  var d = this._d

  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)
  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)
  c = fnF(c, d, a, b, M[2], 0x242070db, 17)
  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)
  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)
  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)
  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)
  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)
  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)
  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)
  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)
  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)
  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)
  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)
  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)
  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)

  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)
  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)
  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)
  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)
  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)
  d = fnG(d, a, b, c, M[10], 0x02441453, 9)
  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)
  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)
  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)
  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)
  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)
  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)
  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)
  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)
  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)
  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)

  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)
  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)
  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)
  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)
  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)
  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)
  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)
  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)
  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)
  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)
  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)
  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)
  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)
  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)
  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)
  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)

  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)
  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)
  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)
  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)
  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)
  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)
  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)
  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)
  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)
  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)
  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)
  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)
  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)
  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)
  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)
  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)

  this._a = (this._a + a) | 0
  this._b = (this._b + b) | 0
  this._c = (this._c + c) | 0
  this._d = (this._d + d) | 0
}

MD5.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = Buffer.allocUnsafe(16)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fnF (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0
}

function fnG (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0
}

function fnH (a, b, c, d, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0
}

function fnI (a, b, c, d, m, k, s) {
  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0
}

module.exports = MD5

},{"hash-base":124,"inherits":154,"safe-buffer":197}],159:[function(require,module,exports){
var bn = require('bn.js');
var brorand = require('brorand');

function MillerRabin(rand) {
  this.rand = rand || new brorand.Rand();
}
module.exports = MillerRabin;

MillerRabin.create = function create(rand) {
  return new MillerRabin(rand);
};

MillerRabin.prototype._randbelow = function _randbelow(n) {
  var len = n.bitLength();
  var min_bytes = Math.ceil(len / 8);

  // Generage random bytes until a number less than n is found.
  // This ensures that 0..n-1 have an equal probability of being selected.
  do
    var a = new bn(this.rand.generate(min_bytes));
  while (a.cmp(n) >= 0);

  return a;
};

MillerRabin.prototype._randrange = function _randrange(start, stop) {
  // Generate a random number greater than or equal to start and less than stop.
  var size = stop.sub(start);
  return start.add(this._randbelow(size));
};

MillerRabin.prototype.test = function test(n, k, cb) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  var prime = true;
  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);
    if (cb)
      cb(a);

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return false;
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s)
      return false;
  }

  return prime;
};

MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);

    var g = n.gcd(a);
    if (g.cmpn(1) !== 0)
      return g;

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return x.fromRed().subn(1).gcd(n);
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s) {
      x = x.redSqr();
      return x.fromRed().subn(1).gcd(n);
    }
  }

  return false;
};

},{"bn.js":160,"brorand":26}],160:[function(require,module,exports){
arguments[4][18][0].apply(exports,arguments)
},{"buffer":27,"dup":18}],161:[function(require,module,exports){
module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};

},{}],162:[function(require,module,exports){
'use strict';

var utils = exports;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  } else {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};

},{}],163:[function(require,module,exports){
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

'use strict';
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

},{}],164:[function(require,module,exports){
'use strict';


var TYPED_OK =  (typeof Uint8Array !== 'undefined') &&
                (typeof Uint16Array !== 'undefined') &&
                (typeof Int32Array !== 'undefined');

function _has(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
}

exports.assign = function (obj /*from1, from2, from3, ...*/) {
  var sources = Array.prototype.slice.call(arguments, 1);
  while (sources.length) {
    var source = sources.shift();
    if (!source) { continue; }

    if (typeof source !== 'object') {
      throw new TypeError(source + 'must be non-object');
    }

    for (var p in source) {
      if (_has(source, p)) {
        obj[p] = source[p];
      }
    }
  }

  return obj;
};


// reduce buffer size, avoiding mem copy
exports.shrinkBuf = function (buf, size) {
  if (buf.length === size) { return buf; }
  if (buf.subarray) { return buf.subarray(0, size); }
  buf.length = size;
  return buf;
};


var fnTyped = {
  arraySet: function (dest, src, src_offs, len, dest_offs) {
    if (src.subarray && dest.subarray) {
      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);
      return;
    }
    // Fallback to ordinary array
    for (var i = 0; i < len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function (chunks) {
    var i, l, len, pos, chunk, result;

    // calculate data length
    len = 0;
    for (i = 0, l = chunks.length; i < l; i++) {
      len += chunks[i].length;
    }

    // join chunks
    result = new Uint8Array(len);
    pos = 0;
    for (i = 0, l = chunks.length; i < l; i++) {
      chunk = chunks[i];
      result.set(chunk, pos);
      pos += chunk.length;
    }

    return result;
  }
};

var fnUntyped = {
  arraySet: function (dest, src, src_offs, len, dest_offs) {
    for (var i = 0; i < len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function (chunks) {
    return [].concat.apply([], chunks);
  }
};


// Enable/Disable typed arrays use, for testing
//
exports.setTyped = function (on) {
  if (on) {
    exports.Buf8  = Uint8Array;
    exports.Buf16 = Uint16Array;
    exports.Buf32 = Int32Array;
    exports.assign(exports, fnTyped);
  } else {
    exports.Buf8  = Array;
    exports.Buf16 = Array;
    exports.Buf32 = Array;
    exports.assign(exports, fnUntyped);
  }
};

exports.setTyped(TYPED_OK);

},{}],165:[function(require,module,exports){
'use strict';

// Note: adler32 takes 12% for level 0 and 2% for level 6.
// It isn't worth it to make additional optimizations as in original.
// Small size is preferable.

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function adler32(adler, buf, len, pos) {
  var s1 = (adler & 0xffff) |0,
      s2 = ((adler >>> 16) & 0xffff) |0,
      n = 0;

  while (len !== 0) {
    // Set limit ~ twice less than 5552, to keep
    // s2 in 31-bits, because we force signed ints.
    // in other case %= will fail.
    n = len > 2000 ? 2000 : len;
    len -= n;

    do {
      s1 = (s1 + buf[pos++]) |0;
      s2 = (s2 + s1) |0;
    } while (--n);

    s1 %= 65521;
    s2 %= 65521;
  }

  return (s1 | (s2 << 16)) |0;
}


module.exports = adler32;

},{}],166:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

module.exports = {

  /* Allowed flush values; see deflate() and inflate() below for details */
  Z_NO_FLUSH:         0,
  Z_PARTIAL_FLUSH:    1,
  Z_SYNC_FLUSH:       2,
  Z_FULL_FLUSH:       3,
  Z_FINISH:           4,
  Z_BLOCK:            5,
  Z_TREES:            6,

  /* Return codes for the compression/decompression functions. Negative values
  * are errors, positive values are used for special but normal events.
  */
  Z_OK:               0,
  Z_STREAM_END:       1,
  Z_NEED_DICT:        2,
  Z_ERRNO:           -1,
  Z_STREAM_ERROR:    -2,
  Z_DATA_ERROR:      -3,
  //Z_MEM_ERROR:     -4,
  Z_BUF_ERROR:       -5,
  //Z_VERSION_ERROR: -6,

  /* compression levels */
  Z_NO_COMPRESSION:         0,
  Z_BEST_SPEED:             1,
  Z_BEST_COMPRESSION:       9,
  Z_DEFAULT_COMPRESSION:   -1,


  Z_FILTERED:               1,
  Z_HUFFMAN_ONLY:           2,
  Z_RLE:                    3,
  Z_FIXED:                  4,
  Z_DEFAULT_STRATEGY:       0,

  /* Possible values of the data_type field (though see inflate()) */
  Z_BINARY:                 0,
  Z_TEXT:                   1,
  //Z_ASCII:                1, // = Z_TEXT (deprecated)
  Z_UNKNOWN:                2,

  /* The deflate compression method */
  Z_DEFLATED:               8
  //Z_NULL:                 null // Use -1 or null inline, depending on var type
};

},{}],167:[function(require,module,exports){
'use strict';

// Note: we can't get significant speed boost here.
// So write code to minimize size - no pregenerated tables
// and array tools dependencies.

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

// Use ordinary array, since untyped makes no boost here
function makeTable() {
  var c, table = [];

  for (var n = 0; n < 256; n++) {
    c = n;
    for (var k = 0; k < 8; k++) {
      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));
    }
    table[n] = c;
  }

  return table;
}

// Create table on load. Just 255 signed longs. Not a problem.
var crcTable = makeTable();


function crc32(crc, buf, len, pos) {
  var t = crcTable,
      end = pos + len;

  crc ^= -1;

  for (var i = pos; i < end; i++) {
    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];
  }

  return (crc ^ (-1)); // >>> 0;
}


module.exports = crc32;

},{}],168:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils   = require('../utils/common');
var trees   = require('./trees');
var adler32 = require('./adler32');
var crc32   = require('./crc32');
var msg     = require('./messages');

/* Public constants ==========================================================*/
/* ===========================================================================*/


/* Allowed flush values; see deflate() and inflate() below for details */
var Z_NO_FLUSH      = 0;
var Z_PARTIAL_FLUSH = 1;
//var Z_SYNC_FLUSH    = 2;
var Z_FULL_FLUSH    = 3;
var Z_FINISH        = 4;
var Z_BLOCK         = 5;
//var Z_TREES         = 6;


/* Return codes for the compression/decompression functions. Negative values
 * are errors, positive values are used for special but normal events.
 */
var Z_OK            = 0;
var Z_STREAM_END    = 1;
//var Z_NEED_DICT     = 2;
//var Z_ERRNO         = -1;
var Z_STREAM_ERROR  = -2;
var Z_DATA_ERROR    = -3;
//var Z_MEM_ERROR     = -4;
var Z_BUF_ERROR     = -5;
//var Z_VERSION_ERROR = -6;


/* compression levels */
//var Z_NO_COMPRESSION      = 0;
//var Z_BEST_SPEED          = 1;
//var Z_BEST_COMPRESSION    = 9;
var Z_DEFAULT_COMPRESSION = -1;


var Z_FILTERED            = 1;
var Z_HUFFMAN_ONLY        = 2;
var Z_RLE                 = 3;
var Z_FIXED               = 4;
var Z_DEFAULT_STRATEGY    = 0;

/* Possible values of the data_type field (though see inflate()) */
//var Z_BINARY              = 0;
//var Z_TEXT                = 1;
//var Z_ASCII               = 1; // = Z_TEXT
var Z_UNKNOWN             = 2;


/* The deflate compression method */
var Z_DEFLATED  = 8;

/*============================================================================*/


var MAX_MEM_LEVEL = 9;
/* Maximum value for memLevel in deflateInit2 */
var MAX_WBITS = 15;
/* 32K LZ77 window */
var DEF_MEM_LEVEL = 8;


var LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */
var LITERALS      = 256;
/* number of literal bytes 0..255 */
var L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */
var D_CODES       = 30;
/* number of distance codes */
var BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */
var HEAP_SIZE     = 2 * L_CODES + 1;
/* maximum heap size */
var MAX_BITS  = 15;
/* All codes must not exceed MAX_BITS bits */

var MIN_MATCH = 3;
var MAX_MATCH = 258;
var MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);

var PRESET_DICT = 0x20;

var INIT_STATE = 42;
var EXTRA_STATE = 69;
var NAME_STATE = 73;
var COMMENT_STATE = 91;
var HCRC_STATE = 103;
var BUSY_STATE = 113;
var FINISH_STATE = 666;

var BS_NEED_MORE      = 1; /* block not completed, need more input or more output */
var BS_BLOCK_DONE     = 2; /* block flush performed */
var BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */
var BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */

var OS_CODE = 0x03; // Unix :) . Don't detect, use this default.

function err(strm, errorCode) {
  strm.msg = msg[errorCode];
  return errorCode;
}

function rank(f) {
  return ((f) << 1) - ((f) > 4 ? 9 : 0);
}

function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }


/* =========================================================================
 * Flush as much pending output as possible. All deflate() output goes
 * through this function so some applications may wish to modify it
 * to avoid allocating a large strm->output buffer and copying into it.
 * (See also read_buf()).
 */
function flush_pending(strm) {
  var s = strm.state;

  //_tr_flush_bits(s);
  var len = s.pending;
  if (len > strm.avail_out) {
    len = strm.avail_out;
  }
  if (len === 0) { return; }

  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);
  strm.next_out += len;
  s.pending_out += len;
  strm.total_out += len;
  strm.avail_out -= len;
  s.pending -= len;
  if (s.pending === 0) {
    s.pending_out = 0;
  }
}


function flush_block_only(s, last) {
  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);
  s.block_start = s.strstart;
  flush_pending(s.strm);
}


function put_byte(s, b) {
  s.pending_buf[s.pending++] = b;
}


/* =========================================================================
 * Put a short in the pending buffer. The 16-bit value is put in MSB order.
 * IN assertion: the stream state is correct and there is enough room in
 * pending_buf.
 */
function putShortMSB(s, b) {
//  put_byte(s, (Byte)(b >> 8));
//  put_byte(s, (Byte)(b & 0xff));
  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;
  s.pending_buf[s.pending++] = b & 0xff;
}


/* ===========================================================================
 * Read a new buffer from the current input stream, update the adler32
 * and total number of bytes read.  All deflate() input goes through
 * this function so some applications may wish to modify it to avoid
 * allocating a large strm->input buffer and copying from it.
 * (See also flush_pending()).
 */
function read_buf(strm, buf, start, size) {
  var len = strm.avail_in;

  if (len > size) { len = size; }
  if (len === 0) { return 0; }

  strm.avail_in -= len;

  // zmemcpy(buf, strm->next_in, len);
  utils.arraySet(buf, strm.input, strm.next_in, len, start);
  if (strm.state.wrap === 1) {
    strm.adler = adler32(strm.adler, buf, len, start);
  }

  else if (strm.state.wrap === 2) {
    strm.adler = crc32(strm.adler, buf, len, start);
  }

  strm.next_in += len;
  strm.total_in += len;

  return len;
}


/* ===========================================================================
 * Set match_start to the longest match starting at the given string and
 * return its length. Matches shorter or equal to prev_length are discarded,
 * in which case the result is equal to prev_length and match_start is
 * garbage.
 * IN assertions: cur_match is the head of the hash chain for the current
 *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1
 * OUT assertion: the match length is not greater than s->lookahead.
 */
function longest_match(s, cur_match) {
  var chain_length = s.max_chain_length;      /* max hash chain length */
  var scan = s.strstart; /* current string */
  var match;                       /* matched string */
  var len;                           /* length of current match */
  var best_len = s.prev_length;              /* best match length so far */
  var nice_match = s.nice_match;             /* stop if match long enough */
  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?
      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;

  var _win = s.window; // shortcut

  var wmask = s.w_mask;
  var prev  = s.prev;

  /* Stop when cur_match becomes <= limit. To simplify the code,
   * we prevent matches with the string of window index 0.
   */

  var strend = s.strstart + MAX_MATCH;
  var scan_end1  = _win[scan + best_len - 1];
  var scan_end   = _win[scan + best_len];

  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.
   * It is easy to get rid of this optimization if necessary.
   */
  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");

  /* Do not waste too much time if we already have a good match: */
  if (s.prev_length >= s.good_match) {
    chain_length >>= 2;
  }
  /* Do not look for matches beyond the end of the input. This is necessary
   * to make deflate deterministic.
   */
  if (nice_match > s.lookahead) { nice_match = s.lookahead; }

  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");

  do {
    // Assert(cur_match < s->strstart, "no future");
    match = cur_match;

    /* Skip to next match if the match length cannot increase
     * or if the match length is less than 2.  Note that the checks below
     * for insufficient lookahead only occur occasionally for performance
     * reasons.  Therefore uninitialized memory will be accessed, and
     * conditional jumps will be made that depend on those values.
     * However the length of the match is limited to the lookahead, so
     * the output of deflate is not affected by the uninitialized values.
     */

    if (_win[match + best_len]     !== scan_end  ||
        _win[match + best_len - 1] !== scan_end1 ||
        _win[match]                !== _win[scan] ||
        _win[++match]              !== _win[scan + 1]) {
      continue;
    }

    /* The check at best_len-1 can be removed because it will be made
     * again later. (This heuristic is not always a win.)
     * It is not necessary to compare scan[2] and match[2] since they
     * are always equal when the other bytes match, given that
     * the hash keys are equal and that HASH_BITS >= 8.
     */
    scan += 2;
    match++;
    // Assert(*scan == *match, "match[2]?");

    /* We check for insufficient lookahead only every 8th comparison;
     * the 256th check will be made at strstart+258.
     */
    do {
      /*jshint noempty:false*/
    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             scan < strend);

    // Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");

    len = MAX_MATCH - (strend - scan);
    scan = strend - MAX_MATCH;

    if (len > best_len) {
      s.match_start = cur_match;
      best_len = len;
      if (len >= nice_match) {
        break;
      }
      scan_end1  = _win[scan + best_len - 1];
      scan_end   = _win[scan + best_len];
    }
  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);

  if (best_len <= s.lookahead) {
    return best_len;
  }
  return s.lookahead;
}


/* ===========================================================================
 * Fill the window when the lookahead becomes insufficient.
 * Updates strstart and lookahead.
 *
 * IN assertion: lookahead < MIN_LOOKAHEAD
 * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD
 *    At least one byte has been read, or avail_in == 0; reads are
 *    performed for at least two bytes (required for the zip translate_eol
 *    option -- not supported here).
 */
function fill_window(s) {
  var _w_size = s.w_size;
  var p, n, m, more, str;

  //Assert(s->lookahead < MIN_LOOKAHEAD, "already enough lookahead");

  do {
    more = s.window_size - s.lookahead - s.strstart;

    // JS ints have 32 bit, block below not needed
    /* Deal with !@#$% 64K limit: */
    //if (sizeof(int) <= 2) {
    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {
    //        more = wsize;
    //
    //  } else if (more == (unsigned)(-1)) {
    //        /* Very unlikely, but possible on 16 bit machine if
    //         * strstart == 0 && lookahead == 1 (input done a byte at time)
    //         */
    //        more--;
    //    }
    //}


    /* If the window is almost full and there is insufficient lookahead,
     * move the upper half to the lower one to make room in the upper half.
     */
    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {

      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);
      s.match_start -= _w_size;
      s.strstart -= _w_size;
      /* we now have strstart >= MAX_DIST */
      s.block_start -= _w_size;

      /* Slide the hash table (could be avoided with 32 bit values
       at the expense of memory usage). We slide even when level == 0
       to keep the hash table consistent if we switch back to level > 0
       later. (Using level 0 permanently is not an optimal usage of
       zlib, so we don't care about this pathological case.)
       */

      n = s.hash_size;
      p = n;
      do {
        m = s.head[--p];
        s.head[p] = (m >= _w_size ? m - _w_size : 0);
      } while (--n);

      n = _w_size;
      p = n;
      do {
        m = s.prev[--p];
        s.prev[p] = (m >= _w_size ? m - _w_size : 0);
        /* If n is not on any hash chain, prev[n] is garbage but
         * its value will never be used.
         */
      } while (--n);

      more += _w_size;
    }
    if (s.strm.avail_in === 0) {
      break;
    }

    /* If there was no sliding:
     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&
     *    more == window_size - lookahead - strstart
     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)
     * => more >= window_size - 2*WSIZE + 2
     * In the BIG_MEM or MMAP case (not yet supported),
     *   window_size == input_size + MIN_LOOKAHEAD  &&
     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.
     * Otherwise, window_size == 2*WSIZE so more >= 2.
     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.
     */
    //Assert(more >= 2, "more < 2");
    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);
    s.lookahead += n;

    /* Initialize the hash value now that we have some input: */
    if (s.lookahead + s.insert >= MIN_MATCH) {
      str = s.strstart - s.insert;
      s.ins_h = s.window[str];

      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;
//#if MIN_MATCH != 3
//        Call update_hash() MIN_MATCH-3 more times
//#endif
      while (s.insert) {
        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;

        s.prev[str & s.w_mask] = s.head[s.ins_h];
        s.head[s.ins_h] = str;
        str++;
        s.insert--;
        if (s.lookahead + s.insert < MIN_MATCH) {
          break;
        }
      }
    }
    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,
     * but this is not important since only literal bytes will be emitted.
     */

  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);

  /* If the WIN_INIT bytes after the end of the current data have never been
   * written, then zero those bytes in order to avoid memory check reports of
   * the use of uninitialized (or uninitialised as Julian writes) bytes by
   * the longest match routines.  Update the high water mark for the next
   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match
   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.
   */
//  if (s.high_water < s.window_size) {
//    var curr = s.strstart + s.lookahead;
//    var init = 0;
//
//    if (s.high_water < curr) {
//      /* Previous high water mark below current data -- zero WIN_INIT
//       * bytes or up to end of window, whichever is less.
//       */
//      init = s.window_size - curr;
//      if (init > WIN_INIT)
//        init = WIN_INIT;
//      zmemzero(s->window + curr, (unsigned)init);
//      s->high_water = curr + init;
//    }
//    else if (s->high_water < (ulg)curr + WIN_INIT) {
//      /* High water mark at or above current data, but below current data
//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up
//       * to end of window, whichever is less.
//       */
//      init = (ulg)curr + WIN_INIT - s->high_water;
//      if (init > s->window_size - s->high_water)
//        init = s->window_size - s->high_water;
//      zmemzero(s->window + s->high_water, (unsigned)init);
//      s->high_water += init;
//    }
//  }
//
//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,
//    "not enough room for search");
}

/* ===========================================================================
 * Copy without compression as much as possible from the input stream, return
 * the current block state.
 * This function does not insert new strings in the dictionary since
 * uncompressible data is probably not useful. This function is used
 * only for the level=0 compression option.
 * NOTE: this function should be optimized to avoid extra copying from
 * window to pending_buf.
 */
function deflate_stored(s, flush) {
  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited
   * to pending_buf_size, and each stored block has a 5 byte header:
   */
  var max_block_size = 0xffff;

  if (max_block_size > s.pending_buf_size - 5) {
    max_block_size = s.pending_buf_size - 5;
  }

  /* Copy as much as possible from input to output: */
  for (;;) {
    /* Fill the window as much as possible: */
    if (s.lookahead <= 1) {

      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||
      //  s->block_start >= (long)s->w_size, "slide too late");
//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||
//        s.block_start >= s.w_size)) {
//        throw  new Error("slide too late");
//      }

      fill_window(s);
      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }

      if (s.lookahead === 0) {
        break;
      }
      /* flush the current block */
    }
    //Assert(s->block_start >= 0L, "block gone");
//    if (s.block_start < 0) throw new Error("block gone");

    s.strstart += s.lookahead;
    s.lookahead = 0;

    /* Emit a stored block if pending_buf will be full: */
    var max_start = s.block_start + max_block_size;

    if (s.strstart === 0 || s.strstart >= max_start) {
      /* strstart == 0 is possible when wraparound on 16-bit machine */
      s.lookahead = s.strstart - max_start;
      s.strstart = max_start;
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/


    }
    /* Flush if we may have to slide, otherwise block_start may become
     * negative and the data will be gone:
     */
    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }

  s.insert = 0;

  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }

  if (s.strstart > s.block_start) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_NEED_MORE;
}

/* ===========================================================================
 * Compress as much as possible from the input stream, return the current
 * block state.
 * This function does not perform lazy evaluation of matches and inserts
 * new strings in the dictionary only for unmatched strings or for short
 * matches. It is used only for the fast compression options.
 */
function deflate_fast(s, flush) {
  var hash_head;        /* head of the hash chain */
  var bflush;           /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) {
        break; /* flush the current block */
      }
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     * At this point we have always match_length < MIN_MATCH
     */
    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */
    }
    if (s.match_length >= MIN_MATCH) {
      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only

      /*** _tr_tally_dist(s, s.strstart - s.match_start,
                     s.match_length - MIN_MATCH, bflush); ***/
      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;

      /* Insert new strings in the hash table only if the match length
       * is not too large. This saves time but degrades compression.
       */
      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {
        s.match_length--; /* string at strstart already in table */
        do {
          s.strstart++;
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
          /* strstart never exceeds WSIZE-MAX_MATCH, so there are
           * always MIN_MATCH bytes ahead.
           */
        } while (--s.match_length !== 0);
        s.strstart++;
      } else
      {
        s.strstart += s.match_length;
        s.match_length = 0;
        s.ins_h = s.window[s.strstart];
        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */
        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;

//#if MIN_MATCH != 3
//                Call UPDATE_HASH() MIN_MATCH-3 more times
//#endif
        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not
         * matter since it will be recomputed at next deflate call.
         */
      }
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s.window[s.strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* ===========================================================================
 * Same as above, but achieves better compression. We use a lazy
 * evaluation for matches: a match is finally adopted only if there is
 * no better match at the next window position.
 */
function deflate_slow(s, flush) {
  var hash_head;          /* head of hash chain */
  var bflush;              /* set if current block must be flushed */

  var max_insert;

  /* Process the input block. */
  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     */
    s.prev_length = s.match_length;
    s.prev_match = s.match_start;
    s.match_length = MIN_MATCH - 1;

    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&
        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */

      if (s.match_length <= 5 &&
         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {

        /* If prev_match is also MIN_MATCH, match_start is garbage
         * but we will ignore the current match anyway.
         */
        s.match_length = MIN_MATCH - 1;
      }
    }
    /* If there was a match at the previous step and the current
     * match is not better, output the previous match:
     */
    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {
      max_insert = s.strstart + s.lookahead - MIN_MATCH;
      /* Do not insert strings in hash table beyond this. */

      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);

      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,
                     s.prev_length - MIN_MATCH, bflush);***/
      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);
      /* Insert in hash table all strings up to the end of the match.
       * strstart-1 and strstart are already inserted. If there is not
       * enough lookahead, the last two strings are not inserted in
       * the hash table.
       */
      s.lookahead -= s.prev_length - 1;
      s.prev_length -= 2;
      do {
        if (++s.strstart <= max_insert) {
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
        }
      } while (--s.prev_length !== 0);
      s.match_available = 0;
      s.match_length = MIN_MATCH - 1;
      s.strstart++;

      if (bflush) {
        /*** FLUSH_BLOCK(s, 0); ***/
        flush_block_only(s, false);
        if (s.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
        /***/
      }

    } else if (s.match_available) {
      /* If there was no match at the previous position, output a
       * single literal. If there was a match but the current match
       * is longer, truncate the previous match to a single literal.
       */
      //Tracevv((stderr,"%c", s->window[s->strstart-1]));
      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);

      if (bflush) {
        /*** FLUSH_BLOCK_ONLY(s, 0) ***/
        flush_block_only(s, false);
        /***/
      }
      s.strstart++;
      s.lookahead--;
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
    } else {
      /* There is no previous match to compare with, wait for
       * the next step to decide.
       */
      s.match_available = 1;
      s.strstart++;
      s.lookahead--;
    }
  }
  //Assert (flush != Z_NO_FLUSH, "no flush?");
  if (s.match_available) {
    //Tracevv((stderr,"%c", s->window[s->strstart-1]));
    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);

    s.match_available = 0;
  }
  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_BLOCK_DONE;
}


/* ===========================================================================
 * For Z_RLE, simply look for runs of bytes, generate matches only of distance
 * one.  Do not maintain a hash table.  (It will be regenerated if this run of
 * deflate switches away from Z_RLE.)
 */
function deflate_rle(s, flush) {
  var bflush;            /* set if current block must be flushed */
  var prev;              /* byte at distance one to match */
  var scan, strend;      /* scan goes up to strend for length of run */

  var _win = s.window;

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the longest run, plus one for the unrolled loop.
     */
    if (s.lookahead <= MAX_MATCH) {
      fill_window(s);
      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* See how many times the previous byte repeats */
    s.match_length = 0;
    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {
      scan = s.strstart - 1;
      prev = _win[scan];
      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {
        strend = s.strstart + MAX_MATCH;
        do {
          /*jshint noempty:false*/
        } while (prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 scan < strend);
        s.match_length = MAX_MATCH - (strend - scan);
        if (s.match_length > s.lookahead) {
          s.match_length = s.lookahead;
        }
      }
      //Assert(scan <= s->window+(uInt)(s->window_size-1), "wild scan");
    }

    /* Emit match if have run of MIN_MATCH or longer, else emit literal */
    if (s.match_length >= MIN_MATCH) {
      //check_match(s, s.strstart, s.strstart - 1, s.match_length);

      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/
      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;
      s.strstart += s.match_length;
      s.match_length = 0;
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s->window[s->strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* ===========================================================================
 * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.
 * (It will be regenerated if this run of deflate switches away from Huffman.)
 */
function deflate_huff(s, flush) {
  var bflush;             /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we have a literal to write. */
    if (s.lookahead === 0) {
      fill_window(s);
      if (s.lookahead === 0) {
        if (flush === Z_NO_FLUSH) {
          return BS_NEED_MORE;
        }
        break;      /* flush the current block */
      }
    }

    /* Output a literal byte */
    s.match_length = 0;
    //Tracevv((stderr,"%c", s->window[s->strstart]));
    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);
    s.lookahead--;
    s.strstart++;
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* Values for max_lazy_match, good_match and max_chain_length, depending on
 * the desired pack level (0..9). The values given below have been tuned to
 * exclude worst case performance for pathological files. Better values may be
 * found for specific files.
 */
function Config(good_length, max_lazy, nice_length, max_chain, func) {
  this.good_length = good_length;
  this.max_lazy = max_lazy;
  this.nice_length = nice_length;
  this.max_chain = max_chain;
  this.func = func;
}

var configuration_table;

configuration_table = [
  /*      good lazy nice chain */
  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */
  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */
  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */
  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */

  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */
  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */
  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */
  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */
  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */
  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */
];


/* ===========================================================================
 * Initialize the "longest match" routines for a new zlib stream
 */
function lm_init(s) {
  s.window_size = 2 * s.w_size;

  /*** CLEAR_HASH(s); ***/
  zero(s.head); // Fill with NIL (= 0);

  /* Set the default configuration parameters:
   */
  s.max_lazy_match = configuration_table[s.level].max_lazy;
  s.good_match = configuration_table[s.level].good_length;
  s.nice_match = configuration_table[s.level].nice_length;
  s.max_chain_length = configuration_table[s.level].max_chain;

  s.strstart = 0;
  s.block_start = 0;
  s.lookahead = 0;
  s.insert = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  s.ins_h = 0;
}


function DeflateState() {
  this.strm = null;            /* pointer back to this zlib stream */
  this.status = 0;            /* as the name implies */
  this.pending_buf = null;      /* output still pending */
  this.pending_buf_size = 0;  /* size of pending_buf */
  this.pending_out = 0;       /* next pending byte to output to the stream */
  this.pending = 0;           /* nb of bytes in the pending buffer */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.gzhead = null;         /* gzip header information to write */
  this.gzindex = 0;           /* where in extra, name, or comment */
  this.method = Z_DEFLATED; /* can only be DEFLATED */
  this.last_flush = -1;   /* value of flush param for previous deflate call */

  this.w_size = 0;  /* LZ77 window size (32K by default) */
  this.w_bits = 0;  /* log2(w_size)  (8..16) */
  this.w_mask = 0;  /* w_size - 1 */

  this.window = null;
  /* Sliding window. Input bytes are read into the second half of the window,
   * and move to the first half later to keep a dictionary of at least wSize
   * bytes. With this organization, matches are limited to a distance of
   * wSize-MAX_MATCH bytes, but this ensures that IO is always
   * performed with a length multiple of the block size.
   */

  this.window_size = 0;
  /* Actual size of window: 2*wSize, except when the user input buffer
   * is directly used as sliding window.
   */

  this.prev = null;
  /* Link to older string with same hash index. To limit the size of this
   * array to 64K, this link is maintained only for the last 32K strings.
   * An index in this array is thus a window index modulo 32K.
   */

  this.head = null;   /* Heads of the hash chains or NIL. */

  this.ins_h = 0;       /* hash index of string to be inserted */
  this.hash_size = 0;   /* number of elements in hash table */
  this.hash_bits = 0;   /* log2(hash_size) */
  this.hash_mask = 0;   /* hash_size-1 */

  this.hash_shift = 0;
  /* Number of bits by which ins_h must be shifted at each input
   * step. It must be such that after MIN_MATCH steps, the oldest
   * byte no longer takes part in the hash key, that is:
   *   hash_shift * MIN_MATCH >= hash_bits
   */

  this.block_start = 0;
  /* Window position at the beginning of the current output block. Gets
   * negative when the window is moved backwards.
   */

  this.match_length = 0;      /* length of best match */
  this.prev_match = 0;        /* previous match */
  this.match_available = 0;   /* set if previous match exists */
  this.strstart = 0;          /* start of string to insert */
  this.match_start = 0;       /* start of matching string */
  this.lookahead = 0;         /* number of valid bytes ahead in window */

  this.prev_length = 0;
  /* Length of the best match at previous step. Matches not greater than this
   * are discarded. This is used in the lazy match evaluation.
   */

  this.max_chain_length = 0;
  /* To speed up deflation, hash chains are never searched beyond this
   * length.  A higher limit improves compression ratio but degrades the
   * speed.
   */

  this.max_lazy_match = 0;
  /* Attempt to find a better match only when the current match is strictly
   * smaller than this value. This mechanism is used only for compression
   * levels >= 4.
   */
  // That's alias to max_lazy_match, don't use directly
  //this.max_insert_length = 0;
  /* Insert new strings in the hash table only if the match length is not
   * greater than this length. This saves time but degrades compression.
   * max_insert_length is used only for compression levels <= 3.
   */

  this.level = 0;     /* compression level (1..9) */
  this.strategy = 0;  /* favor or force Huffman coding*/

  this.good_match = 0;
  /* Use a faster search when the previous match is longer than this */

  this.nice_match = 0; /* Stop searching when current match exceeds this */

              /* used by trees.c: */

  /* Didn't use ct_data typedef below to suppress compiler warning */

  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */
  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */
  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */

  // Use flat array of DOUBLE size, with interleaved fata,
  // because JS does not support effective
  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);
  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);
  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);
  zero(this.dyn_ltree);
  zero(this.dyn_dtree);
  zero(this.bl_tree);

  this.l_desc   = null;         /* desc. for literal tree */
  this.d_desc   = null;         /* desc. for distance tree */
  this.bl_desc  = null;         /* desc. for bit length tree */

  //ush bl_count[MAX_BITS+1];
  this.bl_count = new utils.Buf16(MAX_BITS + 1);
  /* number of codes at each bit length for an optimal tree */

  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */
  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */
  zero(this.heap);

  this.heap_len = 0;               /* number of elements in the heap */
  this.heap_max = 0;               /* element of largest frequency */
  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.
   * The same heap array is used to build all trees.
   */

  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];
  zero(this.depth);
  /* Depth of each subtree used as tie breaker for trees of equal frequency
   */

  this.l_buf = 0;          /* buffer index for literals or lengths */

  this.lit_bufsize = 0;
  /* Size of match buffer for literals/lengths.  There are 4 reasons for
   * limiting lit_bufsize to 64K:
   *   - frequencies can be kept in 16 bit counters
   *   - if compression is not successful for the first block, all input
   *     data is still in the window so we can still emit a stored block even
   *     when input comes from standard input.  (This can also be done for
   *     all blocks if lit_bufsize is not greater than 32K.)
   *   - if compression is not successful for a file smaller than 64K, we can
   *     even emit a stored file instead of a stored block (saving 5 bytes).
   *     This is applicable only for zip (not gzip or zlib).
   *   - creating new Huffman trees less frequently may not provide fast
   *     adaptation to changes in the input data statistics. (Take for
   *     example a binary file with poorly compressible code followed by
   *     a highly compressible string table.) Smaller buffer sizes give
   *     fast adaptation but have of course the overhead of transmitting
   *     trees more frequently.
   *   - I can't count above 4
   */

  this.last_lit = 0;      /* running index in l_buf */

  this.d_buf = 0;
  /* Buffer index for distances. To simplify the code, d_buf and l_buf have
   * the same number of elements. To use different lengths, an extra flag
   * array would be necessary.
   */

  this.opt_len = 0;       /* bit length of current block with optimal trees */
  this.static_len = 0;    /* bit length of current block with static trees */
  this.matches = 0;       /* number of string matches in current block */
  this.insert = 0;        /* bytes at end of window left to insert */


  this.bi_buf = 0;
  /* Output buffer. bits are inserted starting at the bottom (least
   * significant bits).
   */
  this.bi_valid = 0;
  /* Number of valid bits in bi_buf.  All bits above the last valid bit
   * are always zero.
   */

  // Used for window memory init. We safely ignore it for JS. That makes
  // sense only for pointers and memory check tools.
  //this.high_water = 0;
  /* High water mark offset in window for initialized bytes -- bytes above
   * this are set to zero in order to avoid memory check warnings when
   * longest match routines access bytes past the input.  This is then
   * updated to the new high water mark.
   */
}


function deflateResetKeep(strm) {
  var s;

  if (!strm || !strm.state) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.total_in = strm.total_out = 0;
  strm.data_type = Z_UNKNOWN;

  s = strm.state;
  s.pending = 0;
  s.pending_out = 0;

  if (s.wrap < 0) {
    s.wrap = -s.wrap;
    /* was made negative by deflate(..., Z_FINISH); */
  }
  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);
  strm.adler = (s.wrap === 2) ?
    0  // crc32(0, Z_NULL, 0)
  :
    1; // adler32(0, Z_NULL, 0)
  s.last_flush = Z_NO_FLUSH;
  trees._tr_init(s);
  return Z_OK;
}


function deflateReset(strm) {
  var ret = deflateResetKeep(strm);
  if (ret === Z_OK) {
    lm_init(strm.state);
  }
  return ret;
}


function deflateSetHeader(strm, head) {
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }
  strm.state.gzhead = head;
  return Z_OK;
}


function deflateInit2(strm, level, method, windowBits, memLevel, strategy) {
  if (!strm) { // === Z_NULL
    return Z_STREAM_ERROR;
  }
  var wrap = 1;

  if (level === Z_DEFAULT_COMPRESSION) {
    level = 6;
  }

  if (windowBits < 0) { /* suppress zlib wrapper */
    wrap = 0;
    windowBits = -windowBits;
  }

  else if (windowBits > 15) {
    wrap = 2;           /* write gzip wrapper instead */
    windowBits -= 16;
  }


  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||
    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||
    strategy < 0 || strategy > Z_FIXED) {
    return err(strm, Z_STREAM_ERROR);
  }


  if (windowBits === 8) {
    windowBits = 9;
  }
  /* until 256-byte window bug fixed */

  var s = new DeflateState();

  strm.state = s;
  s.strm = strm;

  s.wrap = wrap;
  s.gzhead = null;
  s.w_bits = windowBits;
  s.w_size = 1 << s.w_bits;
  s.w_mask = s.w_size - 1;

  s.hash_bits = memLevel + 7;
  s.hash_size = 1 << s.hash_bits;
  s.hash_mask = s.hash_size - 1;
  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);

  s.window = new utils.Buf8(s.w_size * 2);
  s.head = new utils.Buf16(s.hash_size);
  s.prev = new utils.Buf16(s.w_size);

  // Don't need mem init magic for JS.
  //s.high_water = 0;  /* nothing written to s->window yet */

  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */

  s.pending_buf_size = s.lit_bufsize * 4;

  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);
  //s->pending_buf = (uchf *) overlay;
  s.pending_buf = new utils.Buf8(s.pending_buf_size);

  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)
  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);
  s.d_buf = 1 * s.lit_bufsize;

  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;
  s.l_buf = (1 + 2) * s.lit_bufsize;

  s.level = level;
  s.strategy = strategy;
  s.method = method;

  return deflateReset(strm);
}

function deflateInit(strm, level) {
  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);
}


function deflate(strm, flush) {
  var old_flush, s;
  var beg, val; // for gzip header write only

  if (!strm || !strm.state ||
    flush > Z_BLOCK || flush < 0) {
    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;
  }

  s = strm.state;

  if (!strm.output ||
      (!strm.input && strm.avail_in !== 0) ||
      (s.status === FINISH_STATE && flush !== Z_FINISH)) {
    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);
  }

  s.strm = strm; /* just in case */
  old_flush = s.last_flush;
  s.last_flush = flush;

  /* Write the header */
  if (s.status === INIT_STATE) {

    if (s.wrap === 2) { // GZIP header
      strm.adler = 0;  //crc32(0L, Z_NULL, 0);
      put_byte(s, 31);
      put_byte(s, 139);
      put_byte(s, 8);
      if (!s.gzhead) { // s->gzhead == Z_NULL
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, OS_CODE);
        s.status = BUSY_STATE;
      }
      else {
        put_byte(s, (s.gzhead.text ? 1 : 0) +
                    (s.gzhead.hcrc ? 2 : 0) +
                    (!s.gzhead.extra ? 0 : 4) +
                    (!s.gzhead.name ? 0 : 8) +
                    (!s.gzhead.comment ? 0 : 16)
        );
        put_byte(s, s.gzhead.time & 0xff);
        put_byte(s, (s.gzhead.time >> 8) & 0xff);
        put_byte(s, (s.gzhead.time >> 16) & 0xff);
        put_byte(s, (s.gzhead.time >> 24) & 0xff);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, s.gzhead.os & 0xff);
        if (s.gzhead.extra && s.gzhead.extra.length) {
          put_byte(s, s.gzhead.extra.length & 0xff);
          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);
        }
        if (s.gzhead.hcrc) {
          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);
        }
        s.gzindex = 0;
        s.status = EXTRA_STATE;
      }
    }
    else // DEFLATE header
    {
      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;
      var level_flags = -1;

      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {
        level_flags = 0;
      } else if (s.level < 6) {
        level_flags = 1;
      } else if (s.level === 6) {
        level_flags = 2;
      } else {
        level_flags = 3;
      }
      header |= (level_flags << 6);
      if (s.strstart !== 0) { header |= PRESET_DICT; }
      header += 31 - (header % 31);

      s.status = BUSY_STATE;
      putShortMSB(s, header);

      /* Save the adler32 of the preset dictionary: */
      if (s.strstart !== 0) {
        putShortMSB(s, strm.adler >>> 16);
        putShortMSB(s, strm.adler & 0xffff);
      }
      strm.adler = 1; // adler32(0L, Z_NULL, 0);
    }
  }

//#ifdef GZIP
  if (s.status === EXTRA_STATE) {
    if (s.gzhead.extra/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */

      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            break;
          }
        }
        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);
        s.gzindex++;
      }
      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (s.gzindex === s.gzhead.extra.length) {
        s.gzindex = 0;
        s.status = NAME_STATE;
      }
    }
    else {
      s.status = NAME_STATE;
    }
  }
  if (s.status === NAME_STATE) {
    if (s.gzhead.name/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.name.length) {
          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.gzindex = 0;
        s.status = COMMENT_STATE;
      }
    }
    else {
      s.status = COMMENT_STATE;
    }
  }
  if (s.status === COMMENT_STATE) {
    if (s.gzhead.comment/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.comment.length) {
          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.status = HCRC_STATE;
      }
    }
    else {
      s.status = HCRC_STATE;
    }
  }
  if (s.status === HCRC_STATE) {
    if (s.gzhead.hcrc) {
      if (s.pending + 2 > s.pending_buf_size) {
        flush_pending(strm);
      }
      if (s.pending + 2 <= s.pending_buf_size) {
        put_byte(s, strm.adler & 0xff);
        put_byte(s, (strm.adler >> 8) & 0xff);
        strm.adler = 0; //crc32(0L, Z_NULL, 0);
        s.status = BUSY_STATE;
      }
    }
    else {
      s.status = BUSY_STATE;
    }
  }
//#endif

  /* Flush as much pending output as possible */
  if (s.pending !== 0) {
    flush_pending(strm);
    if (strm.avail_out === 0) {
      /* Since avail_out is 0, deflate will be called again with
       * more output space, but possibly with both pending and
       * avail_in equal to zero. There won't be anything to do,
       * but this is not an error situation so make sure we
       * return OK instead of BUF_ERROR at next call of deflate:
       */
      s.last_flush = -1;
      return Z_OK;
    }

    /* Make sure there is something to do and avoid duplicate consecutive
     * flushes. For repeated and useless calls with Z_FINISH, we keep
     * returning Z_STREAM_END instead of Z_BUF_ERROR.
     */
  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&
    flush !== Z_FINISH) {
    return err(strm, Z_BUF_ERROR);
  }

  /* User must not provide more input after the first FINISH: */
  if (s.status === FINISH_STATE && strm.avail_in !== 0) {
    return err(strm, Z_BUF_ERROR);
  }

  /* Start a new block or continue the current one.
   */
  if (strm.avail_in !== 0 || s.lookahead !== 0 ||
    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {
    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :
      (s.strategy === Z_RLE ? deflate_rle(s, flush) :
        configuration_table[s.level].func(s, flush));

    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {
      s.status = FINISH_STATE;
    }
    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {
      if (strm.avail_out === 0) {
        s.last_flush = -1;
        /* avoid BUF_ERROR next call, see above */
      }
      return Z_OK;
      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call
       * of deflate should use the same flush parameter to make sure
       * that the flush is complete. So we don't have to output an
       * empty block here, this will be done at next call. This also
       * ensures that for a very small output buffer, we emit at most
       * one empty block.
       */
    }
    if (bstate === BS_BLOCK_DONE) {
      if (flush === Z_PARTIAL_FLUSH) {
        trees._tr_align(s);
      }
      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */

        trees._tr_stored_block(s, 0, 0, false);
        /* For a full flush, this empty block will be recognized
         * as a special marker by inflate_sync().
         */
        if (flush === Z_FULL_FLUSH) {
          /*** CLEAR_HASH(s); ***/             /* forget history */
          zero(s.head); // Fill with NIL (= 0);

          if (s.lookahead === 0) {
            s.strstart = 0;
            s.block_start = 0;
            s.insert = 0;
          }
        }
      }
      flush_pending(strm);
      if (strm.avail_out === 0) {
        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */
        return Z_OK;
      }
    }
  }
  //Assert(strm->avail_out > 0, "bug2");
  //if (strm.avail_out <= 0) { throw new Error("bug2");}

  if (flush !== Z_FINISH) { return Z_OK; }
  if (s.wrap <= 0) { return Z_STREAM_END; }

  /* Write the trailer */
  if (s.wrap === 2) {
    put_byte(s, strm.adler & 0xff);
    put_byte(s, (strm.adler >> 8) & 0xff);
    put_byte(s, (strm.adler >> 16) & 0xff);
    put_byte(s, (strm.adler >> 24) & 0xff);
    put_byte(s, strm.total_in & 0xff);
    put_byte(s, (strm.total_in >> 8) & 0xff);
    put_byte(s, (strm.total_in >> 16) & 0xff);
    put_byte(s, (strm.total_in >> 24) & 0xff);
  }
  else
  {
    putShortMSB(s, strm.adler >>> 16);
    putShortMSB(s, strm.adler & 0xffff);
  }

  flush_pending(strm);
  /* If avail_out is zero, the application will call deflate again
   * to flush the rest.
   */
  if (s.wrap > 0) { s.wrap = -s.wrap; }
  /* write the trailer only once! */
  return s.pending !== 0 ? Z_OK : Z_STREAM_END;
}

function deflateEnd(strm) {
  var status;

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR;
  }

  status = strm.state.status;
  if (status !== INIT_STATE &&
    status !== EXTRA_STATE &&
    status !== NAME_STATE &&
    status !== COMMENT_STATE &&
    status !== HCRC_STATE &&
    status !== BUSY_STATE &&
    status !== FINISH_STATE
  ) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.state = null;

  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;
}


/* =========================================================================
 * Initializes the compression dictionary from the given byte
 * sequence without producing any compressed output.
 */
function deflateSetDictionary(strm, dictionary) {
  var dictLength = dictionary.length;

  var s;
  var str, n;
  var wrap;
  var avail;
  var next;
  var input;
  var tmpDict;

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR;
  }

  s = strm.state;
  wrap = s.wrap;

  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {
    return Z_STREAM_ERROR;
  }

  /* when using zlib wrappers, compute Adler-32 for provided dictionary */
  if (wrap === 1) {
    /* adler32(strm->adler, dictionary, dictLength); */
    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);
  }

  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */

  /* if dictionary would fill window, just replace the history */
  if (dictLength >= s.w_size) {
    if (wrap === 0) {            /* already empty otherwise */
      /*** CLEAR_HASH(s); ***/
      zero(s.head); // Fill with NIL (= 0);
      s.strstart = 0;
      s.block_start = 0;
      s.insert = 0;
    }
    /* use the tail */
    // dictionary = dictionary.slice(dictLength - s.w_size);
    tmpDict = new utils.Buf8(s.w_size);
    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);
    dictionary = tmpDict;
    dictLength = s.w_size;
  }
  /* insert dictionary into window and hash */
  avail = strm.avail_in;
  next = strm.next_in;
  input = strm.input;
  strm.avail_in = dictLength;
  strm.next_in = 0;
  strm.input = dictionary;
  fill_window(s);
  while (s.lookahead >= MIN_MATCH) {
    str = s.strstart;
    n = s.lookahead - (MIN_MATCH - 1);
    do {
      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;

      s.prev[str & s.w_mask] = s.head[s.ins_h];

      s.head[s.ins_h] = str;
      str++;
    } while (--n);
    s.strstart = str;
    s.lookahead = MIN_MATCH - 1;
    fill_window(s);
  }
  s.strstart += s.lookahead;
  s.block_start = s.strstart;
  s.insert = s.lookahead;
  s.lookahead = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  strm.next_in = next;
  strm.input = input;
  strm.avail_in = avail;
  s.wrap = wrap;
  return Z_OK;
}


exports.deflateInit = deflateInit;
exports.deflateInit2 = deflateInit2;
exports.deflateReset = deflateReset;
exports.deflateResetKeep = deflateResetKeep;
exports.deflateSetHeader = deflateSetHeader;
exports.deflate = deflate;
exports.deflateEnd = deflateEnd;
exports.deflateSetDictionary = deflateSetDictionary;
exports.deflateInfo = 'pako deflate (from Nodeca project)';

/* Not implemented
exports.deflateBound = deflateBound;
exports.deflateCopy = deflateCopy;
exports.deflateParams = deflateParams;
exports.deflatePending = deflatePending;
exports.deflatePrime = deflatePrime;
exports.deflateTune = deflateTune;
*/

},{"../utils/common":164,"./adler32":165,"./crc32":167,"./messages":172,"./trees":173}],169:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

// See state defs from inflate.js
var BAD = 30;       /* got a data error -- remain here until reset */
var TYPE = 12;      /* i: waiting for type bits, including last-flag bit */

/*
   Decode literal, length, and distance codes and write out the resulting
   literal and match bytes until either not enough input or output is
   available, an end-of-block is encountered, or a data error is encountered.
   When large enough input and output buffers are supplied to inflate(), for
   example, a 16K input buffer and a 64K output buffer, more than 95% of the
   inflate execution time is spent in this routine.

   Entry assumptions:

        state.mode === LEN
        strm.avail_in >= 6
        strm.avail_out >= 258
        start >= strm.avail_out
        state.bits < 8

   On return, state.mode is one of:

        LEN -- ran out of enough output space or enough available input
        TYPE -- reached end of block code, inflate() to interpret next block
        BAD -- error in block data

   Notes:

    - The maximum input bits used by a length/distance pair is 15 bits for the
      length code, 5 bits for the length extra, 15 bits for the distance code,
      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.
      Therefore if strm.avail_in >= 6, then there is enough input to avoid
      checking for available input while decoding.

    - The maximum bytes that a single length/distance pair can output is 258
      bytes, which is the maximum length that can be coded.  inflate_fast()
      requires strm.avail_out >= 258 for each loop to avoid checking for
      output space.
 */
module.exports = function inflate_fast(strm, start) {
  var state;
  var _in;                    /* local strm.input */
  var last;                   /* have enough input while in < last */
  var _out;                   /* local strm.output */
  var beg;                    /* inflate()'s initial strm.output */
  var end;                    /* while out < end, enough space available */
//#ifdef INFLATE_STRICT
  var dmax;                   /* maximum distance from zlib header */
//#endif
  var wsize;                  /* window size or zero if not using window */
  var whave;                  /* valid bytes in the window */
  var wnext;                  /* window write index */
  // Use `s_window` instead `window`, avoid conflict with instrumentation tools
  var s_window;               /* allocated sliding window, if wsize != 0 */
  var hold;                   /* local strm.hold */
  var bits;                   /* local strm.bits */
  var lcode;                  /* local strm.lencode */
  var dcode;                  /* local strm.distcode */
  var lmask;                  /* mask for first level of length codes */
  var dmask;                  /* mask for first level of distance codes */
  var here;                   /* retrieved table entry */
  var op;                     /* code bits, operation, extra bits, or */
                              /*  window position, window bytes to copy */
  var len;                    /* match length, unused bytes */
  var dist;                   /* match distance */
  var from;                   /* where to copy match from */
  var from_source;


  var input, output; // JS specific, because we have no pointers

  /* copy state to local variables */
  state = strm.state;
  //here = state.here;
  _in = strm.next_in;
  input = strm.input;
  last = _in + (strm.avail_in - 5);
  _out = strm.next_out;
  output = strm.output;
  beg = _out - (start - strm.avail_out);
  end = _out + (strm.avail_out - 257);
//#ifdef INFLATE_STRICT
  dmax = state.dmax;
//#endif
  wsize = state.wsize;
  whave = state.whave;
  wnext = state.wnext;
  s_window = state.window;
  hold = state.hold;
  bits = state.bits;
  lcode = state.lencode;
  dcode = state.distcode;
  lmask = (1 << state.lenbits) - 1;
  dmask = (1 << state.distbits) - 1;


  /* decode literals and length/distances until end-of-block or not enough
     input data or output space */

  top:
  do {
    if (bits < 15) {
      hold += input[_in++] << bits;
      bits += 8;
      hold += input[_in++] << bits;
      bits += 8;
    }

    here = lcode[hold & lmask];

    dolen:
    for (;;) { // Goto emulation
      op = here >>> 24/*here.bits*/;
      hold >>>= op;
      bits -= op;
      op = (here >>> 16) & 0xff/*here.op*/;
      if (op === 0) {                          /* literal */
        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
        //        "inflate:         literal '%c'\n" :
        //        "inflate:         literal 0x%02x\n", here.val));
        output[_out++] = here & 0xffff/*here.val*/;
      }
      else if (op & 16) {                     /* length base */
        len = here & 0xffff/*here.val*/;
        op &= 15;                           /* number of extra bits */
        if (op) {
          if (bits < op) {
            hold += input[_in++] << bits;
            bits += 8;
          }
          len += hold & ((1 << op) - 1);
          hold >>>= op;
          bits -= op;
        }
        //Tracevv((stderr, "inflate:         length %u\n", len));
        if (bits < 15) {
          hold += input[_in++] << bits;
          bits += 8;
          hold += input[_in++] << bits;
          bits += 8;
        }
        here = dcode[hold & dmask];

        dodist:
        for (;;) { // goto emulation
          op = here >>> 24/*here.bits*/;
          hold >>>= op;
          bits -= op;
          op = (here >>> 16) & 0xff/*here.op*/;

          if (op & 16) {                      /* distance base */
            dist = here & 0xffff/*here.val*/;
            op &= 15;                       /* number of extra bits */
            if (bits < op) {
              hold += input[_in++] << bits;
              bits += 8;
              if (bits < op) {
                hold += input[_in++] << bits;
                bits += 8;
              }
            }
            dist += hold & ((1 << op) - 1);
//#ifdef INFLATE_STRICT
            if (dist > dmax) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break top;
            }
//#endif
            hold >>>= op;
            bits -= op;
            //Tracevv((stderr, "inflate:         distance %u\n", dist));
            op = _out - beg;                /* max distance in output */
            if (dist > op) {                /* see if copy from window */
              op = dist - op;               /* distance back in window */
              if (op > whave) {
                if (state.sane) {
                  strm.msg = 'invalid distance too far back';
                  state.mode = BAD;
                  break top;
                }

// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//                if (len <= op - whave) {
//                  do {
//                    output[_out++] = 0;
//                  } while (--len);
//                  continue top;
//                }
//                len -= op - whave;
//                do {
//                  output[_out++] = 0;
//                } while (--op > whave);
//                if (op === 0) {
//                  from = _out - dist;
//                  do {
//                    output[_out++] = output[from++];
//                  } while (--len);
//                  continue top;
//                }
//#endif
              }
              from = 0; // window index
              from_source = s_window;
              if (wnext === 0) {           /* very common case */
                from += wsize - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              else if (wnext < op) {      /* wrap around window */
                from += wsize + wnext - op;
                op -= wnext;
                if (op < len) {         /* some from end of window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = 0;
                  if (wnext < len) {  /* some from start of window */
                    op = wnext;
                    len -= op;
                    do {
                      output[_out++] = s_window[from++];
                    } while (--op);
                    from = _out - dist;      /* rest from output */
                    from_source = output;
                  }
                }
              }
              else {                      /* contiguous in window */
                from += wnext - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              while (len > 2) {
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                len -= 3;
              }
              if (len) {
                output[_out++] = from_source[from++];
                if (len > 1) {
                  output[_out++] = from_source[from++];
                }
              }
            }
            else {
              from = _out - dist;          /* copy direct from output */
              do {                        /* minimum length is three */
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                len -= 3;
              } while (len > 2);
              if (len) {
                output[_out++] = output[from++];
                if (len > 1) {
                  output[_out++] = output[from++];
                }
              }
            }
          }
          else if ((op & 64) === 0) {          /* 2nd level distance code */
            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
            continue dodist;
          }
          else {
            strm.msg = 'invalid distance code';
            state.mode = BAD;
            break top;
          }

          break; // need to emulate goto via "continue"
        }
      }
      else if ((op & 64) === 0) {              /* 2nd level length code */
        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
        continue dolen;
      }
      else if (op & 32) {                     /* end-of-block */
        //Tracevv((stderr, "inflate:         end of block\n"));
        state.mode = TYPE;
        break top;
      }
      else {
        strm.msg = 'invalid literal/length code';
        state.mode = BAD;
        break top;
      }

      break; // need to emulate goto via "continue"
    }
  } while (_in < last && _out < end);

  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */
  len = bits >> 3;
  _in -= len;
  bits -= len << 3;
  hold &= (1 << bits) - 1;

  /* update state and return */
  strm.next_in = _in;
  strm.next_out = _out;
  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));
  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));
  state.hold = hold;
  state.bits = bits;
  return;
};

},{}],170:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils         = require('../utils/common');
var adler32       = require('./adler32');
var crc32         = require('./crc32');
var inflate_fast  = require('./inffast');
var inflate_table = require('./inftrees');

var CODES = 0;
var LENS = 1;
var DISTS = 2;

/* Public constants ==========================================================*/
/* ===========================================================================*/


/* Allowed flush values; see deflate() and inflate() below for details */
//var Z_NO_FLUSH      = 0;
//var Z_PARTIAL_FLUSH = 1;
//var Z_SYNC_FLUSH    = 2;
//var Z_FULL_FLUSH    = 3;
var Z_FINISH        = 4;
var Z_BLOCK         = 5;
var Z_TREES         = 6;


/* Return codes for the compression/decompression functions. Negative values
 * are errors, positive values are used for special but normal events.
 */
var Z_OK            = 0;
var Z_STREAM_END    = 1;
var Z_NEED_DICT     = 2;
//var Z_ERRNO         = -1;
var Z_STREAM_ERROR  = -2;
var Z_DATA_ERROR    = -3;
var Z_MEM_ERROR     = -4;
var Z_BUF_ERROR     = -5;
//var Z_VERSION_ERROR = -6;

/* The deflate compression method */
var Z_DEFLATED  = 8;


/* STATES ====================================================================*/
/* ===========================================================================*/


var    HEAD = 1;       /* i: waiting for magic header */
var    FLAGS = 2;      /* i: waiting for method and flags (gzip) */
var    TIME = 3;       /* i: waiting for modification time (gzip) */
var    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */
var    EXLEN = 5;      /* i: waiting for extra length (gzip) */
var    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */
var    NAME = 7;       /* i: waiting for end of file name (gzip) */
var    COMMENT = 8;    /* i: waiting for end of comment (gzip) */
var    HCRC = 9;       /* i: waiting for header crc (gzip) */
var    DICTID = 10;    /* i: waiting for dictionary check value */
var    DICT = 11;      /* waiting for inflateSetDictionary() call */
var        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */
var        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */
var        STORED = 14;    /* i: waiting for stored size (length and complement) */
var        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */
var        COPY = 16;      /* i/o: waiting for input or output to copy stored block */
var        TABLE = 17;     /* i: waiting for dynamic block table lengths */
var        LENLENS = 18;   /* i: waiting for code length code lengths */
var        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */
var            LEN_ = 20;      /* i: same as LEN below, but only first time in */
var            LEN = 21;       /* i: waiting for length/lit/eob code */
var            LENEXT = 22;    /* i: waiting for length extra bits */
var            DIST = 23;      /* i: waiting for distance code */
var            DISTEXT = 24;   /* i: waiting for distance extra bits */
var            MATCH = 25;     /* o: waiting for output space to copy string */
var            LIT = 26;       /* o: waiting for output space to write literal */
var    CHECK = 27;     /* i: waiting for 32-bit check value */
var    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */
var    DONE = 29;      /* finished check, done -- remain here until reset */
var    BAD = 30;       /* got a data error -- remain here until reset */
var    MEM = 31;       /* got an inflate() memory error -- remain here until reset */
var    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */

/* ===========================================================================*/



var ENOUGH_LENS = 852;
var ENOUGH_DISTS = 592;
//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);

var MAX_WBITS = 15;
/* 32K LZ77 window */
var DEF_WBITS = MAX_WBITS;


function zswap32(q) {
  return  (((q >>> 24) & 0xff) +
          ((q >>> 8) & 0xff00) +
          ((q & 0xff00) << 8) +
          ((q & 0xff) << 24));
}


function InflateState() {
  this.mode = 0;             /* current inflate mode */
  this.last = false;          /* true if processing last block */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.havedict = false;      /* true if dictionary provided */
  this.flags = 0;             /* gzip header method and flags (0 if zlib) */
  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */
  this.check = 0;             /* protected copy of check value */
  this.total = 0;             /* protected copy of output count */
  // TODO: may be {}
  this.head = null;           /* where to save gzip header information */

  /* sliding window */
  this.wbits = 0;             /* log base 2 of requested window size */
  this.wsize = 0;             /* window size or zero if not using window */
  this.whave = 0;             /* valid bytes in the window */
  this.wnext = 0;             /* window write index */
  this.window = null;         /* allocated sliding window, if needed */

  /* bit accumulator */
  this.hold = 0;              /* input bit accumulator */
  this.bits = 0;              /* number of bits in "in" */

  /* for string and stored block copying */
  this.length = 0;            /* literal or length of data to copy */
  this.offset = 0;            /* distance back to copy string from */

  /* for table and code decoding */
  this.extra = 0;             /* extra bits needed */

  /* fixed and dynamic code tables */
  this.lencode = null;          /* starting table for length/literal codes */
  this.distcode = null;         /* starting table for distance codes */
  this.lenbits = 0;           /* index bits for lencode */
  this.distbits = 0;          /* index bits for distcode */

  /* dynamic table building */
  this.ncode = 0;             /* number of code length code lengths */
  this.nlen = 0;              /* number of length code lengths */
  this.ndist = 0;             /* number of distance code lengths */
  this.have = 0;              /* number of code lengths in lens[] */
  this.next = null;              /* next available space in codes[] */

  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */
  this.work = new utils.Buf16(288); /* work area for code table building */

  /*
   because we don't have pointers in js, we use lencode and distcode directly
   as buffers so we don't need codes
  */
  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */
  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */
  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */
  this.sane = 0;                   /* if false, allow invalid distance too far */
  this.back = 0;                   /* bits back of last unprocessed length/lit */
  this.was = 0;                    /* initial length of match */
}

function inflateResetKeep(strm) {
  var state;

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  strm.total_in = strm.total_out = state.total = 0;
  strm.msg = ''; /*Z_NULL*/
  if (state.wrap) {       /* to support ill-conceived Java test suite */
    strm.adler = state.wrap & 1;
  }
  state.mode = HEAD;
  state.last = 0;
  state.havedict = 0;
  state.dmax = 32768;
  state.head = null/*Z_NULL*/;
  state.hold = 0;
  state.bits = 0;
  //state.lencode = state.distcode = state.next = state.codes;
  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);
  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);

  state.sane = 1;
  state.back = -1;
  //Tracev((stderr, "inflate: reset\n"));
  return Z_OK;
}

function inflateReset(strm) {
  var state;

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  state.wsize = 0;
  state.whave = 0;
  state.wnext = 0;
  return inflateResetKeep(strm);

}

function inflateReset2(strm, windowBits) {
  var wrap;
  var state;

  /* get the state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;

  /* extract wrap request from windowBits parameter */
  if (windowBits < 0) {
    wrap = 0;
    windowBits = -windowBits;
  }
  else {
    wrap = (windowBits >> 4) + 1;
    if (windowBits < 48) {
      windowBits &= 15;
    }
  }

  /* set number of window bits, free window if different */
  if (windowBits && (windowBits < 8 || windowBits > 15)) {
    return Z_STREAM_ERROR;
  }
  if (state.window !== null && state.wbits !== windowBits) {
    state.window = null;
  }

  /* update state and reset the rest of it */
  state.wrap = wrap;
  state.wbits = windowBits;
  return inflateReset(strm);
}

function inflateInit2(strm, windowBits) {
  var ret;
  var state;

  if (!strm) { return Z_STREAM_ERROR; }
  //strm.msg = Z_NULL;                 /* in case we return an error */

  state = new InflateState();

  //if (state === Z_NULL) return Z_MEM_ERROR;
  //Tracev((stderr, "inflate: allocated\n"));
  strm.state = state;
  state.window = null/*Z_NULL*/;
  ret = inflateReset2(strm, windowBits);
  if (ret !== Z_OK) {
    strm.state = null/*Z_NULL*/;
  }
  return ret;
}

function inflateInit(strm) {
  return inflateInit2(strm, DEF_WBITS);
}


/*
 Return state with length and distance decoding tables and index sizes set to
 fixed code decoding.  Normally this returns fixed tables from inffixed.h.
 If BUILDFIXED is defined, then instead this routine builds the tables the
 first time it's called, and returns those tables the first time and
 thereafter.  This reduces the size of the code by about 2K bytes, in
 exchange for a little execution time.  However, BUILDFIXED should not be
 used for threaded applications, since the rewriting of the tables and virgin
 may not be thread-safe.
 */
var virgin = true;

var lenfix, distfix; // We have no pointers in JS, so keep tables separate

function fixedtables(state) {
  /* build fixed huffman tables if first call (may not be thread safe) */
  if (virgin) {
    var sym;

    lenfix = new utils.Buf32(512);
    distfix = new utils.Buf32(32);

    /* literal/length table */
    sym = 0;
    while (sym < 144) { state.lens[sym++] = 8; }
    while (sym < 256) { state.lens[sym++] = 9; }
    while (sym < 280) { state.lens[sym++] = 7; }
    while (sym < 288) { state.lens[sym++] = 8; }

    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });

    /* distance table */
    sym = 0;
    while (sym < 32) { state.lens[sym++] = 5; }

    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });

    /* do this just once */
    virgin = false;
  }

  state.lencode = lenfix;
  state.lenbits = 9;
  state.distcode = distfix;
  state.distbits = 5;
}


/*
 Update the window with the last wsize (normally 32K) bytes written before
 returning.  If window does not exist yet, create it.  This is only called
 when a window is already in use, or when output has been written during this
 inflate call, but the end of the deflate stream has not been reached yet.
 It is also called to create a window for dictionary data when a dictionary
 is loaded.

 Providing output buffers larger than 32K to inflate() should provide a speed
 advantage, since only the last 32K of output is copied to the sliding window
 upon return from inflate(), and since all distances after the first 32K of
 output will fall in the output data, making match copies simpler and faster.
 The advantage may be dependent on the size of the processor's data caches.
 */
function updatewindow(strm, src, end, copy) {
  var dist;
  var state = strm.state;

  /* if it hasn't been done already, allocate space for the window */
  if (state.window === null) {
    state.wsize = 1 << state.wbits;
    state.wnext = 0;
    state.whave = 0;

    state.window = new utils.Buf8(state.wsize);
  }

  /* copy state->wsize or less output bytes into the circular window */
  if (copy >= state.wsize) {
    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);
    state.wnext = 0;
    state.whave = state.wsize;
  }
  else {
    dist = state.wsize - state.wnext;
    if (dist > copy) {
      dist = copy;
    }
    //zmemcpy(state->window + state->wnext, end - copy, dist);
    utils.arraySet(state.window, src, end - copy, dist, state.wnext);
    copy -= dist;
    if (copy) {
      //zmemcpy(state->window, end - copy, copy);
      utils.arraySet(state.window, src, end - copy, copy, 0);
      state.wnext = copy;
      state.whave = state.wsize;
    }
    else {
      state.wnext += dist;
      if (state.wnext === state.wsize) { state.wnext = 0; }
      if (state.whave < state.wsize) { state.whave += dist; }
    }
  }
  return 0;
}

function inflate(strm, flush) {
  var state;
  var input, output;          // input/output buffers
  var next;                   /* next input INDEX */
  var put;                    /* next output INDEX */
  var have, left;             /* available input and output */
  var hold;                   /* bit buffer */
  var bits;                   /* bits in bit buffer */
  var _in, _out;              /* save starting available input and output */
  var copy;                   /* number of stored or match bytes to copy */
  var from;                   /* where to copy match bytes from */
  var from_source;
  var here = 0;               /* current decoding table entry */
  var here_bits, here_op, here_val; // paked "here" denormalized (JS specific)
  //var last;                   /* parent table entry */
  var last_bits, last_op, last_val; // paked "last" denormalized (JS specific)
  var len;                    /* length to copy for repeats, bits to drop */
  var ret;                    /* return code */
  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */
  var opts;

  var n; // temporary var for NEED_BITS

  var order = /* permutation of code lengths */
    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];


  if (!strm || !strm.state || !strm.output ||
      (!strm.input && strm.avail_in !== 0)) {
    return Z_STREAM_ERROR;
  }

  state = strm.state;
  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */


  //--- LOAD() ---
  put = strm.next_out;
  output = strm.output;
  left = strm.avail_out;
  next = strm.next_in;
  input = strm.input;
  have = strm.avail_in;
  hold = state.hold;
  bits = state.bits;
  //---

  _in = have;
  _out = left;
  ret = Z_OK;

  inf_leave: // goto emulation
  for (;;) {
    switch (state.mode) {
      case HEAD:
        if (state.wrap === 0) {
          state.mode = TYPEDO;
          break;
        }
        //=== NEEDBITS(16);
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */
          state.check = 0/*crc32(0L, Z_NULL, 0)*/;
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//

          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          state.mode = FLAGS;
          break;
        }
        state.flags = 0;           /* expect zlib header */
        if (state.head) {
          state.head.done = false;
        }
        if (!(state.wrap & 1) ||   /* check if zlib header allowed */
          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {
          strm.msg = 'incorrect header check';
          state.mode = BAD;
          break;
        }
        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {
          strm.msg = 'unknown compression method';
          state.mode = BAD;
          break;
        }
        //--- DROPBITS(4) ---//
        hold >>>= 4;
        bits -= 4;
        //---//
        len = (hold & 0x0f)/*BITS(4)*/ + 8;
        if (state.wbits === 0) {
          state.wbits = len;
        }
        else if (len > state.wbits) {
          strm.msg = 'invalid window size';
          state.mode = BAD;
          break;
        }
        state.dmax = 1 << len;
        //Tracev((stderr, "inflate:   zlib header ok\n"));
        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
        state.mode = hold & 0x200 ? DICTID : TYPE;
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        break;
      case FLAGS:
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.flags = hold;
        if ((state.flags & 0xff) !== Z_DEFLATED) {
          strm.msg = 'unknown compression method';
          state.mode = BAD;
          break;
        }
        if (state.flags & 0xe000) {
          strm.msg = 'unknown header flags set';
          state.mode = BAD;
          break;
        }
        if (state.head) {
          state.head.text = ((hold >> 8) & 1);
        }
        if (state.flags & 0x0200) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = TIME;
        /* falls through */
      case TIME:
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (state.head) {
          state.head.time = hold;
        }
        if (state.flags & 0x0200) {
          //=== CRC4(state.check, hold)
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          hbuf[2] = (hold >>> 16) & 0xff;
          hbuf[3] = (hold >>> 24) & 0xff;
          state.check = crc32(state.check, hbuf, 4, 0);
          //===
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = OS;
        /* falls through */
      case OS:
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (state.head) {
          state.head.xflags = (hold & 0xff);
          state.head.os = (hold >> 8);
        }
        if (state.flags & 0x0200) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = EXLEN;
        /* falls through */
      case EXLEN:
        if (state.flags & 0x0400) {
          //=== NEEDBITS(16); */
          while (bits < 16) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.length = hold;
          if (state.head) {
            state.head.extra_len = hold;
          }
          if (state.flags & 0x0200) {
            //=== CRC2(state.check, hold);
            hbuf[0] = hold & 0xff;
            hbuf[1] = (hold >>> 8) & 0xff;
            state.check = crc32(state.check, hbuf, 2, 0);
            //===//
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
        }
        else if (state.head) {
          state.head.extra = null/*Z_NULL*/;
        }
        state.mode = EXTRA;
        /* falls through */
      case EXTRA:
        if (state.flags & 0x0400) {
          copy = state.length;
          if (copy > have) { copy = have; }
          if (copy) {
            if (state.head) {
              len = state.head.extra_len - state.length;
              if (!state.head.extra) {
                // Use untyped array for more convenient processing later
                state.head.extra = new Array(state.head.extra_len);
              }
              utils.arraySet(
                state.head.extra,
                input,
                next,
                // extra field is limited to 65536 bytes
                // - no need for additional size check
                copy,
                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
                len
              );
              //zmemcpy(state.head.extra + len, next,
              //        len + copy > state.head.extra_max ?
              //        state.head.extra_max - len : copy);
            }
            if (state.flags & 0x0200) {
              state.check = crc32(state.check, input, copy, next);
            }
            have -= copy;
            next += copy;
            state.length -= copy;
          }
          if (state.length) { break inf_leave; }
        }
        state.length = 0;
        state.mode = NAME;
        /* falls through */
      case NAME:
        if (state.flags & 0x0800) {
          if (have === 0) { break inf_leave; }
          copy = 0;
          do {
            // TODO: 2 or 1 bytes?
            len = input[next + copy++];
            /* use constant limit because in js we should not preallocate memory */
            if (state.head && len &&
                (state.length < 65536 /*state.head.name_max*/)) {
              state.head.name += String.fromCharCode(len);
            }
          } while (len && copy < have);

          if (state.flags & 0x0200) {
            state.check = crc32(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          if (len) { break inf_leave; }
        }
        else if (state.head) {
          state.head.name = null;
        }
        state.length = 0;
        state.mode = COMMENT;
        /* falls through */
      case COMMENT:
        if (state.flags & 0x1000) {
          if (have === 0) { break inf_leave; }
          copy = 0;
          do {
            len = input[next + copy++];
            /* use constant limit because in js we should not preallocate memory */
            if (state.head && len &&
                (state.length < 65536 /*state.head.comm_max*/)) {
              state.head.comment += String.fromCharCode(len);
            }
          } while (len && copy < have);
          if (state.flags & 0x0200) {
            state.check = crc32(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          if (len) { break inf_leave; }
        }
        else if (state.head) {
          state.head.comment = null;
        }
        state.mode = HCRC;
        /* falls through */
      case HCRC:
        if (state.flags & 0x0200) {
          //=== NEEDBITS(16); */
          while (bits < 16) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          if (hold !== (state.check & 0xffff)) {
            strm.msg = 'header crc mismatch';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
        }
        if (state.head) {
          state.head.hcrc = ((state.flags >> 9) & 1);
          state.head.done = true;
        }
        strm.adler = state.check = 0;
        state.mode = TYPE;
        break;
      case DICTID:
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        strm.adler = state.check = zswap32(hold);
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = DICT;
        /* falls through */
      case DICT:
        if (state.havedict === 0) {
          //--- RESTORE() ---
          strm.next_out = put;
          strm.avail_out = left;
          strm.next_in = next;
          strm.avail_in = have;
          state.hold = hold;
          state.bits = bits;
          //---
          return Z_NEED_DICT;
        }
        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
        state.mode = TYPE;
        /* falls through */
      case TYPE:
        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case TYPEDO:
        if (state.last) {
          //--- BYTEBITS() ---//
          hold >>>= bits & 7;
          bits -= bits & 7;
          //---//
          state.mode = CHECK;
          break;
        }
        //=== NEEDBITS(3); */
        while (bits < 3) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.last = (hold & 0x01)/*BITS(1)*/;
        //--- DROPBITS(1) ---//
        hold >>>= 1;
        bits -= 1;
        //---//

        switch ((hold & 0x03)/*BITS(2)*/) {
          case 0:                             /* stored block */
            //Tracev((stderr, "inflate:     stored block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = STORED;
            break;
          case 1:                             /* fixed block */
            fixedtables(state);
            //Tracev((stderr, "inflate:     fixed codes block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = LEN_;             /* decode codes */
            if (flush === Z_TREES) {
              //--- DROPBITS(2) ---//
              hold >>>= 2;
              bits -= 2;
              //---//
              break inf_leave;
            }
            break;
          case 2:                             /* dynamic block */
            //Tracev((stderr, "inflate:     dynamic codes block%s\n",
            //        state.last ? " (last)" : ""));
            state.mode = TABLE;
            break;
          case 3:
            strm.msg = 'invalid block type';
            state.mode = BAD;
        }
        //--- DROPBITS(2) ---//
        hold >>>= 2;
        bits -= 2;
        //---//
        break;
      case STORED:
        //--- BYTEBITS() ---// /* go to byte boundary */
        hold >>>= bits & 7;
        bits -= bits & 7;
        //---//
        //=== NEEDBITS(32); */
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {
          strm.msg = 'invalid stored block lengths';
          state.mode = BAD;
          break;
        }
        state.length = hold & 0xffff;
        //Tracev((stderr, "inflate:       stored length %u\n",
        //        state.length));
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = COPY_;
        if (flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case COPY_:
        state.mode = COPY;
        /* falls through */
      case COPY:
        copy = state.length;
        if (copy) {
          if (copy > have) { copy = have; }
          if (copy > left) { copy = left; }
          if (copy === 0) { break inf_leave; }
          //--- zmemcpy(put, next, copy); ---
          utils.arraySet(output, input, next, copy, put);
          //---//
          have -= copy;
          next += copy;
          left -= copy;
          put += copy;
          state.length -= copy;
          break;
        }
        //Tracev((stderr, "inflate:       stored end\n"));
        state.mode = TYPE;
        break;
      case TABLE:
        //=== NEEDBITS(14); */
        while (bits < 14) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;
        //--- DROPBITS(5) ---//
        hold >>>= 5;
        bits -= 5;
        //---//
        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;
        //--- DROPBITS(5) ---//
        hold >>>= 5;
        bits -= 5;
        //---//
        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;
        //--- DROPBITS(4) ---//
        hold >>>= 4;
        bits -= 4;
        //---//
//#ifndef PKZIP_BUG_WORKAROUND
        if (state.nlen > 286 || state.ndist > 30) {
          strm.msg = 'too many length or distance symbols';
          state.mode = BAD;
          break;
        }
//#endif
        //Tracev((stderr, "inflate:       table sizes ok\n"));
        state.have = 0;
        state.mode = LENLENS;
        /* falls through */
      case LENLENS:
        while (state.have < state.ncode) {
          //=== NEEDBITS(3);
          while (bits < 3) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);
          //--- DROPBITS(3) ---//
          hold >>>= 3;
          bits -= 3;
          //---//
        }
        while (state.have < 19) {
          state.lens[order[state.have++]] = 0;
        }
        // We have separate tables & no pointers. 2 commented lines below not needed.
        //state.next = state.codes;
        //state.lencode = state.next;
        // Switch to use dynamic table
        state.lencode = state.lendyn;
        state.lenbits = 7;

        opts = { bits: state.lenbits };
        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);
        state.lenbits = opts.bits;

        if (ret) {
          strm.msg = 'invalid code lengths set';
          state.mode = BAD;
          break;
        }
        //Tracev((stderr, "inflate:       code lengths ok\n"));
        state.have = 0;
        state.mode = CODELENS;
        /* falls through */
      case CODELENS:
        while (state.have < state.nlen + state.ndist) {
          for (;;) {
            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          if (here_val < 16) {
            //--- DROPBITS(here.bits) ---//
            hold >>>= here_bits;
            bits -= here_bits;
            //---//
            state.lens[state.have++] = here_val;
          }
          else {
            if (here_val === 16) {
              //=== NEEDBITS(here.bits + 2);
              n = here_bits + 2;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              if (state.have === 0) {
                strm.msg = 'invalid bit length repeat';
                state.mode = BAD;
                break;
              }
              len = state.lens[state.have - 1];
              copy = 3 + (hold & 0x03);//BITS(2);
              //--- DROPBITS(2) ---//
              hold >>>= 2;
              bits -= 2;
              //---//
            }
            else if (here_val === 17) {
              //=== NEEDBITS(here.bits + 3);
              n = here_bits + 3;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              len = 0;
              copy = 3 + (hold & 0x07);//BITS(3);
              //--- DROPBITS(3) ---//
              hold >>>= 3;
              bits -= 3;
              //---//
            }
            else {
              //=== NEEDBITS(here.bits + 7);
              n = here_bits + 7;
              while (bits < n) {
                if (have === 0) { break inf_leave; }
                have--;
                hold += input[next++] << bits;
                bits += 8;
              }
              //===//
              //--- DROPBITS(here.bits) ---//
              hold >>>= here_bits;
              bits -= here_bits;
              //---//
              len = 0;
              copy = 11 + (hold & 0x7f);//BITS(7);
              //--- DROPBITS(7) ---//
              hold >>>= 7;
              bits -= 7;
              //---//
            }
            if (state.have + copy > state.nlen + state.ndist) {
              strm.msg = 'invalid bit length repeat';
              state.mode = BAD;
              break;
            }
            while (copy--) {
              state.lens[state.have++] = len;
            }
          }
        }

        /* handle error breaks in while */
        if (state.mode === BAD) { break; }

        /* check for end-of-block code (better have one) */
        if (state.lens[256] === 0) {
          strm.msg = 'invalid code -- missing end-of-block';
          state.mode = BAD;
          break;
        }

        /* build code tables -- note: do not change the lenbits or distbits
           values here (9 and 6) without reading the comments in inftrees.h
           concerning the ENOUGH constants, which depend on those values */
        state.lenbits = 9;

        opts = { bits: state.lenbits };
        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);
        // We have separate tables & no pointers. 2 commented lines below not needed.
        // state.next_index = opts.table_index;
        state.lenbits = opts.bits;
        // state.lencode = state.next;

        if (ret) {
          strm.msg = 'invalid literal/lengths set';
          state.mode = BAD;
          break;
        }

        state.distbits = 6;
        //state.distcode.copy(state.codes);
        // Switch to use dynamic table
        state.distcode = state.distdyn;
        opts = { bits: state.distbits };
        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);
        // We have separate tables & no pointers. 2 commented lines below not needed.
        // state.next_index = opts.table_index;
        state.distbits = opts.bits;
        // state.distcode = state.next;

        if (ret) {
          strm.msg = 'invalid distances set';
          state.mode = BAD;
          break;
        }
        //Tracev((stderr, 'inflate:       codes ok\n'));
        state.mode = LEN_;
        if (flush === Z_TREES) { break inf_leave; }
        /* falls through */
      case LEN_:
        state.mode = LEN;
        /* falls through */
      case LEN:
        if (have >= 6 && left >= 258) {
          //--- RESTORE() ---
          strm.next_out = put;
          strm.avail_out = left;
          strm.next_in = next;
          strm.avail_in = have;
          state.hold = hold;
          state.bits = bits;
          //---
          inflate_fast(strm, _out);
          //--- LOAD() ---
          put = strm.next_out;
          output = strm.output;
          left = strm.avail_out;
          next = strm.next_in;
          input = strm.input;
          have = strm.avail_in;
          hold = state.hold;
          bits = state.bits;
          //---

          if (state.mode === TYPE) {
            state.back = -1;
          }
          break;
        }
        state.back = 0;
        for (;;) {
          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if (here_bits <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if (here_op && (here_op & 0xf0) === 0) {
          last_bits = here_bits;
          last_op = here_op;
          last_val = here_val;
          for (;;) {
            here = state.lencode[last_val +
                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((last_bits + here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          //--- DROPBITS(last.bits) ---//
          hold >>>= last_bits;
          bits -= last_bits;
          //---//
          state.back += last_bits;
        }
        //--- DROPBITS(here.bits) ---//
        hold >>>= here_bits;
        bits -= here_bits;
        //---//
        state.back += here_bits;
        state.length = here_val;
        if (here_op === 0) {
          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
          //        "inflate:         literal '%c'\n" :
          //        "inflate:         literal 0x%02x\n", here.val));
          state.mode = LIT;
          break;
        }
        if (here_op & 32) {
          //Tracevv((stderr, "inflate:         end of block\n"));
          state.back = -1;
          state.mode = TYPE;
          break;
        }
        if (here_op & 64) {
          strm.msg = 'invalid literal/length code';
          state.mode = BAD;
          break;
        }
        state.extra = here_op & 15;
        state.mode = LENEXT;
        /* falls through */
      case LENEXT:
        if (state.extra) {
          //=== NEEDBITS(state.extra);
          n = state.extra;
          while (bits < n) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
          //--- DROPBITS(state.extra) ---//
          hold >>>= state.extra;
          bits -= state.extra;
          //---//
          state.back += state.extra;
        }
        //Tracevv((stderr, "inflate:         length %u\n", state.length));
        state.was = state.length;
        state.mode = DIST;
        /* falls through */
      case DIST:
        for (;;) {
          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if ((here_bits) <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if ((here_op & 0xf0) === 0) {
          last_bits = here_bits;
          last_op = here_op;
          last_val = here_val;
          for (;;) {
            here = state.distcode[last_val +
                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];
            here_bits = here >>> 24;
            here_op = (here >>> 16) & 0xff;
            here_val = here & 0xffff;

            if ((last_bits + here_bits) <= bits) { break; }
            //--- PULLBYTE() ---//
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
            //---//
          }
          //--- DROPBITS(last.bits) ---//
          hold >>>= last_bits;
          bits -= last_bits;
          //---//
          state.back += last_bits;
        }
        //--- DROPBITS(here.bits) ---//
        hold >>>= here_bits;
        bits -= here_bits;
        //---//
        state.back += here_bits;
        if (here_op & 64) {
          strm.msg = 'invalid distance code';
          state.mode = BAD;
          break;
        }
        state.offset = here_val;
        state.extra = (here_op) & 15;
        state.mode = DISTEXT;
        /* falls through */
      case DISTEXT:
        if (state.extra) {
          //=== NEEDBITS(state.extra);
          n = state.extra;
          while (bits < n) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;
          //--- DROPBITS(state.extra) ---//
          hold >>>= state.extra;
          bits -= state.extra;
          //---//
          state.back += state.extra;
        }
//#ifdef INFLATE_STRICT
        if (state.offset > state.dmax) {
          strm.msg = 'invalid distance too far back';
          state.mode = BAD;
          break;
        }
//#endif
        //Tracevv((stderr, "inflate:         distance %u\n", state.offset));
        state.mode = MATCH;
        /* falls through */
      case MATCH:
        if (left === 0) { break inf_leave; }
        copy = _out - left;
        if (state.offset > copy) {         /* copy from window */
          copy = state.offset - copy;
          if (copy > state.whave) {
            if (state.sane) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break;
            }
// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//          Trace((stderr, "inflate.c too far\n"));
//          copy -= state.whave;
//          if (copy > state.length) { copy = state.length; }
//          if (copy > left) { copy = left; }
//          left -= copy;
//          state.length -= copy;
//          do {
//            output[put++] = 0;
//          } while (--copy);
//          if (state.length === 0) { state.mode = LEN; }
//          break;
//#endif
          }
          if (copy > state.wnext) {
            copy -= state.wnext;
            from = state.wsize - copy;
          }
          else {
            from = state.wnext - copy;
          }
          if (copy > state.length) { copy = state.length; }
          from_source = state.window;
        }
        else {                              /* copy from output */
          from_source = output;
          from = put - state.offset;
          copy = state.length;
        }
        if (copy > left) { copy = left; }
        left -= copy;
        state.length -= copy;
        do {
          output[put++] = from_source[from++];
        } while (--copy);
        if (state.length === 0) { state.mode = LEN; }
        break;
      case LIT:
        if (left === 0) { break inf_leave; }
        output[put++] = state.length;
        left--;
        state.mode = LEN;
        break;
      case CHECK:
        if (state.wrap) {
          //=== NEEDBITS(32);
          while (bits < 32) {
            if (have === 0) { break inf_leave; }
            have--;
            // Use '|' instead of '+' to make sure that result is signed
            hold |= input[next++] << bits;
            bits += 8;
          }
          //===//
          _out -= left;
          strm.total_out += _out;
          state.total += _out;
          if (_out) {
            strm.adler = state.check =
                /*UPDATE(state.check, put - _out, _out);*/
                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));

          }
          _out = left;
          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too
          if ((state.flags ? hold : zswap32(hold)) !== state.check) {
            strm.msg = 'incorrect data check';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          //Tracev((stderr, "inflate:   check matches trailer\n"));
        }
        state.mode = LENGTH;
        /* falls through */
      case LENGTH:
        if (state.wrap && state.flags) {
          //=== NEEDBITS(32);
          while (bits < 32) {
            if (have === 0) { break inf_leave; }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          //===//
          if (hold !== (state.total & 0xffffffff)) {
            strm.msg = 'incorrect length check';
            state.mode = BAD;
            break;
          }
          //=== INITBITS();
          hold = 0;
          bits = 0;
          //===//
          //Tracev((stderr, "inflate:   length matches trailer\n"));
        }
        state.mode = DONE;
        /* falls through */
      case DONE:
        ret = Z_STREAM_END;
        break inf_leave;
      case BAD:
        ret = Z_DATA_ERROR;
        break inf_leave;
      case MEM:
        return Z_MEM_ERROR;
      case SYNC:
        /* falls through */
      default:
        return Z_STREAM_ERROR;
    }
  }

  // inf_leave <- here is real place for "goto inf_leave", emulated via "break inf_leave"

  /*
     Return from inflate(), updating the total counts and the check value.
     If there was no progress during the inflate() call, return a buffer
     error.  Call updatewindow() to create and/or update the window state.
     Note: a memory error from inflate() is non-recoverable.
   */

  //--- RESTORE() ---
  strm.next_out = put;
  strm.avail_out = left;
  strm.next_in = next;
  strm.avail_in = have;
  state.hold = hold;
  state.bits = bits;
  //---

  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&
                      (state.mode < CHECK || flush !== Z_FINISH))) {
    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {
      state.mode = MEM;
      return Z_MEM_ERROR;
    }
  }
  _in -= strm.avail_in;
  _out -= strm.avail_out;
  strm.total_in += _in;
  strm.total_out += _out;
  state.total += _out;
  if (state.wrap && _out) {
    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));
  }
  strm.data_type = state.bits + (state.last ? 64 : 0) +
                    (state.mode === TYPE ? 128 : 0) +
                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);
  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {
    ret = Z_BUF_ERROR;
  }
  return ret;
}

function inflateEnd(strm) {

  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {
    return Z_STREAM_ERROR;
  }

  var state = strm.state;
  if (state.window) {
    state.window = null;
  }
  strm.state = null;
  return Z_OK;
}

function inflateGetHeader(strm, head) {
  var state;

  /* check state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }

  /* save header structure */
  state.head = head;
  head.done = false;
  return Z_OK;
}

function inflateSetDictionary(strm, dictionary) {
  var dictLength = dictionary.length;

  var state;
  var dictid;
  var ret;

  /* check state */
  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }
  state = strm.state;

  if (state.wrap !== 0 && state.mode !== DICT) {
    return Z_STREAM_ERROR;
  }

  /* check for correct dictionary identifier */
  if (state.mode === DICT) {
    dictid = 1; /* adler32(0, null, 0)*/
    /* dictid = adler32(dictid, dictionary, dictLength); */
    dictid = adler32(dictid, dictionary, dictLength, 0);
    if (dictid !== state.check) {
      return Z_DATA_ERROR;
    }
  }
  /* copy dictionary to window using updatewindow(), which will amend the
   existing dictionary if appropriate */
  ret = updatewindow(strm, dictionary, dictLength, dictLength);
  if (ret) {
    state.mode = MEM;
    return Z_MEM_ERROR;
  }
  state.havedict = 1;
  // Tracev((stderr, "inflate:   dictionary set\n"));
  return Z_OK;
}

exports.inflateReset = inflateReset;
exports.inflateReset2 = inflateReset2;
exports.inflateResetKeep = inflateResetKeep;
exports.inflateInit = inflateInit;
exports.inflateInit2 = inflateInit2;
exports.inflate = inflate;
exports.inflateEnd = inflateEnd;
exports.inflateGetHeader = inflateGetHeader;
exports.inflateSetDictionary = inflateSetDictionary;
exports.inflateInfo = 'pako inflate (from Nodeca project)';

/* Not implemented
exports.inflateCopy = inflateCopy;
exports.inflateGetDictionary = inflateGetDictionary;
exports.inflateMark = inflateMark;
exports.inflatePrime = inflatePrime;
exports.inflateSync = inflateSync;
exports.inflateSyncPoint = inflateSyncPoint;
exports.inflateUndermine = inflateUndermine;
*/

},{"../utils/common":164,"./adler32":165,"./crc32":167,"./inffast":169,"./inftrees":171}],171:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

var utils = require('../utils/common');

var MAXBITS = 15;
var ENOUGH_LENS = 852;
var ENOUGH_DISTS = 592;
//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);

var CODES = 0;
var LENS = 1;
var DISTS = 2;

var lbase = [ /* Length codes 257..285 base */
  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,
  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0
];

var lext = [ /* Length codes 257..285 extra */
  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,
  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78
];

var dbase = [ /* Distance codes 0..29 base */
  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,
  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,
  8193, 12289, 16385, 24577, 0, 0
];

var dext = [ /* Distance codes 0..29 extra */
  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,
  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,
  28, 28, 29, 29, 64, 64
];

module.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)
{
  var bits = opts.bits;
      //here = opts.here; /* table entry for duplication */

  var len = 0;               /* a code's length in bits */
  var sym = 0;               /* index of code symbols */
  var min = 0, max = 0;          /* minimum and maximum code lengths */
  var root = 0;              /* number of index bits for root table */
  var curr = 0;              /* number of index bits for current table */
  var drop = 0;              /* code bits to drop for sub-table */
  var left = 0;                   /* number of prefix codes available */
  var used = 0;              /* code entries in table used */
  var huff = 0;              /* Huffman code */
  var incr;              /* for incrementing code, index */
  var fill;              /* index for replicating entries */
  var low;               /* low bits for current root entry */
  var mask;              /* mask for low root bits */
  var next;             /* next available space in table */
  var base = null;     /* base value table to use */
  var base_index = 0;
//  var shoextra;    /* extra bits table to use */
  var end;                    /* use base and extra for symbol > end */
  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */
  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */
  var extra = null;
  var extra_index = 0;

  var here_bits, here_op, here_val;

  /*
   Process a set of code lengths to create a canonical Huffman code.  The
   code lengths are lens[0..codes-1].  Each length corresponds to the
   symbols 0..codes-1.  The Huffman code is generated by first sorting the
   symbols by length from short to long, and retaining the symbol order
   for codes with equal lengths.  Then the code starts with all zero bits
   for the first code of the shortest length, and the codes are integer
   increments for the same length, and zeros are appended as the length
   increases.  For the deflate format, these bits are stored backwards
   from their more natural integer increment ordering, and so when the
   decoding tables are built in the large loop below, the integer codes
   are incremented backwards.

   This routine assumes, but does not check, that all of the entries in
   lens[] are in the range 0..MAXBITS.  The caller must assure this.
   1..MAXBITS is interpreted as that code length.  zero means that that
   symbol does not occur in this code.

   The codes are sorted by computing a count of codes for each length,
   creating from that a table of starting indices for each length in the
   sorted table, and then entering the symbols in order in the sorted
   table.  The sorted table is work[], with that space being provided by
   the caller.

   The length counts are used for other purposes as well, i.e. finding
   the minimum and maximum length codes, determining if there are any
   codes at all, checking for a valid set of lengths, and looking ahead
   at length counts to determine sub-table sizes when building the
   decoding tables.
   */

  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */
  for (len = 0; len <= MAXBITS; len++) {
    count[len] = 0;
  }
  for (sym = 0; sym < codes; sym++) {
    count[lens[lens_index + sym]]++;
  }

  /* bound code lengths, force root to be within code lengths */
  root = bits;
  for (max = MAXBITS; max >= 1; max--) {
    if (count[max] !== 0) { break; }
  }
  if (root > max) {
    root = max;
  }
  if (max === 0) {                     /* no symbols to code at all */
    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */
    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;
    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;


    //table.op[opts.table_index] = 64;
    //table.bits[opts.table_index] = 1;
    //table.val[opts.table_index++] = 0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;

    opts.bits = 1;
    return 0;     /* no symbols, but wait for decoding to report error */
  }
  for (min = 1; min < max; min++) {
    if (count[min] !== 0) { break; }
  }
  if (root < min) {
    root = min;
  }

  /* check for an over-subscribed or incomplete set of lengths */
  left = 1;
  for (len = 1; len <= MAXBITS; len++) {
    left <<= 1;
    left -= count[len];
    if (left < 0) {
      return -1;
    }        /* over-subscribed */
  }
  if (left > 0 && (type === CODES || max !== 1)) {
    return -1;                      /* incomplete set */
  }

  /* generate offsets into symbol table for each length for sorting */
  offs[1] = 0;
  for (len = 1; len < MAXBITS; len++) {
    offs[len + 1] = offs[len] + count[len];
  }

  /* sort symbols by length, by symbol order within each length */
  for (sym = 0; sym < codes; sym++) {
    if (lens[lens_index + sym] !== 0) {
      work[offs[lens[lens_index + sym]]++] = sym;
    }
  }

  /*
   Create and fill in decoding tables.  In this loop, the table being
   filled is at next and has curr index bits.  The code being used is huff
   with length len.  That code is converted to an index by dropping drop
   bits off of the bottom.  For codes where len is less than drop + curr,
   those top drop + curr - len bits are incremented through all values to
   fill the table with replicated entries.

   root is the number of index bits for the root table.  When len exceeds
   root, sub-tables are created pointed to by the root entry with an index
   of the low root bits of huff.  This is saved in low to check for when a
   new sub-table should be started.  drop is zero when the root table is
   being filled, and drop is root when sub-tables are being filled.

   When a new sub-table is needed, it is necessary to look ahead in the
   code lengths to determine what size sub-table is needed.  The length
   counts are used for this, and so count[] is decremented as codes are
   entered in the tables.

   used keeps track of how many table entries have been allocated from the
   provided *table space.  It is checked for LENS and DIST tables against
   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in
   the initial root table size constants.  See the comments in inftrees.h
   for more information.

   sym increments through all symbols, and the loop terminates when
   all codes of length max, i.e. all codes, have been processed.  This
   routine permits incomplete codes, so another loop after this one fills
   in the rest of the decoding tables with invalid code markers.
   */

  /* set up for code type */
  // poor man optimization - use if-else instead of switch,
  // to avoid deopts in old v8
  if (type === CODES) {
    base = extra = work;    /* dummy value--not used */
    end = 19;

  } else if (type === LENS) {
    base = lbase;
    base_index -= 257;
    extra = lext;
    extra_index -= 257;
    end = 256;

  } else {                    /* DISTS */
    base = dbase;
    extra = dext;
    end = -1;
  }

  /* initialize opts for loop */
  huff = 0;                   /* starting code */
  sym = 0;                    /* starting code symbol */
  len = min;                  /* starting code length */
  next = table_index;              /* current table to fill in */
  curr = root;                /* current table index bits */
  drop = 0;                   /* current bits to drop from code for index */
  low = -1;                   /* trigger new sub-table when len > root */
  used = 1 << root;          /* use root table entries */
  mask = used - 1;            /* mask for comparing low */

  /* check available table space */
  if ((type === LENS && used > ENOUGH_LENS) ||
    (type === DISTS && used > ENOUGH_DISTS)) {
    return 1;
  }

  /* process all codes and make table entries */
  for (;;) {
    /* create table entry */
    here_bits = len - drop;
    if (work[sym] < end) {
      here_op = 0;
      here_val = work[sym];
    }
    else if (work[sym] > end) {
      here_op = extra[extra_index + work[sym]];
      here_val = base[base_index + work[sym]];
    }
    else {
      here_op = 32 + 64;         /* end of block */
      here_val = 0;
    }

    /* replicate for those indices with low len bits equal to huff */
    incr = 1 << (len - drop);
    fill = 1 << curr;
    min = fill;                 /* save offset to next table */
    do {
      fill -= incr;
      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;
    } while (fill !== 0);

    /* backwards increment the len-bit code huff */
    incr = 1 << (len - 1);
    while (huff & incr) {
      incr >>= 1;
    }
    if (incr !== 0) {
      huff &= incr - 1;
      huff += incr;
    } else {
      huff = 0;
    }

    /* go to next symbol, update count, len */
    sym++;
    if (--count[len] === 0) {
      if (len === max) { break; }
      len = lens[lens_index + work[sym]];
    }

    /* create new sub-table if needed */
    if (len > root && (huff & mask) !== low) {
      /* if first time, transition to sub-tables */
      if (drop === 0) {
        drop = root;
      }

      /* increment past last table */
      next += min;            /* here min is 1 << curr */

      /* determine length of next table */
      curr = len - drop;
      left = 1 << curr;
      while (curr + drop < max) {
        left -= count[curr + drop];
        if (left <= 0) { break; }
        curr++;
        left <<= 1;
      }

      /* check for enough space */
      used += 1 << curr;
      if ((type === LENS && used > ENOUGH_LENS) ||
        (type === DISTS && used > ENOUGH_DISTS)) {
        return 1;
      }

      /* point entry in root table to sub-table */
      low = huff & mask;
      /*table.op[low] = curr;
      table.bits[low] = root;
      table.val[low] = next - opts.table_index;*/
      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;
    }
  }

  /* fill in remaining table entry if code is incomplete (guaranteed to have
   at most one remaining entry, since if the code is incomplete, the
   maximum code length that was allowed to get this far is one bit) */
  if (huff !== 0) {
    //table.op[next + huff] = 64;            /* invalid code marker */
    //table.bits[next + huff] = len - drop;
    //table.val[next + huff] = 0;
    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;
  }

  /* set return parameters */
  //opts.table_index += used;
  opts.bits = root;
  return 0;
};

},{"../utils/common":164}],172:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

module.exports = {
  2:      'need dictionary',     /* Z_NEED_DICT       2  */
  1:      'stream end',          /* Z_STREAM_END      1  */
  0:      '',                    /* Z_OK              0  */
  '-1':   'file error',          /* Z_ERRNO         (-1) */
  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */
  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */
  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */
  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */
  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */
};

},{}],173:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

/* eslint-disable space-unary-ops */

var utils = require('../utils/common');

/* Public constants ==========================================================*/
/* ===========================================================================*/


//var Z_FILTERED          = 1;
//var Z_HUFFMAN_ONLY      = 2;
//var Z_RLE               = 3;
var Z_FIXED               = 4;
//var Z_DEFAULT_STRATEGY  = 0;

/* Possible values of the data_type field (though see inflate()) */
var Z_BINARY              = 0;
var Z_TEXT                = 1;
//var Z_ASCII             = 1; // = Z_TEXT
var Z_UNKNOWN             = 2;

/*============================================================================*/


function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }

// From zutil.h

var STORED_BLOCK = 0;
var STATIC_TREES = 1;
var DYN_TREES    = 2;
/* The three kinds of block type */

var MIN_MATCH    = 3;
var MAX_MATCH    = 258;
/* The minimum and maximum match lengths */

// From deflate.h
/* ===========================================================================
 * Internal compression state.
 */

var LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */

var LITERALS      = 256;
/* number of literal bytes 0..255 */

var L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */

var D_CODES       = 30;
/* number of distance codes */

var BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */

var HEAP_SIZE     = 2 * L_CODES + 1;
/* maximum heap size */

var MAX_BITS      = 15;
/* All codes must not exceed MAX_BITS bits */

var Buf_size      = 16;
/* size of bit buffer in bi_buf */


/* ===========================================================================
 * Constants
 */

var MAX_BL_BITS = 7;
/* Bit length codes must not exceed MAX_BL_BITS bits */

var END_BLOCK   = 256;
/* end of block literal code */

var REP_3_6     = 16;
/* repeat previous bit length 3-6 times (2 bits of repeat count) */

var REPZ_3_10   = 17;
/* repeat a zero length 3-10 times  (3 bits of repeat count) */

var REPZ_11_138 = 18;
/* repeat a zero length 11-138 times  (7 bits of repeat count) */

/* eslint-disable comma-spacing,array-bracket-spacing */
var extra_lbits =   /* extra bits for each length code */
  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];

var extra_dbits =   /* extra bits for each distance code */
  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];

var extra_blbits =  /* extra bits for each bit length code */
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];

var bl_order =
  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];
/* eslint-enable comma-spacing,array-bracket-spacing */

/* The lengths of the bit length codes are sent in order of decreasing
 * probability, to avoid transmitting the lengths for unused bit length codes.
 */

/* ===========================================================================
 * Local data. These are initialized only once.
 */

// We pre-fill arrays with 0 to avoid uninitialized gaps

var DIST_CODE_LEN = 512; /* see definition of array dist_code below */

// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1
var static_ltree  = new Array((L_CODES + 2) * 2);
zero(static_ltree);
/* The static literal tree. Since the bit lengths are imposed, there is no
 * need for the L_CODES extra codes used during heap construction. However
 * The codes 286 and 287 are needed to build a canonical tree (see _tr_init
 * below).
 */

var static_dtree  = new Array(D_CODES * 2);
zero(static_dtree);
/* The static distance tree. (Actually a trivial tree since all codes use
 * 5 bits.)
 */

var _dist_code    = new Array(DIST_CODE_LEN);
zero(_dist_code);
/* Distance codes. The first 256 values correspond to the distances
 * 3 .. 258, the last 256 values correspond to the top 8 bits of
 * the 15 bit distances.
 */

var _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);
zero(_length_code);
/* length code for each normalized match length (0 == MIN_MATCH) */

var base_length   = new Array(LENGTH_CODES);
zero(base_length);
/* First normalized length for each code (0 = MIN_MATCH) */

var base_dist     = new Array(D_CODES);
zero(base_dist);
/* First normalized distance for each code (0 = distance of 1) */


function StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {

  this.static_tree  = static_tree;  /* static tree or NULL */
  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */
  this.extra_base   = extra_base;   /* base index for extra_bits */
  this.elems        = elems;        /* max number of elements in the tree */
  this.max_length   = max_length;   /* max bit length for the codes */

  // show if `static_tree` has data or dummy - needed for monomorphic objects
  this.has_stree    = static_tree && static_tree.length;
}


var static_l_desc;
var static_d_desc;
var static_bl_desc;


function TreeDesc(dyn_tree, stat_desc) {
  this.dyn_tree = dyn_tree;     /* the dynamic tree */
  this.max_code = 0;            /* largest code with non zero frequency */
  this.stat_desc = stat_desc;   /* the corresponding static tree */
}



function d_code(dist) {
  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];
}


/* ===========================================================================
 * Output a short LSB first on the stream.
 * IN assertion: there is enough room in pendingBuf.
 */
function put_short(s, w) {
//    put_byte(s, (uch)((w) & 0xff));
//    put_byte(s, (uch)((ush)(w) >> 8));
  s.pending_buf[s.pending++] = (w) & 0xff;
  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;
}


/* ===========================================================================
 * Send a value on a given number of bits.
 * IN assertion: length <= 16 and value fits in length bits.
 */
function send_bits(s, value, length) {
  if (s.bi_valid > (Buf_size - length)) {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    put_short(s, s.bi_buf);
    s.bi_buf = value >> (Buf_size - s.bi_valid);
    s.bi_valid += length - Buf_size;
  } else {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    s.bi_valid += length;
  }
}


function send_code(s, c, tree) {
  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);
}


/* ===========================================================================
 * Reverse the first len bits of a code, using straightforward code (a faster
 * method would use a table)
 * IN assertion: 1 <= len <= 15
 */
function bi_reverse(code, len) {
  var res = 0;
  do {
    res |= code & 1;
    code >>>= 1;
    res <<= 1;
  } while (--len > 0);
  return res >>> 1;
}


/* ===========================================================================
 * Flush the bit buffer, keeping at most 7 bits in it.
 */
function bi_flush(s) {
  if (s.bi_valid === 16) {
    put_short(s, s.bi_buf);
    s.bi_buf = 0;
    s.bi_valid = 0;

  } else if (s.bi_valid >= 8) {
    s.pending_buf[s.pending++] = s.bi_buf & 0xff;
    s.bi_buf >>= 8;
    s.bi_valid -= 8;
  }
}


/* ===========================================================================
 * Compute the optimal bit lengths for a tree and update the total bit length
 * for the current block.
 * IN assertion: the fields freq and dad are set, heap[heap_max] and
 *    above are the tree nodes sorted by increasing frequency.
 * OUT assertions: the field len is set to the optimal bit length, the
 *     array bl_count contains the frequencies for each bit length.
 *     The length opt_len is updated; static_len is also updated if stree is
 *     not null.
 */
function gen_bitlen(s, desc)
//    deflate_state *s;
//    tree_desc *desc;    /* the tree descriptor */
{
  var tree            = desc.dyn_tree;
  var max_code        = desc.max_code;
  var stree           = desc.stat_desc.static_tree;
  var has_stree       = desc.stat_desc.has_stree;
  var extra           = desc.stat_desc.extra_bits;
  var base            = desc.stat_desc.extra_base;
  var max_length      = desc.stat_desc.max_length;
  var h;              /* heap index */
  var n, m;           /* iterate over the tree elements */
  var bits;           /* bit length */
  var xbits;          /* extra bits */
  var f;              /* frequency */
  var overflow = 0;   /* number of elements with bit length too large */

  for (bits = 0; bits <= MAX_BITS; bits++) {
    s.bl_count[bits] = 0;
  }

  /* In a first pass, compute the optimal bit lengths (which may
   * overflow in the case of the bit length tree).
   */
  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */

  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {
    n = s.heap[h];
    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;
    if (bits > max_length) {
      bits = max_length;
      overflow++;
    }
    tree[n * 2 + 1]/*.Len*/ = bits;
    /* We overwrite tree[n].Dad which is no longer needed */

    if (n > max_code) { continue; } /* not a leaf node */

    s.bl_count[bits]++;
    xbits = 0;
    if (n >= base) {
      xbits = extra[n - base];
    }
    f = tree[n * 2]/*.Freq*/;
    s.opt_len += f * (bits + xbits);
    if (has_stree) {
      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);
    }
  }
  if (overflow === 0) { return; }

  // Trace((stderr,"\nbit length overflow\n"));
  /* This happens for example on obj2 and pic of the Calgary corpus */

  /* Find the first bit length which could increase: */
  do {
    bits = max_length - 1;
    while (s.bl_count[bits] === 0) { bits--; }
    s.bl_count[bits]--;      /* move one leaf down the tree */
    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */
    s.bl_count[max_length]--;
    /* The brother of the overflow item also moves one step up,
     * but this does not affect bl_count[max_length]
     */
    overflow -= 2;
  } while (overflow > 0);

  /* Now recompute all bit lengths, scanning in increasing frequency.
   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all
   * lengths instead of fixing only the wrong ones. This idea is taken
   * from 'ar' written by Haruhiko Okumura.)
   */
  for (bits = max_length; bits !== 0; bits--) {
    n = s.bl_count[bits];
    while (n !== 0) {
      m = s.heap[--h];
      if (m > max_code) { continue; }
      if (tree[m * 2 + 1]/*.Len*/ !== bits) {
        // Trace((stderr,"code %d bits %d->%d\n", m, tree[m].Len, bits));
        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;
        tree[m * 2 + 1]/*.Len*/ = bits;
      }
      n--;
    }
  }
}


/* ===========================================================================
 * Generate the codes for a given tree and bit counts (which need not be
 * optimal).
 * IN assertion: the array bl_count contains the bit length statistics for
 * the given tree and the field len is set for all tree elements.
 * OUT assertion: the field code is set for all tree elements of non
 *     zero code length.
 */
function gen_codes(tree, max_code, bl_count)
//    ct_data *tree;             /* the tree to decorate */
//    int max_code;              /* largest code with non zero frequency */
//    ushf *bl_count;            /* number of codes at each bit length */
{
  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */
  var code = 0;              /* running code value */
  var bits;                  /* bit index */
  var n;                     /* code index */

  /* The distribution counts are first used to generate the code values
   * without bit reversal.
   */
  for (bits = 1; bits <= MAX_BITS; bits++) {
    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;
  }
  /* Check that the bit counts in bl_count are consistent. The last code
   * must be all ones.
   */
  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,
  //        "inconsistent bit counts");
  //Tracev((stderr,"\ngen_codes: max_code %d ", max_code));

  for (n = 0;  n <= max_code; n++) {
    var len = tree[n * 2 + 1]/*.Len*/;
    if (len === 0) { continue; }
    /* Now reverse the bits */
    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);

    //Tracecv(tree != static_ltree, (stderr,"\nn %3d %c l %2d c %4x (%x) ",
    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));
  }
}


/* ===========================================================================
 * Initialize the various 'constant' tables.
 */
function tr_static_init() {
  var n;        /* iterates over tree elements */
  var bits;     /* bit counter */
  var length;   /* length value */
  var code;     /* code value */
  var dist;     /* distance index */
  var bl_count = new Array(MAX_BITS + 1);
  /* number of codes at each bit length for an optimal tree */

  // do check in _tr_init()
  //if (static_init_done) return;

  /* For some embedded targets, global variables are not initialized: */
/*#ifdef NO_INIT_GLOBAL_POINTERS
  static_l_desc.static_tree = static_ltree;
  static_l_desc.extra_bits = extra_lbits;
  static_d_desc.static_tree = static_dtree;
  static_d_desc.extra_bits = extra_dbits;
  static_bl_desc.extra_bits = extra_blbits;
#endif*/

  /* Initialize the mapping length (0..255) -> length code (0..28) */
  length = 0;
  for (code = 0; code < LENGTH_CODES - 1; code++) {
    base_length[code] = length;
    for (n = 0; n < (1 << extra_lbits[code]); n++) {
      _length_code[length++] = code;
    }
  }
  //Assert (length == 256, "tr_static_init: length != 256");
  /* Note that the length 255 (match length 258) can be represented
   * in two different ways: code 284 + 5 bits or code 285, so we
   * overwrite length_code[255] to use the best encoding:
   */
  _length_code[length - 1] = code;

  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */
  dist = 0;
  for (code = 0; code < 16; code++) {
    base_dist[code] = dist;
    for (n = 0; n < (1 << extra_dbits[code]); n++) {
      _dist_code[dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: dist != 256");
  dist >>= 7; /* from now on, all distances are divided by 128 */
  for (; code < D_CODES; code++) {
    base_dist[code] = dist << 7;
    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {
      _dist_code[256 + dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: 256+dist != 512");

  /* Construct the codes of the static literal tree */
  for (bits = 0; bits <= MAX_BITS; bits++) {
    bl_count[bits] = 0;
  }

  n = 0;
  while (n <= 143) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  while (n <= 255) {
    static_ltree[n * 2 + 1]/*.Len*/ = 9;
    n++;
    bl_count[9]++;
  }
  while (n <= 279) {
    static_ltree[n * 2 + 1]/*.Len*/ = 7;
    n++;
    bl_count[7]++;
  }
  while (n <= 287) {
    static_ltree[n * 2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  /* Codes 286 and 287 do not exist, but we must include them in the
   * tree construction to get a canonical Huffman tree (longest code
   * all ones)
   */
  gen_codes(static_ltree, L_CODES + 1, bl_count);

  /* The static distance tree is trivial: */
  for (n = 0; n < D_CODES; n++) {
    static_dtree[n * 2 + 1]/*.Len*/ = 5;
    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);
  }

  // Now data ready and we can init static trees
  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);
  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);
  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);

  //static_init_done = true;
}


/* ===========================================================================
 * Initialize a new block.
 */
function init_block(s) {
  var n; /* iterates over tree elements */

  /* Initialize the trees. */
  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }
  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }

  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;
  s.opt_len = s.static_len = 0;
  s.last_lit = s.matches = 0;
}


/* ===========================================================================
 * Flush the bit buffer and align the output on a byte boundary
 */
function bi_windup(s)
{
  if (s.bi_valid > 8) {
    put_short(s, s.bi_buf);
  } else if (s.bi_valid > 0) {
    //put_byte(s, (Byte)s->bi_buf);
    s.pending_buf[s.pending++] = s.bi_buf;
  }
  s.bi_buf = 0;
  s.bi_valid = 0;
}

/* ===========================================================================
 * Copy a stored block, storing first the length and its
 * one's complement if requested.
 */
function copy_block(s, buf, len, header)
//DeflateState *s;
//charf    *buf;    /* the input data */
//unsigned len;     /* its length */
//int      header;  /* true if block header must be written */
{
  bi_windup(s);        /* align on byte boundary */

  if (header) {
    put_short(s, len);
    put_short(s, ~len);
  }
//  while (len--) {
//    put_byte(s, *buf++);
//  }
  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);
  s.pending += len;
}

/* ===========================================================================
 * Compares to subtrees, using the tree depth as tie breaker when
 * the subtrees have equal frequency. This minimizes the worst case length.
 */
function smaller(tree, n, m, depth) {
  var _n2 = n * 2;
  var _m2 = m * 2;
  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||
         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));
}

/* ===========================================================================
 * Restore the heap property by moving down the tree starting at node k,
 * exchanging a node with the smallest of its two sons if necessary, stopping
 * when the heap property is re-established (each father smaller than its
 * two sons).
 */
function pqdownheap(s, tree, k)
//    deflate_state *s;
//    ct_data *tree;  /* the tree to restore */
//    int k;               /* node to move down */
{
  var v = s.heap[k];
  var j = k << 1;  /* left son of k */
  while (j <= s.heap_len) {
    /* Set j to the smallest of the two sons: */
    if (j < s.heap_len &&
      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {
      j++;
    }
    /* Exit if v is smaller than both sons */
    if (smaller(tree, v, s.heap[j], s.depth)) { break; }

    /* Exchange v with the smallest son */
    s.heap[k] = s.heap[j];
    k = j;

    /* And continue down the tree, setting j to the left son of k */
    j <<= 1;
  }
  s.heap[k] = v;
}


// inlined manually
// var SMALLEST = 1;

/* ===========================================================================
 * Send the block data compressed using the given Huffman trees
 */
function compress_block(s, ltree, dtree)
//    deflate_state *s;
//    const ct_data *ltree; /* literal tree */
//    const ct_data *dtree; /* distance tree */
{
  var dist;           /* distance of matched string */
  var lc;             /* match length or unmatched char (if dist == 0) */
  var lx = 0;         /* running index in l_buf */
  var code;           /* the code to send */
  var extra;          /* number of extra bits to send */

  if (s.last_lit !== 0) {
    do {
      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);
      lc = s.pending_buf[s.l_buf + lx];
      lx++;

      if (dist === 0) {
        send_code(s, lc, ltree); /* send a literal byte */
        //Tracecv(isgraph(lc), (stderr," '%c' ", lc));
      } else {
        /* Here, lc is the match length - MIN_MATCH */
        code = _length_code[lc];
        send_code(s, code + LITERALS + 1, ltree); /* send the length code */
        extra = extra_lbits[code];
        if (extra !== 0) {
          lc -= base_length[code];
          send_bits(s, lc, extra);       /* send the extra length bits */
        }
        dist--; /* dist is now the match distance - 1 */
        code = d_code(dist);
        //Assert (code < D_CODES, "bad d_code");

        send_code(s, code, dtree);       /* send the distance code */
        extra = extra_dbits[code];
        if (extra !== 0) {
          dist -= base_dist[code];
          send_bits(s, dist, extra);   /* send the extra distance bits */
        }
      } /* literal or match pair ? */

      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */
      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,
      //       "pendingBuf overflow");

    } while (lx < s.last_lit);
  }

  send_code(s, END_BLOCK, ltree);
}


/* ===========================================================================
 * Construct one Huffman tree and assigns the code bit strings and lengths.
 * Update the total bit length for the current block.
 * IN assertion: the field freq is set for all tree elements.
 * OUT assertions: the fields len and code are set to the optimal bit length
 *     and corresponding code. The length opt_len is updated; static_len is
 *     also updated if stree is not null. The field max_code is set.
 */
function build_tree(s, desc)
//    deflate_state *s;
//    tree_desc *desc; /* the tree descriptor */
{
  var tree     = desc.dyn_tree;
  var stree    = desc.stat_desc.static_tree;
  var has_stree = desc.stat_desc.has_stree;
  var elems    = desc.stat_desc.elems;
  var n, m;          /* iterate over heap elements */
  var max_code = -1; /* largest code with non zero frequency */
  var node;          /* new node being created */

  /* Construct the initial heap, with least frequent element in
   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].
   * heap[0] is not used.
   */
  s.heap_len = 0;
  s.heap_max = HEAP_SIZE;

  for (n = 0; n < elems; n++) {
    if (tree[n * 2]/*.Freq*/ !== 0) {
      s.heap[++s.heap_len] = max_code = n;
      s.depth[n] = 0;

    } else {
      tree[n * 2 + 1]/*.Len*/ = 0;
    }
  }

  /* The pkzip format requires that at least one distance code exists,
   * and that at least one bit should be sent even if there is only one
   * possible code. So to avoid special checks later on we force at least
   * two codes of non zero frequency.
   */
  while (s.heap_len < 2) {
    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);
    tree[node * 2]/*.Freq*/ = 1;
    s.depth[node] = 0;
    s.opt_len--;

    if (has_stree) {
      s.static_len -= stree[node * 2 + 1]/*.Len*/;
    }
    /* node is 0 or 1 so it does not have extra bits */
  }
  desc.max_code = max_code;

  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,
   * establish sub-heaps of increasing lengths:
   */
  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }

  /* Construct the Huffman tree by repeatedly combining the least two
   * frequent nodes.
   */
  node = elems;              /* next internal node of the tree */
  do {
    //pqremove(s, tree, n);  /* n = node of least frequency */
    /*** pqremove ***/
    n = s.heap[1/*SMALLEST*/];
    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];
    pqdownheap(s, tree, 1/*SMALLEST*/);
    /***/

    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */

    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */
    s.heap[--s.heap_max] = m;

    /* Create a new node father of n and m */
    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;
    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;
    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;

    /* and insert the new node in the heap */
    s.heap[1/*SMALLEST*/] = node++;
    pqdownheap(s, tree, 1/*SMALLEST*/);

  } while (s.heap_len >= 2);

  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];

  /* At this point, the fields freq and dad are set. We can now
   * generate the bit lengths.
   */
  gen_bitlen(s, desc);

  /* The field len is now set, we can generate the bit codes */
  gen_codes(tree, max_code, s.bl_count);
}


/* ===========================================================================
 * Scan a literal or distance tree to determine the frequencies of the codes
 * in the bit length tree.
 */
function scan_tree(s, tree, max_code)
//    deflate_state *s;
//    ct_data *tree;   /* the tree to be scanned */
//    int max_code;    /* and its largest code of non zero frequency */
{
  var n;                     /* iterates over all tree elements */
  var prevlen = -1;          /* last emitted length */
  var curlen;                /* length of current code */

  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  var count = 0;             /* repeat count of the current code */
  var max_count = 7;         /* max repeat count */
  var min_count = 4;         /* min repeat count */

  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }
  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      s.bl_tree[curlen * 2]/*.Freq*/ += count;

    } else if (curlen !== 0) {

      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }
      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;

    } else if (count <= 10) {
      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;

    } else {
      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;
    }

    count = 0;
    prevlen = curlen;

    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}


/* ===========================================================================
 * Send a literal or distance tree in compressed form, using the codes in
 * bl_tree.
 */
function send_tree(s, tree, max_code)
//    deflate_state *s;
//    ct_data *tree; /* the tree to be scanned */
//    int max_code;       /* and its largest code of non zero frequency */
{
  var n;                     /* iterates over all tree elements */
  var prevlen = -1;          /* last emitted length */
  var curlen;                /* length of current code */

  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */

  var count = 0;             /* repeat count of the current code */
  var max_count = 7;         /* max repeat count */
  var min_count = 4;         /* min repeat count */

  /* tree[max_code+1].Len = -1; */  /* guard already set */
  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);

    } else if (curlen !== 0) {
      if (curlen !== prevlen) {
        send_code(s, curlen, s.bl_tree);
        count--;
      }
      //Assert(count >= 3 && count <= 6, " 3_6?");
      send_code(s, REP_3_6, s.bl_tree);
      send_bits(s, count - 3, 2);

    } else if (count <= 10) {
      send_code(s, REPZ_3_10, s.bl_tree);
      send_bits(s, count - 3, 3);

    } else {
      send_code(s, REPZ_11_138, s.bl_tree);
      send_bits(s, count - 11, 7);
    }

    count = 0;
    prevlen = curlen;
    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}


/* ===========================================================================
 * Construct the Huffman tree for the bit lengths and return the index in
 * bl_order of the last bit length code to send.
 */
function build_bl_tree(s) {
  var max_blindex;  /* index of last bit length code of non zero freq */

  /* Determine the bit length frequencies for literal and distance trees */
  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);
  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);

  /* Build the bit length tree: */
  build_tree(s, s.bl_desc);
  /* opt_len now includes the length of the tree representations, except
   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.
   */

  /* Determine the number of bit length codes to send. The pkzip format
   * requires that at least 4 bit length codes be sent. (appnote.txt says
   * 3 but the actual value used is 4.)
   */
  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {
    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {
      break;
    }
  }
  /* Update opt_len to include the bit length tree and counts */
  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;
  //Tracev((stderr, "\ndyn trees: dyn %ld, stat %ld",
  //        s->opt_len, s->static_len));

  return max_blindex;
}


/* ===========================================================================
 * Send the header for a block using dynamic Huffman trees: the counts, the
 * lengths of the bit length codes, the literal tree and the distance tree.
 * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.
 */
function send_all_trees(s, lcodes, dcodes, blcodes)
//    deflate_state *s;
//    int lcodes, dcodes, blcodes; /* number of codes for each tree */
{
  var rank;                    /* index in bl_order */

  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, "not enough codes");
  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,
  //        "too many codes");
  //Tracev((stderr, "\nbl counts: "));
  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */
  send_bits(s, dcodes - 1,   5);
  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */
  for (rank = 0; rank < blcodes; rank++) {
    //Tracev((stderr, "\nbl code %2d ", bl_order[rank]));
    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);
  }
  //Tracev((stderr, "\nbl tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */
  //Tracev((stderr, "\nlit tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */
  //Tracev((stderr, "\ndist tree: sent %ld", s->bits_sent));
}


/* ===========================================================================
 * Check if the data type is TEXT or BINARY, using the following algorithm:
 * - TEXT if the two conditions below are satisfied:
 *    a) There are no non-portable control characters belonging to the
 *       "black list" (0..6, 14..25, 28..31).
 *    b) There is at least one printable character belonging to the
 *       "white list" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).
 * - BINARY otherwise.
 * - The following partially-portable control characters form a
 *   "gray list" that is ignored in this detection algorithm:
 *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).
 * IN assertion: the fields Freq of dyn_ltree are set.
 */
function detect_data_type(s) {
  /* black_mask is the bit mask of black-listed bytes
   * set bits 0..6, 14..25, and 28..31
   * 0xf3ffc07f = binary 11110011111111111100000001111111
   */
  var black_mask = 0xf3ffc07f;
  var n;

  /* Check for non-textual ("black-listed") bytes. */
  for (n = 0; n <= 31; n++, black_mask >>>= 1) {
    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {
      return Z_BINARY;
    }
  }

  /* Check for textual ("white-listed") bytes. */
  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||
      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {
    return Z_TEXT;
  }
  for (n = 32; n < LITERALS; n++) {
    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {
      return Z_TEXT;
    }
  }

  /* There are no "black-listed" or "white-listed" bytes:
   * this stream either is empty or has tolerated ("gray-listed") bytes only.
   */
  return Z_BINARY;
}


var static_init_done = false;

/* ===========================================================================
 * Initialize the tree data structures for a new zlib stream.
 */
function _tr_init(s)
{

  if (!static_init_done) {
    tr_static_init();
    static_init_done = true;
  }

  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);
  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);
  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);

  s.bi_buf = 0;
  s.bi_valid = 0;

  /* Initialize the first block of the first file: */
  init_block(s);
}


/* ===========================================================================
 * Send a stored block
 */
function _tr_stored_block(s, buf, stored_len, last)
//DeflateState *s;
//charf *buf;       /* input block */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */
  copy_block(s, buf, stored_len, true); /* with header */
}


/* ===========================================================================
 * Send one empty static block to give enough lookahead for inflate.
 * This takes 10 bits, of which 7 may remain in the bit buffer.
 */
function _tr_align(s) {
  send_bits(s, STATIC_TREES << 1, 3);
  send_code(s, END_BLOCK, static_ltree);
  bi_flush(s);
}


/* ===========================================================================
 * Determine the best encoding for the current block: dynamic trees, static
 * trees or store, and output the encoded block to the zip file.
 */
function _tr_flush_block(s, buf, stored_len, last)
//DeflateState *s;
//charf *buf;       /* input block, or NULL if too old */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */
  var max_blindex = 0;        /* index of last bit length code of non zero freq */

  /* Build the Huffman trees unless a stored block is forced */
  if (s.level > 0) {

    /* Check if the file is binary or text */
    if (s.strm.data_type === Z_UNKNOWN) {
      s.strm.data_type = detect_data_type(s);
    }

    /* Construct the literal and distance trees */
    build_tree(s, s.l_desc);
    // Tracev((stderr, "\nlit data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));

    build_tree(s, s.d_desc);
    // Tracev((stderr, "\ndist data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));
    /* At this point, opt_len and static_len are the total bit lengths of
     * the compressed block data, excluding the tree representations.
     */

    /* Build the bit length tree for the above two trees, and get the index
     * in bl_order of the last bit length code to send.
     */
    max_blindex = build_bl_tree(s);

    /* Determine the best encoding. Compute the block lengths in bytes. */
    opt_lenb = (s.opt_len + 3 + 7) >>> 3;
    static_lenb = (s.static_len + 3 + 7) >>> 3;

    // Tracev((stderr, "\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u ",
    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,
    //        s->last_lit));

    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }

  } else {
    // Assert(buf != (char*)0, "lost buf");
    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */
  }

  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {
    /* 4: two words for the lengths */

    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.
     * Otherwise we can't have processed more than WSIZE input bytes since
     * the last block flush, because compression would have been
     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to
     * transform a block into a stored block.
     */
    _tr_stored_block(s, buf, stored_len, last);

  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {

    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);
    compress_block(s, static_ltree, static_dtree);

  } else {
    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);
    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);
    compress_block(s, s.dyn_ltree, s.dyn_dtree);
  }
  // Assert (s->compressed_len == s->bits_sent, "bad compressed size");
  /* The above check is made mod 2^32, for files larger than 512 MB
   * and uLong implemented on 32 bits.
   */
  init_block(s);

  if (last) {
    bi_windup(s);
  }
  // Tracev((stderr,"\ncomprlen %lu(%lu) ", s->compressed_len>>3,
  //       s->compressed_len-7*last));
}

/* ===========================================================================
 * Save the match info and tally the frequency counts. Return true if
 * the current block must be flushed.
 */
function _tr_tally(s, dist, lc)
//    deflate_state *s;
//    unsigned dist;  /* distance of matched string */
//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */
{
  //var out_length, in_length, dcode;

  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;
  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;

  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;
  s.last_lit++;

  if (dist === 0) {
    /* lc is the unmatched char */
    s.dyn_ltree[lc * 2]/*.Freq*/++;
  } else {
    s.matches++;
    /* Here, lc is the match length - MIN_MATCH */
    dist--;             /* dist = match distance - 1 */
    //Assert((ush)dist < (ush)MAX_DIST(s) &&
    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&
    //       (ush)d_code(dist) < (ush)D_CODES,  "_tr_tally: bad match");

    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;
    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;
  }

// (!) This block is disabled in zlib defaults,
// don't enable it for binary compatibility

//#ifdef TRUNCATE_BLOCK
//  /* Try to guess if it is profitable to stop the current block here */
//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {
//    /* Compute an upper bound for the compressed length */
//    out_length = s.last_lit*8;
//    in_length = s.strstart - s.block_start;
//
//    for (dcode = 0; dcode < D_CODES; dcode++) {
//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);
//    }
//    out_length >>>= 3;
//    //Tracev((stderr,"\nlast_lit %u, in %ld, out ~%ld(%ld%%) ",
//    //       s->last_lit, in_length, out_length,
//    //       100L - out_length*100L/in_length));
//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {
//      return true;
//    }
//  }
//#endif

  return (s.last_lit === s.lit_bufsize - 1);
  /* We avoid equality with lit_bufsize because of wraparound at 64K
   * on 16 bit machines and because stored blocks are restricted to
   * 64K-1 bytes.
   */
}

exports._tr_init  = _tr_init;
exports._tr_stored_block = _tr_stored_block;
exports._tr_flush_block  = _tr_flush_block;
exports._tr_tally = _tr_tally;
exports._tr_align = _tr_align;

},{"../utils/common":164}],174:[function(require,module,exports){
'use strict';

// (C) 1995-2013 Jean-loup Gailly and Mark Adler
// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

function ZStream() {
  /* next input byte */
  this.input = null; // JS specific, because we have no pointers
  this.next_in = 0;
  /* number of bytes available at input */
  this.avail_in = 0;
  /* total number of input bytes read so far */
  this.total_in = 0;
  /* next output byte should be put there */
  this.output = null; // JS specific, because we have no pointers
  this.next_out = 0;
  /* remaining free space at output */
  this.avail_out = 0;
  /* total number of bytes output so far */
  this.total_out = 0;
  /* last error message, NULL if no error */
  this.msg = ''/*Z_NULL*/;
  /* not visible by applications */
  this.state = null;
  /* best guess about the data type: binary or text */
  this.data_type = 2/*Z_UNKNOWN*/;
  /* adler32 value of the uncompressed data */
  this.adler = 0;
}

module.exports = ZStream;

},{}],175:[function(require,module,exports){
module.exports={"2.16.840.1.101.3.4.1.1": "aes-128-ecb",
"2.16.840.1.101.3.4.1.2": "aes-128-cbc",
"2.16.840.1.101.3.4.1.3": "aes-128-ofb",
"2.16.840.1.101.3.4.1.4": "aes-128-cfb",
"2.16.840.1.101.3.4.1.21": "aes-192-ecb",
"2.16.840.1.101.3.4.1.22": "aes-192-cbc",
"2.16.840.1.101.3.4.1.23": "aes-192-ofb",
"2.16.840.1.101.3.4.1.24": "aes-192-cfb",
"2.16.840.1.101.3.4.1.41": "aes-256-ecb",
"2.16.840.1.101.3.4.1.42": "aes-256-cbc",
"2.16.840.1.101.3.4.1.43": "aes-256-ofb",
"2.16.840.1.101.3.4.1.44": "aes-256-cfb"
}
},{}],176:[function(require,module,exports){
// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.
'use strict'

var asn1 = require('asn1.js')

exports.certificate = require('./certificate')

var RSAPrivateKey = asn1.define('RSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('modulus').int(),
    this.key('publicExponent').int(),
    this.key('privateExponent').int(),
    this.key('prime1').int(),
    this.key('prime2').int(),
    this.key('exponent1').int(),
    this.key('exponent2').int(),
    this.key('coefficient').int()
  )
})
exports.RSAPrivateKey = RSAPrivateKey

var RSAPublicKey = asn1.define('RSAPublicKey', function () {
  this.seq().obj(
    this.key('modulus').int(),
    this.key('publicExponent').int()
  )
})
exports.RSAPublicKey = RSAPublicKey

var PublicKey = asn1.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})
exports.PublicKey = PublicKey

var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('none').null_().optional(),
    this.key('curve').objid().optional(),
    this.key('params').seq().obj(
      this.key('p').int(),
      this.key('q').int(),
      this.key('g').int()
    ).optional()
  )
})

var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPrivateKey').octstr()
  )
})
exports.PrivateKey = PrivateKeyInfo
var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').seq().obj(
      this.key('id').objid(),
      this.key('decrypt').seq().obj(
        this.key('kde').seq().obj(
          this.key('id').objid(),
          this.key('kdeparams').seq().obj(
            this.key('salt').octstr(),
            this.key('iters').int()
          )
        ),
        this.key('cipher').seq().obj(
          this.key('algo').objid(),
          this.key('iv').octstr()
        )
      )
    ),
    this.key('subjectPrivateKey').octstr()
  )
})

exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo

var DSAPrivateKey = asn1.define('DSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('p').int(),
    this.key('q').int(),
    this.key('g').int(),
    this.key('pub_key').int(),
    this.key('priv_key').int()
  )
})
exports.DSAPrivateKey = DSAPrivateKey

exports.DSAparam = asn1.define('DSAparam', function () {
  this.int()
})

var ECPrivateKey = asn1.define('ECPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('privateKey').octstr(),
    this.key('parameters').optional().explicit(0).use(ECParameters),
    this.key('publicKey').optional().explicit(1).bitstr()
  )
})
exports.ECPrivateKey = ECPrivateKey

var ECParameters = asn1.define('ECParameters', function () {
  this.choice({
    namedCurve: this.objid()
  })
})

exports.signature = asn1.define('signature', function () {
  this.seq().obj(
    this.key('r').int(),
    this.key('s').int()
  )
})

},{"./certificate":177,"asn1.js":4}],177:[function(require,module,exports){
// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js
// thanks to @Rantanen

'use strict'

var asn = require('asn1.js')

var Time = asn.define('Time', function () {
  this.choice({
    utcTime: this.utctime(),
    generalTime: this.gentime()
  })
})

var AttributeTypeValue = asn.define('AttributeTypeValue', function () {
  this.seq().obj(
    this.key('type').objid(),
    this.key('value').any()
  )
})

var AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('parameters').optional(),
    this.key('curve').objid().optional()
  )
})

var SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})

var RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {
  this.setof(AttributeTypeValue)
})

var RDNSequence = asn.define('RDNSequence', function () {
  this.seqof(RelativeDistinguishedName)
})

var Name = asn.define('Name', function () {
  this.choice({
    rdnSequence: this.use(RDNSequence)
  })
})

var Validity = asn.define('Validity', function () {
  this.seq().obj(
    this.key('notBefore').use(Time),
    this.key('notAfter').use(Time)
  )
})

var Extension = asn.define('Extension', function () {
  this.seq().obj(
    this.key('extnID').objid(),
    this.key('critical').bool().def(false),
    this.key('extnValue').octstr()
  )
})

var TBSCertificate = asn.define('TBSCertificate', function () {
  this.seq().obj(
    this.key('version').explicit(0).int().optional(),
    this.key('serialNumber').int(),
    this.key('signature').use(AlgorithmIdentifier),
    this.key('issuer').use(Name),
    this.key('validity').use(Validity),
    this.key('subject').use(Name),
    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),
    this.key('issuerUniqueID').implicit(1).bitstr().optional(),
    this.key('subjectUniqueID').implicit(2).bitstr().optional(),
    this.key('extensions').explicit(3).seqof(Extension).optional()
  )
})

var X509Certificate = asn.define('X509Certificate', function () {
  this.seq().obj(
    this.key('tbsCertificate').use(TBSCertificate),
    this.key('signatureAlgorithm').use(AlgorithmIdentifier),
    this.key('signatureValue').bitstr()
  )
})

module.exports = X509Certificate

},{"asn1.js":4}],178:[function(require,module,exports){
// adapted from https://github.com/apatil/pemstrip
var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m
var startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m
var fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m
var evp = require('evp_bytestokey')
var ciphers = require('browserify-aes')
var Buffer = require('safe-buffer').Buffer
module.exports = function (okey, password) {
  var key = okey.toString()
  var match = key.match(findProc)
  var decrypted
  if (!match) {
    var match2 = key.match(fullRegex)
    decrypted = Buffer.from(match2[2].replace(/[\r\n]/g, ''), 'base64')
  } else {
    var suite = 'aes' + match[1]
    var iv = Buffer.from(match[2], 'hex')
    var cipherText = Buffer.from(match[3].replace(/[\r\n]/g, ''), 'base64')
    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key
    var out = []
    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)
    out.push(cipher.update(cipherText))
    out.push(cipher.final())
    decrypted = Buffer.concat(out)
  }
  var tag = key.match(startRegex)[1]
  return {
    tag: tag,
    data: decrypted
  }
}

},{"browserify-aes":30,"evp_bytestokey":115,"safe-buffer":197}],179:[function(require,module,exports){
var asn1 = require('./asn1')
var aesid = require('./aesid.json')
var fixProc = require('./fixProc')
var ciphers = require('browserify-aes')
var compat = require('pbkdf2')
var Buffer = require('safe-buffer').Buffer
module.exports = parseKeys

function parseKeys (buffer) {
  var password
  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
    password = buffer.passphrase
    buffer = buffer.key
  }
  if (typeof buffer === 'string') {
    buffer = Buffer.from(buffer)
  }

  var stripped = fixProc(buffer, password)

  var type = stripped.tag
  var data = stripped.data
  var subtype, ndata
  switch (type) {
    case 'CERTIFICATE':
      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo
      // falls through
    case 'PUBLIC KEY':
      if (!ndata) {
        ndata = asn1.PublicKey.decode(data, 'der')
      }
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')
        case '1.2.840.10045.2.1':
          ndata.subjectPrivateKey = ndata.subjectPublicKey
          return {
            type: 'ec',
            data: ndata
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')
          return {
            type: 'dsa',
            data: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      // throw new Error('unknown key type ' + type)
    case 'ENCRYPTED PRIVATE KEY':
      data = asn1.EncryptedPrivateKey.decode(data, 'der')
      data = decrypt(data, password)
      // falls through
    case 'PRIVATE KEY':
      ndata = asn1.PrivateKey.decode(data, 'der')
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')
        case '1.2.840.10045.2.1':
          return {
            curve: ndata.algorithm.curve,
            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')
          return {
            type: 'dsa',
            params: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      // throw new Error('unknown key type ' + type)
    case 'RSA PUBLIC KEY':
      return asn1.RSAPublicKey.decode(data, 'der')
    case 'RSA PRIVATE KEY':
      return asn1.RSAPrivateKey.decode(data, 'der')
    case 'DSA PRIVATE KEY':
      return {
        type: 'dsa',
        params: asn1.DSAPrivateKey.decode(data, 'der')
      }
    case 'EC PRIVATE KEY':
      data = asn1.ECPrivateKey.decode(data, 'der')
      return {
        curve: data.parameters.value,
        privateKey: data.privateKey
      }
    default: throw new Error('unknown key type ' + type)
  }
}
parseKeys.signature = asn1.signature
function decrypt (data, password) {
  var salt = data.algorithm.decrypt.kde.kdeparams.salt
  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)
  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]
  var iv = data.algorithm.decrypt.cipher.iv
  var cipherText = data.subjectPrivateKey
  var keylen = parseInt(algo.split('-')[1], 10) / 8
  var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1')
  var cipher = ciphers.createDecipheriv(algo, key, iv)
  var out = []
  out.push(cipher.update(cipherText))
  out.push(cipher.final())
  return Buffer.concat(out)
}

},{"./aesid.json":175,"./asn1":176,"./fixProc":178,"browserify-aes":30,"pbkdf2":180,"safe-buffer":197}],180:[function(require,module,exports){
exports.pbkdf2 = require('./lib/async')
exports.pbkdf2Sync = require('./lib/sync')

},{"./lib/async":181,"./lib/sync":184}],181:[function(require,module,exports){
(function (global){(function (){
var Buffer = require('safe-buffer').Buffer

var checkParameters = require('./precondition')
var defaultEncoding = require('./default-encoding')
var sync = require('./sync')
var toBuffer = require('./to-buffer')

var ZERO_BUF
var subtle = global.crypto && global.crypto.subtle
var toBrowser = {
  sha: 'SHA-1',
  'sha-1': 'SHA-1',
  sha1: 'SHA-1',
  sha256: 'SHA-256',
  'sha-256': 'SHA-256',
  sha384: 'SHA-384',
  'sha-384': 'SHA-384',
  'sha-512': 'SHA-512',
  sha512: 'SHA-512'
}
var checks = []
function checkNative (algo) {
  if (global.process && !global.process.browser) {
    return Promise.resolve(false)
  }
  if (!subtle || !subtle.importKey || !subtle.deriveBits) {
    return Promise.resolve(false)
  }
  if (checks[algo] !== undefined) {
    return checks[algo]
  }
  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)
  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)
    .then(function () {
      return true
    }).catch(function () {
      return false
    })
  checks[algo] = prom
  return prom
}
var nextTick
function getNextTick () {
  if (nextTick) {
    return nextTick
  }
  if (global.process && global.process.nextTick) {
    nextTick = global.process.nextTick
  } else if (global.queueMicrotask) {
    nextTick = global.queueMicrotask
  } else if (global.setImmediate) {
    nextTick = global.setImmediate
  } else {
    nextTick = global.setTimeout
  }
  return nextTick
}
function browserPbkdf2 (password, salt, iterations, length, algo) {
  return subtle.importKey(
    'raw', password, { name: 'PBKDF2' }, false, ['deriveBits']
  ).then(function (key) {
    return subtle.deriveBits({
      name: 'PBKDF2',
      salt: salt,
      iterations: iterations,
      hash: {
        name: algo
      }
    }, key, length << 3)
  }).then(function (res) {
    return Buffer.from(res)
  })
}

function resolvePromise (promise, callback) {
  promise.then(function (out) {
    getNextTick()(function () {
      callback(null, out)
    })
  }, function (e) {
    getNextTick()(function () {
      callback(e)
    })
  })
}
module.exports = function (password, salt, iterations, keylen, digest, callback) {
  if (typeof digest === 'function') {
    callback = digest
    digest = undefined
  }

  digest = digest || 'sha1'
  var algo = toBrowser[digest.toLowerCase()]

  if (!algo || typeof global.Promise !== 'function') {
    getNextTick()(function () {
      var out
      try {
        out = sync(password, salt, iterations, keylen, digest)
      } catch (e) {
        return callback(e)
      }
      callback(null, out)
    })
    return
  }

  checkParameters(iterations, keylen)
  password = toBuffer(password, defaultEncoding, 'Password')
  salt = toBuffer(salt, defaultEncoding, 'Salt')
  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')

  resolvePromise(checkNative(algo).then(function (resp) {
    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)

    return sync(password, salt, iterations, keylen, digest)
  }), callback)
}

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./default-encoding":182,"./precondition":183,"./sync":184,"./to-buffer":185,"safe-buffer":197}],182:[function(require,module,exports){
(function (process,global){(function (){
var defaultEncoding
/* istanbul ignore next */
if (global.process && global.process.browser) {
  defaultEncoding = 'utf-8'
} else if (global.process && global.process.version) {
  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)

  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'
} else {
  defaultEncoding = 'utf-8'
}
module.exports = defaultEncoding

}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":186}],183:[function(require,module,exports){
var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs

module.exports = function (iterations, keylen) {
  if (typeof iterations !== 'number') {
    throw new TypeError('Iterations not a number')
  }

  if (iterations < 0) {
    throw new TypeError('Bad iterations')
  }

  if (typeof keylen !== 'number') {
    throw new TypeError('Key length not a number')
  }

  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */
    throw new TypeError('Bad key length')
  }
}

},{}],184:[function(require,module,exports){
var md5 = require('create-hash/md5')
var RIPEMD160 = require('ripemd160')
var sha = require('sha.js')
var Buffer = require('safe-buffer').Buffer

var checkParameters = require('./precondition')
var defaultEncoding = require('./default-encoding')
var toBuffer = require('./to-buffer')

var ZEROS = Buffer.alloc(128)
var sizes = {
  md5: 16,
  sha1: 20,
  sha224: 28,
  sha256: 32,
  sha384: 48,
  sha512: 64,
  rmd160: 20,
  ripemd160: 20
}

function Hmac (alg, key, saltLen) {
  var hash = getDigest(alg)
  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  if (key.length > blocksize) {
    key = hash(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])
  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])
  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)
  ipad.copy(ipad1, 0, 0, blocksize)
  this.ipad1 = ipad1
  this.ipad2 = ipad
  this.opad = opad
  this.alg = alg
  this.blocksize = blocksize
  this.hash = hash
  this.size = sizes[alg]
}

Hmac.prototype.run = function (data, ipad) {
  data.copy(ipad, this.blocksize)
  var h = this.hash(ipad)
  h.copy(this.opad, this.blocksize)
  return this.hash(this.opad)
}

function getDigest (alg) {
  function shaFunc (data) {
    return sha(alg).update(data).digest()
  }
  function rmd160Func (data) {
    return new RIPEMD160().update(data).digest()
  }

  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func
  if (alg === 'md5') return md5
  return shaFunc
}

function pbkdf2 (password, salt, iterations, keylen, digest) {
  checkParameters(iterations, keylen)
  password = toBuffer(password, defaultEncoding, 'Password')
  salt = toBuffer(salt, defaultEncoding, 'Salt')

  digest = digest || 'sha1'

  var hmac = new Hmac(digest, password, salt.length)

  var DK = Buffer.allocUnsafe(keylen)
  var block1 = Buffer.allocUnsafe(salt.length + 4)
  salt.copy(block1, 0, 0, salt.length)

  var destPos = 0
  var hLen = sizes[digest]
  var l = Math.ceil(keylen / hLen)

  for (var i = 1; i <= l; i++) {
    block1.writeUInt32BE(i, salt.length)

    var T = hmac.run(block1, hmac.ipad1)
    var U = T

    for (var j = 1; j < iterations; j++) {
      U = hmac.run(U, hmac.ipad2)
      for (var k = 0; k < hLen; k++) T[k] ^= U[k]
    }

    T.copy(DK, destPos)
    destPos += hLen
  }

  return DK
}

module.exports = pbkdf2

},{"./default-encoding":182,"./precondition":183,"./to-buffer":185,"create-hash/md5":81,"ripemd160":196,"safe-buffer":197,"sha.js":200}],185:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

module.exports = function (thing, encoding, name) {
  if (Buffer.isBuffer(thing)) {
    return thing
  } else if (typeof thing === 'string') {
    return Buffer.from(thing, encoding)
  } else if (ArrayBuffer.isView(thing)) {
    return Buffer.from(thing.buffer)
  } else {
    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')
  }
}

},{"safe-buffer":197}],186:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],187:[function(require,module,exports){
exports.publicEncrypt = require('./publicEncrypt')
exports.privateDecrypt = require('./privateDecrypt')

exports.privateEncrypt = function privateEncrypt (key, buf) {
  return exports.publicEncrypt(key, buf, true)
}

exports.publicDecrypt = function publicDecrypt (key, buf) {
  return exports.privateDecrypt(key, buf, true)
}

},{"./privateDecrypt":190,"./publicEncrypt":191}],188:[function(require,module,exports){
var createHash = require('create-hash')
var Buffer = require('safe-buffer').Buffer

module.exports = function (seed, len) {
  var t = Buffer.alloc(0)
  var i = 0
  var c
  while (t.length < len) {
    c = i2ops(i++)
    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])
  }
  return t.slice(0, len)
}

function i2ops (c) {
  var out = Buffer.allocUnsafe(4)
  out.writeUInt32BE(c, 0)
  return out
}

},{"create-hash":80,"safe-buffer":197}],189:[function(require,module,exports){
arguments[4][18][0].apply(exports,arguments)
},{"buffer":27,"dup":18}],190:[function(require,module,exports){
var parseKeys = require('parse-asn1')
var mgf = require('./mgf')
var xor = require('./xor')
var BN = require('bn.js')
var crt = require('browserify-rsa')
var createHash = require('create-hash')
var withPublic = require('./withPublic')
var Buffer = require('safe-buffer').Buffer

module.exports = function privateDecrypt (privateKey, enc, reverse) {
  var padding
  if (privateKey.padding) {
    padding = privateKey.padding
  } else if (reverse) {
    padding = 1
  } else {
    padding = 4
  }

  var key = parseKeys(privateKey)
  var k = key.modulus.byteLength()
  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {
    throw new Error('decryption error')
  }
  var msg
  if (reverse) {
    msg = withPublic(new BN(enc), key)
  } else {
    msg = crt(enc, key)
  }
  var zBuffer = Buffer.alloc(k - msg.length)
  msg = Buffer.concat([zBuffer, msg], k)
  if (padding === 4) {
    return oaep(key, msg)
  } else if (padding === 1) {
    return pkcs1(key, msg, reverse)
  } else if (padding === 3) {
    return msg
  } else {
    throw new Error('unknown padding')
  }
}

function oaep (key, msg) {
  var k = key.modulus.byteLength()
  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()
  var hLen = iHash.length
  if (msg[0] !== 0) {
    throw new Error('decryption error')
  }
  var maskedSeed = msg.slice(1, hLen + 1)
  var maskedDb = msg.slice(hLen + 1)
  var seed = xor(maskedSeed, mgf(maskedDb, hLen))
  var db = xor(maskedDb, mgf(seed, k - hLen - 1))
  if (compare(iHash, db.slice(0, hLen))) {
    throw new Error('decryption error')
  }
  var i = hLen
  while (db[i] === 0) {
    i++
  }
  if (db[i++] !== 1) {
    throw new Error('decryption error')
  }
  return db.slice(i)
}

function pkcs1 (key, msg, reverse) {
  var p1 = msg.slice(0, 2)
  var i = 2
  var status = 0
  while (msg[i++] !== 0) {
    if (i >= msg.length) {
      status++
      break
    }
  }
  var ps = msg.slice(2, i - 1)

  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {
    status++
  }
  if (ps.length < 8) {
    status++
  }
  if (status) {
    throw new Error('decryption error')
  }
  return msg.slice(i)
}
function compare (a, b) {
  a = Buffer.from(a)
  b = Buffer.from(b)
  var dif = 0
  var len = a.length
  if (a.length !== b.length) {
    dif++
    len = Math.min(a.length, b.length)
  }
  var i = -1
  while (++i < len) {
    dif += (a[i] ^ b[i])
  }
  return dif
}

},{"./mgf":188,"./withPublic":192,"./xor":193,"bn.js":189,"browserify-rsa":48,"create-hash":80,"parse-asn1":179,"safe-buffer":197}],191:[function(require,module,exports){
var parseKeys = require('parse-asn1')
var randomBytes = require('randombytes')
var createHash = require('create-hash')
var mgf = require('./mgf')
var xor = require('./xor')
var BN = require('bn.js')
var withPublic = require('./withPublic')
var crt = require('browserify-rsa')
var Buffer = require('safe-buffer').Buffer

module.exports = function publicEncrypt (publicKey, msg, reverse) {
  var padding
  if (publicKey.padding) {
    padding = publicKey.padding
  } else if (reverse) {
    padding = 1
  } else {
    padding = 4
  }
  var key = parseKeys(publicKey)
  var paddedMsg
  if (padding === 4) {
    paddedMsg = oaep(key, msg)
  } else if (padding === 1) {
    paddedMsg = pkcs1(key, msg, reverse)
  } else if (padding === 3) {
    paddedMsg = new BN(msg)
    if (paddedMsg.cmp(key.modulus) >= 0) {
      throw new Error('data too long for modulus')
    }
  } else {
    throw new Error('unknown padding')
  }
  if (reverse) {
    return crt(paddedMsg, key)
  } else {
    return withPublic(paddedMsg, key)
  }
}

function oaep (key, msg) {
  var k = key.modulus.byteLength()
  var mLen = msg.length
  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()
  var hLen = iHash.length
  var hLen2 = 2 * hLen
  if (mLen > k - hLen2 - 2) {
    throw new Error('message too long')
  }
  var ps = Buffer.alloc(k - mLen - hLen2 - 2)
  var dblen = k - hLen - 1
  var seed = randomBytes(hLen)
  var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen))
  var maskedSeed = xor(seed, mgf(maskedDb, hLen))
  return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k))
}
function pkcs1 (key, msg, reverse) {
  var mLen = msg.length
  var k = key.modulus.byteLength()
  if (mLen > k - 11) {
    throw new Error('message too long')
  }
  var ps
  if (reverse) {
    ps = Buffer.alloc(k - mLen - 3, 0xff)
  } else {
    ps = nonZero(k - mLen - 3)
  }
  return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k))
}
function nonZero (len) {
  var out = Buffer.allocUnsafe(len)
  var i = 0
  var cache = randomBytes(len * 2)
  var cur = 0
  var num
  while (i < len) {
    if (cur === cache.length) {
      cache = randomBytes(len * 2)
      cur = 0
    }
    num = cache[cur++]
    if (num) {
      out[i++] = num
    }
  }
  return out
}

},{"./mgf":188,"./withPublic":192,"./xor":193,"bn.js":189,"browserify-rsa":48,"create-hash":80,"parse-asn1":179,"randombytes":194,"safe-buffer":197}],192:[function(require,module,exports){
var BN = require('bn.js')
var Buffer = require('safe-buffer').Buffer

function withPublic (paddedMsg, key) {
  return Buffer.from(paddedMsg
    .toRed(BN.mont(key.modulus))
    .redPow(new BN(key.publicExponent))
    .fromRed()
    .toArray())
}

module.exports = withPublic

},{"bn.js":189,"safe-buffer":197}],193:[function(require,module,exports){
module.exports = function xor (a, b) {
  var len = a.length
  var i = -1
  while (++i < len) {
    a[i] ^= b[i]
  }
  return a
}

},{}],194:[function(require,module,exports){
(function (process,global){(function (){
'use strict'

// limit of Crypto.getRandomValues()
// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues
var MAX_BYTES = 65536

// Node supports requesting up to this number of bytes
// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48
var MAX_UINT32 = 4294967295

function oldBrowser () {
  throw new Error('Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11')
}

var Buffer = require('safe-buffer').Buffer
var crypto = global.crypto || global.msCrypto

if (crypto && crypto.getRandomValues) {
  module.exports = randomBytes
} else {
  module.exports = oldBrowser
}

function randomBytes (size, cb) {
  // phantomjs needs to throw
  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')

  var bytes = Buffer.allocUnsafe(size)

  if (size > 0) {  // getRandomValues fails on IE if size == 0
    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues
      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
      for (var generated = 0; generated < size; generated += MAX_BYTES) {
        // buffer.slice automatically checks if the end is past the end of
        // the buffer so we don't have to here
        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))
      }
    } else {
      crypto.getRandomValues(bytes)
    }
  }

  if (typeof cb === 'function') {
    return process.nextTick(function () {
      cb(null, bytes)
    })
  }

  return bytes
}

}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":186,"safe-buffer":197}],195:[function(require,module,exports){
(function (process,global){(function (){
'use strict'

function oldBrowser () {
  throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11')
}
var safeBuffer = require('safe-buffer')
var randombytes = require('randombytes')
var Buffer = safeBuffer.Buffer
var kBufferMaxLength = safeBuffer.kMaxLength
var crypto = global.crypto || global.msCrypto
var kMaxUint32 = Math.pow(2, 32) - 1
function assertOffset (offset, length) {
  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare
    throw new TypeError('offset must be a number')
  }

  if (offset > kMaxUint32 || offset < 0) {
    throw new TypeError('offset must be a uint32')
  }

  if (offset > kBufferMaxLength || offset > length) {
    throw new RangeError('offset out of range')
  }
}

function assertSize (size, offset, length) {
  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare
    throw new TypeError('size must be a number')
  }

  if (size > kMaxUint32 || size < 0) {
    throw new TypeError('size must be a uint32')
  }

  if (size + offset > length || size > kBufferMaxLength) {
    throw new RangeError('buffer too small')
  }
}
if ((crypto && crypto.getRandomValues) || !process.browser) {
  exports.randomFill = randomFill
  exports.randomFillSync = randomFillSync
} else {
  exports.randomFill = oldBrowser
  exports.randomFillSync = oldBrowser
}
function randomFill (buf, offset, size, cb) {
  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  if (typeof offset === 'function') {
    cb = offset
    offset = 0
    size = buf.length
  } else if (typeof size === 'function') {
    cb = size
    size = buf.length - offset
  } else if (typeof cb !== 'function') {
    throw new TypeError('"cb" argument must be a function')
  }
  assertOffset(offset, buf.length)
  assertSize(size, offset, buf.length)
  return actualFill(buf, offset, size, cb)
}

function actualFill (buf, offset, size, cb) {
  if (process.browser) {
    var ourBuf = buf.buffer
    var uint = new Uint8Array(ourBuf, offset, size)
    crypto.getRandomValues(uint)
    if (cb) {
      process.nextTick(function () {
        cb(null, buf)
      })
      return
    }
    return buf
  }
  if (cb) {
    randombytes(size, function (err, bytes) {
      if (err) {
        return cb(err)
      }
      bytes.copy(buf, offset)
      cb(null, buf)
    })
    return
  }
  var bytes = randombytes(size)
  bytes.copy(buf, offset)
  return buf
}
function randomFillSync (buf, offset, size) {
  if (typeof offset === 'undefined') {
    offset = 0
  }
  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  assertOffset(offset, buf.length)

  if (size === undefined) size = buf.length - offset

  assertSize(size, offset, buf.length)

  return actualFill(buf, offset, size)
}

}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":186,"randombytes":194,"safe-buffer":197}],196:[function(require,module,exports){
'use strict'
var Buffer = require('buffer').Buffer
var inherits = require('inherits')
var HashBase = require('hash-base')

var ARRAY16 = new Array(16)

var zl = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
]

var zr = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
]

var sl = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
]

var sr = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
]

var hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]
var hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]

function RIPEMD160 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0
}

inherits(RIPEMD160, HashBase)

RIPEMD160.prototype._update = function () {
  var words = ARRAY16
  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)

  var al = this._a | 0
  var bl = this._b | 0
  var cl = this._c | 0
  var dl = this._d | 0
  var el = this._e | 0

  var ar = this._a | 0
  var br = this._b | 0
  var cr = this._c | 0
  var dr = this._d | 0
  var er = this._e | 0

  // computation
  for (var i = 0; i < 80; i += 1) {
    var tl
    var tr
    if (i < 16) {
      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])
      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])
    } else if (i < 32) {
      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])
      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])
    } else if (i < 48) {
      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])
      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])
    } else if (i < 64) {
      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])
      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])
    } else { // if (i<80) {
      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])
      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])
    }

    al = el
    el = dl
    dl = rotl(cl, 10)
    cl = bl
    bl = tl

    ar = er
    er = dr
    dr = rotl(cr, 10)
    cr = br
    br = tr
  }

  // update state
  var t = (this._b + cl + dr) | 0
  this._b = (this._c + dl + er) | 0
  this._c = (this._d + el + ar) | 0
  this._d = (this._e + al + br) | 0
  this._e = (this._a + bl + cr) | 0
  this._a = t
}

RIPEMD160.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  buffer.writeInt32LE(this._e, 16)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fn1 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0
}

function fn2 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0
}

function fn3 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0
}

function fn4 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0
}

function fn5 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0
}

module.exports = RIPEMD160

},{"buffer":73,"hash-base":124,"inherits":154}],197:[function(require,module,exports){
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.prototype = Object.create(Buffer.prototype)

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":73}],198:[function(require,module,exports){
(function (process){(function (){
/* eslint-disable node/no-deprecated-api */

'use strict'

var buffer = require('buffer')
var Buffer = buffer.Buffer

var safer = {}

var key

for (key in buffer) {
  if (!buffer.hasOwnProperty(key)) continue
  if (key === 'SlowBuffer' || key === 'Buffer') continue
  safer[key] = buffer[key]
}

var Safer = safer.Buffer = {}
for (key in Buffer) {
  if (!Buffer.hasOwnProperty(key)) continue
  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue
  Safer[key] = Buffer[key]
}

safer.Buffer.prototype = Buffer.prototype

if (!Safer.from || Safer.from === Uint8Array.from) {
  Safer.from = function (value, encodingOrOffset, length) {
    if (typeof value === 'number') {
      throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof value)
    }
    if (value && typeof value.length === 'undefined') {
      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)
    }
    return Buffer(value, encodingOrOffset, length)
  }
}

if (!Safer.alloc) {
  Safer.alloc = function (size, fill, encoding) {
    if (typeof size !== 'number') {
      throw new TypeError('The "size" argument must be of type number. Received type ' + typeof size)
    }
    if (size < 0 || size >= 2 * (1 << 30)) {
      throw new RangeError('The value "' + size + '" is invalid for option "size"')
    }
    var buf = Buffer(size)
    if (!fill || fill.length === 0) {
      buf.fill(0)
    } else if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
    return buf
  }
}

if (!safer.kStringMaxLength) {
  try {
    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength
  } catch (e) {
    // we can't determine kStringMaxLength in environments where process.binding
    // is unsupported, so let's not set it
  }
}

if (!safer.constants) {
  safer.constants = {
    MAX_LENGTH: safer.kMaxLength
  }
  if (safer.kStringMaxLength) {
    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength
  }
}

module.exports = safer

}).call(this)}).call(this,require('_process'))
},{"_process":186,"buffer":73}],199:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

// prototype class for hash functions
function Hash (blockSize, finalSize) {
  this._block = Buffer.alloc(blockSize)
  this._finalSize = finalSize
  this._blockSize = blockSize
  this._len = 0
}

Hash.prototype.update = function (data, enc) {
  if (typeof data === 'string') {
    enc = enc || 'utf8'
    data = Buffer.from(data, enc)
  }

  var block = this._block
  var blockSize = this._blockSize
  var length = data.length
  var accum = this._len

  for (var offset = 0; offset < length;) {
    var assigned = accum % blockSize
    var remainder = Math.min(length - offset, blockSize - assigned)

    for (var i = 0; i < remainder; i++) {
      block[assigned + i] = data[offset + i]
    }

    accum += remainder
    offset += remainder

    if ((accum % blockSize) === 0) {
      this._update(block)
    }
  }

  this._len += length
  return this
}

Hash.prototype.digest = function (enc) {
  var rem = this._len % this._blockSize

  this._block[rem] = 0x80

  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest
  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
  this._block.fill(0, rem + 1)

  if (rem >= this._finalSize) {
    this._update(this._block)
    this._block.fill(0)
  }

  var bits = this._len * 8

  // uint32
  if (bits <= 0xffffffff) {
    this._block.writeUInt32BE(bits, this._blockSize - 4)

  // uint64
  } else {
    var lowBits = (bits & 0xffffffff) >>> 0
    var highBits = (bits - lowBits) / 0x100000000

    this._block.writeUInt32BE(highBits, this._blockSize - 8)
    this._block.writeUInt32BE(lowBits, this._blockSize - 4)
  }

  this._update(this._block)
  var hash = this._hash()

  return enc ? hash.toString(enc) : hash
}

Hash.prototype._update = function () {
  throw new Error('_update must be implemented by subclass')
}

module.exports = Hash

},{"safe-buffer":197}],200:[function(require,module,exports){
var exports = module.exports = function SHA (algorithm) {
  algorithm = algorithm.toLowerCase()

  var Algorithm = exports[algorithm]
  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')

  return new Algorithm()
}

exports.sha = require('./sha')
exports.sha1 = require('./sha1')
exports.sha224 = require('./sha224')
exports.sha256 = require('./sha256')
exports.sha384 = require('./sha384')
exports.sha512 = require('./sha512')

},{"./sha":201,"./sha1":202,"./sha224":203,"./sha256":204,"./sha384":205,"./sha512":206}],201:[function(require,module,exports){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha, Hash)

Sha.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha

},{"./hash":199,"inherits":154,"safe-buffer":197}],202:[function(require,module,exports){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha1 () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha1, Hash)

Sha1.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl1 (num) {
  return (num << 1) | (num >>> 31)
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha1.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha1.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha1

},{"./hash":199,"inherits":154,"safe-buffer":197}],203:[function(require,module,exports){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Sha256 = require('./sha256')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var W = new Array(64)

function Sha224 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha224, Sha256)

Sha224.prototype.init = function () {
  this._a = 0xc1059ed8
  this._b = 0x367cd507
  this._c = 0x3070dd17
  this._d = 0xf70e5939
  this._e = 0xffc00b31
  this._f = 0x68581511
  this._g = 0x64f98fa7
  this._h = 0xbefa4fa4

  return this
}

Sha224.prototype._hash = function () {
  var H = Buffer.allocUnsafe(28)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)

  return H
}

module.exports = Sha224

},{"./hash":199,"./sha256":204,"inherits":154,"safe-buffer":197}],204:[function(require,module,exports){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
]

var W = new Array(64)

function Sha256 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha256, Hash)

Sha256.prototype.init = function () {
  this._a = 0x6a09e667
  this._b = 0xbb67ae85
  this._c = 0x3c6ef372
  this._d = 0xa54ff53a
  this._e = 0x510e527f
  this._f = 0x9b05688c
  this._g = 0x1f83d9ab
  this._h = 0x5be0cd19

  return this
}

function ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x) {
  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
}

function sigma1 (x) {
  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
}

function gamma0 (x) {
  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
}

function gamma1 (x) {
  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
}

Sha256.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

  for (var j = 0; j < 64; ++j) {
    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
    var T2 = (sigma0(a) + maj(a, b, c)) | 0

    h = g
    g = f
    f = e
    e = (d + T1) | 0
    d = c
    c = b
    b = a
    a = (T1 + T2) | 0
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
  this._f = (f + this._f) | 0
  this._g = (g + this._g) | 0
  this._h = (h + this._h) | 0
}

Sha256.prototype._hash = function () {
  var H = Buffer.allocUnsafe(32)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)
  H.writeInt32BE(this._h, 28)

  return H
}

module.exports = Sha256

},{"./hash":199,"inherits":154,"safe-buffer":197}],205:[function(require,module,exports){
var inherits = require('inherits')
var SHA512 = require('./sha512')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var W = new Array(160)

function Sha384 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha384, SHA512)

Sha384.prototype.init = function () {
  this._ah = 0xcbbb9d5d
  this._bh = 0x629a292a
  this._ch = 0x9159015a
  this._dh = 0x152fecd8
  this._eh = 0x67332667
  this._fh = 0x8eb44a87
  this._gh = 0xdb0c2e0d
  this._hh = 0x47b5481d

  this._al = 0xc1059ed8
  this._bl = 0x367cd507
  this._cl = 0x3070dd17
  this._dl = 0xf70e5939
  this._el = 0xffc00b31
  this._fl = 0x68581511
  this._gl = 0x64f98fa7
  this._hl = 0xbefa4fa4

  return this
}

Sha384.prototype._hash = function () {
  var H = Buffer.allocUnsafe(48)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)

  return H
}

module.exports = Sha384

},{"./hash":199,"./sha512":206,"inherits":154,"safe-buffer":197}],206:[function(require,module,exports){
var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
]

var W = new Array(160)

function Sha512 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha512, Hash)

Sha512.prototype.init = function () {
  this._ah = 0x6a09e667
  this._bh = 0xbb67ae85
  this._ch = 0x3c6ef372
  this._dh = 0xa54ff53a
  this._eh = 0x510e527f
  this._fh = 0x9b05688c
  this._gh = 0x1f83d9ab
  this._hh = 0x5be0cd19

  this._al = 0xf3bcc908
  this._bl = 0x84caa73b
  this._cl = 0xfe94f82b
  this._dl = 0x5f1d36f1
  this._el = 0xade682d1
  this._fl = 0x2b3e6c1f
  this._gl = 0xfb41bd6b
  this._hl = 0x137e2179

  return this
}

function Ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x, xl) {
  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
}

function sigma1 (x, xl) {
  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
}

function Gamma0 (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
}

function Gamma0l (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
}

function Gamma1 (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
}

function Gamma1l (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
}

function getCarry (a, b) {
  return (a >>> 0) < (b >>> 0) ? 1 : 0
}

Sha512.prototype._update = function (M) {
  var W = this._w

  var ah = this._ah | 0
  var bh = this._bh | 0
  var ch = this._ch | 0
  var dh = this._dh | 0
  var eh = this._eh | 0
  var fh = this._fh | 0
  var gh = this._gh | 0
  var hh = this._hh | 0

  var al = this._al | 0
  var bl = this._bl | 0
  var cl = this._cl | 0
  var dl = this._dl | 0
  var el = this._el | 0
  var fl = this._fl | 0
  var gl = this._gl | 0
  var hl = this._hl | 0

  for (var i = 0; i < 32; i += 2) {
    W[i] = M.readInt32BE(i * 4)
    W[i + 1] = M.readInt32BE(i * 4 + 4)
  }
  for (; i < 160; i += 2) {
    var xh = W[i - 15 * 2]
    var xl = W[i - 15 * 2 + 1]
    var gamma0 = Gamma0(xh, xl)
    var gamma0l = Gamma0l(xl, xh)

    xh = W[i - 2 * 2]
    xl = W[i - 2 * 2 + 1]
    var gamma1 = Gamma1(xh, xl)
    var gamma1l = Gamma1l(xl, xh)

    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
    var Wi7h = W[i - 7 * 2]
    var Wi7l = W[i - 7 * 2 + 1]

    var Wi16h = W[i - 16 * 2]
    var Wi16l = W[i - 16 * 2 + 1]

    var Wil = (gamma0l + Wi7l) | 0
    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
    Wil = (Wil + gamma1l) | 0
    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
    Wil = (Wil + Wi16l) | 0
    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

    W[i] = Wih
    W[i + 1] = Wil
  }

  for (var j = 0; j < 160; j += 2) {
    Wih = W[j]
    Wil = W[j + 1]

    var majh = maj(ah, bh, ch)
    var majl = maj(al, bl, cl)

    var sigma0h = sigma0(ah, al)
    var sigma0l = sigma0(al, ah)
    var sigma1h = sigma1(eh, el)
    var sigma1l = sigma1(el, eh)

    // t1 = h + sigma1 + ch + K[j] + W[j]
    var Kih = K[j]
    var Kil = K[j + 1]

    var chh = Ch(eh, fh, gh)
    var chl = Ch(el, fl, gl)

    var t1l = (hl + sigma1l) | 0
    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
    t1l = (t1l + chl) | 0
    t1h = (t1h + chh + getCarry(t1l, chl)) | 0
    t1l = (t1l + Kil) | 0
    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
    t1l = (t1l + Wil) | 0
    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

    // t2 = sigma0 + maj
    var t2l = (sigma0l + majl) | 0
    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

    hh = gh
    hl = gl
    gh = fh
    gl = fl
    fh = eh
    fl = el
    el = (dl + t1l) | 0
    eh = (dh + t1h + getCarry(el, dl)) | 0
    dh = ch
    dl = cl
    ch = bh
    cl = bl
    bh = ah
    bl = al
    al = (t1l + t2l) | 0
    ah = (t1h + t2h + getCarry(al, t1l)) | 0
  }

  this._al = (this._al + al) | 0
  this._bl = (this._bl + bl) | 0
  this._cl = (this._cl + cl) | 0
  this._dl = (this._dl + dl) | 0
  this._el = (this._el + el) | 0
  this._fl = (this._fl + fl) | 0
  this._gl = (this._gl + gl) | 0
  this._hl = (this._hl + hl) | 0

  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
}

Sha512.prototype._hash = function () {
  var H = Buffer.allocUnsafe(64)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)
  writeInt64BE(this._gh, this._gl, 48)
  writeInt64BE(this._hh, this._hl, 56)

  return H
}

module.exports = Sha512

},{"./hash":199,"inherits":154,"safe-buffer":197}],207:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/lib/_stream_readable.js');
Stream.Writable = require('readable-stream/lib/_stream_writable.js');
Stream.Duplex = require('readable-stream/lib/_stream_duplex.js');
Stream.Transform = require('readable-stream/lib/_stream_transform.js');
Stream.PassThrough = require('readable-stream/lib/_stream_passthrough.js');
Stream.finished = require('readable-stream/lib/internal/streams/end-of-stream.js')
Stream.pipeline = require('readable-stream/lib/internal/streams/pipeline.js')

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":114,"inherits":154,"readable-stream/lib/_stream_duplex.js":209,"readable-stream/lib/_stream_passthrough.js":210,"readable-stream/lib/_stream_readable.js":211,"readable-stream/lib/_stream_transform.js":212,"readable-stream/lib/_stream_writable.js":213,"readable-stream/lib/internal/streams/end-of-stream.js":217,"readable-stream/lib/internal/streams/pipeline.js":219}],208:[function(require,module,exports){
arguments[4][55][0].apply(exports,arguments)
},{"dup":55}],209:[function(require,module,exports){
arguments[4][56][0].apply(exports,arguments)
},{"./_stream_readable":211,"./_stream_writable":213,"_process":186,"dup":56,"inherits":154}],210:[function(require,module,exports){
arguments[4][57][0].apply(exports,arguments)
},{"./_stream_transform":212,"dup":57,"inherits":154}],211:[function(require,module,exports){
arguments[4][58][0].apply(exports,arguments)
},{"../errors":208,"./_stream_duplex":209,"./internal/streams/async_iterator":214,"./internal/streams/buffer_list":215,"./internal/streams/destroy":216,"./internal/streams/from":218,"./internal/streams/state":220,"./internal/streams/stream":221,"_process":186,"buffer":73,"dup":58,"events":114,"inherits":154,"string_decoder/":222,"util":27}],212:[function(require,module,exports){
arguments[4][59][0].apply(exports,arguments)
},{"../errors":208,"./_stream_duplex":209,"dup":59,"inherits":154}],213:[function(require,module,exports){
arguments[4][60][0].apply(exports,arguments)
},{"../errors":208,"./_stream_duplex":209,"./internal/streams/destroy":216,"./internal/streams/state":220,"./internal/streams/stream":221,"_process":186,"buffer":73,"dup":60,"inherits":154,"util-deprecate":223}],214:[function(require,module,exports){
arguments[4][61][0].apply(exports,arguments)
},{"./end-of-stream":217,"_process":186,"dup":61}],215:[function(require,module,exports){
arguments[4][62][0].apply(exports,arguments)
},{"buffer":73,"dup":62,"util":27}],216:[function(require,module,exports){
arguments[4][63][0].apply(exports,arguments)
},{"_process":186,"dup":63}],217:[function(require,module,exports){
arguments[4][64][0].apply(exports,arguments)
},{"../../../errors":208,"dup":64}],218:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"dup":65}],219:[function(require,module,exports){
arguments[4][66][0].apply(exports,arguments)
},{"../../../errors":208,"./end-of-stream":217,"dup":66}],220:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"../../../errors":208,"dup":67}],221:[function(require,module,exports){
arguments[4][68][0].apply(exports,arguments)
},{"dup":68,"events":114}],222:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}
},{"safe-buffer":197}],223:[function(require,module,exports){
(function (global){(function (){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],224:[function(require,module,exports){
arguments[4][21][0].apply(exports,arguments)
},{"dup":21}],225:[function(require,module,exports){
// Currently in sync with Node.js lib/internal/util/types.js
// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9

'use strict';

var isArgumentsObject = require('is-arguments');
var isGeneratorFunction = require('is-generator-function');
var whichTypedArray = require('which-typed-array');
var isTypedArray = require('is-typed-array');

function uncurryThis(f) {
  return f.call.bind(f);
}

var BigIntSupported = typeof BigInt !== 'undefined';
var SymbolSupported = typeof Symbol !== 'undefined';

var ObjectToString = uncurryThis(Object.prototype.toString);

var numberValue = uncurryThis(Number.prototype.valueOf);
var stringValue = uncurryThis(String.prototype.valueOf);
var booleanValue = uncurryThis(Boolean.prototype.valueOf);

if (BigIntSupported) {
  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);
}

if (SymbolSupported) {
  var symbolValue = uncurryThis(Symbol.prototype.valueOf);
}

function checkBoxedPrimitive(value, prototypeValueOf) {
  if (typeof value !== 'object') {
    return false;
  }
  try {
    prototypeValueOf(value);
    return true;
  } catch(e) {
    return false;
  }
}

exports.isArgumentsObject = isArgumentsObject;
exports.isGeneratorFunction = isGeneratorFunction;
exports.isTypedArray = isTypedArray;

// Taken from here and modified for better browser support
// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js
function isPromise(input) {
	return (
		(
			typeof Promise !== 'undefined' &&
			input instanceof Promise
		) ||
		(
			input !== null &&
			typeof input === 'object' &&
			typeof input.then === 'function' &&
			typeof input.catch === 'function'
		)
	);
}
exports.isPromise = isPromise;

function isArrayBufferView(value) {
  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
    return ArrayBuffer.isView(value);
  }

  return (
    isTypedArray(value) ||
    isDataView(value)
  );
}
exports.isArrayBufferView = isArrayBufferView;


function isUint8Array(value) {
  return whichTypedArray(value) === 'Uint8Array';
}
exports.isUint8Array = isUint8Array;

function isUint8ClampedArray(value) {
  return whichTypedArray(value) === 'Uint8ClampedArray';
}
exports.isUint8ClampedArray = isUint8ClampedArray;

function isUint16Array(value) {
  return whichTypedArray(value) === 'Uint16Array';
}
exports.isUint16Array = isUint16Array;

function isUint32Array(value) {
  return whichTypedArray(value) === 'Uint32Array';
}
exports.isUint32Array = isUint32Array;

function isInt8Array(value) {
  return whichTypedArray(value) === 'Int8Array';
}
exports.isInt8Array = isInt8Array;

function isInt16Array(value) {
  return whichTypedArray(value) === 'Int16Array';
}
exports.isInt16Array = isInt16Array;

function isInt32Array(value) {
  return whichTypedArray(value) === 'Int32Array';
}
exports.isInt32Array = isInt32Array;

function isFloat32Array(value) {
  return whichTypedArray(value) === 'Float32Array';
}
exports.isFloat32Array = isFloat32Array;

function isFloat64Array(value) {
  return whichTypedArray(value) === 'Float64Array';
}
exports.isFloat64Array = isFloat64Array;

function isBigInt64Array(value) {
  return whichTypedArray(value) === 'BigInt64Array';
}
exports.isBigInt64Array = isBigInt64Array;

function isBigUint64Array(value) {
  return whichTypedArray(value) === 'BigUint64Array';
}
exports.isBigUint64Array = isBigUint64Array;

function isMapToString(value) {
  return ObjectToString(value) === '[object Map]';
}
isMapToString.working = (
  typeof Map !== 'undefined' &&
  isMapToString(new Map())
);

function isMap(value) {
  if (typeof Map === 'undefined') {
    return false;
  }

  return isMapToString.working
    ? isMapToString(value)
    : value instanceof Map;
}
exports.isMap = isMap;

function isSetToString(value) {
  return ObjectToString(value) === '[object Set]';
}
isSetToString.working = (
  typeof Set !== 'undefined' &&
  isSetToString(new Set())
);
function isSet(value) {
  if (typeof Set === 'undefined') {
    return false;
  }

  return isSetToString.working
    ? isSetToString(value)
    : value instanceof Set;
}
exports.isSet = isSet;

function isWeakMapToString(value) {
  return ObjectToString(value) === '[object WeakMap]';
}
isWeakMapToString.working = (
  typeof WeakMap !== 'undefined' &&
  isWeakMapToString(new WeakMap())
);
function isWeakMap(value) {
  if (typeof WeakMap === 'undefined') {
    return false;
  }

  return isWeakMapToString.working
    ? isWeakMapToString(value)
    : value instanceof WeakMap;
}
exports.isWeakMap = isWeakMap;

function isWeakSetToString(value) {
  return ObjectToString(value) === '[object WeakSet]';
}
isWeakSetToString.working = (
  typeof WeakSet !== 'undefined' &&
  isWeakSetToString(new WeakSet())
);
function isWeakSet(value) {
  return isWeakSetToString(value);
}
exports.isWeakSet = isWeakSet;

function isArrayBufferToString(value) {
  return ObjectToString(value) === '[object ArrayBuffer]';
}
isArrayBufferToString.working = (
  typeof ArrayBuffer !== 'undefined' &&
  isArrayBufferToString(new ArrayBuffer())
);
function isArrayBuffer(value) {
  if (typeof ArrayBuffer === 'undefined') {
    return false;
  }

  return isArrayBufferToString.working
    ? isArrayBufferToString(value)
    : value instanceof ArrayBuffer;
}
exports.isArrayBuffer = isArrayBuffer;

function isDataViewToString(value) {
  return ObjectToString(value) === '[object DataView]';
}
isDataViewToString.working = (
  typeof ArrayBuffer !== 'undefined' &&
  typeof DataView !== 'undefined' &&
  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))
);
function isDataView(value) {
  if (typeof DataView === 'undefined') {
    return false;
  }

  return isDataViewToString.working
    ? isDataViewToString(value)
    : value instanceof DataView;
}
exports.isDataView = isDataView;

// Store a copy of SharedArrayBuffer in case it's deleted elsewhere
var SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;
function isSharedArrayBufferToString(value) {
  return ObjectToString(value) === '[object SharedArrayBuffer]';
}
function isSharedArrayBuffer(value) {
  if (typeof SharedArrayBufferCopy === 'undefined') {
    return false;
  }

  if (typeof isSharedArrayBufferToString.working === 'undefined') {
    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());
  }

  return isSharedArrayBufferToString.working
    ? isSharedArrayBufferToString(value)
    : value instanceof SharedArrayBufferCopy;
}
exports.isSharedArrayBuffer = isSharedArrayBuffer;

function isAsyncFunction(value) {
  return ObjectToString(value) === '[object AsyncFunction]';
}
exports.isAsyncFunction = isAsyncFunction;

function isMapIterator(value) {
  return ObjectToString(value) === '[object Map Iterator]';
}
exports.isMapIterator = isMapIterator;

function isSetIterator(value) {
  return ObjectToString(value) === '[object Set Iterator]';
}
exports.isSetIterator = isSetIterator;

function isGeneratorObject(value) {
  return ObjectToString(value) === '[object Generator]';
}
exports.isGeneratorObject = isGeneratorObject;

function isWebAssemblyCompiledModule(value) {
  return ObjectToString(value) === '[object WebAssembly.Module]';
}
exports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;

function isNumberObject(value) {
  return checkBoxedPrimitive(value, numberValue);
}
exports.isNumberObject = isNumberObject;

function isStringObject(value) {
  return checkBoxedPrimitive(value, stringValue);
}
exports.isStringObject = isStringObject;

function isBooleanObject(value) {
  return checkBoxedPrimitive(value, booleanValue);
}
exports.isBooleanObject = isBooleanObject;

function isBigIntObject(value) {
  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);
}
exports.isBigIntObject = isBigIntObject;

function isSymbolObject(value) {
  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);
}
exports.isSymbolObject = isSymbolObject;

function isBoxedPrimitive(value) {
  return (
    isNumberObject(value) ||
    isStringObject(value) ||
    isBooleanObject(value) ||
    isBigIntObject(value) ||
    isSymbolObject(value)
  );
}
exports.isBoxedPrimitive = isBoxedPrimitive;

function isAnyArrayBuffer(value) {
  return typeof Uint8Array !== 'undefined' && (
    isArrayBuffer(value) ||
    isSharedArrayBuffer(value)
  );
}
exports.isAnyArrayBuffer = isAnyArrayBuffer;

['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {
  Object.defineProperty(exports, method, {
    enumerable: false,
    value: function() {
      throw new Error(method + ' is not supported in userland');
    }
  });
});

},{"is-arguments":155,"is-generator-function":156,"is-typed-array":157,"which-typed-array":227}],226:[function(require,module,exports){
(function (process){(function (){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||
  function getOwnPropertyDescriptors(obj) {
    var keys = Object.keys(obj);
    var descriptors = {};
    for (var i = 0; i < keys.length; i++) {
      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);
    }
    return descriptors;
  };

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  if (typeof process !== 'undefined' && process.noDeprecation === true) {
    return fn;
  }

  // Allow for deprecating things in the process of starting up.
  if (typeof process === 'undefined') {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnvRegex = /^$/;

if (process.env.NODE_DEBUG) {
  var debugEnv = process.env.NODE_DEBUG;
  debugEnv = debugEnv.replace(/[|\\{}()[\]^$+?.]/g, '\\$&')
    .replace(/\*/g, '.*')
    .replace(/,/g, '$|^')
    .toUpperCase();
  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');
}
exports.debuglog = function(set) {
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (debugEnvRegex.test(set)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
exports.types = require('./support/types');

function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;
exports.types.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;
exports.types.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;
exports.types.isNativeError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

var kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;

exports.promisify = function promisify(original) {
  if (typeof original !== 'function')
    throw new TypeError('The "original" argument must be of type Function');

  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {
    var fn = original[kCustomPromisifiedSymbol];
    if (typeof fn !== 'function') {
      throw new TypeError('The "util.promisify.custom" argument must be of type Function');
    }
    Object.defineProperty(fn, kCustomPromisifiedSymbol, {
      value: fn, enumerable: false, writable: false, configurable: true
    });
    return fn;
  }

  function fn() {
    var promiseResolve, promiseReject;
    var promise = new Promise(function (resolve, reject) {
      promiseResolve = resolve;
      promiseReject = reject;
    });

    var args = [];
    for (var i = 0; i < arguments.length; i++) {
      args.push(arguments[i]);
    }
    args.push(function (err, value) {
      if (err) {
        promiseReject(err);
      } else {
        promiseResolve(value);
      }
    });

    try {
      original.apply(this, args);
    } catch (err) {
      promiseReject(err);
    }

    return promise;
  }

  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));

  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {
    value: fn, enumerable: false, writable: false, configurable: true
  });
  return Object.defineProperties(
    fn,
    getOwnPropertyDescriptors(original)
  );
}

exports.promisify.custom = kCustomPromisifiedSymbol

function callbackifyOnRejected(reason, cb) {
  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).
  // Because `null` is a special error value in callbacks which means "no error
  // occurred", we error-wrap so the callback consumer can distinguish between
  // "the promise rejected with null" or "the promise fulfilled with undefined".
  if (!reason) {
    var newReason = new Error('Promise was rejected with a falsy value');
    newReason.reason = reason;
    reason = newReason;
  }
  return cb(reason);
}

function callbackify(original) {
  if (typeof original !== 'function') {
    throw new TypeError('The "original" argument must be of type Function');
  }

  // We DO NOT return the promise as it gives the user a false sense that
  // the promise is actually somehow related to the callback's execution
  // and that the callback throwing will reject the promise.
  function callbackified() {
    var args = [];
    for (var i = 0; i < arguments.length; i++) {
      args.push(arguments[i]);
    }

    var maybeCb = args.pop();
    if (typeof maybeCb !== 'function') {
      throw new TypeError('The last argument must be of type Function');
    }
    var self = this;
    var cb = function() {
      return maybeCb.apply(self, arguments);
    };
    // In true node style we process the callback on `nextTick` with all the
    // implications (stack, `uncaughtException`, `async_hooks`)
    original.apply(this, args)
      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },
            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });
  }

  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));
  Object.defineProperties(callbackified,
                          getOwnPropertyDescriptors(original));
  return callbackified;
}
exports.callbackify = callbackify;

}).call(this)}).call(this,require('_process'))
},{"./support/isBuffer":224,"./support/types":225,"_process":186,"inherits":154}],227:[function(require,module,exports){
(function (global){(function (){
'use strict';

var forEach = require('foreach');
var availableTypedArrays = require('available-typed-arrays');
var callBound = require('call-bind/callBound');

var $toString = callBound('Object.prototype.toString');
var hasToStringTag = require('has-tostringtag/shams')();

var g = typeof globalThis === 'undefined' ? global : globalThis;
var typedArrays = availableTypedArrays();

var $slice = callBound('String.prototype.slice');
var toStrTags = {};
var gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');
var getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');
if (hasToStringTag && gOPD && getPrototypeOf) {
	forEach(typedArrays, function (typedArray) {
		if (typeof g[typedArray] === 'function') {
			var arr = new g[typedArray]();
			if (Symbol.toStringTag in arr) {
				var proto = getPrototypeOf(arr);
				var descriptor = gOPD(proto, Symbol.toStringTag);
				if (!descriptor) {
					var superProto = getPrototypeOf(proto);
					descriptor = gOPD(superProto, Symbol.toStringTag);
				}
				toStrTags[typedArray] = descriptor.get;
			}
		}
	});
}

var tryTypedArrays = function tryAllTypedArrays(value) {
	var foundName = false;
	forEach(toStrTags, function (getter, typedArray) {
		if (!foundName) {
			try {
				var name = getter.call(value);
				if (name === typedArray) {
					foundName = name;
				}
			} catch (e) {}
		}
	});
	return foundName;
};

var isTypedArray = require('is-typed-array');

module.exports = function whichTypedArray(value) {
	if (!isTypedArray(value)) { return false; }
	if (!hasToStringTag || !(Symbol.toStringTag in value)) { return $slice($toString(value), 8, -1); }
	return tryTypedArrays(value);
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"available-typed-arrays":23,"call-bind/callBound":74,"es-abstract/helpers/getOwnPropertyDescriptor":113,"foreach":116,"has-tostringtag/shams":122,"is-typed-array":157}]},{},[1])(1)
});
